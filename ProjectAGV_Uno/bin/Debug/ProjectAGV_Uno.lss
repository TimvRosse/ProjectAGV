
bin\Debug\ProjectAGV_Uno.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000108  00800100  00001fb2  00002066  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001fb2  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800208  00800208  0000216e  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  0000216e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .debug_aranges 000001c0  00000000  00000000  00002171  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000002c9  00000000  00000000  00002331  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002b5c  00000000  00000000  000025fa  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001517  00000000  00000000  00005156  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001adb  00000000  00000000  0000666d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000280  00000000  00000000  00008148  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000440  00000000  00000000  000083c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009ce  00000000  00000000  00008808  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  000091d6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 91 01 	jmp	0x322	; 0x322 <__vector_3>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 61 03 	jmp	0x6c2	; 0x6c2 <__vector_13>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
      74:	12 e0       	ldi	r17, 0x02	; 2
      76:	a8 e0       	ldi	r26, 0x08	; 8
      78:	b2 e0       	ldi	r27, 0x02	; 2
      7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
      7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
      7e:	ae 30       	cpi	r26, 0x0E	; 14
      80:	b1 07       	cpc	r27, r17
      82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>

00000084 <__do_copy_data>:
      84:	12 e0       	ldi	r17, 0x02	; 2
      86:	a0 e0       	ldi	r26, 0x00	; 0
      88:	b1 e0       	ldi	r27, 0x01	; 1
      8a:	e2 eb       	ldi	r30, 0xB2	; 178
      8c:	ff e1       	ldi	r31, 0x1F	; 31
      8e:	02 c0       	rjmp	.+4      	; 0x94 <.do_copy_data_start>

00000090 <.do_copy_data_loop>:
      90:	05 90       	lpm	r0, Z+
      92:	0d 92       	st	X+, r0

00000094 <.do_copy_data_start>:
      94:	a8 30       	cpi	r26, 0x08	; 8
      96:	b1 07       	cpc	r27, r17
      98:	d9 f7       	brne	.-10     	; 0x90 <.do_copy_data_loop>
      9a:	0e 94 4b 07 	call	0xe96	; 0xe96 <main>
      9e:	0c 94 d7 0f 	jmp	0x1fae	; 0x1fae <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <init>:
volatile int aanwaarde = 0;
long int timer;


void init(void)
{
      a6:	df 93       	push	r29
      a8:	cf 93       	push	r28
      aa:	cd b7       	in	r28, 0x3d	; 61
      ac:	de b7       	in	r29, 0x3e	; 62
    //DDR Reg:
    DDRC |= _BV(motorPin);
      ae:	a7 e2       	ldi	r26, 0x27	; 39
      b0:	b0 e0       	ldi	r27, 0x00	; 0
      b2:	e7 e2       	ldi	r30, 0x27	; 39
      b4:	f0 e0       	ldi	r31, 0x00	; 0
      b6:	80 81       	ld	r24, Z
      b8:	80 61       	ori	r24, 0x10	; 16
      ba:	8c 93       	st	X, r24
    DDRC |= _BV(bochtPin);
      bc:	a7 e2       	ldi	r26, 0x27	; 39
      be:	b0 e0       	ldi	r27, 0x00	; 0
      c0:	e7 e2       	ldi	r30, 0x27	; 39
      c2:	f0 e0       	ldi	r31, 0x00	; 0
      c4:	80 81       	ld	r24, Z
      c6:	80 62       	ori	r24, 0x20	; 32
      c8:	8c 93       	st	X, r24
    DDRD |= _BV(buzzerPin);
      ca:	aa e2       	ldi	r26, 0x2A	; 42
      cc:	b0 e0       	ldi	r27, 0x00	; 0
      ce:	ea e2       	ldi	r30, 0x2A	; 42
      d0:	f0 e0       	ldi	r31, 0x00	; 0
      d2:	80 81       	ld	r24, Z
      d4:	82 60       	ori	r24, 0x02	; 2
      d6:	8c 93       	st	X, r24
    DDRD |= (1<<trig);
      d8:	aa e2       	ldi	r26, 0x2A	; 42
      da:	b0 e0       	ldi	r27, 0x00	; 0
      dc:	ea e2       	ldi	r30, 0x2A	; 42
      de:	f0 e0       	ldi	r31, 0x00	; 0
      e0:	80 81       	ld	r24, Z
      e2:	81 60       	ori	r24, 0x01	; 1
      e4:	8c 93       	st	X, r24

    //init pins:
    PORTB |= _BV(IrSen1);
      e6:	a5 e2       	ldi	r26, 0x25	; 37
      e8:	b0 e0       	ldi	r27, 0x00	; 0
      ea:	e5 e2       	ldi	r30, 0x25	; 37
      ec:	f0 e0       	ldi	r31, 0x00	; 0
      ee:	80 81       	ld	r24, Z
      f0:	82 60       	ori	r24, 0x02	; 2
      f2:	8c 93       	st	X, r24
    PORTB |= _BV(IrSen2);
      f4:	a5 e2       	ldi	r26, 0x25	; 37
      f6:	b0 e0       	ldi	r27, 0x00	; 0
      f8:	e5 e2       	ldi	r30, 0x25	; 37
      fa:	f0 e0       	ldi	r31, 0x00	; 0
      fc:	80 81       	ld	r24, Z
      fe:	84 60       	ori	r24, 0x04	; 4
     100:	8c 93       	st	X, r24

    //init PCINT
    PCICR |= (1 << PCIE0);
     102:	a8 e6       	ldi	r26, 0x68	; 104
     104:	b0 e0       	ldi	r27, 0x00	; 0
     106:	e8 e6       	ldi	r30, 0x68	; 104
     108:	f0 e0       	ldi	r31, 0x00	; 0
     10a:	80 81       	ld	r24, Z
     10c:	81 60       	ori	r24, 0x01	; 1
     10e:	8c 93       	st	X, r24
    PCMSK0 |= ((1 << IrSen1) | (1 << IrSen2));
     110:	ab e6       	ldi	r26, 0x6B	; 107
     112:	b0 e0       	ldi	r27, 0x00	; 0
     114:	eb e6       	ldi	r30, 0x6B	; 107
     116:	f0 e0       	ldi	r31, 0x00	; 0
     118:	80 81       	ld	r24, Z
     11a:	86 60       	ori	r24, 0x06	; 6
     11c:	8c 93       	st	X, r24

    //timer1 init
    TIMSK1 |= TOIE1;
     11e:	af e6       	ldi	r26, 0x6F	; 111
     120:	b0 e0       	ldi	r27, 0x00	; 0
     122:	ef e6       	ldi	r30, 0x6F	; 111
     124:	f0 e0       	ldi	r31, 0x00	; 0
     126:	80 81       	ld	r24, Z
     128:	8c 93       	st	X, r24
    TCCR1A = 0;
     12a:	e0 e8       	ldi	r30, 0x80	; 128
     12c:	f0 e0       	ldi	r31, 0x00	; 0
     12e:	10 82       	st	Z, r1

    //init interrupt
    sei();
     130:	78 94       	sei
}
     132:	cf 91       	pop	r28
     134:	df 91       	pop	r29
     136:	08 95       	ret

00000138 <buzzer>:

void buzzer(int freq, int aantal)
{
     138:	df 93       	push	r29
     13a:	cf 93       	push	r28
     13c:	cd b7       	in	r28, 0x3d	; 61
     13e:	de b7       	in	r29, 0x3e	; 62
     140:	6e 97       	sbiw	r28, 0x1e	; 30
     142:	0f b6       	in	r0, 0x3f	; 63
     144:	f8 94       	cli
     146:	de bf       	out	0x3e, r29	; 62
     148:	0f be       	out	0x3f, r0	; 63
     14a:	cd bf       	out	0x3d, r28	; 61
     14c:	9c 8f       	std	Y+28, r25	; 0x1c
     14e:	8b 8f       	std	Y+27, r24	; 0x1b
     150:	7e 8f       	std	Y+30, r23	; 0x1e
     152:	6d 8f       	std	Y+29, r22	; 0x1d
    for(int i = 0; i < aantal; i++)
     154:	1a 8e       	std	Y+26, r1	; 0x1a
     156:	19 8e       	std	Y+25, r1	; 0x19
     158:	d3 c0       	rjmp	.+422    	; 0x300 <buzzer+0x1c8>
    {
        PORTD ^= _BV(buzzerPin);
     15a:	ab e2       	ldi	r26, 0x2B	; 43
     15c:	b0 e0       	ldi	r27, 0x00	; 0
     15e:	eb e2       	ldi	r30, 0x2B	; 43
     160:	f0 e0       	ldi	r31, 0x00	; 0
     162:	90 81       	ld	r25, Z
     164:	82 e0       	ldi	r24, 0x02	; 2
     166:	89 27       	eor	r24, r25
     168:	8c 93       	st	X, r24
        _delay_us(freq);
     16a:	8b 8d       	ldd	r24, Y+27	; 0x1b
     16c:	9c 8d       	ldd	r25, Y+28	; 0x1c
     16e:	aa 27       	eor	r26, r26
     170:	97 fd       	sbrc	r25, 7
     172:	a0 95       	com	r26
     174:	ba 2f       	mov	r27, r26
     176:	bc 01       	movw	r22, r24
     178:	cd 01       	movw	r24, r26
     17a:	0e 94 da 0c 	call	0x19b4	; 0x19b4 <__floatsisf>
     17e:	dc 01       	movw	r26, r24
     180:	cb 01       	movw	r24, r22
     182:	8d 8b       	std	Y+21, r24	; 0x15
     184:	9e 8b       	std	Y+22, r25	; 0x16
     186:	af 8b       	std	Y+23, r26	; 0x17
     188:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     18a:	6d 89       	ldd	r22, Y+21	; 0x15
     18c:	7e 89       	ldd	r23, Y+22	; 0x16
     18e:	8f 89       	ldd	r24, Y+23	; 0x17
     190:	98 8d       	ldd	r25, Y+24	; 0x18
     192:	2b ea       	ldi	r18, 0xAB	; 171
     194:	3a ea       	ldi	r19, 0xAA	; 170
     196:	4a ea       	ldi	r20, 0xAA	; 170
     198:	50 e4       	ldi	r21, 0x40	; 64
     19a:	0e 94 a4 0a 	call	0x1548	; 0x1548 <__mulsf3>
     19e:	dc 01       	movw	r26, r24
     1a0:	cb 01       	movw	r24, r22
     1a2:	89 8b       	std	Y+17, r24	; 0x11
     1a4:	9a 8b       	std	Y+18, r25	; 0x12
     1a6:	ab 8b       	std	Y+19, r26	; 0x13
     1a8:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
     1aa:	69 89       	ldd	r22, Y+17	; 0x11
     1ac:	7a 89       	ldd	r23, Y+18	; 0x12
     1ae:	8b 89       	ldd	r24, Y+19	; 0x13
     1b0:	9c 89       	ldd	r25, Y+20	; 0x14
     1b2:	20 e0       	ldi	r18, 0x00	; 0
     1b4:	30 e0       	ldi	r19, 0x00	; 0
     1b6:	40 e8       	ldi	r20, 0x80	; 128
     1b8:	5f e3       	ldi	r21, 0x3F	; 63
     1ba:	0e 94 aa 0c 	call	0x1954	; 0x1954 <__ltsf2>
     1be:	88 23       	and	r24, r24
     1c0:	1c f4       	brge	.+6      	; 0x1c8 <buzzer+0x90>
		__ticks = 1;
     1c2:	81 e0       	ldi	r24, 0x01	; 1
     1c4:	88 8b       	std	Y+16, r24	; 0x10
     1c6:	91 c0       	rjmp	.+290    	; 0x2ea <buzzer+0x1b2>
	else if (__tmp > 255)
     1c8:	69 89       	ldd	r22, Y+17	; 0x11
     1ca:	7a 89       	ldd	r23, Y+18	; 0x12
     1cc:	8b 89       	ldd	r24, Y+19	; 0x13
     1ce:	9c 89       	ldd	r25, Y+20	; 0x14
     1d0:	20 e0       	ldi	r18, 0x00	; 0
     1d2:	30 e0       	ldi	r19, 0x00	; 0
     1d4:	4f e7       	ldi	r20, 0x7F	; 127
     1d6:	53 e4       	ldi	r21, 0x43	; 67
     1d8:	0e 94 4a 0c 	call	0x1894	; 0x1894 <__gtsf2>
     1dc:	18 16       	cp	r1, r24
     1de:	0c f0       	brlt	.+2      	; 0x1e2 <buzzer+0xaa>
     1e0:	7b c0       	rjmp	.+246    	; 0x2d8 <buzzer+0x1a0>
	{
		_delay_ms(__us / 1000.0);
     1e2:	6d 89       	ldd	r22, Y+21	; 0x15
     1e4:	7e 89       	ldd	r23, Y+22	; 0x16
     1e6:	8f 89       	ldd	r24, Y+23	; 0x17
     1e8:	98 8d       	ldd	r25, Y+24	; 0x18
     1ea:	20 e0       	ldi	r18, 0x00	; 0
     1ec:	30 e0       	ldi	r19, 0x00	; 0
     1ee:	4a e7       	ldi	r20, 0x7A	; 122
     1f0:	54 e4       	ldi	r21, 0x44	; 68
     1f2:	0e 94 9e 0b 	call	0x173c	; 0x173c <__divsf3>
     1f6:	dc 01       	movw	r26, r24
     1f8:	cb 01       	movw	r24, r22
     1fa:	8c 87       	std	Y+12, r24	; 0x0c
     1fc:	9d 87       	std	Y+13, r25	; 0x0d
     1fe:	ae 87       	std	Y+14, r26	; 0x0e
     200:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     202:	6c 85       	ldd	r22, Y+12	; 0x0c
     204:	7d 85       	ldd	r23, Y+13	; 0x0d
     206:	8e 85       	ldd	r24, Y+14	; 0x0e
     208:	9f 85       	ldd	r25, Y+15	; 0x0f
     20a:	20 e0       	ldi	r18, 0x00	; 0
     20c:	30 e0       	ldi	r19, 0x00	; 0
     20e:	4a e7       	ldi	r20, 0x7A	; 122
     210:	55 e4       	ldi	r21, 0x45	; 69
     212:	0e 94 a4 0a 	call	0x1548	; 0x1548 <__mulsf3>
     216:	dc 01       	movw	r26, r24
     218:	cb 01       	movw	r24, r22
     21a:	88 87       	std	Y+8, r24	; 0x08
     21c:	99 87       	std	Y+9, r25	; 0x09
     21e:	aa 87       	std	Y+10, r26	; 0x0a
     220:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
     222:	68 85       	ldd	r22, Y+8	; 0x08
     224:	79 85       	ldd	r23, Y+9	; 0x09
     226:	8a 85       	ldd	r24, Y+10	; 0x0a
     228:	9b 85       	ldd	r25, Y+11	; 0x0b
     22a:	20 e0       	ldi	r18, 0x00	; 0
     22c:	30 e0       	ldi	r19, 0x00	; 0
     22e:	40 e8       	ldi	r20, 0x80	; 128
     230:	5f e3       	ldi	r21, 0x3F	; 63
     232:	0e 94 aa 0c 	call	0x1954	; 0x1954 <__ltsf2>
     236:	88 23       	and	r24, r24
     238:	2c f4       	brge	.+10     	; 0x244 <buzzer+0x10c>
		__ticks = 1;
     23a:	81 e0       	ldi	r24, 0x01	; 1
     23c:	90 e0       	ldi	r25, 0x00	; 0
     23e:	9f 83       	std	Y+7, r25	; 0x07
     240:	8e 83       	std	Y+6, r24	; 0x06
     242:	3f c0       	rjmp	.+126    	; 0x2c2 <buzzer+0x18a>
	else if (__tmp > 65535)
     244:	68 85       	ldd	r22, Y+8	; 0x08
     246:	79 85       	ldd	r23, Y+9	; 0x09
     248:	8a 85       	ldd	r24, Y+10	; 0x0a
     24a:	9b 85       	ldd	r25, Y+11	; 0x0b
     24c:	20 e0       	ldi	r18, 0x00	; 0
     24e:	3f ef       	ldi	r19, 0xFF	; 255
     250:	4f e7       	ldi	r20, 0x7F	; 127
     252:	57 e4       	ldi	r21, 0x47	; 71
     254:	0e 94 4a 0c 	call	0x1894	; 0x1894 <__gtsf2>
     258:	18 16       	cp	r1, r24
     25a:	4c f5       	brge	.+82     	; 0x2ae <buzzer+0x176>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     25c:	6c 85       	ldd	r22, Y+12	; 0x0c
     25e:	7d 85       	ldd	r23, Y+13	; 0x0d
     260:	8e 85       	ldd	r24, Y+14	; 0x0e
     262:	9f 85       	ldd	r25, Y+15	; 0x0f
     264:	20 e0       	ldi	r18, 0x00	; 0
     266:	30 e0       	ldi	r19, 0x00	; 0
     268:	40 e2       	ldi	r20, 0x20	; 32
     26a:	51 e4       	ldi	r21, 0x41	; 65
     26c:	0e 94 a4 0a 	call	0x1548	; 0x1548 <__mulsf3>
     270:	dc 01       	movw	r26, r24
     272:	cb 01       	movw	r24, r22
     274:	bc 01       	movw	r22, r24
     276:	cd 01       	movw	r24, r26
     278:	0e 94 ce 08 	call	0x119c	; 0x119c <__fixunssfsi>
     27c:	dc 01       	movw	r26, r24
     27e:	cb 01       	movw	r24, r22
     280:	9f 83       	std	Y+7, r25	; 0x07
     282:	8e 83       	std	Y+6, r24	; 0x06
     284:	0f c0       	rjmp	.+30     	; 0x2a4 <buzzer+0x16c>
     286:	80 e9       	ldi	r24, 0x90	; 144
     288:	91 e0       	ldi	r25, 0x01	; 1
     28a:	9d 83       	std	Y+5, r25	; 0x05
     28c:	8c 83       	std	Y+4, r24	; 0x04
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     28e:	8c 81       	ldd	r24, Y+4	; 0x04
     290:	9d 81       	ldd	r25, Y+5	; 0x05
     292:	01 97       	sbiw	r24, 0x01	; 1
     294:	f1 f7       	brne	.-4      	; 0x292 <buzzer+0x15a>
     296:	9d 83       	std	Y+5, r25	; 0x05
     298:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     29a:	8e 81       	ldd	r24, Y+6	; 0x06
     29c:	9f 81       	ldd	r25, Y+7	; 0x07
     29e:	01 97       	sbiw	r24, 0x01	; 1
     2a0:	9f 83       	std	Y+7, r25	; 0x07
     2a2:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     2a4:	8e 81       	ldd	r24, Y+6	; 0x06
     2a6:	9f 81       	ldd	r25, Y+7	; 0x07
     2a8:	00 97       	sbiw	r24, 0x00	; 0
     2aa:	69 f7       	brne	.-38     	; 0x286 <buzzer+0x14e>
     2ac:	24 c0       	rjmp	.+72     	; 0x2f6 <buzzer+0x1be>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     2ae:	68 85       	ldd	r22, Y+8	; 0x08
     2b0:	79 85       	ldd	r23, Y+9	; 0x09
     2b2:	8a 85       	ldd	r24, Y+10	; 0x0a
     2b4:	9b 85       	ldd	r25, Y+11	; 0x0b
     2b6:	0e 94 ce 08 	call	0x119c	; 0x119c <__fixunssfsi>
     2ba:	dc 01       	movw	r26, r24
     2bc:	cb 01       	movw	r24, r22
     2be:	9f 83       	std	Y+7, r25	; 0x07
     2c0:	8e 83       	std	Y+6, r24	; 0x06
     2c2:	8e 81       	ldd	r24, Y+6	; 0x06
     2c4:	9f 81       	ldd	r25, Y+7	; 0x07
     2c6:	9b 83       	std	Y+3, r25	; 0x03
     2c8:	8a 83       	std	Y+2, r24	; 0x02
     2ca:	8a 81       	ldd	r24, Y+2	; 0x02
     2cc:	9b 81       	ldd	r25, Y+3	; 0x03
     2ce:	01 97       	sbiw	r24, 0x01	; 1
     2d0:	f1 f7       	brne	.-4      	; 0x2ce <buzzer+0x196>
     2d2:	9b 83       	std	Y+3, r25	; 0x03
     2d4:	8a 83       	std	Y+2, r24	; 0x02
     2d6:	0f c0       	rjmp	.+30     	; 0x2f6 <buzzer+0x1be>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     2d8:	69 89       	ldd	r22, Y+17	; 0x11
     2da:	7a 89       	ldd	r23, Y+18	; 0x12
     2dc:	8b 89       	ldd	r24, Y+19	; 0x13
     2de:	9c 89       	ldd	r25, Y+20	; 0x14
     2e0:	0e 94 ce 08 	call	0x119c	; 0x119c <__fixunssfsi>
     2e4:	dc 01       	movw	r26, r24
     2e6:	cb 01       	movw	r24, r22
     2e8:	88 8b       	std	Y+16, r24	; 0x10
     2ea:	88 89       	ldd	r24, Y+16	; 0x10
     2ec:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     2ee:	89 81       	ldd	r24, Y+1	; 0x01
     2f0:	8a 95       	dec	r24
     2f2:	f1 f7       	brne	.-4      	; 0x2f0 <buzzer+0x1b8>
     2f4:	89 83       	std	Y+1, r24	; 0x01
    sei();
}

void buzzer(int freq, int aantal)
{
    for(int i = 0; i < aantal; i++)
     2f6:	89 8d       	ldd	r24, Y+25	; 0x19
     2f8:	9a 8d       	ldd	r25, Y+26	; 0x1a
     2fa:	01 96       	adiw	r24, 0x01	; 1
     2fc:	9a 8f       	std	Y+26, r25	; 0x1a
     2fe:	89 8f       	std	Y+25, r24	; 0x19
     300:	29 8d       	ldd	r18, Y+25	; 0x19
     302:	3a 8d       	ldd	r19, Y+26	; 0x1a
     304:	8d 8d       	ldd	r24, Y+29	; 0x1d
     306:	9e 8d       	ldd	r25, Y+30	; 0x1e
     308:	28 17       	cp	r18, r24
     30a:	39 07       	cpc	r19, r25
     30c:	0c f4       	brge	.+2      	; 0x310 <buzzer+0x1d8>
     30e:	25 cf       	rjmp	.-438    	; 0x15a <buzzer+0x22>
    {
        PORTD ^= _BV(buzzerPin);
        _delay_us(freq);

    }
}
     310:	6e 96       	adiw	r28, 0x1e	; 30
     312:	0f b6       	in	r0, 0x3f	; 63
     314:	f8 94       	cli
     316:	de bf       	out	0x3e, r29	; 62
     318:	0f be       	out	0x3f, r0	; 63
     31a:	cd bf       	out	0x3d, r28	; 61
     31c:	cf 91       	pop	r28
     31e:	df 91       	pop	r29
     320:	08 95       	ret

00000322 <__vector_3>:

ISR(PCINT0_vect) //IR sensoren interrupt
{
     322:	1f 92       	push	r1
     324:	0f 92       	push	r0
     326:	0f b6       	in	r0, 0x3f	; 63
     328:	0f 92       	push	r0
     32a:	11 24       	eor	r1, r1
     32c:	2f 93       	push	r18
     32e:	3f 93       	push	r19
     330:	4f 93       	push	r20
     332:	5f 93       	push	r21
     334:	6f 93       	push	r22
     336:	7f 93       	push	r23
     338:	8f 93       	push	r24
     33a:	9f 93       	push	r25
     33c:	af 93       	push	r26
     33e:	bf 93       	push	r27
     340:	ef 93       	push	r30
     342:	ff 93       	push	r31
     344:	df 93       	push	r29
     346:	cf 93       	push	r28
     348:	cd b7       	in	r28, 0x3d	; 61
     34a:	de b7       	in	r29, 0x3e	; 62
     34c:	aa 97       	sbiw	r28, 0x2a	; 42
     34e:	de bf       	out	0x3e, r29	; 62
     350:	cd bf       	out	0x3d, r28	; 61
     352:	80 e0       	ldi	r24, 0x00	; 0
     354:	90 e0       	ldi	r25, 0x00	; 0
     356:	a8 ec       	ldi	r26, 0xC8	; 200
     358:	b1 e4       	ldi	r27, 0x41	; 65
     35a:	8f a3       	std	Y+39, r24	; 0x27
     35c:	98 a7       	std	Y+40, r25	; 0x28
     35e:	a9 a7       	std	Y+41, r26	; 0x29
     360:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     362:	6f a1       	ldd	r22, Y+39	; 0x27
     364:	78 a5       	ldd	r23, Y+40	; 0x28
     366:	89 a5       	ldd	r24, Y+41	; 0x29
     368:	9a a5       	ldd	r25, Y+42	; 0x2a
     36a:	20 e0       	ldi	r18, 0x00	; 0
     36c:	30 e0       	ldi	r19, 0x00	; 0
     36e:	4a e7       	ldi	r20, 0x7A	; 122
     370:	55 e4       	ldi	r21, 0x45	; 69
     372:	0e 94 a4 0a 	call	0x1548	; 0x1548 <__mulsf3>
     376:	dc 01       	movw	r26, r24
     378:	cb 01       	movw	r24, r22
     37a:	8b a3       	std	Y+35, r24	; 0x23
     37c:	9c a3       	std	Y+36, r25	; 0x24
     37e:	ad a3       	std	Y+37, r26	; 0x25
     380:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     382:	6b a1       	ldd	r22, Y+35	; 0x23
     384:	7c a1       	ldd	r23, Y+36	; 0x24
     386:	8d a1       	ldd	r24, Y+37	; 0x25
     388:	9e a1       	ldd	r25, Y+38	; 0x26
     38a:	20 e0       	ldi	r18, 0x00	; 0
     38c:	30 e0       	ldi	r19, 0x00	; 0
     38e:	40 e8       	ldi	r20, 0x80	; 128
     390:	5f e3       	ldi	r21, 0x3F	; 63
     392:	0e 94 aa 0c 	call	0x1954	; 0x1954 <__ltsf2>
     396:	88 23       	and	r24, r24
     398:	2c f4       	brge	.+10     	; 0x3a4 <__vector_3+0x82>
		__ticks = 1;
     39a:	81 e0       	ldi	r24, 0x01	; 1
     39c:	90 e0       	ldi	r25, 0x00	; 0
     39e:	9a a3       	std	Y+34, r25	; 0x22
     3a0:	89 a3       	std	Y+33, r24	; 0x21
     3a2:	3f c0       	rjmp	.+126    	; 0x422 <__vector_3+0x100>
	else if (__tmp > 65535)
     3a4:	6b a1       	ldd	r22, Y+35	; 0x23
     3a6:	7c a1       	ldd	r23, Y+36	; 0x24
     3a8:	8d a1       	ldd	r24, Y+37	; 0x25
     3aa:	9e a1       	ldd	r25, Y+38	; 0x26
     3ac:	20 e0       	ldi	r18, 0x00	; 0
     3ae:	3f ef       	ldi	r19, 0xFF	; 255
     3b0:	4f e7       	ldi	r20, 0x7F	; 127
     3b2:	57 e4       	ldi	r21, 0x47	; 71
     3b4:	0e 94 4a 0c 	call	0x1894	; 0x1894 <__gtsf2>
     3b8:	18 16       	cp	r1, r24
     3ba:	4c f5       	brge	.+82     	; 0x40e <__vector_3+0xec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     3bc:	6f a1       	ldd	r22, Y+39	; 0x27
     3be:	78 a5       	ldd	r23, Y+40	; 0x28
     3c0:	89 a5       	ldd	r24, Y+41	; 0x29
     3c2:	9a a5       	ldd	r25, Y+42	; 0x2a
     3c4:	20 e0       	ldi	r18, 0x00	; 0
     3c6:	30 e0       	ldi	r19, 0x00	; 0
     3c8:	40 e2       	ldi	r20, 0x20	; 32
     3ca:	51 e4       	ldi	r21, 0x41	; 65
     3cc:	0e 94 a4 0a 	call	0x1548	; 0x1548 <__mulsf3>
     3d0:	dc 01       	movw	r26, r24
     3d2:	cb 01       	movw	r24, r22
     3d4:	bc 01       	movw	r22, r24
     3d6:	cd 01       	movw	r24, r26
     3d8:	0e 94 ce 08 	call	0x119c	; 0x119c <__fixunssfsi>
     3dc:	dc 01       	movw	r26, r24
     3de:	cb 01       	movw	r24, r22
     3e0:	9a a3       	std	Y+34, r25	; 0x22
     3e2:	89 a3       	std	Y+33, r24	; 0x21
     3e4:	0f c0       	rjmp	.+30     	; 0x404 <__vector_3+0xe2>
     3e6:	80 e9       	ldi	r24, 0x90	; 144
     3e8:	91 e0       	ldi	r25, 0x01	; 1
     3ea:	98 a3       	std	Y+32, r25	; 0x20
     3ec:	8f 8f       	std	Y+31, r24	; 0x1f
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     3ee:	8f 8d       	ldd	r24, Y+31	; 0x1f
     3f0:	98 a1       	ldd	r25, Y+32	; 0x20
     3f2:	01 97       	sbiw	r24, 0x01	; 1
     3f4:	f1 f7       	brne	.-4      	; 0x3f2 <__vector_3+0xd0>
     3f6:	98 a3       	std	Y+32, r25	; 0x20
     3f8:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     3fa:	89 a1       	ldd	r24, Y+33	; 0x21
     3fc:	9a a1       	ldd	r25, Y+34	; 0x22
     3fe:	01 97       	sbiw	r24, 0x01	; 1
     400:	9a a3       	std	Y+34, r25	; 0x22
     402:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     404:	89 a1       	ldd	r24, Y+33	; 0x21
     406:	9a a1       	ldd	r25, Y+34	; 0x22
     408:	00 97       	sbiw	r24, 0x00	; 0
     40a:	69 f7       	brne	.-38     	; 0x3e6 <__vector_3+0xc4>
     40c:	14 c0       	rjmp	.+40     	; 0x436 <__vector_3+0x114>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     40e:	6b a1       	ldd	r22, Y+35	; 0x23
     410:	7c a1       	ldd	r23, Y+36	; 0x24
     412:	8d a1       	ldd	r24, Y+37	; 0x25
     414:	9e a1       	ldd	r25, Y+38	; 0x26
     416:	0e 94 ce 08 	call	0x119c	; 0x119c <__fixunssfsi>
     41a:	dc 01       	movw	r26, r24
     41c:	cb 01       	movw	r24, r22
     41e:	9a a3       	std	Y+34, r25	; 0x22
     420:	89 a3       	std	Y+33, r24	; 0x21
     422:	89 a1       	ldd	r24, Y+33	; 0x21
     424:	9a a1       	ldd	r25, Y+34	; 0x22
     426:	9e 8f       	std	Y+30, r25	; 0x1e
     428:	8d 8f       	std	Y+29, r24	; 0x1d
     42a:	8d 8d       	ldd	r24, Y+29	; 0x1d
     42c:	9e 8d       	ldd	r25, Y+30	; 0x1e
     42e:	01 97       	sbiw	r24, 0x01	; 1
     430:	f1 f7       	brne	.-4      	; 0x42e <__vector_3+0x10c>
     432:	9e 8f       	std	Y+30, r25	; 0x1e
     434:	8d 8f       	std	Y+29, r24	; 0x1d
    _delay_ms(25);
    if(bit_is_clear(PINB, IrSen1))
     436:	e3 e2       	ldi	r30, 0x23	; 35
     438:	f0 e0       	ldi	r31, 0x00	; 0
     43a:	80 81       	ld	r24, Z
     43c:	88 2f       	mov	r24, r24
     43e:	90 e0       	ldi	r25, 0x00	; 0
     440:	82 70       	andi	r24, 0x02	; 2
     442:	90 70       	andi	r25, 0x00	; 0
     444:	00 97       	sbiw	r24, 0x00	; 0
     446:	09 f0       	breq	.+2      	; 0x44a <__vector_3+0x128>
     448:	8e c0       	rjmp	.+284    	; 0x566 <__vector_3+0x244>
    {
        if(aanwaarde != 1)
     44a:	80 91 08 02 	lds	r24, 0x0208
     44e:	90 91 09 02 	lds	r25, 0x0209
     452:	81 30       	cpi	r24, 0x01	; 1
     454:	91 05       	cpc	r25, r1
     456:	09 f4       	brne	.+2      	; 0x45a <__vector_3+0x138>
     458:	86 c0       	rjmp	.+268    	; 0x566 <__vector_3+0x244>
        {
            PORTC |= _BV(motorPin);
     45a:	a8 e2       	ldi	r26, 0x28	; 40
     45c:	b0 e0       	ldi	r27, 0x00	; 0
     45e:	e8 e2       	ldi	r30, 0x28	; 40
     460:	f0 e0       	ldi	r31, 0x00	; 0
     462:	80 81       	ld	r24, Z
     464:	80 61       	ori	r24, 0x10	; 16
     466:	8c 93       	st	X, r24
            buzzer(350, 1000);
     468:	8e e5       	ldi	r24, 0x5E	; 94
     46a:	91 e0       	ldi	r25, 0x01	; 1
     46c:	68 ee       	ldi	r22, 0xE8	; 232
     46e:	73 e0       	ldi	r23, 0x03	; 3
     470:	0e 94 9c 00 	call	0x138	; 0x138 <buzzer>
     474:	80 e0       	ldi	r24, 0x00	; 0
     476:	90 e0       	ldi	r25, 0x00	; 0
     478:	aa ef       	ldi	r26, 0xFA	; 250
     47a:	b3 e4       	ldi	r27, 0x43	; 67
     47c:	89 8f       	std	Y+25, r24	; 0x19
     47e:	9a 8f       	std	Y+26, r25	; 0x1a
     480:	ab 8f       	std	Y+27, r26	; 0x1b
     482:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     484:	69 8d       	ldd	r22, Y+25	; 0x19
     486:	7a 8d       	ldd	r23, Y+26	; 0x1a
     488:	8b 8d       	ldd	r24, Y+27	; 0x1b
     48a:	9c 8d       	ldd	r25, Y+28	; 0x1c
     48c:	20 e0       	ldi	r18, 0x00	; 0
     48e:	30 e0       	ldi	r19, 0x00	; 0
     490:	4a e7       	ldi	r20, 0x7A	; 122
     492:	55 e4       	ldi	r21, 0x45	; 69
     494:	0e 94 a4 0a 	call	0x1548	; 0x1548 <__mulsf3>
     498:	dc 01       	movw	r26, r24
     49a:	cb 01       	movw	r24, r22
     49c:	8d 8b       	std	Y+21, r24	; 0x15
     49e:	9e 8b       	std	Y+22, r25	; 0x16
     4a0:	af 8b       	std	Y+23, r26	; 0x17
     4a2:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     4a4:	6d 89       	ldd	r22, Y+21	; 0x15
     4a6:	7e 89       	ldd	r23, Y+22	; 0x16
     4a8:	8f 89       	ldd	r24, Y+23	; 0x17
     4aa:	98 8d       	ldd	r25, Y+24	; 0x18
     4ac:	20 e0       	ldi	r18, 0x00	; 0
     4ae:	30 e0       	ldi	r19, 0x00	; 0
     4b0:	40 e8       	ldi	r20, 0x80	; 128
     4b2:	5f e3       	ldi	r21, 0x3F	; 63
     4b4:	0e 94 aa 0c 	call	0x1954	; 0x1954 <__ltsf2>
     4b8:	88 23       	and	r24, r24
     4ba:	2c f4       	brge	.+10     	; 0x4c6 <__vector_3+0x1a4>
		__ticks = 1;
     4bc:	81 e0       	ldi	r24, 0x01	; 1
     4be:	90 e0       	ldi	r25, 0x00	; 0
     4c0:	9c 8b       	std	Y+20, r25	; 0x14
     4c2:	8b 8b       	std	Y+19, r24	; 0x13
     4c4:	3f c0       	rjmp	.+126    	; 0x544 <__vector_3+0x222>
	else if (__tmp > 65535)
     4c6:	6d 89       	ldd	r22, Y+21	; 0x15
     4c8:	7e 89       	ldd	r23, Y+22	; 0x16
     4ca:	8f 89       	ldd	r24, Y+23	; 0x17
     4cc:	98 8d       	ldd	r25, Y+24	; 0x18
     4ce:	20 e0       	ldi	r18, 0x00	; 0
     4d0:	3f ef       	ldi	r19, 0xFF	; 255
     4d2:	4f e7       	ldi	r20, 0x7F	; 127
     4d4:	57 e4       	ldi	r21, 0x47	; 71
     4d6:	0e 94 4a 0c 	call	0x1894	; 0x1894 <__gtsf2>
     4da:	18 16       	cp	r1, r24
     4dc:	4c f5       	brge	.+82     	; 0x530 <__vector_3+0x20e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     4de:	69 8d       	ldd	r22, Y+25	; 0x19
     4e0:	7a 8d       	ldd	r23, Y+26	; 0x1a
     4e2:	8b 8d       	ldd	r24, Y+27	; 0x1b
     4e4:	9c 8d       	ldd	r25, Y+28	; 0x1c
     4e6:	20 e0       	ldi	r18, 0x00	; 0
     4e8:	30 e0       	ldi	r19, 0x00	; 0
     4ea:	40 e2       	ldi	r20, 0x20	; 32
     4ec:	51 e4       	ldi	r21, 0x41	; 65
     4ee:	0e 94 a4 0a 	call	0x1548	; 0x1548 <__mulsf3>
     4f2:	dc 01       	movw	r26, r24
     4f4:	cb 01       	movw	r24, r22
     4f6:	bc 01       	movw	r22, r24
     4f8:	cd 01       	movw	r24, r26
     4fa:	0e 94 ce 08 	call	0x119c	; 0x119c <__fixunssfsi>
     4fe:	dc 01       	movw	r26, r24
     500:	cb 01       	movw	r24, r22
     502:	9c 8b       	std	Y+20, r25	; 0x14
     504:	8b 8b       	std	Y+19, r24	; 0x13
     506:	0f c0       	rjmp	.+30     	; 0x526 <__vector_3+0x204>
     508:	80 e9       	ldi	r24, 0x90	; 144
     50a:	91 e0       	ldi	r25, 0x01	; 1
     50c:	9a 8b       	std	Y+18, r25	; 0x12
     50e:	89 8b       	std	Y+17, r24	; 0x11
     510:	89 89       	ldd	r24, Y+17	; 0x11
     512:	9a 89       	ldd	r25, Y+18	; 0x12
     514:	01 97       	sbiw	r24, 0x01	; 1
     516:	f1 f7       	brne	.-4      	; 0x514 <__vector_3+0x1f2>
     518:	9a 8b       	std	Y+18, r25	; 0x12
     51a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     51c:	8b 89       	ldd	r24, Y+19	; 0x13
     51e:	9c 89       	ldd	r25, Y+20	; 0x14
     520:	01 97       	sbiw	r24, 0x01	; 1
     522:	9c 8b       	std	Y+20, r25	; 0x14
     524:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     526:	8b 89       	ldd	r24, Y+19	; 0x13
     528:	9c 89       	ldd	r25, Y+20	; 0x14
     52a:	00 97       	sbiw	r24, 0x00	; 0
     52c:	69 f7       	brne	.-38     	; 0x508 <__vector_3+0x1e6>
     52e:	14 c0       	rjmp	.+40     	; 0x558 <__vector_3+0x236>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     530:	6d 89       	ldd	r22, Y+21	; 0x15
     532:	7e 89       	ldd	r23, Y+22	; 0x16
     534:	8f 89       	ldd	r24, Y+23	; 0x17
     536:	98 8d       	ldd	r25, Y+24	; 0x18
     538:	0e 94 ce 08 	call	0x119c	; 0x119c <__fixunssfsi>
     53c:	dc 01       	movw	r26, r24
     53e:	cb 01       	movw	r24, r22
     540:	9c 8b       	std	Y+20, r25	; 0x14
     542:	8b 8b       	std	Y+19, r24	; 0x13
     544:	8b 89       	ldd	r24, Y+19	; 0x13
     546:	9c 89       	ldd	r25, Y+20	; 0x14
     548:	98 8b       	std	Y+16, r25	; 0x10
     54a:	8f 87       	std	Y+15, r24	; 0x0f
     54c:	8f 85       	ldd	r24, Y+15	; 0x0f
     54e:	98 89       	ldd	r25, Y+16	; 0x10
     550:	01 97       	sbiw	r24, 0x01	; 1
     552:	f1 f7       	brne	.-4      	; 0x550 <__vector_3+0x22e>
     554:	98 8b       	std	Y+16, r25	; 0x10
     556:	8f 87       	std	Y+15, r24	; 0x0f
            _delay_ms(500);
            PORTC &= ~_BV(motorPin);
     558:	a8 e2       	ldi	r26, 0x28	; 40
     55a:	b0 e0       	ldi	r27, 0x00	; 0
     55c:	e8 e2       	ldi	r30, 0x28	; 40
     55e:	f0 e0       	ldi	r31, 0x00	; 0
     560:	80 81       	ld	r24, Z
     562:	8f 7e       	andi	r24, 0xEF	; 239
     564:	8c 93       	st	X, r24
        }

    }
    if(bit_is_clear(PINB, IrSen2))
     566:	e3 e2       	ldi	r30, 0x23	; 35
     568:	f0 e0       	ldi	r31, 0x00	; 0
     56a:	80 81       	ld	r24, Z
     56c:	88 2f       	mov	r24, r24
     56e:	90 e0       	ldi	r25, 0x00	; 0
     570:	84 70       	andi	r24, 0x04	; 4
     572:	90 70       	andi	r25, 0x00	; 0
     574:	00 97       	sbiw	r24, 0x00	; 0
     576:	09 f0       	breq	.+2      	; 0x57a <__vector_3+0x258>
     578:	8e c0       	rjmp	.+284    	; 0x696 <__vector_3+0x374>
    {
        if(aanwaarde != 2)
     57a:	80 91 08 02 	lds	r24, 0x0208
     57e:	90 91 09 02 	lds	r25, 0x0209
     582:	82 30       	cpi	r24, 0x02	; 2
     584:	91 05       	cpc	r25, r1
     586:	09 f4       	brne	.+2      	; 0x58a <__vector_3+0x268>
     588:	86 c0       	rjmp	.+268    	; 0x696 <__vector_3+0x374>
        {
            PORTC |= _BV(motorPin);
     58a:	a8 e2       	ldi	r26, 0x28	; 40
     58c:	b0 e0       	ldi	r27, 0x00	; 0
     58e:	e8 e2       	ldi	r30, 0x28	; 40
     590:	f0 e0       	ldi	r31, 0x00	; 0
     592:	80 81       	ld	r24, Z
     594:	80 61       	ori	r24, 0x10	; 16
     596:	8c 93       	st	X, r24
            buzzer(350, 1000);
     598:	8e e5       	ldi	r24, 0x5E	; 94
     59a:	91 e0       	ldi	r25, 0x01	; 1
     59c:	68 ee       	ldi	r22, 0xE8	; 232
     59e:	73 e0       	ldi	r23, 0x03	; 3
     5a0:	0e 94 9c 00 	call	0x138	; 0x138 <buzzer>
     5a4:	80 e0       	ldi	r24, 0x00	; 0
     5a6:	90 e0       	ldi	r25, 0x00	; 0
     5a8:	aa ef       	ldi	r26, 0xFA	; 250
     5aa:	b3 e4       	ldi	r27, 0x43	; 67
     5ac:	8b 87       	std	Y+11, r24	; 0x0b
     5ae:	9c 87       	std	Y+12, r25	; 0x0c
     5b0:	ad 87       	std	Y+13, r26	; 0x0d
     5b2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     5b4:	6b 85       	ldd	r22, Y+11	; 0x0b
     5b6:	7c 85       	ldd	r23, Y+12	; 0x0c
     5b8:	8d 85       	ldd	r24, Y+13	; 0x0d
     5ba:	9e 85       	ldd	r25, Y+14	; 0x0e
     5bc:	20 e0       	ldi	r18, 0x00	; 0
     5be:	30 e0       	ldi	r19, 0x00	; 0
     5c0:	4a e7       	ldi	r20, 0x7A	; 122
     5c2:	55 e4       	ldi	r21, 0x45	; 69
     5c4:	0e 94 a4 0a 	call	0x1548	; 0x1548 <__mulsf3>
     5c8:	dc 01       	movw	r26, r24
     5ca:	cb 01       	movw	r24, r22
     5cc:	8f 83       	std	Y+7, r24	; 0x07
     5ce:	98 87       	std	Y+8, r25	; 0x08
     5d0:	a9 87       	std	Y+9, r26	; 0x09
     5d2:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     5d4:	6f 81       	ldd	r22, Y+7	; 0x07
     5d6:	78 85       	ldd	r23, Y+8	; 0x08
     5d8:	89 85       	ldd	r24, Y+9	; 0x09
     5da:	9a 85       	ldd	r25, Y+10	; 0x0a
     5dc:	20 e0       	ldi	r18, 0x00	; 0
     5de:	30 e0       	ldi	r19, 0x00	; 0
     5e0:	40 e8       	ldi	r20, 0x80	; 128
     5e2:	5f e3       	ldi	r21, 0x3F	; 63
     5e4:	0e 94 aa 0c 	call	0x1954	; 0x1954 <__ltsf2>
     5e8:	88 23       	and	r24, r24
     5ea:	2c f4       	brge	.+10     	; 0x5f6 <__vector_3+0x2d4>
		__ticks = 1;
     5ec:	81 e0       	ldi	r24, 0x01	; 1
     5ee:	90 e0       	ldi	r25, 0x00	; 0
     5f0:	9e 83       	std	Y+6, r25	; 0x06
     5f2:	8d 83       	std	Y+5, r24	; 0x05
     5f4:	3f c0       	rjmp	.+126    	; 0x674 <__vector_3+0x352>
	else if (__tmp > 65535)
     5f6:	6f 81       	ldd	r22, Y+7	; 0x07
     5f8:	78 85       	ldd	r23, Y+8	; 0x08
     5fa:	89 85       	ldd	r24, Y+9	; 0x09
     5fc:	9a 85       	ldd	r25, Y+10	; 0x0a
     5fe:	20 e0       	ldi	r18, 0x00	; 0
     600:	3f ef       	ldi	r19, 0xFF	; 255
     602:	4f e7       	ldi	r20, 0x7F	; 127
     604:	57 e4       	ldi	r21, 0x47	; 71
     606:	0e 94 4a 0c 	call	0x1894	; 0x1894 <__gtsf2>
     60a:	18 16       	cp	r1, r24
     60c:	4c f5       	brge	.+82     	; 0x660 <__vector_3+0x33e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     60e:	6b 85       	ldd	r22, Y+11	; 0x0b
     610:	7c 85       	ldd	r23, Y+12	; 0x0c
     612:	8d 85       	ldd	r24, Y+13	; 0x0d
     614:	9e 85       	ldd	r25, Y+14	; 0x0e
     616:	20 e0       	ldi	r18, 0x00	; 0
     618:	30 e0       	ldi	r19, 0x00	; 0
     61a:	40 e2       	ldi	r20, 0x20	; 32
     61c:	51 e4       	ldi	r21, 0x41	; 65
     61e:	0e 94 a4 0a 	call	0x1548	; 0x1548 <__mulsf3>
     622:	dc 01       	movw	r26, r24
     624:	cb 01       	movw	r24, r22
     626:	bc 01       	movw	r22, r24
     628:	cd 01       	movw	r24, r26
     62a:	0e 94 ce 08 	call	0x119c	; 0x119c <__fixunssfsi>
     62e:	dc 01       	movw	r26, r24
     630:	cb 01       	movw	r24, r22
     632:	9e 83       	std	Y+6, r25	; 0x06
     634:	8d 83       	std	Y+5, r24	; 0x05
     636:	0f c0       	rjmp	.+30     	; 0x656 <__vector_3+0x334>
     638:	80 e9       	ldi	r24, 0x90	; 144
     63a:	91 e0       	ldi	r25, 0x01	; 1
     63c:	9c 83       	std	Y+4, r25	; 0x04
     63e:	8b 83       	std	Y+3, r24	; 0x03
     640:	8b 81       	ldd	r24, Y+3	; 0x03
     642:	9c 81       	ldd	r25, Y+4	; 0x04
     644:	01 97       	sbiw	r24, 0x01	; 1
     646:	f1 f7       	brne	.-4      	; 0x644 <__vector_3+0x322>
     648:	9c 83       	std	Y+4, r25	; 0x04
     64a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     64c:	8d 81       	ldd	r24, Y+5	; 0x05
     64e:	9e 81       	ldd	r25, Y+6	; 0x06
     650:	01 97       	sbiw	r24, 0x01	; 1
     652:	9e 83       	std	Y+6, r25	; 0x06
     654:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     656:	8d 81       	ldd	r24, Y+5	; 0x05
     658:	9e 81       	ldd	r25, Y+6	; 0x06
     65a:	00 97       	sbiw	r24, 0x00	; 0
     65c:	69 f7       	brne	.-38     	; 0x638 <__vector_3+0x316>
     65e:	14 c0       	rjmp	.+40     	; 0x688 <__vector_3+0x366>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     660:	6f 81       	ldd	r22, Y+7	; 0x07
     662:	78 85       	ldd	r23, Y+8	; 0x08
     664:	89 85       	ldd	r24, Y+9	; 0x09
     666:	9a 85       	ldd	r25, Y+10	; 0x0a
     668:	0e 94 ce 08 	call	0x119c	; 0x119c <__fixunssfsi>
     66c:	dc 01       	movw	r26, r24
     66e:	cb 01       	movw	r24, r22
     670:	9e 83       	std	Y+6, r25	; 0x06
     672:	8d 83       	std	Y+5, r24	; 0x05
     674:	8d 81       	ldd	r24, Y+5	; 0x05
     676:	9e 81       	ldd	r25, Y+6	; 0x06
     678:	9a 83       	std	Y+2, r25	; 0x02
     67a:	89 83       	std	Y+1, r24	; 0x01
     67c:	89 81       	ldd	r24, Y+1	; 0x01
     67e:	9a 81       	ldd	r25, Y+2	; 0x02
     680:	01 97       	sbiw	r24, 0x01	; 1
     682:	f1 f7       	brne	.-4      	; 0x680 <__vector_3+0x35e>
     684:	9a 83       	std	Y+2, r25	; 0x02
     686:	89 83       	std	Y+1, r24	; 0x01
            _delay_ms(500);
            PORTC &= ~_BV(motorPin);
     688:	a8 e2       	ldi	r26, 0x28	; 40
     68a:	b0 e0       	ldi	r27, 0x00	; 0
     68c:	e8 e2       	ldi	r30, 0x28	; 40
     68e:	f0 e0       	ldi	r31, 0x00	; 0
     690:	80 81       	ld	r24, Z
     692:	8f 7e       	andi	r24, 0xEF	; 239
     694:	8c 93       	st	X, r24
        }

    }
}
     696:	aa 96       	adiw	r28, 0x2a	; 42
     698:	de bf       	out	0x3e, r29	; 62
     69a:	cd bf       	out	0x3d, r28	; 61
     69c:	cf 91       	pop	r28
     69e:	df 91       	pop	r29
     6a0:	ff 91       	pop	r31
     6a2:	ef 91       	pop	r30
     6a4:	bf 91       	pop	r27
     6a6:	af 91       	pop	r26
     6a8:	9f 91       	pop	r25
     6aa:	8f 91       	pop	r24
     6ac:	7f 91       	pop	r23
     6ae:	6f 91       	pop	r22
     6b0:	5f 91       	pop	r21
     6b2:	4f 91       	pop	r20
     6b4:	3f 91       	pop	r19
     6b6:	2f 91       	pop	r18
     6b8:	0f 90       	pop	r0
     6ba:	0f be       	out	0x3f, r0	; 63
     6bc:	0f 90       	pop	r0
     6be:	1f 90       	pop	r1
     6c0:	18 95       	reti

000006c2 <__vector_13>:

ISR(TIMER1_OVF_vect) //timer1 overflow interrupt
{
     6c2:	1f 92       	push	r1
     6c4:	0f 92       	push	r0
     6c6:	0f b6       	in	r0, 0x3f	; 63
     6c8:	0f 92       	push	r0
     6ca:	11 24       	eor	r1, r1
     6cc:	8f 93       	push	r24
     6ce:	9f 93       	push	r25
     6d0:	af 93       	push	r26
     6d2:	bf 93       	push	r27
     6d4:	df 93       	push	r29
     6d6:	cf 93       	push	r28
     6d8:	cd b7       	in	r28, 0x3d	; 61
     6da:	de b7       	in	r29, 0x3e	; 62
    timer++;
     6dc:	80 91 0a 02 	lds	r24, 0x020A
     6e0:	90 91 0b 02 	lds	r25, 0x020B
     6e4:	a0 91 0c 02 	lds	r26, 0x020C
     6e8:	b0 91 0d 02 	lds	r27, 0x020D
     6ec:	01 96       	adiw	r24, 0x01	; 1
     6ee:	a1 1d       	adc	r26, r1
     6f0:	b1 1d       	adc	r27, r1
     6f2:	80 93 0a 02 	sts	0x020A, r24
     6f6:	90 93 0b 02 	sts	0x020B, r25
     6fa:	a0 93 0c 02 	sts	0x020C, r26
     6fe:	b0 93 0d 02 	sts	0x020D, r27
}
     702:	cf 91       	pop	r28
     704:	df 91       	pop	r29
     706:	bf 91       	pop	r27
     708:	af 91       	pop	r26
     70a:	9f 91       	pop	r25
     70c:	8f 91       	pop	r24
     70e:	0f 90       	pop	r0
     710:	0f be       	out	0x3f, r0	; 63
     712:	0f 90       	pop	r0
     714:	1f 90       	pop	r1
     716:	18 95       	reti

00000718 <functie1>:

void functie1 (void) //links uit
{
     718:	df 93       	push	r29
     71a:	cf 93       	push	r28
     71c:	cd b7       	in	r28, 0x3d	; 61
     71e:	de b7       	in	r29, 0x3e	; 62
    aanwaarde = 2;
     720:	82 e0       	ldi	r24, 0x02	; 2
     722:	90 e0       	ldi	r25, 0x00	; 0
     724:	90 93 09 02 	sts	0x0209, r25
     728:	80 93 08 02 	sts	0x0208, r24
}
     72c:	cf 91       	pop	r28
     72e:	df 91       	pop	r29
     730:	08 95       	ret

00000732 <functie2>:

void functie2 (void) // rechts uit
{
     732:	df 93       	push	r29
     734:	cf 93       	push	r28
     736:	cd b7       	in	r28, 0x3d	; 61
     738:	de b7       	in	r29, 0x3e	; 62
    aanwaarde = 1;
     73a:	81 e0       	ldi	r24, 0x01	; 1
     73c:	90 e0       	ldi	r25, 0x00	; 0
     73e:	90 93 09 02 	sts	0x0209, r25
     742:	80 93 08 02 	sts	0x0208, r24
}
     746:	cf 91       	pop	r28
     748:	df 91       	pop	r29
     74a:	08 95       	ret

0000074c <functie3>:

void functie3 (void) // geen IR uit
{
     74c:	df 93       	push	r29
     74e:	cf 93       	push	r28
     750:	cd b7       	in	r28, 0x3d	; 61
     752:	de b7       	in	r29, 0x3e	; 62
    aanwaarde = 0;
     754:	10 92 09 02 	sts	0x0209, r1
     758:	10 92 08 02 	sts	0x0208, r1
}
     75c:	cf 91       	pop	r28
     75e:	df 91       	pop	r29
     760:	08 95       	ret

00000762 <functie4>:

void functie4 (void) //bochtL
{
     762:	df 93       	push	r29
     764:	cf 93       	push	r28
     766:	cd b7       	in	r28, 0x3d	; 61
     768:	de b7       	in	r29, 0x3e	; 62
     76a:	6e 97       	sbiw	r28, 0x1e	; 30
     76c:	0f b6       	in	r0, 0x3f	; 63
     76e:	f8 94       	cli
     770:	de bf       	out	0x3e, r29	; 62
     772:	0f be       	out	0x3f, r0	; 63
     774:	cd bf       	out	0x3d, r28	; 61
    PORTC |= _BV(bochtPin);
     776:	a8 e2       	ldi	r26, 0x28	; 40
     778:	b0 e0       	ldi	r27, 0x00	; 0
     77a:	e8 e2       	ldi	r30, 0x28	; 40
     77c:	f0 e0       	ldi	r31, 0x00	; 0
     77e:	80 81       	ld	r24, Z
     780:	80 62       	ori	r24, 0x20	; 32
     782:	8c 93       	st	X, r24
     784:	80 e0       	ldi	r24, 0x00	; 0
     786:	90 e0       	ldi	r25, 0x00	; 0
     788:	a0 ea       	ldi	r26, 0xA0	; 160
     78a:	b0 e4       	ldi	r27, 0x40	; 64
     78c:	89 8f       	std	Y+25, r24	; 0x19
     78e:	9a 8f       	std	Y+26, r25	; 0x1a
     790:	ab 8f       	std	Y+27, r26	; 0x1b
     792:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     794:	69 8d       	ldd	r22, Y+25	; 0x19
     796:	7a 8d       	ldd	r23, Y+26	; 0x1a
     798:	8b 8d       	ldd	r24, Y+27	; 0x1b
     79a:	9c 8d       	ldd	r25, Y+28	; 0x1c
     79c:	20 e0       	ldi	r18, 0x00	; 0
     79e:	30 e0       	ldi	r19, 0x00	; 0
     7a0:	4a e7       	ldi	r20, 0x7A	; 122
     7a2:	55 e4       	ldi	r21, 0x45	; 69
     7a4:	0e 94 a4 0a 	call	0x1548	; 0x1548 <__mulsf3>
     7a8:	dc 01       	movw	r26, r24
     7aa:	cb 01       	movw	r24, r22
     7ac:	8d 8b       	std	Y+21, r24	; 0x15
     7ae:	9e 8b       	std	Y+22, r25	; 0x16
     7b0:	af 8b       	std	Y+23, r26	; 0x17
     7b2:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     7b4:	6d 89       	ldd	r22, Y+21	; 0x15
     7b6:	7e 89       	ldd	r23, Y+22	; 0x16
     7b8:	8f 89       	ldd	r24, Y+23	; 0x17
     7ba:	98 8d       	ldd	r25, Y+24	; 0x18
     7bc:	20 e0       	ldi	r18, 0x00	; 0
     7be:	30 e0       	ldi	r19, 0x00	; 0
     7c0:	40 e8       	ldi	r20, 0x80	; 128
     7c2:	5f e3       	ldi	r21, 0x3F	; 63
     7c4:	0e 94 aa 0c 	call	0x1954	; 0x1954 <__ltsf2>
     7c8:	88 23       	and	r24, r24
     7ca:	2c f4       	brge	.+10     	; 0x7d6 <functie4+0x74>
		__ticks = 1;
     7cc:	81 e0       	ldi	r24, 0x01	; 1
     7ce:	90 e0       	ldi	r25, 0x00	; 0
     7d0:	9c 8b       	std	Y+20, r25	; 0x14
     7d2:	8b 8b       	std	Y+19, r24	; 0x13
     7d4:	3f c0       	rjmp	.+126    	; 0x854 <functie4+0xf2>
	else if (__tmp > 65535)
     7d6:	6d 89       	ldd	r22, Y+21	; 0x15
     7d8:	7e 89       	ldd	r23, Y+22	; 0x16
     7da:	8f 89       	ldd	r24, Y+23	; 0x17
     7dc:	98 8d       	ldd	r25, Y+24	; 0x18
     7de:	20 e0       	ldi	r18, 0x00	; 0
     7e0:	3f ef       	ldi	r19, 0xFF	; 255
     7e2:	4f e7       	ldi	r20, 0x7F	; 127
     7e4:	57 e4       	ldi	r21, 0x47	; 71
     7e6:	0e 94 4a 0c 	call	0x1894	; 0x1894 <__gtsf2>
     7ea:	18 16       	cp	r1, r24
     7ec:	4c f5       	brge	.+82     	; 0x840 <functie4+0xde>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     7ee:	69 8d       	ldd	r22, Y+25	; 0x19
     7f0:	7a 8d       	ldd	r23, Y+26	; 0x1a
     7f2:	8b 8d       	ldd	r24, Y+27	; 0x1b
     7f4:	9c 8d       	ldd	r25, Y+28	; 0x1c
     7f6:	20 e0       	ldi	r18, 0x00	; 0
     7f8:	30 e0       	ldi	r19, 0x00	; 0
     7fa:	40 e2       	ldi	r20, 0x20	; 32
     7fc:	51 e4       	ldi	r21, 0x41	; 65
     7fe:	0e 94 a4 0a 	call	0x1548	; 0x1548 <__mulsf3>
     802:	dc 01       	movw	r26, r24
     804:	cb 01       	movw	r24, r22
     806:	bc 01       	movw	r22, r24
     808:	cd 01       	movw	r24, r26
     80a:	0e 94 ce 08 	call	0x119c	; 0x119c <__fixunssfsi>
     80e:	dc 01       	movw	r26, r24
     810:	cb 01       	movw	r24, r22
     812:	9c 8b       	std	Y+20, r25	; 0x14
     814:	8b 8b       	std	Y+19, r24	; 0x13
     816:	0f c0       	rjmp	.+30     	; 0x836 <functie4+0xd4>
     818:	80 e9       	ldi	r24, 0x90	; 144
     81a:	91 e0       	ldi	r25, 0x01	; 1
     81c:	9a 8b       	std	Y+18, r25	; 0x12
     81e:	89 8b       	std	Y+17, r24	; 0x11
     820:	89 89       	ldd	r24, Y+17	; 0x11
     822:	9a 89       	ldd	r25, Y+18	; 0x12
     824:	01 97       	sbiw	r24, 0x01	; 1
     826:	f1 f7       	brne	.-4      	; 0x824 <functie4+0xc2>
     828:	9a 8b       	std	Y+18, r25	; 0x12
     82a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     82c:	8b 89       	ldd	r24, Y+19	; 0x13
     82e:	9c 89       	ldd	r25, Y+20	; 0x14
     830:	01 97       	sbiw	r24, 0x01	; 1
     832:	9c 8b       	std	Y+20, r25	; 0x14
     834:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     836:	8b 89       	ldd	r24, Y+19	; 0x13
     838:	9c 89       	ldd	r25, Y+20	; 0x14
     83a:	00 97       	sbiw	r24, 0x00	; 0
     83c:	69 f7       	brne	.-38     	; 0x818 <functie4+0xb6>
     83e:	14 c0       	rjmp	.+40     	; 0x868 <functie4+0x106>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     840:	6d 89       	ldd	r22, Y+21	; 0x15
     842:	7e 89       	ldd	r23, Y+22	; 0x16
     844:	8f 89       	ldd	r24, Y+23	; 0x17
     846:	98 8d       	ldd	r25, Y+24	; 0x18
     848:	0e 94 ce 08 	call	0x119c	; 0x119c <__fixunssfsi>
     84c:	dc 01       	movw	r26, r24
     84e:	cb 01       	movw	r24, r22
     850:	9c 8b       	std	Y+20, r25	; 0x14
     852:	8b 8b       	std	Y+19, r24	; 0x13
     854:	8b 89       	ldd	r24, Y+19	; 0x13
     856:	9c 89       	ldd	r25, Y+20	; 0x14
     858:	98 8b       	std	Y+16, r25	; 0x10
     85a:	8f 87       	std	Y+15, r24	; 0x0f
     85c:	8f 85       	ldd	r24, Y+15	; 0x0f
     85e:	98 89       	ldd	r25, Y+16	; 0x10
     860:	01 97       	sbiw	r24, 0x01	; 1
     862:	f1 f7       	brne	.-4      	; 0x860 <functie4+0xfe>
     864:	98 8b       	std	Y+16, r25	; 0x10
     866:	8f 87       	std	Y+15, r24	; 0x0f
    _delay_ms(5);
    PORTC &= ~_BV(bochtPin);
     868:	a8 e2       	ldi	r26, 0x28	; 40
     86a:	b0 e0       	ldi	r27, 0x00	; 0
     86c:	e8 e2       	ldi	r30, 0x28	; 40
     86e:	f0 e0       	ldi	r31, 0x00	; 0
     870:	80 81       	ld	r24, Z
     872:	8f 7d       	andi	r24, 0xDF	; 223
     874:	8c 93       	st	X, r24

    for(int i = 0; i < 10; i++) //
     876:	1e 8e       	std	Y+30, r1	; 0x1e
     878:	1d 8e       	std	Y+29, r1	; 0x1d
     87a:	7d c0       	rjmp	.+250    	; 0x976 <__stack+0x77>
    {
        buzzer(350, 1000);
     87c:	8e e5       	ldi	r24, 0x5E	; 94
     87e:	91 e0       	ldi	r25, 0x01	; 1
     880:	68 ee       	ldi	r22, 0xE8	; 232
     882:	73 e0       	ldi	r23, 0x03	; 3
     884:	0e 94 9c 00 	call	0x138	; 0x138 <buzzer>
     888:	80 e0       	ldi	r24, 0x00	; 0
     88a:	90 e0       	ldi	r25, 0x00	; 0
     88c:	aa e7       	ldi	r26, 0x7A	; 122
     88e:	b3 e4       	ldi	r27, 0x43	; 67
     890:	8b 87       	std	Y+11, r24	; 0x0b
     892:	9c 87       	std	Y+12, r25	; 0x0c
     894:	ad 87       	std	Y+13, r26	; 0x0d
     896:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     898:	6b 85       	ldd	r22, Y+11	; 0x0b
     89a:	7c 85       	ldd	r23, Y+12	; 0x0c
     89c:	8d 85       	ldd	r24, Y+13	; 0x0d
     89e:	9e 85       	ldd	r25, Y+14	; 0x0e
     8a0:	20 e0       	ldi	r18, 0x00	; 0
     8a2:	30 e0       	ldi	r19, 0x00	; 0
     8a4:	4a e7       	ldi	r20, 0x7A	; 122
     8a6:	55 e4       	ldi	r21, 0x45	; 69
     8a8:	0e 94 a4 0a 	call	0x1548	; 0x1548 <__mulsf3>
     8ac:	dc 01       	movw	r26, r24
     8ae:	cb 01       	movw	r24, r22
     8b0:	8f 83       	std	Y+7, r24	; 0x07
     8b2:	98 87       	std	Y+8, r25	; 0x08
     8b4:	a9 87       	std	Y+9, r26	; 0x09
     8b6:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     8b8:	6f 81       	ldd	r22, Y+7	; 0x07
     8ba:	78 85       	ldd	r23, Y+8	; 0x08
     8bc:	89 85       	ldd	r24, Y+9	; 0x09
     8be:	9a 85       	ldd	r25, Y+10	; 0x0a
     8c0:	20 e0       	ldi	r18, 0x00	; 0
     8c2:	30 e0       	ldi	r19, 0x00	; 0
     8c4:	40 e8       	ldi	r20, 0x80	; 128
     8c6:	5f e3       	ldi	r21, 0x3F	; 63
     8c8:	0e 94 aa 0c 	call	0x1954	; 0x1954 <__ltsf2>
     8cc:	88 23       	and	r24, r24
     8ce:	2c f4       	brge	.+10     	; 0x8da <functie4+0x178>
		__ticks = 1;
     8d0:	81 e0       	ldi	r24, 0x01	; 1
     8d2:	90 e0       	ldi	r25, 0x00	; 0
     8d4:	9e 83       	std	Y+6, r25	; 0x06
     8d6:	8d 83       	std	Y+5, r24	; 0x05
     8d8:	3f c0       	rjmp	.+126    	; 0x958 <__stack+0x59>
	else if (__tmp > 65535)
     8da:	6f 81       	ldd	r22, Y+7	; 0x07
     8dc:	78 85       	ldd	r23, Y+8	; 0x08
     8de:	89 85       	ldd	r24, Y+9	; 0x09
     8e0:	9a 85       	ldd	r25, Y+10	; 0x0a
     8e2:	20 e0       	ldi	r18, 0x00	; 0
     8e4:	3f ef       	ldi	r19, 0xFF	; 255
     8e6:	4f e7       	ldi	r20, 0x7F	; 127
     8e8:	57 e4       	ldi	r21, 0x47	; 71
     8ea:	0e 94 4a 0c 	call	0x1894	; 0x1894 <__gtsf2>
     8ee:	18 16       	cp	r1, r24
     8f0:	4c f5       	brge	.+82     	; 0x944 <__stack+0x45>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     8f2:	6b 85       	ldd	r22, Y+11	; 0x0b
     8f4:	7c 85       	ldd	r23, Y+12	; 0x0c
     8f6:	8d 85       	ldd	r24, Y+13	; 0x0d
     8f8:	9e 85       	ldd	r25, Y+14	; 0x0e
     8fa:	20 e0       	ldi	r18, 0x00	; 0
     8fc:	30 e0       	ldi	r19, 0x00	; 0
     8fe:	40 e2       	ldi	r20, 0x20	; 32
     900:	51 e4       	ldi	r21, 0x41	; 65
     902:	0e 94 a4 0a 	call	0x1548	; 0x1548 <__mulsf3>
     906:	dc 01       	movw	r26, r24
     908:	cb 01       	movw	r24, r22
     90a:	bc 01       	movw	r22, r24
     90c:	cd 01       	movw	r24, r26
     90e:	0e 94 ce 08 	call	0x119c	; 0x119c <__fixunssfsi>
     912:	dc 01       	movw	r26, r24
     914:	cb 01       	movw	r24, r22
     916:	9e 83       	std	Y+6, r25	; 0x06
     918:	8d 83       	std	Y+5, r24	; 0x05
     91a:	0f c0       	rjmp	.+30     	; 0x93a <__stack+0x3b>
     91c:	80 e9       	ldi	r24, 0x90	; 144
     91e:	91 e0       	ldi	r25, 0x01	; 1
     920:	9c 83       	std	Y+4, r25	; 0x04
     922:	8b 83       	std	Y+3, r24	; 0x03
     924:	8b 81       	ldd	r24, Y+3	; 0x03
     926:	9c 81       	ldd	r25, Y+4	; 0x04
     928:	01 97       	sbiw	r24, 0x01	; 1
     92a:	f1 f7       	brne	.-4      	; 0x928 <__stack+0x29>
     92c:	9c 83       	std	Y+4, r25	; 0x04
     92e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     930:	8d 81       	ldd	r24, Y+5	; 0x05
     932:	9e 81       	ldd	r25, Y+6	; 0x06
     934:	01 97       	sbiw	r24, 0x01	; 1
     936:	9e 83       	std	Y+6, r25	; 0x06
     938:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     93a:	8d 81       	ldd	r24, Y+5	; 0x05
     93c:	9e 81       	ldd	r25, Y+6	; 0x06
     93e:	00 97       	sbiw	r24, 0x00	; 0
     940:	69 f7       	brne	.-38     	; 0x91c <__stack+0x1d>
     942:	14 c0       	rjmp	.+40     	; 0x96c <__stack+0x6d>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     944:	6f 81       	ldd	r22, Y+7	; 0x07
     946:	78 85       	ldd	r23, Y+8	; 0x08
     948:	89 85       	ldd	r24, Y+9	; 0x09
     94a:	9a 85       	ldd	r25, Y+10	; 0x0a
     94c:	0e 94 ce 08 	call	0x119c	; 0x119c <__fixunssfsi>
     950:	dc 01       	movw	r26, r24
     952:	cb 01       	movw	r24, r22
     954:	9e 83       	std	Y+6, r25	; 0x06
     956:	8d 83       	std	Y+5, r24	; 0x05
     958:	8d 81       	ldd	r24, Y+5	; 0x05
     95a:	9e 81       	ldd	r25, Y+6	; 0x06
     95c:	9a 83       	std	Y+2, r25	; 0x02
     95e:	89 83       	std	Y+1, r24	; 0x01
     960:	89 81       	ldd	r24, Y+1	; 0x01
     962:	9a 81       	ldd	r25, Y+2	; 0x02
     964:	01 97       	sbiw	r24, 0x01	; 1
     966:	f1 f7       	brne	.-4      	; 0x964 <__stack+0x65>
     968:	9a 83       	std	Y+2, r25	; 0x02
     96a:	89 83       	std	Y+1, r24	; 0x01
{
    PORTC |= _BV(bochtPin);
    _delay_ms(5);
    PORTC &= ~_BV(bochtPin);

    for(int i = 0; i < 10; i++) //
     96c:	8d 8d       	ldd	r24, Y+29	; 0x1d
     96e:	9e 8d       	ldd	r25, Y+30	; 0x1e
     970:	01 96       	adiw	r24, 0x01	; 1
     972:	9e 8f       	std	Y+30, r25	; 0x1e
     974:	8d 8f       	std	Y+29, r24	; 0x1d
     976:	8d 8d       	ldd	r24, Y+29	; 0x1d
     978:	9e 8d       	ldd	r25, Y+30	; 0x1e
     97a:	8a 30       	cpi	r24, 0x0A	; 10
     97c:	91 05       	cpc	r25, r1
     97e:	0c f4       	brge	.+2      	; 0x982 <__stack+0x83>
     980:	7d cf       	rjmp	.-262    	; 0x87c <functie4+0x11a>
    {
        buzzer(350, 1000);
        _delay_ms(250);
    }
}
     982:	6e 96       	adiw	r28, 0x1e	; 30
     984:	0f b6       	in	r0, 0x3f	; 63
     986:	f8 94       	cli
     988:	de bf       	out	0x3e, r29	; 62
     98a:	0f be       	out	0x3f, r0	; 63
     98c:	cd bf       	out	0x3d, r28	; 61
     98e:	cf 91       	pop	r28
     990:	df 91       	pop	r29
     992:	08 95       	ret

00000994 <functie5>:

void functie5 (void) //bochtR
{
     994:	df 93       	push	r29
     996:	cf 93       	push	r28
     998:	cd b7       	in	r28, 0x3d	; 61
     99a:	de b7       	in	r29, 0x3e	; 62
     99c:	6e 97       	sbiw	r28, 0x1e	; 30
     99e:	0f b6       	in	r0, 0x3f	; 63
     9a0:	f8 94       	cli
     9a2:	de bf       	out	0x3e, r29	; 62
     9a4:	0f be       	out	0x3f, r0	; 63
     9a6:	cd bf       	out	0x3d, r28	; 61
    PORTC |= _BV(bochtPinL);
     9a8:	a8 e2       	ldi	r26, 0x28	; 40
     9aa:	b0 e0       	ldi	r27, 0x00	; 0
     9ac:	e8 e2       	ldi	r30, 0x28	; 40
     9ae:	f0 e0       	ldi	r31, 0x00	; 0
     9b0:	80 81       	ld	r24, Z
     9b2:	88 60       	ori	r24, 0x08	; 8
     9b4:	8c 93       	st	X, r24
     9b6:	80 e0       	ldi	r24, 0x00	; 0
     9b8:	90 e0       	ldi	r25, 0x00	; 0
     9ba:	a0 ea       	ldi	r26, 0xA0	; 160
     9bc:	b0 e4       	ldi	r27, 0x40	; 64
     9be:	89 8f       	std	Y+25, r24	; 0x19
     9c0:	9a 8f       	std	Y+26, r25	; 0x1a
     9c2:	ab 8f       	std	Y+27, r26	; 0x1b
     9c4:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     9c6:	69 8d       	ldd	r22, Y+25	; 0x19
     9c8:	7a 8d       	ldd	r23, Y+26	; 0x1a
     9ca:	8b 8d       	ldd	r24, Y+27	; 0x1b
     9cc:	9c 8d       	ldd	r25, Y+28	; 0x1c
     9ce:	20 e0       	ldi	r18, 0x00	; 0
     9d0:	30 e0       	ldi	r19, 0x00	; 0
     9d2:	4a e7       	ldi	r20, 0x7A	; 122
     9d4:	55 e4       	ldi	r21, 0x45	; 69
     9d6:	0e 94 a4 0a 	call	0x1548	; 0x1548 <__mulsf3>
     9da:	dc 01       	movw	r26, r24
     9dc:	cb 01       	movw	r24, r22
     9de:	8d 8b       	std	Y+21, r24	; 0x15
     9e0:	9e 8b       	std	Y+22, r25	; 0x16
     9e2:	af 8b       	std	Y+23, r26	; 0x17
     9e4:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     9e6:	6d 89       	ldd	r22, Y+21	; 0x15
     9e8:	7e 89       	ldd	r23, Y+22	; 0x16
     9ea:	8f 89       	ldd	r24, Y+23	; 0x17
     9ec:	98 8d       	ldd	r25, Y+24	; 0x18
     9ee:	20 e0       	ldi	r18, 0x00	; 0
     9f0:	30 e0       	ldi	r19, 0x00	; 0
     9f2:	40 e8       	ldi	r20, 0x80	; 128
     9f4:	5f e3       	ldi	r21, 0x3F	; 63
     9f6:	0e 94 aa 0c 	call	0x1954	; 0x1954 <__ltsf2>
     9fa:	88 23       	and	r24, r24
     9fc:	2c f4       	brge	.+10     	; 0xa08 <functie5+0x74>
		__ticks = 1;
     9fe:	81 e0       	ldi	r24, 0x01	; 1
     a00:	90 e0       	ldi	r25, 0x00	; 0
     a02:	9c 8b       	std	Y+20, r25	; 0x14
     a04:	8b 8b       	std	Y+19, r24	; 0x13
     a06:	3f c0       	rjmp	.+126    	; 0xa86 <functie5+0xf2>
	else if (__tmp > 65535)
     a08:	6d 89       	ldd	r22, Y+21	; 0x15
     a0a:	7e 89       	ldd	r23, Y+22	; 0x16
     a0c:	8f 89       	ldd	r24, Y+23	; 0x17
     a0e:	98 8d       	ldd	r25, Y+24	; 0x18
     a10:	20 e0       	ldi	r18, 0x00	; 0
     a12:	3f ef       	ldi	r19, 0xFF	; 255
     a14:	4f e7       	ldi	r20, 0x7F	; 127
     a16:	57 e4       	ldi	r21, 0x47	; 71
     a18:	0e 94 4a 0c 	call	0x1894	; 0x1894 <__gtsf2>
     a1c:	18 16       	cp	r1, r24
     a1e:	4c f5       	brge	.+82     	; 0xa72 <functie5+0xde>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     a20:	69 8d       	ldd	r22, Y+25	; 0x19
     a22:	7a 8d       	ldd	r23, Y+26	; 0x1a
     a24:	8b 8d       	ldd	r24, Y+27	; 0x1b
     a26:	9c 8d       	ldd	r25, Y+28	; 0x1c
     a28:	20 e0       	ldi	r18, 0x00	; 0
     a2a:	30 e0       	ldi	r19, 0x00	; 0
     a2c:	40 e2       	ldi	r20, 0x20	; 32
     a2e:	51 e4       	ldi	r21, 0x41	; 65
     a30:	0e 94 a4 0a 	call	0x1548	; 0x1548 <__mulsf3>
     a34:	dc 01       	movw	r26, r24
     a36:	cb 01       	movw	r24, r22
     a38:	bc 01       	movw	r22, r24
     a3a:	cd 01       	movw	r24, r26
     a3c:	0e 94 ce 08 	call	0x119c	; 0x119c <__fixunssfsi>
     a40:	dc 01       	movw	r26, r24
     a42:	cb 01       	movw	r24, r22
     a44:	9c 8b       	std	Y+20, r25	; 0x14
     a46:	8b 8b       	std	Y+19, r24	; 0x13
     a48:	0f c0       	rjmp	.+30     	; 0xa68 <functie5+0xd4>
     a4a:	80 e9       	ldi	r24, 0x90	; 144
     a4c:	91 e0       	ldi	r25, 0x01	; 1
     a4e:	9a 8b       	std	Y+18, r25	; 0x12
     a50:	89 8b       	std	Y+17, r24	; 0x11
     a52:	89 89       	ldd	r24, Y+17	; 0x11
     a54:	9a 89       	ldd	r25, Y+18	; 0x12
     a56:	01 97       	sbiw	r24, 0x01	; 1
     a58:	f1 f7       	brne	.-4      	; 0xa56 <functie5+0xc2>
     a5a:	9a 8b       	std	Y+18, r25	; 0x12
     a5c:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     a5e:	8b 89       	ldd	r24, Y+19	; 0x13
     a60:	9c 89       	ldd	r25, Y+20	; 0x14
     a62:	01 97       	sbiw	r24, 0x01	; 1
     a64:	9c 8b       	std	Y+20, r25	; 0x14
     a66:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     a68:	8b 89       	ldd	r24, Y+19	; 0x13
     a6a:	9c 89       	ldd	r25, Y+20	; 0x14
     a6c:	00 97       	sbiw	r24, 0x00	; 0
     a6e:	69 f7       	brne	.-38     	; 0xa4a <functie5+0xb6>
     a70:	14 c0       	rjmp	.+40     	; 0xa9a <functie5+0x106>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     a72:	6d 89       	ldd	r22, Y+21	; 0x15
     a74:	7e 89       	ldd	r23, Y+22	; 0x16
     a76:	8f 89       	ldd	r24, Y+23	; 0x17
     a78:	98 8d       	ldd	r25, Y+24	; 0x18
     a7a:	0e 94 ce 08 	call	0x119c	; 0x119c <__fixunssfsi>
     a7e:	dc 01       	movw	r26, r24
     a80:	cb 01       	movw	r24, r22
     a82:	9c 8b       	std	Y+20, r25	; 0x14
     a84:	8b 8b       	std	Y+19, r24	; 0x13
     a86:	8b 89       	ldd	r24, Y+19	; 0x13
     a88:	9c 89       	ldd	r25, Y+20	; 0x14
     a8a:	98 8b       	std	Y+16, r25	; 0x10
     a8c:	8f 87       	std	Y+15, r24	; 0x0f
     a8e:	8f 85       	ldd	r24, Y+15	; 0x0f
     a90:	98 89       	ldd	r25, Y+16	; 0x10
     a92:	01 97       	sbiw	r24, 0x01	; 1
     a94:	f1 f7       	brne	.-4      	; 0xa92 <functie5+0xfe>
     a96:	98 8b       	std	Y+16, r25	; 0x10
     a98:	8f 87       	std	Y+15, r24	; 0x0f
    _delay_ms(5);
    PORTC &= ~_BV(bochtPinL);
     a9a:	a8 e2       	ldi	r26, 0x28	; 40
     a9c:	b0 e0       	ldi	r27, 0x00	; 0
     a9e:	e8 e2       	ldi	r30, 0x28	; 40
     aa0:	f0 e0       	ldi	r31, 0x00	; 0
     aa2:	80 81       	ld	r24, Z
     aa4:	87 7f       	andi	r24, 0xF7	; 247
     aa6:	8c 93       	st	X, r24

    for(int i = 0; i < 10; i++)
     aa8:	1e 8e       	std	Y+30, r1	; 0x1e
     aaa:	1d 8e       	std	Y+29, r1	; 0x1d
     aac:	7d c0       	rjmp	.+250    	; 0xba8 <functie5+0x214>
    {
        buzzer(350, 1000);
     aae:	8e e5       	ldi	r24, 0x5E	; 94
     ab0:	91 e0       	ldi	r25, 0x01	; 1
     ab2:	68 ee       	ldi	r22, 0xE8	; 232
     ab4:	73 e0       	ldi	r23, 0x03	; 3
     ab6:	0e 94 9c 00 	call	0x138	; 0x138 <buzzer>
     aba:	80 e0       	ldi	r24, 0x00	; 0
     abc:	90 e0       	ldi	r25, 0x00	; 0
     abe:	aa e7       	ldi	r26, 0x7A	; 122
     ac0:	b3 e4       	ldi	r27, 0x43	; 67
     ac2:	8b 87       	std	Y+11, r24	; 0x0b
     ac4:	9c 87       	std	Y+12, r25	; 0x0c
     ac6:	ad 87       	std	Y+13, r26	; 0x0d
     ac8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     aca:	6b 85       	ldd	r22, Y+11	; 0x0b
     acc:	7c 85       	ldd	r23, Y+12	; 0x0c
     ace:	8d 85       	ldd	r24, Y+13	; 0x0d
     ad0:	9e 85       	ldd	r25, Y+14	; 0x0e
     ad2:	20 e0       	ldi	r18, 0x00	; 0
     ad4:	30 e0       	ldi	r19, 0x00	; 0
     ad6:	4a e7       	ldi	r20, 0x7A	; 122
     ad8:	55 e4       	ldi	r21, 0x45	; 69
     ada:	0e 94 a4 0a 	call	0x1548	; 0x1548 <__mulsf3>
     ade:	dc 01       	movw	r26, r24
     ae0:	cb 01       	movw	r24, r22
     ae2:	8f 83       	std	Y+7, r24	; 0x07
     ae4:	98 87       	std	Y+8, r25	; 0x08
     ae6:	a9 87       	std	Y+9, r26	; 0x09
     ae8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     aea:	6f 81       	ldd	r22, Y+7	; 0x07
     aec:	78 85       	ldd	r23, Y+8	; 0x08
     aee:	89 85       	ldd	r24, Y+9	; 0x09
     af0:	9a 85       	ldd	r25, Y+10	; 0x0a
     af2:	20 e0       	ldi	r18, 0x00	; 0
     af4:	30 e0       	ldi	r19, 0x00	; 0
     af6:	40 e8       	ldi	r20, 0x80	; 128
     af8:	5f e3       	ldi	r21, 0x3F	; 63
     afa:	0e 94 aa 0c 	call	0x1954	; 0x1954 <__ltsf2>
     afe:	88 23       	and	r24, r24
     b00:	2c f4       	brge	.+10     	; 0xb0c <functie5+0x178>
		__ticks = 1;
     b02:	81 e0       	ldi	r24, 0x01	; 1
     b04:	90 e0       	ldi	r25, 0x00	; 0
     b06:	9e 83       	std	Y+6, r25	; 0x06
     b08:	8d 83       	std	Y+5, r24	; 0x05
     b0a:	3f c0       	rjmp	.+126    	; 0xb8a <functie5+0x1f6>
	else if (__tmp > 65535)
     b0c:	6f 81       	ldd	r22, Y+7	; 0x07
     b0e:	78 85       	ldd	r23, Y+8	; 0x08
     b10:	89 85       	ldd	r24, Y+9	; 0x09
     b12:	9a 85       	ldd	r25, Y+10	; 0x0a
     b14:	20 e0       	ldi	r18, 0x00	; 0
     b16:	3f ef       	ldi	r19, 0xFF	; 255
     b18:	4f e7       	ldi	r20, 0x7F	; 127
     b1a:	57 e4       	ldi	r21, 0x47	; 71
     b1c:	0e 94 4a 0c 	call	0x1894	; 0x1894 <__gtsf2>
     b20:	18 16       	cp	r1, r24
     b22:	4c f5       	brge	.+82     	; 0xb76 <functie5+0x1e2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     b24:	6b 85       	ldd	r22, Y+11	; 0x0b
     b26:	7c 85       	ldd	r23, Y+12	; 0x0c
     b28:	8d 85       	ldd	r24, Y+13	; 0x0d
     b2a:	9e 85       	ldd	r25, Y+14	; 0x0e
     b2c:	20 e0       	ldi	r18, 0x00	; 0
     b2e:	30 e0       	ldi	r19, 0x00	; 0
     b30:	40 e2       	ldi	r20, 0x20	; 32
     b32:	51 e4       	ldi	r21, 0x41	; 65
     b34:	0e 94 a4 0a 	call	0x1548	; 0x1548 <__mulsf3>
     b38:	dc 01       	movw	r26, r24
     b3a:	cb 01       	movw	r24, r22
     b3c:	bc 01       	movw	r22, r24
     b3e:	cd 01       	movw	r24, r26
     b40:	0e 94 ce 08 	call	0x119c	; 0x119c <__fixunssfsi>
     b44:	dc 01       	movw	r26, r24
     b46:	cb 01       	movw	r24, r22
     b48:	9e 83       	std	Y+6, r25	; 0x06
     b4a:	8d 83       	std	Y+5, r24	; 0x05
     b4c:	0f c0       	rjmp	.+30     	; 0xb6c <functie5+0x1d8>
     b4e:	80 e9       	ldi	r24, 0x90	; 144
     b50:	91 e0       	ldi	r25, 0x01	; 1
     b52:	9c 83       	std	Y+4, r25	; 0x04
     b54:	8b 83       	std	Y+3, r24	; 0x03
     b56:	8b 81       	ldd	r24, Y+3	; 0x03
     b58:	9c 81       	ldd	r25, Y+4	; 0x04
     b5a:	01 97       	sbiw	r24, 0x01	; 1
     b5c:	f1 f7       	brne	.-4      	; 0xb5a <functie5+0x1c6>
     b5e:	9c 83       	std	Y+4, r25	; 0x04
     b60:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     b62:	8d 81       	ldd	r24, Y+5	; 0x05
     b64:	9e 81       	ldd	r25, Y+6	; 0x06
     b66:	01 97       	sbiw	r24, 0x01	; 1
     b68:	9e 83       	std	Y+6, r25	; 0x06
     b6a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     b6c:	8d 81       	ldd	r24, Y+5	; 0x05
     b6e:	9e 81       	ldd	r25, Y+6	; 0x06
     b70:	00 97       	sbiw	r24, 0x00	; 0
     b72:	69 f7       	brne	.-38     	; 0xb4e <functie5+0x1ba>
     b74:	14 c0       	rjmp	.+40     	; 0xb9e <functie5+0x20a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     b76:	6f 81       	ldd	r22, Y+7	; 0x07
     b78:	78 85       	ldd	r23, Y+8	; 0x08
     b7a:	89 85       	ldd	r24, Y+9	; 0x09
     b7c:	9a 85       	ldd	r25, Y+10	; 0x0a
     b7e:	0e 94 ce 08 	call	0x119c	; 0x119c <__fixunssfsi>
     b82:	dc 01       	movw	r26, r24
     b84:	cb 01       	movw	r24, r22
     b86:	9e 83       	std	Y+6, r25	; 0x06
     b88:	8d 83       	std	Y+5, r24	; 0x05
     b8a:	8d 81       	ldd	r24, Y+5	; 0x05
     b8c:	9e 81       	ldd	r25, Y+6	; 0x06
     b8e:	9a 83       	std	Y+2, r25	; 0x02
     b90:	89 83       	std	Y+1, r24	; 0x01
     b92:	89 81       	ldd	r24, Y+1	; 0x01
     b94:	9a 81       	ldd	r25, Y+2	; 0x02
     b96:	01 97       	sbiw	r24, 0x01	; 1
     b98:	f1 f7       	brne	.-4      	; 0xb96 <functie5+0x202>
     b9a:	9a 83       	std	Y+2, r25	; 0x02
     b9c:	89 83       	std	Y+1, r24	; 0x01
{
    PORTC |= _BV(bochtPinL);
    _delay_ms(5);
    PORTC &= ~_BV(bochtPinL);

    for(int i = 0; i < 10; i++)
     b9e:	8d 8d       	ldd	r24, Y+29	; 0x1d
     ba0:	9e 8d       	ldd	r25, Y+30	; 0x1e
     ba2:	01 96       	adiw	r24, 0x01	; 1
     ba4:	9e 8f       	std	Y+30, r25	; 0x1e
     ba6:	8d 8f       	std	Y+29, r24	; 0x1d
     ba8:	8d 8d       	ldd	r24, Y+29	; 0x1d
     baa:	9e 8d       	ldd	r25, Y+30	; 0x1e
     bac:	8a 30       	cpi	r24, 0x0A	; 10
     bae:	91 05       	cpc	r25, r1
     bb0:	0c f4       	brge	.+2      	; 0xbb4 <functie5+0x220>
     bb2:	7d cf       	rjmp	.-262    	; 0xaae <functie5+0x11a>
    {
        buzzer(350, 1000);
        _delay_ms(250);
    }
}
     bb4:	6e 96       	adiw	r28, 0x1e	; 30
     bb6:	0f b6       	in	r0, 0x3f	; 63
     bb8:	f8 94       	cli
     bba:	de bf       	out	0x3e, r29	; 62
     bbc:	0f be       	out	0x3f, r0	; 63
     bbe:	cd bf       	out	0x3d, r28	; 61
     bc0:	cf 91       	pop	r28
     bc2:	df 91       	pop	r29
     bc4:	08 95       	ret

00000bc6 <ultrasoneAfstand>:

int ultrasoneAfstand(void)
{
     bc6:	ef 92       	push	r14
     bc8:	ff 92       	push	r15
     bca:	0f 93       	push	r16
     bcc:	1f 93       	push	r17
     bce:	df 93       	push	r29
     bd0:	cf 93       	push	r28
     bd2:	cd b7       	in	r28, 0x3d	; 61
     bd4:	de b7       	in	r29, 0x3e	; 62
     bd6:	a0 97       	sbiw	r28, 0x20	; 32
     bd8:	0f b6       	in	r0, 0x3f	; 63
     bda:	f8 94       	cli
     bdc:	de bf       	out	0x3e, r29	; 62
     bde:	0f be       	out	0x3f, r0	; 63
     be0:	cd bf       	out	0x3d, r28	; 61

    long count;
	double distance;

    PORTD |= (1<<trig);
     be2:	ab e2       	ldi	r26, 0x2B	; 43
     be4:	b0 e0       	ldi	r27, 0x00	; 0
     be6:	eb e2       	ldi	r30, 0x2B	; 43
     be8:	f0 e0       	ldi	r31, 0x00	; 0
     bea:	80 81       	ld	r24, Z
     bec:	81 60       	ori	r24, 0x01	; 1
     bee:	8c 93       	st	X, r24
     bf0:	80 e0       	ldi	r24, 0x00	; 0
     bf2:	90 e0       	ldi	r25, 0x00	; 0
     bf4:	a0 e2       	ldi	r26, 0x20	; 32
     bf6:	b1 e4       	ldi	r27, 0x41	; 65
     bf8:	8d 8b       	std	Y+21, r24	; 0x15
     bfa:	9e 8b       	std	Y+22, r25	; 0x16
     bfc:	af 8b       	std	Y+23, r26	; 0x17
     bfe:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     c00:	6d 89       	ldd	r22, Y+21	; 0x15
     c02:	7e 89       	ldd	r23, Y+22	; 0x16
     c04:	8f 89       	ldd	r24, Y+23	; 0x17
     c06:	98 8d       	ldd	r25, Y+24	; 0x18
     c08:	2b ea       	ldi	r18, 0xAB	; 171
     c0a:	3a ea       	ldi	r19, 0xAA	; 170
     c0c:	4a ea       	ldi	r20, 0xAA	; 170
     c0e:	50 e4       	ldi	r21, 0x40	; 64
     c10:	0e 94 a4 0a 	call	0x1548	; 0x1548 <__mulsf3>
     c14:	dc 01       	movw	r26, r24
     c16:	cb 01       	movw	r24, r22
     c18:	89 8b       	std	Y+17, r24	; 0x11
     c1a:	9a 8b       	std	Y+18, r25	; 0x12
     c1c:	ab 8b       	std	Y+19, r26	; 0x13
     c1e:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
     c20:	69 89       	ldd	r22, Y+17	; 0x11
     c22:	7a 89       	ldd	r23, Y+18	; 0x12
     c24:	8b 89       	ldd	r24, Y+19	; 0x13
     c26:	9c 89       	ldd	r25, Y+20	; 0x14
     c28:	20 e0       	ldi	r18, 0x00	; 0
     c2a:	30 e0       	ldi	r19, 0x00	; 0
     c2c:	40 e8       	ldi	r20, 0x80	; 128
     c2e:	5f e3       	ldi	r21, 0x3F	; 63
     c30:	0e 94 aa 0c 	call	0x1954	; 0x1954 <__ltsf2>
     c34:	88 23       	and	r24, r24
     c36:	1c f4       	brge	.+6      	; 0xc3e <ultrasoneAfstand+0x78>
		__ticks = 1;
     c38:	81 e0       	ldi	r24, 0x01	; 1
     c3a:	88 8b       	std	Y+16, r24	; 0x10
     c3c:	91 c0       	rjmp	.+290    	; 0xd60 <ultrasoneAfstand+0x19a>
	else if (__tmp > 255)
     c3e:	69 89       	ldd	r22, Y+17	; 0x11
     c40:	7a 89       	ldd	r23, Y+18	; 0x12
     c42:	8b 89       	ldd	r24, Y+19	; 0x13
     c44:	9c 89       	ldd	r25, Y+20	; 0x14
     c46:	20 e0       	ldi	r18, 0x00	; 0
     c48:	30 e0       	ldi	r19, 0x00	; 0
     c4a:	4f e7       	ldi	r20, 0x7F	; 127
     c4c:	53 e4       	ldi	r21, 0x43	; 67
     c4e:	0e 94 4a 0c 	call	0x1894	; 0x1894 <__gtsf2>
     c52:	18 16       	cp	r1, r24
     c54:	0c f0       	brlt	.+2      	; 0xc58 <ultrasoneAfstand+0x92>
     c56:	7b c0       	rjmp	.+246    	; 0xd4e <ultrasoneAfstand+0x188>
	{
		_delay_ms(__us / 1000.0);
     c58:	6d 89       	ldd	r22, Y+21	; 0x15
     c5a:	7e 89       	ldd	r23, Y+22	; 0x16
     c5c:	8f 89       	ldd	r24, Y+23	; 0x17
     c5e:	98 8d       	ldd	r25, Y+24	; 0x18
     c60:	20 e0       	ldi	r18, 0x00	; 0
     c62:	30 e0       	ldi	r19, 0x00	; 0
     c64:	4a e7       	ldi	r20, 0x7A	; 122
     c66:	54 e4       	ldi	r21, 0x44	; 68
     c68:	0e 94 9e 0b 	call	0x173c	; 0x173c <__divsf3>
     c6c:	dc 01       	movw	r26, r24
     c6e:	cb 01       	movw	r24, r22
     c70:	8c 87       	std	Y+12, r24	; 0x0c
     c72:	9d 87       	std	Y+13, r25	; 0x0d
     c74:	ae 87       	std	Y+14, r26	; 0x0e
     c76:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     c78:	6c 85       	ldd	r22, Y+12	; 0x0c
     c7a:	7d 85       	ldd	r23, Y+13	; 0x0d
     c7c:	8e 85       	ldd	r24, Y+14	; 0x0e
     c7e:	9f 85       	ldd	r25, Y+15	; 0x0f
     c80:	20 e0       	ldi	r18, 0x00	; 0
     c82:	30 e0       	ldi	r19, 0x00	; 0
     c84:	4a e7       	ldi	r20, 0x7A	; 122
     c86:	55 e4       	ldi	r21, 0x45	; 69
     c88:	0e 94 a4 0a 	call	0x1548	; 0x1548 <__mulsf3>
     c8c:	dc 01       	movw	r26, r24
     c8e:	cb 01       	movw	r24, r22
     c90:	88 87       	std	Y+8, r24	; 0x08
     c92:	99 87       	std	Y+9, r25	; 0x09
     c94:	aa 87       	std	Y+10, r26	; 0x0a
     c96:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
     c98:	68 85       	ldd	r22, Y+8	; 0x08
     c9a:	79 85       	ldd	r23, Y+9	; 0x09
     c9c:	8a 85       	ldd	r24, Y+10	; 0x0a
     c9e:	9b 85       	ldd	r25, Y+11	; 0x0b
     ca0:	20 e0       	ldi	r18, 0x00	; 0
     ca2:	30 e0       	ldi	r19, 0x00	; 0
     ca4:	40 e8       	ldi	r20, 0x80	; 128
     ca6:	5f e3       	ldi	r21, 0x3F	; 63
     ca8:	0e 94 aa 0c 	call	0x1954	; 0x1954 <__ltsf2>
     cac:	88 23       	and	r24, r24
     cae:	2c f4       	brge	.+10     	; 0xcba <ultrasoneAfstand+0xf4>
		__ticks = 1;
     cb0:	81 e0       	ldi	r24, 0x01	; 1
     cb2:	90 e0       	ldi	r25, 0x00	; 0
     cb4:	9f 83       	std	Y+7, r25	; 0x07
     cb6:	8e 83       	std	Y+6, r24	; 0x06
     cb8:	3f c0       	rjmp	.+126    	; 0xd38 <ultrasoneAfstand+0x172>
	else if (__tmp > 65535)
     cba:	68 85       	ldd	r22, Y+8	; 0x08
     cbc:	79 85       	ldd	r23, Y+9	; 0x09
     cbe:	8a 85       	ldd	r24, Y+10	; 0x0a
     cc0:	9b 85       	ldd	r25, Y+11	; 0x0b
     cc2:	20 e0       	ldi	r18, 0x00	; 0
     cc4:	3f ef       	ldi	r19, 0xFF	; 255
     cc6:	4f e7       	ldi	r20, 0x7F	; 127
     cc8:	57 e4       	ldi	r21, 0x47	; 71
     cca:	0e 94 4a 0c 	call	0x1894	; 0x1894 <__gtsf2>
     cce:	18 16       	cp	r1, r24
     cd0:	4c f5       	brge	.+82     	; 0xd24 <ultrasoneAfstand+0x15e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     cd2:	6c 85       	ldd	r22, Y+12	; 0x0c
     cd4:	7d 85       	ldd	r23, Y+13	; 0x0d
     cd6:	8e 85       	ldd	r24, Y+14	; 0x0e
     cd8:	9f 85       	ldd	r25, Y+15	; 0x0f
     cda:	20 e0       	ldi	r18, 0x00	; 0
     cdc:	30 e0       	ldi	r19, 0x00	; 0
     cde:	40 e2       	ldi	r20, 0x20	; 32
     ce0:	51 e4       	ldi	r21, 0x41	; 65
     ce2:	0e 94 a4 0a 	call	0x1548	; 0x1548 <__mulsf3>
     ce6:	dc 01       	movw	r26, r24
     ce8:	cb 01       	movw	r24, r22
     cea:	bc 01       	movw	r22, r24
     cec:	cd 01       	movw	r24, r26
     cee:	0e 94 ce 08 	call	0x119c	; 0x119c <__fixunssfsi>
     cf2:	dc 01       	movw	r26, r24
     cf4:	cb 01       	movw	r24, r22
     cf6:	9f 83       	std	Y+7, r25	; 0x07
     cf8:	8e 83       	std	Y+6, r24	; 0x06
     cfa:	0f c0       	rjmp	.+30     	; 0xd1a <ultrasoneAfstand+0x154>
     cfc:	80 e9       	ldi	r24, 0x90	; 144
     cfe:	91 e0       	ldi	r25, 0x01	; 1
     d00:	9d 83       	std	Y+5, r25	; 0x05
     d02:	8c 83       	std	Y+4, r24	; 0x04
     d04:	8c 81       	ldd	r24, Y+4	; 0x04
     d06:	9d 81       	ldd	r25, Y+5	; 0x05
     d08:	01 97       	sbiw	r24, 0x01	; 1
     d0a:	f1 f7       	brne	.-4      	; 0xd08 <ultrasoneAfstand+0x142>
     d0c:	9d 83       	std	Y+5, r25	; 0x05
     d0e:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     d10:	8e 81       	ldd	r24, Y+6	; 0x06
     d12:	9f 81       	ldd	r25, Y+7	; 0x07
     d14:	01 97       	sbiw	r24, 0x01	; 1
     d16:	9f 83       	std	Y+7, r25	; 0x07
     d18:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     d1a:	8e 81       	ldd	r24, Y+6	; 0x06
     d1c:	9f 81       	ldd	r25, Y+7	; 0x07
     d1e:	00 97       	sbiw	r24, 0x00	; 0
     d20:	69 f7       	brne	.-38     	; 0xcfc <ultrasoneAfstand+0x136>
     d22:	24 c0       	rjmp	.+72     	; 0xd6c <ultrasoneAfstand+0x1a6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     d24:	68 85       	ldd	r22, Y+8	; 0x08
     d26:	79 85       	ldd	r23, Y+9	; 0x09
     d28:	8a 85       	ldd	r24, Y+10	; 0x0a
     d2a:	9b 85       	ldd	r25, Y+11	; 0x0b
     d2c:	0e 94 ce 08 	call	0x119c	; 0x119c <__fixunssfsi>
     d30:	dc 01       	movw	r26, r24
     d32:	cb 01       	movw	r24, r22
     d34:	9f 83       	std	Y+7, r25	; 0x07
     d36:	8e 83       	std	Y+6, r24	; 0x06
     d38:	8e 81       	ldd	r24, Y+6	; 0x06
     d3a:	9f 81       	ldd	r25, Y+7	; 0x07
     d3c:	9b 83       	std	Y+3, r25	; 0x03
     d3e:	8a 83       	std	Y+2, r24	; 0x02
     d40:	8a 81       	ldd	r24, Y+2	; 0x02
     d42:	9b 81       	ldd	r25, Y+3	; 0x03
     d44:	01 97       	sbiw	r24, 0x01	; 1
     d46:	f1 f7       	brne	.-4      	; 0xd44 <ultrasoneAfstand+0x17e>
     d48:	9b 83       	std	Y+3, r25	; 0x03
     d4a:	8a 83       	std	Y+2, r24	; 0x02
     d4c:	0f c0       	rjmp	.+30     	; 0xd6c <ultrasoneAfstand+0x1a6>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     d4e:	69 89       	ldd	r22, Y+17	; 0x11
     d50:	7a 89       	ldd	r23, Y+18	; 0x12
     d52:	8b 89       	ldd	r24, Y+19	; 0x13
     d54:	9c 89       	ldd	r25, Y+20	; 0x14
     d56:	0e 94 ce 08 	call	0x119c	; 0x119c <__fixunssfsi>
     d5a:	dc 01       	movw	r26, r24
     d5c:	cb 01       	movw	r24, r22
     d5e:	88 8b       	std	Y+16, r24	; 0x10
     d60:	88 89       	ldd	r24, Y+16	; 0x10
     d62:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     d64:	89 81       	ldd	r24, Y+1	; 0x01
     d66:	8a 95       	dec	r24
     d68:	f1 f7       	brne	.-4      	; 0xd66 <ultrasoneAfstand+0x1a0>
     d6a:	89 83       	std	Y+1, r24	; 0x01
    _delay_us (10);
    PORTD &= ~(1<<trig);
     d6c:	ab e2       	ldi	r26, 0x2B	; 43
     d6e:	b0 e0       	ldi	r27, 0x00	; 0
     d70:	eb e2       	ldi	r30, 0x2B	; 43
     d72:	f0 e0       	ldi	r31, 0x00	; 0
     d74:	80 81       	ld	r24, Z
     d76:	8e 7f       	andi	r24, 0xFE	; 254
     d78:	8c 93       	st	X, r24
    TCNT1 = 0;
     d7a:	e4 e8       	ldi	r30, 0x84	; 132
     d7c:	f0 e0       	ldi	r31, 0x00	; 0
     d7e:	11 82       	std	Z+1, r1	; 0x01
     d80:	10 82       	st	Z, r1
    timer = 0;
     d82:	10 92 0a 02 	sts	0x020A, r1
     d86:	10 92 0b 02 	sts	0x020B, r1
     d8a:	10 92 0c 02 	sts	0x020C, r1
     d8e:	10 92 0d 02 	sts	0x020D, r1
    TIFR1 = 1<<ICF1;
     d92:	e6 e3       	ldi	r30, 0x36	; 54
     d94:	f0 e0       	ldi	r31, 0x00	; 0
     d96:	80 e2       	ldi	r24, 0x20	; 32
     d98:	80 83       	st	Z, r24
    TIFR1 = 1<<TOV1;
     d9a:	e6 e3       	ldi	r30, 0x36	; 54
     d9c:	f0 e0       	ldi	r31, 0x00	; 0
     d9e:	81 e0       	ldi	r24, 0x01	; 1
     da0:	80 83       	st	Z, r24
    TCCR1B = 0x41;
     da2:	e1 e8       	ldi	r30, 0x81	; 129
     da4:	f0 e0       	ldi	r31, 0x00	; 0
     da6:	81 e4       	ldi	r24, 0x41	; 65
     da8:	80 83       	st	Z, r24

    while ((TIFR1 & (1 << ICF1)) == 0);/* Wait for rising edge */
     daa:	e6 e3       	ldi	r30, 0x36	; 54
     dac:	f0 e0       	ldi	r31, 0x00	; 0
     dae:	80 81       	ld	r24, Z
     db0:	88 2f       	mov	r24, r24
     db2:	90 e0       	ldi	r25, 0x00	; 0
     db4:	80 72       	andi	r24, 0x20	; 32
     db6:	90 70       	andi	r25, 0x00	; 0
     db8:	00 97       	sbiw	r24, 0x00	; 0
     dba:	b9 f3       	breq	.-18     	; 0xdaa <ultrasoneAfstand+0x1e4>
		TCNT1 = 0;	/* Clear Timer counter */
     dbc:	e4 e8       	ldi	r30, 0x84	; 132
     dbe:	f0 e0       	ldi	r31, 0x00	; 0
     dc0:	11 82       	std	Z+1, r1	; 0x01
     dc2:	10 82       	st	Z, r1
		TCCR1B = 0x01;	/* Capture on falling edge, No prescaler */
     dc4:	e1 e8       	ldi	r30, 0x81	; 129
     dc6:	f0 e0       	ldi	r31, 0x00	; 0
     dc8:	81 e0       	ldi	r24, 0x01	; 1
     dca:	80 83       	st	Z, r24
		TIFR1 = 1<<ICF1;	/* Clear ICP flag (Input Capture flag) */
     dcc:	e6 e3       	ldi	r30, 0x36	; 54
     dce:	f0 e0       	ldi	r31, 0x00	; 0
     dd0:	80 e2       	ldi	r24, 0x20	; 32
     dd2:	80 83       	st	Z, r24
		TIFR1 = 1<<TOV1;	/* Clear Timer Overflow flag */
     dd4:	e6 e3       	ldi	r30, 0x36	; 54
     dd6:	f0 e0       	ldi	r31, 0x00	; 0
     dd8:	81 e0       	ldi	r24, 0x01	; 1
     dda:	80 83       	st	Z, r24
		timer = 0;/* Clear Timer overflow count */
     ddc:	10 92 0a 02 	sts	0x020A, r1
     de0:	10 92 0b 02 	sts	0x020B, r1
     de4:	10 92 0c 02 	sts	0x020C, r1
     de8:	10 92 0d 02 	sts	0x020D, r1

    while ((TIFR1 & (1 << ICF1)) == 0);/* Wait for falling edge */
     dec:	e6 e3       	ldi	r30, 0x36	; 54
     dee:	f0 e0       	ldi	r31, 0x00	; 0
     df0:	80 81       	ld	r24, Z
     df2:	88 2f       	mov	r24, r24
     df4:	90 e0       	ldi	r25, 0x00	; 0
     df6:	80 72       	andi	r24, 0x20	; 32
     df8:	90 70       	andi	r25, 0x00	; 0
     dfa:	00 97       	sbiw	r24, 0x00	; 0
     dfc:	b9 f3       	breq	.-18     	; 0xdec <ultrasoneAfstand+0x226>
		count = ICR1 + (65535 * timer);	/* Take count */
     dfe:	e6 e8       	ldi	r30, 0x86	; 134
     e00:	f0 e0       	ldi	r31, 0x00	; 0
     e02:	80 81       	ld	r24, Z
     e04:	91 81       	ldd	r25, Z+1	; 0x01
     e06:	7c 01       	movw	r14, r24
     e08:	00 e0       	ldi	r16, 0x00	; 0
     e0a:	10 e0       	ldi	r17, 0x00	; 0
     e0c:	80 91 0a 02 	lds	r24, 0x020A
     e10:	90 91 0b 02 	lds	r25, 0x020B
     e14:	a0 91 0c 02 	lds	r26, 0x020C
     e18:	b0 91 0d 02 	lds	r27, 0x020D
     e1c:	2f ef       	ldi	r18, 0xFF	; 255
     e1e:	3f ef       	ldi	r19, 0xFF	; 255
     e20:	40 e0       	ldi	r20, 0x00	; 0
     e22:	50 e0       	ldi	r21, 0x00	; 0
     e24:	bc 01       	movw	r22, r24
     e26:	cd 01       	movw	r24, r26
     e28:	0e 94 81 0f 	call	0x1f02	; 0x1f02 <__mulsi3>
     e2c:	dc 01       	movw	r26, r24
     e2e:	cb 01       	movw	r24, r22
     e30:	8e 0d       	add	r24, r14
     e32:	9f 1d       	adc	r25, r15
     e34:	a0 1f       	adc	r26, r16
     e36:	b1 1f       	adc	r27, r17
     e38:	8d 8f       	std	Y+29, r24	; 0x1d
     e3a:	9e 8f       	std	Y+30, r25	; 0x1e
     e3c:	af 8f       	std	Y+31, r26	; 0x1f
     e3e:	b8 a3       	std	Y+32, r27	; 0x20
		/* 16MHz Timer freq, sound speed =343 m/s */
		distance = (double)count / 93.294; // in cm
     e40:	6d 8d       	ldd	r22, Y+29	; 0x1d
     e42:	7e 8d       	ldd	r23, Y+30	; 0x1e
     e44:	8f 8d       	ldd	r24, Y+31	; 0x1f
     e46:	98 a1       	ldd	r25, Y+32	; 0x20
     e48:	0e 94 da 0c 	call	0x19b4	; 0x19b4 <__floatsisf>
     e4c:	dc 01       	movw	r26, r24
     e4e:	cb 01       	movw	r24, r22
     e50:	bc 01       	movw	r22, r24
     e52:	cd 01       	movw	r24, r26
     e54:	27 e8       	ldi	r18, 0x87	; 135
     e56:	36 e9       	ldi	r19, 0x96	; 150
     e58:	4a eb       	ldi	r20, 0xBA	; 186
     e5a:	52 e4       	ldi	r21, 0x42	; 66
     e5c:	0e 94 9e 0b 	call	0x173c	; 0x173c <__divsf3>
     e60:	dc 01       	movw	r26, r24
     e62:	cb 01       	movw	r24, r22
     e64:	89 8f       	std	Y+25, r24	; 0x19
     e66:	9a 8f       	std	Y+26, r25	; 0x1a
     e68:	ab 8f       	std	Y+27, r26	; 0x1b
     e6a:	bc 8f       	std	Y+28, r27	; 0x1c
    return(distance);
     e6c:	69 8d       	ldd	r22, Y+25	; 0x19
     e6e:	7a 8d       	ldd	r23, Y+26	; 0x1a
     e70:	8b 8d       	ldd	r24, Y+27	; 0x1b
     e72:	9c 8d       	ldd	r25, Y+28	; 0x1c
     e74:	0e 94 38 0d 	call	0x1a70	; 0x1a70 <__fixsfsi>
     e78:	dc 01       	movw	r26, r24
     e7a:	cb 01       	movw	r24, r22
}
     e7c:	a0 96       	adiw	r28, 0x20	; 32
     e7e:	0f b6       	in	r0, 0x3f	; 63
     e80:	f8 94       	cli
     e82:	de bf       	out	0x3e, r29	; 62
     e84:	0f be       	out	0x3f, r0	; 63
     e86:	cd bf       	out	0x3d, r28	; 61
     e88:	cf 91       	pop	r28
     e8a:	df 91       	pop	r29
     e8c:	1f 91       	pop	r17
     e8e:	0f 91       	pop	r16
     e90:	ff 90       	pop	r15
     e92:	ef 90       	pop	r14
     e94:	08 95       	ret

00000e96 <main>:


int main(void)
{
     e96:	df 93       	push	r29
     e98:	cf 93       	push	r28
     e9a:	cd b7       	in	r28, 0x3d	; 61
     e9c:	de b7       	in	r29, 0x3e	; 62
     e9e:	aa 97       	sbiw	r28, 0x2a	; 42
     ea0:	0f b6       	in	r0, 0x3f	; 63
     ea2:	f8 94       	cli
     ea4:	de bf       	out	0x3e, r29	; 62
     ea6:	0f be       	out	0x3f, r0	; 63
     ea8:	cd bf       	out	0x3d, r28	; 61
    init();
     eaa:	0e 94 53 00 	call	0xa6	; 0xa6 <init>

    while(1)
    {


        if(ultrasoneAfstand() < 150) //eerste meting, minder precies
     eae:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <ultrasoneAfstand>
     eb2:	86 39       	cpi	r24, 0x96	; 150
     eb4:	91 05       	cpc	r25, r1
     eb6:	dc f7       	brge	.-10     	; 0xeae <main+0x18>
     eb8:	80 e0       	ldi	r24, 0x00	; 0
     eba:	90 e0       	ldi	r25, 0x00	; 0
     ebc:	a8 ec       	ldi	r26, 0xC8	; 200
     ebe:	b1 e4       	ldi	r27, 0x41	; 65
     ec0:	8f a3       	std	Y+39, r24	; 0x27
     ec2:	98 a7       	std	Y+40, r25	; 0x28
     ec4:	a9 a7       	std	Y+41, r26	; 0x29
     ec6:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     ec8:	6f a1       	ldd	r22, Y+39	; 0x27
     eca:	78 a5       	ldd	r23, Y+40	; 0x28
     ecc:	89 a5       	ldd	r24, Y+41	; 0x29
     ece:	9a a5       	ldd	r25, Y+42	; 0x2a
     ed0:	20 e0       	ldi	r18, 0x00	; 0
     ed2:	30 e0       	ldi	r19, 0x00	; 0
     ed4:	4a e7       	ldi	r20, 0x7A	; 122
     ed6:	55 e4       	ldi	r21, 0x45	; 69
     ed8:	0e 94 a4 0a 	call	0x1548	; 0x1548 <__mulsf3>
     edc:	dc 01       	movw	r26, r24
     ede:	cb 01       	movw	r24, r22
     ee0:	8b a3       	std	Y+35, r24	; 0x23
     ee2:	9c a3       	std	Y+36, r25	; 0x24
     ee4:	ad a3       	std	Y+37, r26	; 0x25
     ee6:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     ee8:	6b a1       	ldd	r22, Y+35	; 0x23
     eea:	7c a1       	ldd	r23, Y+36	; 0x24
     eec:	8d a1       	ldd	r24, Y+37	; 0x25
     eee:	9e a1       	ldd	r25, Y+38	; 0x26
     ef0:	20 e0       	ldi	r18, 0x00	; 0
     ef2:	30 e0       	ldi	r19, 0x00	; 0
     ef4:	40 e8       	ldi	r20, 0x80	; 128
     ef6:	5f e3       	ldi	r21, 0x3F	; 63
     ef8:	0e 94 aa 0c 	call	0x1954	; 0x1954 <__ltsf2>
     efc:	88 23       	and	r24, r24
     efe:	2c f4       	brge	.+10     	; 0xf0a <main+0x74>
		__ticks = 1;
     f00:	81 e0       	ldi	r24, 0x01	; 1
     f02:	90 e0       	ldi	r25, 0x00	; 0
     f04:	9a a3       	std	Y+34, r25	; 0x22
     f06:	89 a3       	std	Y+33, r24	; 0x21
     f08:	3f c0       	rjmp	.+126    	; 0xf88 <main+0xf2>
	else if (__tmp > 65535)
     f0a:	6b a1       	ldd	r22, Y+35	; 0x23
     f0c:	7c a1       	ldd	r23, Y+36	; 0x24
     f0e:	8d a1       	ldd	r24, Y+37	; 0x25
     f10:	9e a1       	ldd	r25, Y+38	; 0x26
     f12:	20 e0       	ldi	r18, 0x00	; 0
     f14:	3f ef       	ldi	r19, 0xFF	; 255
     f16:	4f e7       	ldi	r20, 0x7F	; 127
     f18:	57 e4       	ldi	r21, 0x47	; 71
     f1a:	0e 94 4a 0c 	call	0x1894	; 0x1894 <__gtsf2>
     f1e:	18 16       	cp	r1, r24
     f20:	4c f5       	brge	.+82     	; 0xf74 <main+0xde>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     f22:	6f a1       	ldd	r22, Y+39	; 0x27
     f24:	78 a5       	ldd	r23, Y+40	; 0x28
     f26:	89 a5       	ldd	r24, Y+41	; 0x29
     f28:	9a a5       	ldd	r25, Y+42	; 0x2a
     f2a:	20 e0       	ldi	r18, 0x00	; 0
     f2c:	30 e0       	ldi	r19, 0x00	; 0
     f2e:	40 e2       	ldi	r20, 0x20	; 32
     f30:	51 e4       	ldi	r21, 0x41	; 65
     f32:	0e 94 a4 0a 	call	0x1548	; 0x1548 <__mulsf3>
     f36:	dc 01       	movw	r26, r24
     f38:	cb 01       	movw	r24, r22
     f3a:	bc 01       	movw	r22, r24
     f3c:	cd 01       	movw	r24, r26
     f3e:	0e 94 ce 08 	call	0x119c	; 0x119c <__fixunssfsi>
     f42:	dc 01       	movw	r26, r24
     f44:	cb 01       	movw	r24, r22
     f46:	9a a3       	std	Y+34, r25	; 0x22
     f48:	89 a3       	std	Y+33, r24	; 0x21
     f4a:	0f c0       	rjmp	.+30     	; 0xf6a <main+0xd4>
     f4c:	80 e9       	ldi	r24, 0x90	; 144
     f4e:	91 e0       	ldi	r25, 0x01	; 1
     f50:	98 a3       	std	Y+32, r25	; 0x20
     f52:	8f 8f       	std	Y+31, r24	; 0x1f
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     f54:	8f 8d       	ldd	r24, Y+31	; 0x1f
     f56:	98 a1       	ldd	r25, Y+32	; 0x20
     f58:	01 97       	sbiw	r24, 0x01	; 1
     f5a:	f1 f7       	brne	.-4      	; 0xf58 <main+0xc2>
     f5c:	98 a3       	std	Y+32, r25	; 0x20
     f5e:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f60:	89 a1       	ldd	r24, Y+33	; 0x21
     f62:	9a a1       	ldd	r25, Y+34	; 0x22
     f64:	01 97       	sbiw	r24, 0x01	; 1
     f66:	9a a3       	std	Y+34, r25	; 0x22
     f68:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f6a:	89 a1       	ldd	r24, Y+33	; 0x21
     f6c:	9a a1       	ldd	r25, Y+34	; 0x22
     f6e:	00 97       	sbiw	r24, 0x00	; 0
     f70:	69 f7       	brne	.-38     	; 0xf4c <main+0xb6>
     f72:	14 c0       	rjmp	.+40     	; 0xf9c <main+0x106>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     f74:	6b a1       	ldd	r22, Y+35	; 0x23
     f76:	7c a1       	ldd	r23, Y+36	; 0x24
     f78:	8d a1       	ldd	r24, Y+37	; 0x25
     f7a:	9e a1       	ldd	r25, Y+38	; 0x26
     f7c:	0e 94 ce 08 	call	0x119c	; 0x119c <__fixunssfsi>
     f80:	dc 01       	movw	r26, r24
     f82:	cb 01       	movw	r24, r22
     f84:	9a a3       	std	Y+34, r25	; 0x22
     f86:	89 a3       	std	Y+33, r24	; 0x21
     f88:	89 a1       	ldd	r24, Y+33	; 0x21
     f8a:	9a a1       	ldd	r25, Y+34	; 0x22
     f8c:	9e 8f       	std	Y+30, r25	; 0x1e
     f8e:	8d 8f       	std	Y+29, r24	; 0x1d
     f90:	8d 8d       	ldd	r24, Y+29	; 0x1d
     f92:	9e 8d       	ldd	r25, Y+30	; 0x1e
     f94:	01 97       	sbiw	r24, 0x01	; 1
     f96:	f1 f7       	brne	.-4      	; 0xf94 <main+0xfe>
     f98:	9e 8f       	std	Y+30, r25	; 0x1e
     f9a:	8d 8f       	std	Y+29, r24	; 0x1d
        {
            _delay_ms(25);
            if(ultrasoneAfstand() < 100) //debounce afstandsmeting
     f9c:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <ultrasoneAfstand>
     fa0:	84 36       	cpi	r24, 0x64	; 100
     fa2:	91 05       	cpc	r25, r1
     fa4:	0c f0       	brlt	.+2      	; 0xfa8 <main+0x112>
     fa6:	83 cf       	rjmp	.-250    	; 0xeae <main+0x18>
            {
                PORTC |= _BV(motorPin);
     fa8:	a8 e2       	ldi	r26, 0x28	; 40
     faa:	b0 e0       	ldi	r27, 0x00	; 0
     fac:	e8 e2       	ldi	r30, 0x28	; 40
     fae:	f0 e0       	ldi	r31, 0x00	; 0
     fb0:	80 81       	ld	r24, Z
     fb2:	80 61       	ori	r24, 0x10	; 16
     fb4:	8c 93       	st	X, r24
     fb6:	80 e0       	ldi	r24, 0x00	; 0
     fb8:	90 e0       	ldi	r25, 0x00	; 0
     fba:	aa e7       	ldi	r26, 0x7A	; 122
     fbc:	b4 e4       	ldi	r27, 0x44	; 68
     fbe:	89 8f       	std	Y+25, r24	; 0x19
     fc0:	9a 8f       	std	Y+26, r25	; 0x1a
     fc2:	ab 8f       	std	Y+27, r26	; 0x1b
     fc4:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     fc6:	69 8d       	ldd	r22, Y+25	; 0x19
     fc8:	7a 8d       	ldd	r23, Y+26	; 0x1a
     fca:	8b 8d       	ldd	r24, Y+27	; 0x1b
     fcc:	9c 8d       	ldd	r25, Y+28	; 0x1c
     fce:	20 e0       	ldi	r18, 0x00	; 0
     fd0:	30 e0       	ldi	r19, 0x00	; 0
     fd2:	4a e7       	ldi	r20, 0x7A	; 122
     fd4:	55 e4       	ldi	r21, 0x45	; 69
     fd6:	0e 94 a4 0a 	call	0x1548	; 0x1548 <__mulsf3>
     fda:	dc 01       	movw	r26, r24
     fdc:	cb 01       	movw	r24, r22
     fde:	8d 8b       	std	Y+21, r24	; 0x15
     fe0:	9e 8b       	std	Y+22, r25	; 0x16
     fe2:	af 8b       	std	Y+23, r26	; 0x17
     fe4:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     fe6:	6d 89       	ldd	r22, Y+21	; 0x15
     fe8:	7e 89       	ldd	r23, Y+22	; 0x16
     fea:	8f 89       	ldd	r24, Y+23	; 0x17
     fec:	98 8d       	ldd	r25, Y+24	; 0x18
     fee:	20 e0       	ldi	r18, 0x00	; 0
     ff0:	30 e0       	ldi	r19, 0x00	; 0
     ff2:	40 e8       	ldi	r20, 0x80	; 128
     ff4:	5f e3       	ldi	r21, 0x3F	; 63
     ff6:	0e 94 aa 0c 	call	0x1954	; 0x1954 <__ltsf2>
     ffa:	88 23       	and	r24, r24
     ffc:	2c f4       	brge	.+10     	; 0x1008 <main+0x172>
		__ticks = 1;
     ffe:	81 e0       	ldi	r24, 0x01	; 1
    1000:	90 e0       	ldi	r25, 0x00	; 0
    1002:	9c 8b       	std	Y+20, r25	; 0x14
    1004:	8b 8b       	std	Y+19, r24	; 0x13
    1006:	3f c0       	rjmp	.+126    	; 0x1086 <main+0x1f0>
	else if (__tmp > 65535)
    1008:	6d 89       	ldd	r22, Y+21	; 0x15
    100a:	7e 89       	ldd	r23, Y+22	; 0x16
    100c:	8f 89       	ldd	r24, Y+23	; 0x17
    100e:	98 8d       	ldd	r25, Y+24	; 0x18
    1010:	20 e0       	ldi	r18, 0x00	; 0
    1012:	3f ef       	ldi	r19, 0xFF	; 255
    1014:	4f e7       	ldi	r20, 0x7F	; 127
    1016:	57 e4       	ldi	r21, 0x47	; 71
    1018:	0e 94 4a 0c 	call	0x1894	; 0x1894 <__gtsf2>
    101c:	18 16       	cp	r1, r24
    101e:	4c f5       	brge	.+82     	; 0x1072 <main+0x1dc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1020:	69 8d       	ldd	r22, Y+25	; 0x19
    1022:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1024:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1026:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1028:	20 e0       	ldi	r18, 0x00	; 0
    102a:	30 e0       	ldi	r19, 0x00	; 0
    102c:	40 e2       	ldi	r20, 0x20	; 32
    102e:	51 e4       	ldi	r21, 0x41	; 65
    1030:	0e 94 a4 0a 	call	0x1548	; 0x1548 <__mulsf3>
    1034:	dc 01       	movw	r26, r24
    1036:	cb 01       	movw	r24, r22
    1038:	bc 01       	movw	r22, r24
    103a:	cd 01       	movw	r24, r26
    103c:	0e 94 ce 08 	call	0x119c	; 0x119c <__fixunssfsi>
    1040:	dc 01       	movw	r26, r24
    1042:	cb 01       	movw	r24, r22
    1044:	9c 8b       	std	Y+20, r25	; 0x14
    1046:	8b 8b       	std	Y+19, r24	; 0x13
    1048:	0f c0       	rjmp	.+30     	; 0x1068 <main+0x1d2>
    104a:	80 e9       	ldi	r24, 0x90	; 144
    104c:	91 e0       	ldi	r25, 0x01	; 1
    104e:	9a 8b       	std	Y+18, r25	; 0x12
    1050:	89 8b       	std	Y+17, r24	; 0x11
    1052:	89 89       	ldd	r24, Y+17	; 0x11
    1054:	9a 89       	ldd	r25, Y+18	; 0x12
    1056:	01 97       	sbiw	r24, 0x01	; 1
    1058:	f1 f7       	brne	.-4      	; 0x1056 <main+0x1c0>
    105a:	9a 8b       	std	Y+18, r25	; 0x12
    105c:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    105e:	8b 89       	ldd	r24, Y+19	; 0x13
    1060:	9c 89       	ldd	r25, Y+20	; 0x14
    1062:	01 97       	sbiw	r24, 0x01	; 1
    1064:	9c 8b       	std	Y+20, r25	; 0x14
    1066:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1068:	8b 89       	ldd	r24, Y+19	; 0x13
    106a:	9c 89       	ldd	r25, Y+20	; 0x14
    106c:	00 97       	sbiw	r24, 0x00	; 0
    106e:	69 f7       	brne	.-38     	; 0x104a <main+0x1b4>
    1070:	87 c0       	rjmp	.+270    	; 0x1180 <main+0x2ea>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1072:	6d 89       	ldd	r22, Y+21	; 0x15
    1074:	7e 89       	ldd	r23, Y+22	; 0x16
    1076:	8f 89       	ldd	r24, Y+23	; 0x17
    1078:	98 8d       	ldd	r25, Y+24	; 0x18
    107a:	0e 94 ce 08 	call	0x119c	; 0x119c <__fixunssfsi>
    107e:	dc 01       	movw	r26, r24
    1080:	cb 01       	movw	r24, r22
    1082:	9c 8b       	std	Y+20, r25	; 0x14
    1084:	8b 8b       	std	Y+19, r24	; 0x13
    1086:	8b 89       	ldd	r24, Y+19	; 0x13
    1088:	9c 89       	ldd	r25, Y+20	; 0x14
    108a:	98 8b       	std	Y+16, r25	; 0x10
    108c:	8f 87       	std	Y+15, r24	; 0x0f
    108e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1090:	98 89       	ldd	r25, Y+16	; 0x10
    1092:	01 97       	sbiw	r24, 0x01	; 1
    1094:	f1 f7       	brne	.-4      	; 0x1092 <main+0x1fc>
    1096:	98 8b       	std	Y+16, r25	; 0x10
    1098:	8f 87       	std	Y+15, r24	; 0x0f
    109a:	72 c0       	rjmp	.+228    	; 0x1180 <main+0x2ea>
                _delay_ms(1000);
                while(ultrasoneAfstand() < 100) //zolang er nog iets voor staat stil blijven staan
    109c:	80 e0       	ldi	r24, 0x00	; 0
    109e:	90 e0       	ldi	r25, 0x00	; 0
    10a0:	a8 ec       	ldi	r26, 0xC8	; 200
    10a2:	b2 e4       	ldi	r27, 0x42	; 66
    10a4:	8b 87       	std	Y+11, r24	; 0x0b
    10a6:	9c 87       	std	Y+12, r25	; 0x0c
    10a8:	ad 87       	std	Y+13, r26	; 0x0d
    10aa:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    10ac:	6b 85       	ldd	r22, Y+11	; 0x0b
    10ae:	7c 85       	ldd	r23, Y+12	; 0x0c
    10b0:	8d 85       	ldd	r24, Y+13	; 0x0d
    10b2:	9e 85       	ldd	r25, Y+14	; 0x0e
    10b4:	20 e0       	ldi	r18, 0x00	; 0
    10b6:	30 e0       	ldi	r19, 0x00	; 0
    10b8:	4a e7       	ldi	r20, 0x7A	; 122
    10ba:	55 e4       	ldi	r21, 0x45	; 69
    10bc:	0e 94 a4 0a 	call	0x1548	; 0x1548 <__mulsf3>
    10c0:	dc 01       	movw	r26, r24
    10c2:	cb 01       	movw	r24, r22
    10c4:	8f 83       	std	Y+7, r24	; 0x07
    10c6:	98 87       	std	Y+8, r25	; 0x08
    10c8:	a9 87       	std	Y+9, r26	; 0x09
    10ca:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    10cc:	6f 81       	ldd	r22, Y+7	; 0x07
    10ce:	78 85       	ldd	r23, Y+8	; 0x08
    10d0:	89 85       	ldd	r24, Y+9	; 0x09
    10d2:	9a 85       	ldd	r25, Y+10	; 0x0a
    10d4:	20 e0       	ldi	r18, 0x00	; 0
    10d6:	30 e0       	ldi	r19, 0x00	; 0
    10d8:	40 e8       	ldi	r20, 0x80	; 128
    10da:	5f e3       	ldi	r21, 0x3F	; 63
    10dc:	0e 94 aa 0c 	call	0x1954	; 0x1954 <__ltsf2>
    10e0:	88 23       	and	r24, r24
    10e2:	2c f4       	brge	.+10     	; 0x10ee <main+0x258>
		__ticks = 1;
    10e4:	81 e0       	ldi	r24, 0x01	; 1
    10e6:	90 e0       	ldi	r25, 0x00	; 0
    10e8:	9e 83       	std	Y+6, r25	; 0x06
    10ea:	8d 83       	std	Y+5, r24	; 0x05
    10ec:	3f c0       	rjmp	.+126    	; 0x116c <main+0x2d6>
	else if (__tmp > 65535)
    10ee:	6f 81       	ldd	r22, Y+7	; 0x07
    10f0:	78 85       	ldd	r23, Y+8	; 0x08
    10f2:	89 85       	ldd	r24, Y+9	; 0x09
    10f4:	9a 85       	ldd	r25, Y+10	; 0x0a
    10f6:	20 e0       	ldi	r18, 0x00	; 0
    10f8:	3f ef       	ldi	r19, 0xFF	; 255
    10fa:	4f e7       	ldi	r20, 0x7F	; 127
    10fc:	57 e4       	ldi	r21, 0x47	; 71
    10fe:	0e 94 4a 0c 	call	0x1894	; 0x1894 <__gtsf2>
    1102:	18 16       	cp	r1, r24
    1104:	4c f5       	brge	.+82     	; 0x1158 <main+0x2c2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1106:	6b 85       	ldd	r22, Y+11	; 0x0b
    1108:	7c 85       	ldd	r23, Y+12	; 0x0c
    110a:	8d 85       	ldd	r24, Y+13	; 0x0d
    110c:	9e 85       	ldd	r25, Y+14	; 0x0e
    110e:	20 e0       	ldi	r18, 0x00	; 0
    1110:	30 e0       	ldi	r19, 0x00	; 0
    1112:	40 e2       	ldi	r20, 0x20	; 32
    1114:	51 e4       	ldi	r21, 0x41	; 65
    1116:	0e 94 a4 0a 	call	0x1548	; 0x1548 <__mulsf3>
    111a:	dc 01       	movw	r26, r24
    111c:	cb 01       	movw	r24, r22
    111e:	bc 01       	movw	r22, r24
    1120:	cd 01       	movw	r24, r26
    1122:	0e 94 ce 08 	call	0x119c	; 0x119c <__fixunssfsi>
    1126:	dc 01       	movw	r26, r24
    1128:	cb 01       	movw	r24, r22
    112a:	9e 83       	std	Y+6, r25	; 0x06
    112c:	8d 83       	std	Y+5, r24	; 0x05
    112e:	0f c0       	rjmp	.+30     	; 0x114e <main+0x2b8>
    1130:	80 e9       	ldi	r24, 0x90	; 144
    1132:	91 e0       	ldi	r25, 0x01	; 1
    1134:	9c 83       	std	Y+4, r25	; 0x04
    1136:	8b 83       	std	Y+3, r24	; 0x03
    1138:	8b 81       	ldd	r24, Y+3	; 0x03
    113a:	9c 81       	ldd	r25, Y+4	; 0x04
    113c:	01 97       	sbiw	r24, 0x01	; 1
    113e:	f1 f7       	brne	.-4      	; 0x113c <main+0x2a6>
    1140:	9c 83       	std	Y+4, r25	; 0x04
    1142:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1144:	8d 81       	ldd	r24, Y+5	; 0x05
    1146:	9e 81       	ldd	r25, Y+6	; 0x06
    1148:	01 97       	sbiw	r24, 0x01	; 1
    114a:	9e 83       	std	Y+6, r25	; 0x06
    114c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    114e:	8d 81       	ldd	r24, Y+5	; 0x05
    1150:	9e 81       	ldd	r25, Y+6	; 0x06
    1152:	00 97       	sbiw	r24, 0x00	; 0
    1154:	69 f7       	brne	.-38     	; 0x1130 <main+0x29a>
    1156:	14 c0       	rjmp	.+40     	; 0x1180 <main+0x2ea>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1158:	6f 81       	ldd	r22, Y+7	; 0x07
    115a:	78 85       	ldd	r23, Y+8	; 0x08
    115c:	89 85       	ldd	r24, Y+9	; 0x09
    115e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1160:	0e 94 ce 08 	call	0x119c	; 0x119c <__fixunssfsi>
    1164:	dc 01       	movw	r26, r24
    1166:	cb 01       	movw	r24, r22
    1168:	9e 83       	std	Y+6, r25	; 0x06
    116a:	8d 83       	std	Y+5, r24	; 0x05
    116c:	8d 81       	ldd	r24, Y+5	; 0x05
    116e:	9e 81       	ldd	r25, Y+6	; 0x06
    1170:	9a 83       	std	Y+2, r25	; 0x02
    1172:	89 83       	std	Y+1, r24	; 0x01
    1174:	89 81       	ldd	r24, Y+1	; 0x01
    1176:	9a 81       	ldd	r25, Y+2	; 0x02
    1178:	01 97       	sbiw	r24, 0x01	; 1
    117a:	f1 f7       	brne	.-4      	; 0x1178 <main+0x2e2>
    117c:	9a 83       	std	Y+2, r25	; 0x02
    117e:	89 83       	std	Y+1, r24	; 0x01
    1180:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <ultrasoneAfstand>
    1184:	84 36       	cpi	r24, 0x64	; 100
    1186:	91 05       	cpc	r25, r1
    1188:	0c f4       	brge	.+2      	; 0x118c <main+0x2f6>
    118a:	88 cf       	rjmp	.-240    	; 0x109c <main+0x206>
                {
                    _delay_ms(100);
                }

                    PORTC &= ~_BV(motorPin); //verder rijden na verwijderen obstakel
    118c:	a8 e2       	ldi	r26, 0x28	; 40
    118e:	b0 e0       	ldi	r27, 0x00	; 0
    1190:	e8 e2       	ldi	r30, 0x28	; 40
    1192:	f0 e0       	ldi	r31, 0x00	; 0
    1194:	80 81       	ld	r24, Z
    1196:	8f 7e       	andi	r24, 0xEF	; 239
    1198:	8c 93       	st	X, r24
    119a:	89 ce       	rjmp	.-750    	; 0xeae <main+0x18>

0000119c <__fixunssfsi>:
    119c:	ef 92       	push	r14
    119e:	ff 92       	push	r15
    11a0:	0f 93       	push	r16
    11a2:	1f 93       	push	r17
    11a4:	7b 01       	movw	r14, r22
    11a6:	8c 01       	movw	r16, r24
    11a8:	20 e0       	ldi	r18, 0x00	; 0
    11aa:	30 e0       	ldi	r19, 0x00	; 0
    11ac:	40 e0       	ldi	r20, 0x00	; 0
    11ae:	5f e4       	ldi	r21, 0x4F	; 79
    11b0:	0e 94 7a 0c 	call	0x18f4	; 0x18f4 <__gesf2>
    11b4:	88 23       	and	r24, r24
    11b6:	8c f0       	brlt	.+34     	; 0x11da <__fixunssfsi+0x3e>
    11b8:	c8 01       	movw	r24, r16
    11ba:	b7 01       	movw	r22, r14
    11bc:	20 e0       	ldi	r18, 0x00	; 0
    11be:	30 e0       	ldi	r19, 0x00	; 0
    11c0:	40 e0       	ldi	r20, 0x00	; 0
    11c2:	5f e4       	ldi	r21, 0x4F	; 79
    11c4:	0e 94 46 0a 	call	0x148c	; 0x148c <__subsf3>
    11c8:	0e 94 38 0d 	call	0x1a70	; 0x1a70 <__fixsfsi>
    11cc:	9b 01       	movw	r18, r22
    11ce:	ac 01       	movw	r20, r24
    11d0:	20 50       	subi	r18, 0x00	; 0
    11d2:	30 40       	sbci	r19, 0x00	; 0
    11d4:	40 40       	sbci	r20, 0x00	; 0
    11d6:	50 48       	sbci	r21, 0x80	; 128
    11d8:	06 c0       	rjmp	.+12     	; 0x11e6 <__fixunssfsi+0x4a>
    11da:	c8 01       	movw	r24, r16
    11dc:	b7 01       	movw	r22, r14
    11de:	0e 94 38 0d 	call	0x1a70	; 0x1a70 <__fixsfsi>
    11e2:	9b 01       	movw	r18, r22
    11e4:	ac 01       	movw	r20, r24
    11e6:	b9 01       	movw	r22, r18
    11e8:	ca 01       	movw	r24, r20
    11ea:	1f 91       	pop	r17
    11ec:	0f 91       	pop	r16
    11ee:	ff 90       	pop	r15
    11f0:	ef 90       	pop	r14
    11f2:	08 95       	ret

000011f4 <_fpadd_parts>:
    11f4:	a0 e0       	ldi	r26, 0x00	; 0
    11f6:	b0 e0       	ldi	r27, 0x00	; 0
    11f8:	e0 e0       	ldi	r30, 0x00	; 0
    11fa:	f9 e0       	ldi	r31, 0x09	; 9
    11fc:	0c 94 a0 0f 	jmp	0x1f40	; 0x1f40 <__prologue_saves__>
    1200:	dc 01       	movw	r26, r24
    1202:	2b 01       	movw	r4, r22
    1204:	fa 01       	movw	r30, r20
    1206:	9c 91       	ld	r25, X
    1208:	92 30       	cpi	r25, 0x02	; 2
    120a:	08 f4       	brcc	.+2      	; 0x120e <_fpadd_parts+0x1a>
    120c:	39 c1       	rjmp	.+626    	; 0x1480 <_fpadd_parts+0x28c>
    120e:	eb 01       	movw	r28, r22
    1210:	88 81       	ld	r24, Y
    1212:	82 30       	cpi	r24, 0x02	; 2
    1214:	08 f4       	brcc	.+2      	; 0x1218 <_fpadd_parts+0x24>
    1216:	33 c1       	rjmp	.+614    	; 0x147e <_fpadd_parts+0x28a>
    1218:	94 30       	cpi	r25, 0x04	; 4
    121a:	69 f4       	brne	.+26     	; 0x1236 <_fpadd_parts+0x42>
    121c:	84 30       	cpi	r24, 0x04	; 4
    121e:	09 f0       	breq	.+2      	; 0x1222 <_fpadd_parts+0x2e>
    1220:	2f c1       	rjmp	.+606    	; 0x1480 <_fpadd_parts+0x28c>
    1222:	11 96       	adiw	r26, 0x01	; 1
    1224:	9c 91       	ld	r25, X
    1226:	11 97       	sbiw	r26, 0x01	; 1
    1228:	89 81       	ldd	r24, Y+1	; 0x01
    122a:	98 17       	cp	r25, r24
    122c:	09 f4       	brne	.+2      	; 0x1230 <_fpadd_parts+0x3c>
    122e:	28 c1       	rjmp	.+592    	; 0x1480 <_fpadd_parts+0x28c>
    1230:	a0 e0       	ldi	r26, 0x00	; 0
    1232:	b1 e0       	ldi	r27, 0x01	; 1
    1234:	25 c1       	rjmp	.+586    	; 0x1480 <_fpadd_parts+0x28c>
    1236:	84 30       	cpi	r24, 0x04	; 4
    1238:	09 f4       	brne	.+2      	; 0x123c <_fpadd_parts+0x48>
    123a:	21 c1       	rjmp	.+578    	; 0x147e <_fpadd_parts+0x28a>
    123c:	82 30       	cpi	r24, 0x02	; 2
    123e:	a9 f4       	brne	.+42     	; 0x126a <_fpadd_parts+0x76>
    1240:	92 30       	cpi	r25, 0x02	; 2
    1242:	09 f0       	breq	.+2      	; 0x1246 <_fpadd_parts+0x52>
    1244:	1d c1       	rjmp	.+570    	; 0x1480 <_fpadd_parts+0x28c>
    1246:	9a 01       	movw	r18, r20
    1248:	ad 01       	movw	r20, r26
    124a:	88 e0       	ldi	r24, 0x08	; 8
    124c:	ea 01       	movw	r28, r20
    124e:	09 90       	ld	r0, Y+
    1250:	ae 01       	movw	r20, r28
    1252:	e9 01       	movw	r28, r18
    1254:	09 92       	st	Y+, r0
    1256:	9e 01       	movw	r18, r28
    1258:	81 50       	subi	r24, 0x01	; 1
    125a:	c1 f7       	brne	.-16     	; 0x124c <_fpadd_parts+0x58>
    125c:	e2 01       	movw	r28, r4
    125e:	89 81       	ldd	r24, Y+1	; 0x01
    1260:	11 96       	adiw	r26, 0x01	; 1
    1262:	9c 91       	ld	r25, X
    1264:	89 23       	and	r24, r25
    1266:	81 83       	std	Z+1, r24	; 0x01
    1268:	08 c1       	rjmp	.+528    	; 0x147a <_fpadd_parts+0x286>
    126a:	92 30       	cpi	r25, 0x02	; 2
    126c:	09 f4       	brne	.+2      	; 0x1270 <_fpadd_parts+0x7c>
    126e:	07 c1       	rjmp	.+526    	; 0x147e <_fpadd_parts+0x28a>
    1270:	12 96       	adiw	r26, 0x02	; 2
    1272:	2d 90       	ld	r2, X+
    1274:	3c 90       	ld	r3, X
    1276:	13 97       	sbiw	r26, 0x03	; 3
    1278:	eb 01       	movw	r28, r22
    127a:	8a 81       	ldd	r24, Y+2	; 0x02
    127c:	9b 81       	ldd	r25, Y+3	; 0x03
    127e:	14 96       	adiw	r26, 0x04	; 4
    1280:	ad 90       	ld	r10, X+
    1282:	bd 90       	ld	r11, X+
    1284:	cd 90       	ld	r12, X+
    1286:	dc 90       	ld	r13, X
    1288:	17 97       	sbiw	r26, 0x07	; 7
    128a:	ec 80       	ldd	r14, Y+4	; 0x04
    128c:	fd 80       	ldd	r15, Y+5	; 0x05
    128e:	0e 81       	ldd	r16, Y+6	; 0x06
    1290:	1f 81       	ldd	r17, Y+7	; 0x07
    1292:	91 01       	movw	r18, r2
    1294:	28 1b       	sub	r18, r24
    1296:	39 0b       	sbc	r19, r25
    1298:	b9 01       	movw	r22, r18
    129a:	37 ff       	sbrs	r19, 7
    129c:	04 c0       	rjmp	.+8      	; 0x12a6 <_fpadd_parts+0xb2>
    129e:	66 27       	eor	r22, r22
    12a0:	77 27       	eor	r23, r23
    12a2:	62 1b       	sub	r22, r18
    12a4:	73 0b       	sbc	r23, r19
    12a6:	60 32       	cpi	r22, 0x20	; 32
    12a8:	71 05       	cpc	r23, r1
    12aa:	0c f0       	brlt	.+2      	; 0x12ae <_fpadd_parts+0xba>
    12ac:	61 c0       	rjmp	.+194    	; 0x1370 <_fpadd_parts+0x17c>
    12ae:	12 16       	cp	r1, r18
    12b0:	13 06       	cpc	r1, r19
    12b2:	6c f5       	brge	.+90     	; 0x130e <_fpadd_parts+0x11a>
    12b4:	37 01       	movw	r6, r14
    12b6:	48 01       	movw	r8, r16
    12b8:	06 2e       	mov	r0, r22
    12ba:	04 c0       	rjmp	.+8      	; 0x12c4 <_fpadd_parts+0xd0>
    12bc:	96 94       	lsr	r9
    12be:	87 94       	ror	r8
    12c0:	77 94       	ror	r7
    12c2:	67 94       	ror	r6
    12c4:	0a 94       	dec	r0
    12c6:	d2 f7       	brpl	.-12     	; 0x12bc <_fpadd_parts+0xc8>
    12c8:	21 e0       	ldi	r18, 0x01	; 1
    12ca:	30 e0       	ldi	r19, 0x00	; 0
    12cc:	40 e0       	ldi	r20, 0x00	; 0
    12ce:	50 e0       	ldi	r21, 0x00	; 0
    12d0:	04 c0       	rjmp	.+8      	; 0x12da <_fpadd_parts+0xe6>
    12d2:	22 0f       	add	r18, r18
    12d4:	33 1f       	adc	r19, r19
    12d6:	44 1f       	adc	r20, r20
    12d8:	55 1f       	adc	r21, r21
    12da:	6a 95       	dec	r22
    12dc:	d2 f7       	brpl	.-12     	; 0x12d2 <_fpadd_parts+0xde>
    12de:	21 50       	subi	r18, 0x01	; 1
    12e0:	30 40       	sbci	r19, 0x00	; 0
    12e2:	40 40       	sbci	r20, 0x00	; 0
    12e4:	50 40       	sbci	r21, 0x00	; 0
    12e6:	2e 21       	and	r18, r14
    12e8:	3f 21       	and	r19, r15
    12ea:	40 23       	and	r20, r16
    12ec:	51 23       	and	r21, r17
    12ee:	21 15       	cp	r18, r1
    12f0:	31 05       	cpc	r19, r1
    12f2:	41 05       	cpc	r20, r1
    12f4:	51 05       	cpc	r21, r1
    12f6:	21 f0       	breq	.+8      	; 0x1300 <_fpadd_parts+0x10c>
    12f8:	21 e0       	ldi	r18, 0x01	; 1
    12fa:	30 e0       	ldi	r19, 0x00	; 0
    12fc:	40 e0       	ldi	r20, 0x00	; 0
    12fe:	50 e0       	ldi	r21, 0x00	; 0
    1300:	79 01       	movw	r14, r18
    1302:	8a 01       	movw	r16, r20
    1304:	e6 28       	or	r14, r6
    1306:	f7 28       	or	r15, r7
    1308:	08 29       	or	r16, r8
    130a:	19 29       	or	r17, r9
    130c:	3c c0       	rjmp	.+120    	; 0x1386 <_fpadd_parts+0x192>
    130e:	23 2b       	or	r18, r19
    1310:	d1 f1       	breq	.+116    	; 0x1386 <_fpadd_parts+0x192>
    1312:	26 0e       	add	r2, r22
    1314:	37 1e       	adc	r3, r23
    1316:	35 01       	movw	r6, r10
    1318:	46 01       	movw	r8, r12
    131a:	06 2e       	mov	r0, r22
    131c:	04 c0       	rjmp	.+8      	; 0x1326 <_fpadd_parts+0x132>
    131e:	96 94       	lsr	r9
    1320:	87 94       	ror	r8
    1322:	77 94       	ror	r7
    1324:	67 94       	ror	r6
    1326:	0a 94       	dec	r0
    1328:	d2 f7       	brpl	.-12     	; 0x131e <_fpadd_parts+0x12a>
    132a:	21 e0       	ldi	r18, 0x01	; 1
    132c:	30 e0       	ldi	r19, 0x00	; 0
    132e:	40 e0       	ldi	r20, 0x00	; 0
    1330:	50 e0       	ldi	r21, 0x00	; 0
    1332:	04 c0       	rjmp	.+8      	; 0x133c <_fpadd_parts+0x148>
    1334:	22 0f       	add	r18, r18
    1336:	33 1f       	adc	r19, r19
    1338:	44 1f       	adc	r20, r20
    133a:	55 1f       	adc	r21, r21
    133c:	6a 95       	dec	r22
    133e:	d2 f7       	brpl	.-12     	; 0x1334 <_fpadd_parts+0x140>
    1340:	21 50       	subi	r18, 0x01	; 1
    1342:	30 40       	sbci	r19, 0x00	; 0
    1344:	40 40       	sbci	r20, 0x00	; 0
    1346:	50 40       	sbci	r21, 0x00	; 0
    1348:	2a 21       	and	r18, r10
    134a:	3b 21       	and	r19, r11
    134c:	4c 21       	and	r20, r12
    134e:	5d 21       	and	r21, r13
    1350:	21 15       	cp	r18, r1
    1352:	31 05       	cpc	r19, r1
    1354:	41 05       	cpc	r20, r1
    1356:	51 05       	cpc	r21, r1
    1358:	21 f0       	breq	.+8      	; 0x1362 <_fpadd_parts+0x16e>
    135a:	21 e0       	ldi	r18, 0x01	; 1
    135c:	30 e0       	ldi	r19, 0x00	; 0
    135e:	40 e0       	ldi	r20, 0x00	; 0
    1360:	50 e0       	ldi	r21, 0x00	; 0
    1362:	59 01       	movw	r10, r18
    1364:	6a 01       	movw	r12, r20
    1366:	a6 28       	or	r10, r6
    1368:	b7 28       	or	r11, r7
    136a:	c8 28       	or	r12, r8
    136c:	d9 28       	or	r13, r9
    136e:	0b c0       	rjmp	.+22     	; 0x1386 <_fpadd_parts+0x192>
    1370:	82 15       	cp	r24, r2
    1372:	93 05       	cpc	r25, r3
    1374:	2c f0       	brlt	.+10     	; 0x1380 <_fpadd_parts+0x18c>
    1376:	1c 01       	movw	r2, r24
    1378:	aa 24       	eor	r10, r10
    137a:	bb 24       	eor	r11, r11
    137c:	65 01       	movw	r12, r10
    137e:	03 c0       	rjmp	.+6      	; 0x1386 <_fpadd_parts+0x192>
    1380:	ee 24       	eor	r14, r14
    1382:	ff 24       	eor	r15, r15
    1384:	87 01       	movw	r16, r14
    1386:	11 96       	adiw	r26, 0x01	; 1
    1388:	9c 91       	ld	r25, X
    138a:	d2 01       	movw	r26, r4
    138c:	11 96       	adiw	r26, 0x01	; 1
    138e:	8c 91       	ld	r24, X
    1390:	98 17       	cp	r25, r24
    1392:	09 f4       	brne	.+2      	; 0x1396 <_fpadd_parts+0x1a2>
    1394:	45 c0       	rjmp	.+138    	; 0x1420 <_fpadd_parts+0x22c>
    1396:	99 23       	and	r25, r25
    1398:	39 f0       	breq	.+14     	; 0x13a8 <_fpadd_parts+0x1b4>
    139a:	a8 01       	movw	r20, r16
    139c:	97 01       	movw	r18, r14
    139e:	2a 19       	sub	r18, r10
    13a0:	3b 09       	sbc	r19, r11
    13a2:	4c 09       	sbc	r20, r12
    13a4:	5d 09       	sbc	r21, r13
    13a6:	06 c0       	rjmp	.+12     	; 0x13b4 <_fpadd_parts+0x1c0>
    13a8:	a6 01       	movw	r20, r12
    13aa:	95 01       	movw	r18, r10
    13ac:	2e 19       	sub	r18, r14
    13ae:	3f 09       	sbc	r19, r15
    13b0:	40 0b       	sbc	r20, r16
    13b2:	51 0b       	sbc	r21, r17
    13b4:	57 fd       	sbrc	r21, 7
    13b6:	08 c0       	rjmp	.+16     	; 0x13c8 <_fpadd_parts+0x1d4>
    13b8:	11 82       	std	Z+1, r1	; 0x01
    13ba:	33 82       	std	Z+3, r3	; 0x03
    13bc:	22 82       	std	Z+2, r2	; 0x02
    13be:	24 83       	std	Z+4, r18	; 0x04
    13c0:	35 83       	std	Z+5, r19	; 0x05
    13c2:	46 83       	std	Z+6, r20	; 0x06
    13c4:	57 83       	std	Z+7, r21	; 0x07
    13c6:	1d c0       	rjmp	.+58     	; 0x1402 <_fpadd_parts+0x20e>
    13c8:	81 e0       	ldi	r24, 0x01	; 1
    13ca:	81 83       	std	Z+1, r24	; 0x01
    13cc:	33 82       	std	Z+3, r3	; 0x03
    13ce:	22 82       	std	Z+2, r2	; 0x02
    13d0:	88 27       	eor	r24, r24
    13d2:	99 27       	eor	r25, r25
    13d4:	dc 01       	movw	r26, r24
    13d6:	82 1b       	sub	r24, r18
    13d8:	93 0b       	sbc	r25, r19
    13da:	a4 0b       	sbc	r26, r20
    13dc:	b5 0b       	sbc	r27, r21
    13de:	84 83       	std	Z+4, r24	; 0x04
    13e0:	95 83       	std	Z+5, r25	; 0x05
    13e2:	a6 83       	std	Z+6, r26	; 0x06
    13e4:	b7 83       	std	Z+7, r27	; 0x07
    13e6:	0d c0       	rjmp	.+26     	; 0x1402 <_fpadd_parts+0x20e>
    13e8:	22 0f       	add	r18, r18
    13ea:	33 1f       	adc	r19, r19
    13ec:	44 1f       	adc	r20, r20
    13ee:	55 1f       	adc	r21, r21
    13f0:	24 83       	std	Z+4, r18	; 0x04
    13f2:	35 83       	std	Z+5, r19	; 0x05
    13f4:	46 83       	std	Z+6, r20	; 0x06
    13f6:	57 83       	std	Z+7, r21	; 0x07
    13f8:	82 81       	ldd	r24, Z+2	; 0x02
    13fa:	93 81       	ldd	r25, Z+3	; 0x03
    13fc:	01 97       	sbiw	r24, 0x01	; 1
    13fe:	93 83       	std	Z+3, r25	; 0x03
    1400:	82 83       	std	Z+2, r24	; 0x02
    1402:	24 81       	ldd	r18, Z+4	; 0x04
    1404:	35 81       	ldd	r19, Z+5	; 0x05
    1406:	46 81       	ldd	r20, Z+6	; 0x06
    1408:	57 81       	ldd	r21, Z+7	; 0x07
    140a:	da 01       	movw	r26, r20
    140c:	c9 01       	movw	r24, r18
    140e:	01 97       	sbiw	r24, 0x01	; 1
    1410:	a1 09       	sbc	r26, r1
    1412:	b1 09       	sbc	r27, r1
    1414:	8f 5f       	subi	r24, 0xFF	; 255
    1416:	9f 4f       	sbci	r25, 0xFF	; 255
    1418:	af 4f       	sbci	r26, 0xFF	; 255
    141a:	bf 43       	sbci	r27, 0x3F	; 63
    141c:	28 f3       	brcs	.-54     	; 0x13e8 <_fpadd_parts+0x1f4>
    141e:	0b c0       	rjmp	.+22     	; 0x1436 <_fpadd_parts+0x242>
    1420:	91 83       	std	Z+1, r25	; 0x01
    1422:	33 82       	std	Z+3, r3	; 0x03
    1424:	22 82       	std	Z+2, r2	; 0x02
    1426:	ea 0c       	add	r14, r10
    1428:	fb 1c       	adc	r15, r11
    142a:	0c 1d       	adc	r16, r12
    142c:	1d 1d       	adc	r17, r13
    142e:	e4 82       	std	Z+4, r14	; 0x04
    1430:	f5 82       	std	Z+5, r15	; 0x05
    1432:	06 83       	std	Z+6, r16	; 0x06
    1434:	17 83       	std	Z+7, r17	; 0x07
    1436:	83 e0       	ldi	r24, 0x03	; 3
    1438:	80 83       	st	Z, r24
    143a:	24 81       	ldd	r18, Z+4	; 0x04
    143c:	35 81       	ldd	r19, Z+5	; 0x05
    143e:	46 81       	ldd	r20, Z+6	; 0x06
    1440:	57 81       	ldd	r21, Z+7	; 0x07
    1442:	57 ff       	sbrs	r21, 7
    1444:	1a c0       	rjmp	.+52     	; 0x147a <_fpadd_parts+0x286>
    1446:	c9 01       	movw	r24, r18
    1448:	aa 27       	eor	r26, r26
    144a:	97 fd       	sbrc	r25, 7
    144c:	a0 95       	com	r26
    144e:	ba 2f       	mov	r27, r26
    1450:	81 70       	andi	r24, 0x01	; 1
    1452:	90 70       	andi	r25, 0x00	; 0
    1454:	a0 70       	andi	r26, 0x00	; 0
    1456:	b0 70       	andi	r27, 0x00	; 0
    1458:	56 95       	lsr	r21
    145a:	47 95       	ror	r20
    145c:	37 95       	ror	r19
    145e:	27 95       	ror	r18
    1460:	82 2b       	or	r24, r18
    1462:	93 2b       	or	r25, r19
    1464:	a4 2b       	or	r26, r20
    1466:	b5 2b       	or	r27, r21
    1468:	84 83       	std	Z+4, r24	; 0x04
    146a:	95 83       	std	Z+5, r25	; 0x05
    146c:	a6 83       	std	Z+6, r26	; 0x06
    146e:	b7 83       	std	Z+7, r27	; 0x07
    1470:	82 81       	ldd	r24, Z+2	; 0x02
    1472:	93 81       	ldd	r25, Z+3	; 0x03
    1474:	01 96       	adiw	r24, 0x01	; 1
    1476:	93 83       	std	Z+3, r25	; 0x03
    1478:	82 83       	std	Z+2, r24	; 0x02
    147a:	df 01       	movw	r26, r30
    147c:	01 c0       	rjmp	.+2      	; 0x1480 <_fpadd_parts+0x28c>
    147e:	d2 01       	movw	r26, r4
    1480:	cd 01       	movw	r24, r26
    1482:	cd b7       	in	r28, 0x3d	; 61
    1484:	de b7       	in	r29, 0x3e	; 62
    1486:	e2 e1       	ldi	r30, 0x12	; 18
    1488:	0c 94 bc 0f 	jmp	0x1f78	; 0x1f78 <__epilogue_restores__>

0000148c <__subsf3>:
    148c:	a0 e2       	ldi	r26, 0x20	; 32
    148e:	b0 e0       	ldi	r27, 0x00	; 0
    1490:	ec e4       	ldi	r30, 0x4C	; 76
    1492:	fa e0       	ldi	r31, 0x0A	; 10
    1494:	0c 94 ac 0f 	jmp	0x1f58	; 0x1f58 <__prologue_saves__+0x18>
    1498:	69 83       	std	Y+1, r22	; 0x01
    149a:	7a 83       	std	Y+2, r23	; 0x02
    149c:	8b 83       	std	Y+3, r24	; 0x03
    149e:	9c 83       	std	Y+4, r25	; 0x04
    14a0:	2d 83       	std	Y+5, r18	; 0x05
    14a2:	3e 83       	std	Y+6, r19	; 0x06
    14a4:	4f 83       	std	Y+7, r20	; 0x07
    14a6:	58 87       	std	Y+8, r21	; 0x08
    14a8:	e9 e0       	ldi	r30, 0x09	; 9
    14aa:	ee 2e       	mov	r14, r30
    14ac:	f1 2c       	mov	r15, r1
    14ae:	ec 0e       	add	r14, r28
    14b0:	fd 1e       	adc	r15, r29
    14b2:	ce 01       	movw	r24, r28
    14b4:	01 96       	adiw	r24, 0x01	; 1
    14b6:	b7 01       	movw	r22, r14
    14b8:	0e 94 b0 0e 	call	0x1d60	; 0x1d60 <__unpack_f>
    14bc:	8e 01       	movw	r16, r28
    14be:	0f 5e       	subi	r16, 0xEF	; 239
    14c0:	1f 4f       	sbci	r17, 0xFF	; 255
    14c2:	ce 01       	movw	r24, r28
    14c4:	05 96       	adiw	r24, 0x05	; 5
    14c6:	b8 01       	movw	r22, r16
    14c8:	0e 94 b0 0e 	call	0x1d60	; 0x1d60 <__unpack_f>
    14cc:	8a 89       	ldd	r24, Y+18	; 0x12
    14ce:	91 e0       	ldi	r25, 0x01	; 1
    14d0:	89 27       	eor	r24, r25
    14d2:	8a 8b       	std	Y+18, r24	; 0x12
    14d4:	c7 01       	movw	r24, r14
    14d6:	b8 01       	movw	r22, r16
    14d8:	ae 01       	movw	r20, r28
    14da:	47 5e       	subi	r20, 0xE7	; 231
    14dc:	5f 4f       	sbci	r21, 0xFF	; 255
    14de:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <_fpadd_parts>
    14e2:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <__pack_f>
    14e6:	a0 96       	adiw	r28, 0x20	; 32
    14e8:	e6 e0       	ldi	r30, 0x06	; 6
    14ea:	0c 94 c8 0f 	jmp	0x1f90	; 0x1f90 <__epilogue_restores__+0x18>

000014ee <__addsf3>:
    14ee:	a0 e2       	ldi	r26, 0x20	; 32
    14f0:	b0 e0       	ldi	r27, 0x00	; 0
    14f2:	ed e7       	ldi	r30, 0x7D	; 125
    14f4:	fa e0       	ldi	r31, 0x0A	; 10
    14f6:	0c 94 ac 0f 	jmp	0x1f58	; 0x1f58 <__prologue_saves__+0x18>
    14fa:	69 83       	std	Y+1, r22	; 0x01
    14fc:	7a 83       	std	Y+2, r23	; 0x02
    14fe:	8b 83       	std	Y+3, r24	; 0x03
    1500:	9c 83       	std	Y+4, r25	; 0x04
    1502:	2d 83       	std	Y+5, r18	; 0x05
    1504:	3e 83       	std	Y+6, r19	; 0x06
    1506:	4f 83       	std	Y+7, r20	; 0x07
    1508:	58 87       	std	Y+8, r21	; 0x08
    150a:	f9 e0       	ldi	r31, 0x09	; 9
    150c:	ef 2e       	mov	r14, r31
    150e:	f1 2c       	mov	r15, r1
    1510:	ec 0e       	add	r14, r28
    1512:	fd 1e       	adc	r15, r29
    1514:	ce 01       	movw	r24, r28
    1516:	01 96       	adiw	r24, 0x01	; 1
    1518:	b7 01       	movw	r22, r14
    151a:	0e 94 b0 0e 	call	0x1d60	; 0x1d60 <__unpack_f>
    151e:	8e 01       	movw	r16, r28
    1520:	0f 5e       	subi	r16, 0xEF	; 239
    1522:	1f 4f       	sbci	r17, 0xFF	; 255
    1524:	ce 01       	movw	r24, r28
    1526:	05 96       	adiw	r24, 0x05	; 5
    1528:	b8 01       	movw	r22, r16
    152a:	0e 94 b0 0e 	call	0x1d60	; 0x1d60 <__unpack_f>
    152e:	c7 01       	movw	r24, r14
    1530:	b8 01       	movw	r22, r16
    1532:	ae 01       	movw	r20, r28
    1534:	47 5e       	subi	r20, 0xE7	; 231
    1536:	5f 4f       	sbci	r21, 0xFF	; 255
    1538:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <_fpadd_parts>
    153c:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <__pack_f>
    1540:	a0 96       	adiw	r28, 0x20	; 32
    1542:	e6 e0       	ldi	r30, 0x06	; 6
    1544:	0c 94 c8 0f 	jmp	0x1f90	; 0x1f90 <__epilogue_restores__+0x18>

00001548 <__mulsf3>:
    1548:	a0 e2       	ldi	r26, 0x20	; 32
    154a:	b0 e0       	ldi	r27, 0x00	; 0
    154c:	ea ea       	ldi	r30, 0xAA	; 170
    154e:	fa e0       	ldi	r31, 0x0A	; 10
    1550:	0c 94 a0 0f 	jmp	0x1f40	; 0x1f40 <__prologue_saves__>
    1554:	69 83       	std	Y+1, r22	; 0x01
    1556:	7a 83       	std	Y+2, r23	; 0x02
    1558:	8b 83       	std	Y+3, r24	; 0x03
    155a:	9c 83       	std	Y+4, r25	; 0x04
    155c:	2d 83       	std	Y+5, r18	; 0x05
    155e:	3e 83       	std	Y+6, r19	; 0x06
    1560:	4f 83       	std	Y+7, r20	; 0x07
    1562:	58 87       	std	Y+8, r21	; 0x08
    1564:	ce 01       	movw	r24, r28
    1566:	01 96       	adiw	r24, 0x01	; 1
    1568:	be 01       	movw	r22, r28
    156a:	67 5f       	subi	r22, 0xF7	; 247
    156c:	7f 4f       	sbci	r23, 0xFF	; 255
    156e:	0e 94 b0 0e 	call	0x1d60	; 0x1d60 <__unpack_f>
    1572:	ce 01       	movw	r24, r28
    1574:	05 96       	adiw	r24, 0x05	; 5
    1576:	be 01       	movw	r22, r28
    1578:	6f 5e       	subi	r22, 0xEF	; 239
    157a:	7f 4f       	sbci	r23, 0xFF	; 255
    157c:	0e 94 b0 0e 	call	0x1d60	; 0x1d60 <__unpack_f>
    1580:	99 85       	ldd	r25, Y+9	; 0x09
    1582:	92 30       	cpi	r25, 0x02	; 2
    1584:	88 f0       	brcs	.+34     	; 0x15a8 <__mulsf3+0x60>
    1586:	89 89       	ldd	r24, Y+17	; 0x11
    1588:	82 30       	cpi	r24, 0x02	; 2
    158a:	c8 f0       	brcs	.+50     	; 0x15be <__mulsf3+0x76>
    158c:	94 30       	cpi	r25, 0x04	; 4
    158e:	19 f4       	brne	.+6      	; 0x1596 <__mulsf3+0x4e>
    1590:	82 30       	cpi	r24, 0x02	; 2
    1592:	51 f4       	brne	.+20     	; 0x15a8 <__mulsf3+0x60>
    1594:	04 c0       	rjmp	.+8      	; 0x159e <__mulsf3+0x56>
    1596:	84 30       	cpi	r24, 0x04	; 4
    1598:	29 f4       	brne	.+10     	; 0x15a4 <__mulsf3+0x5c>
    159a:	92 30       	cpi	r25, 0x02	; 2
    159c:	81 f4       	brne	.+32     	; 0x15be <__mulsf3+0x76>
    159e:	80 e0       	ldi	r24, 0x00	; 0
    15a0:	91 e0       	ldi	r25, 0x01	; 1
    15a2:	c6 c0       	rjmp	.+396    	; 0x1730 <__mulsf3+0x1e8>
    15a4:	92 30       	cpi	r25, 0x02	; 2
    15a6:	49 f4       	brne	.+18     	; 0x15ba <__mulsf3+0x72>
    15a8:	20 e0       	ldi	r18, 0x00	; 0
    15aa:	9a 85       	ldd	r25, Y+10	; 0x0a
    15ac:	8a 89       	ldd	r24, Y+18	; 0x12
    15ae:	98 13       	cpse	r25, r24
    15b0:	21 e0       	ldi	r18, 0x01	; 1
    15b2:	2a 87       	std	Y+10, r18	; 0x0a
    15b4:	ce 01       	movw	r24, r28
    15b6:	09 96       	adiw	r24, 0x09	; 9
    15b8:	bb c0       	rjmp	.+374    	; 0x1730 <__mulsf3+0x1e8>
    15ba:	82 30       	cpi	r24, 0x02	; 2
    15bc:	49 f4       	brne	.+18     	; 0x15d0 <__mulsf3+0x88>
    15be:	20 e0       	ldi	r18, 0x00	; 0
    15c0:	9a 85       	ldd	r25, Y+10	; 0x0a
    15c2:	8a 89       	ldd	r24, Y+18	; 0x12
    15c4:	98 13       	cpse	r25, r24
    15c6:	21 e0       	ldi	r18, 0x01	; 1
    15c8:	2a 8b       	std	Y+18, r18	; 0x12
    15ca:	ce 01       	movw	r24, r28
    15cc:	41 96       	adiw	r24, 0x11	; 17
    15ce:	b0 c0       	rjmp	.+352    	; 0x1730 <__mulsf3+0x1e8>
    15d0:	2d 84       	ldd	r2, Y+13	; 0x0d
    15d2:	3e 84       	ldd	r3, Y+14	; 0x0e
    15d4:	4f 84       	ldd	r4, Y+15	; 0x0f
    15d6:	58 88       	ldd	r5, Y+16	; 0x10
    15d8:	6d 88       	ldd	r6, Y+21	; 0x15
    15da:	7e 88       	ldd	r7, Y+22	; 0x16
    15dc:	8f 88       	ldd	r8, Y+23	; 0x17
    15de:	98 8c       	ldd	r9, Y+24	; 0x18
    15e0:	ee 24       	eor	r14, r14
    15e2:	ff 24       	eor	r15, r15
    15e4:	87 01       	movw	r16, r14
    15e6:	aa 24       	eor	r10, r10
    15e8:	bb 24       	eor	r11, r11
    15ea:	65 01       	movw	r12, r10
    15ec:	40 e0       	ldi	r20, 0x00	; 0
    15ee:	50 e0       	ldi	r21, 0x00	; 0
    15f0:	60 e0       	ldi	r22, 0x00	; 0
    15f2:	70 e0       	ldi	r23, 0x00	; 0
    15f4:	e0 e0       	ldi	r30, 0x00	; 0
    15f6:	f0 e0       	ldi	r31, 0x00	; 0
    15f8:	c1 01       	movw	r24, r2
    15fa:	81 70       	andi	r24, 0x01	; 1
    15fc:	90 70       	andi	r25, 0x00	; 0
    15fe:	89 2b       	or	r24, r25
    1600:	e9 f0       	breq	.+58     	; 0x163c <__mulsf3+0xf4>
    1602:	e6 0c       	add	r14, r6
    1604:	f7 1c       	adc	r15, r7
    1606:	08 1d       	adc	r16, r8
    1608:	19 1d       	adc	r17, r9
    160a:	9a 01       	movw	r18, r20
    160c:	ab 01       	movw	r20, r22
    160e:	2a 0d       	add	r18, r10
    1610:	3b 1d       	adc	r19, r11
    1612:	4c 1d       	adc	r20, r12
    1614:	5d 1d       	adc	r21, r13
    1616:	80 e0       	ldi	r24, 0x00	; 0
    1618:	90 e0       	ldi	r25, 0x00	; 0
    161a:	a0 e0       	ldi	r26, 0x00	; 0
    161c:	b0 e0       	ldi	r27, 0x00	; 0
    161e:	e6 14       	cp	r14, r6
    1620:	f7 04       	cpc	r15, r7
    1622:	08 05       	cpc	r16, r8
    1624:	19 05       	cpc	r17, r9
    1626:	20 f4       	brcc	.+8      	; 0x1630 <__mulsf3+0xe8>
    1628:	81 e0       	ldi	r24, 0x01	; 1
    162a:	90 e0       	ldi	r25, 0x00	; 0
    162c:	a0 e0       	ldi	r26, 0x00	; 0
    162e:	b0 e0       	ldi	r27, 0x00	; 0
    1630:	ba 01       	movw	r22, r20
    1632:	a9 01       	movw	r20, r18
    1634:	48 0f       	add	r20, r24
    1636:	59 1f       	adc	r21, r25
    1638:	6a 1f       	adc	r22, r26
    163a:	7b 1f       	adc	r23, r27
    163c:	aa 0c       	add	r10, r10
    163e:	bb 1c       	adc	r11, r11
    1640:	cc 1c       	adc	r12, r12
    1642:	dd 1c       	adc	r13, r13
    1644:	97 fe       	sbrs	r9, 7
    1646:	08 c0       	rjmp	.+16     	; 0x1658 <__mulsf3+0x110>
    1648:	81 e0       	ldi	r24, 0x01	; 1
    164a:	90 e0       	ldi	r25, 0x00	; 0
    164c:	a0 e0       	ldi	r26, 0x00	; 0
    164e:	b0 e0       	ldi	r27, 0x00	; 0
    1650:	a8 2a       	or	r10, r24
    1652:	b9 2a       	or	r11, r25
    1654:	ca 2a       	or	r12, r26
    1656:	db 2a       	or	r13, r27
    1658:	31 96       	adiw	r30, 0x01	; 1
    165a:	e0 32       	cpi	r30, 0x20	; 32
    165c:	f1 05       	cpc	r31, r1
    165e:	49 f0       	breq	.+18     	; 0x1672 <__mulsf3+0x12a>
    1660:	66 0c       	add	r6, r6
    1662:	77 1c       	adc	r7, r7
    1664:	88 1c       	adc	r8, r8
    1666:	99 1c       	adc	r9, r9
    1668:	56 94       	lsr	r5
    166a:	47 94       	ror	r4
    166c:	37 94       	ror	r3
    166e:	27 94       	ror	r2
    1670:	c3 cf       	rjmp	.-122    	; 0x15f8 <__mulsf3+0xb0>
    1672:	fa 85       	ldd	r31, Y+10	; 0x0a
    1674:	ea 89       	ldd	r30, Y+18	; 0x12
    1676:	2b 89       	ldd	r18, Y+19	; 0x13
    1678:	3c 89       	ldd	r19, Y+20	; 0x14
    167a:	8b 85       	ldd	r24, Y+11	; 0x0b
    167c:	9c 85       	ldd	r25, Y+12	; 0x0c
    167e:	28 0f       	add	r18, r24
    1680:	39 1f       	adc	r19, r25
    1682:	2e 5f       	subi	r18, 0xFE	; 254
    1684:	3f 4f       	sbci	r19, 0xFF	; 255
    1686:	17 c0       	rjmp	.+46     	; 0x16b6 <__mulsf3+0x16e>
    1688:	ca 01       	movw	r24, r20
    168a:	81 70       	andi	r24, 0x01	; 1
    168c:	90 70       	andi	r25, 0x00	; 0
    168e:	89 2b       	or	r24, r25
    1690:	61 f0       	breq	.+24     	; 0x16aa <__mulsf3+0x162>
    1692:	16 95       	lsr	r17
    1694:	07 95       	ror	r16
    1696:	f7 94       	ror	r15
    1698:	e7 94       	ror	r14
    169a:	80 e0       	ldi	r24, 0x00	; 0
    169c:	90 e0       	ldi	r25, 0x00	; 0
    169e:	a0 e0       	ldi	r26, 0x00	; 0
    16a0:	b0 e8       	ldi	r27, 0x80	; 128
    16a2:	e8 2a       	or	r14, r24
    16a4:	f9 2a       	or	r15, r25
    16a6:	0a 2b       	or	r16, r26
    16a8:	1b 2b       	or	r17, r27
    16aa:	76 95       	lsr	r23
    16ac:	67 95       	ror	r22
    16ae:	57 95       	ror	r21
    16b0:	47 95       	ror	r20
    16b2:	2f 5f       	subi	r18, 0xFF	; 255
    16b4:	3f 4f       	sbci	r19, 0xFF	; 255
    16b6:	77 fd       	sbrc	r23, 7
    16b8:	e7 cf       	rjmp	.-50     	; 0x1688 <__mulsf3+0x140>
    16ba:	0c c0       	rjmp	.+24     	; 0x16d4 <__mulsf3+0x18c>
    16bc:	44 0f       	add	r20, r20
    16be:	55 1f       	adc	r21, r21
    16c0:	66 1f       	adc	r22, r22
    16c2:	77 1f       	adc	r23, r23
    16c4:	17 fd       	sbrc	r17, 7
    16c6:	41 60       	ori	r20, 0x01	; 1
    16c8:	ee 0c       	add	r14, r14
    16ca:	ff 1c       	adc	r15, r15
    16cc:	00 1f       	adc	r16, r16
    16ce:	11 1f       	adc	r17, r17
    16d0:	21 50       	subi	r18, 0x01	; 1
    16d2:	30 40       	sbci	r19, 0x00	; 0
    16d4:	40 30       	cpi	r20, 0x00	; 0
    16d6:	90 e0       	ldi	r25, 0x00	; 0
    16d8:	59 07       	cpc	r21, r25
    16da:	90 e0       	ldi	r25, 0x00	; 0
    16dc:	69 07       	cpc	r22, r25
    16de:	90 e4       	ldi	r25, 0x40	; 64
    16e0:	79 07       	cpc	r23, r25
    16e2:	60 f3       	brcs	.-40     	; 0x16bc <__mulsf3+0x174>
    16e4:	2b 8f       	std	Y+27, r18	; 0x1b
    16e6:	3c 8f       	std	Y+28, r19	; 0x1c
    16e8:	db 01       	movw	r26, r22
    16ea:	ca 01       	movw	r24, r20
    16ec:	8f 77       	andi	r24, 0x7F	; 127
    16ee:	90 70       	andi	r25, 0x00	; 0
    16f0:	a0 70       	andi	r26, 0x00	; 0
    16f2:	b0 70       	andi	r27, 0x00	; 0
    16f4:	80 34       	cpi	r24, 0x40	; 64
    16f6:	91 05       	cpc	r25, r1
    16f8:	a1 05       	cpc	r26, r1
    16fa:	b1 05       	cpc	r27, r1
    16fc:	61 f4       	brne	.+24     	; 0x1716 <__mulsf3+0x1ce>
    16fe:	47 fd       	sbrc	r20, 7
    1700:	0a c0       	rjmp	.+20     	; 0x1716 <__mulsf3+0x1ce>
    1702:	e1 14       	cp	r14, r1
    1704:	f1 04       	cpc	r15, r1
    1706:	01 05       	cpc	r16, r1
    1708:	11 05       	cpc	r17, r1
    170a:	29 f0       	breq	.+10     	; 0x1716 <__mulsf3+0x1ce>
    170c:	40 5c       	subi	r20, 0xC0	; 192
    170e:	5f 4f       	sbci	r21, 0xFF	; 255
    1710:	6f 4f       	sbci	r22, 0xFF	; 255
    1712:	7f 4f       	sbci	r23, 0xFF	; 255
    1714:	40 78       	andi	r20, 0x80	; 128
    1716:	1a 8e       	std	Y+26, r1	; 0x1a
    1718:	fe 17       	cp	r31, r30
    171a:	11 f0       	breq	.+4      	; 0x1720 <__mulsf3+0x1d8>
    171c:	81 e0       	ldi	r24, 0x01	; 1
    171e:	8a 8f       	std	Y+26, r24	; 0x1a
    1720:	4d 8f       	std	Y+29, r20	; 0x1d
    1722:	5e 8f       	std	Y+30, r21	; 0x1e
    1724:	6f 8f       	std	Y+31, r22	; 0x1f
    1726:	78 a3       	std	Y+32, r23	; 0x20
    1728:	83 e0       	ldi	r24, 0x03	; 3
    172a:	89 8f       	std	Y+25, r24	; 0x19
    172c:	ce 01       	movw	r24, r28
    172e:	49 96       	adiw	r24, 0x19	; 25
    1730:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <__pack_f>
    1734:	a0 96       	adiw	r28, 0x20	; 32
    1736:	e2 e1       	ldi	r30, 0x12	; 18
    1738:	0c 94 bc 0f 	jmp	0x1f78	; 0x1f78 <__epilogue_restores__>

0000173c <__divsf3>:
    173c:	a8 e1       	ldi	r26, 0x18	; 24
    173e:	b0 e0       	ldi	r27, 0x00	; 0
    1740:	e4 ea       	ldi	r30, 0xA4	; 164
    1742:	fb e0       	ldi	r31, 0x0B	; 11
    1744:	0c 94 a8 0f 	jmp	0x1f50	; 0x1f50 <__prologue_saves__+0x10>
    1748:	69 83       	std	Y+1, r22	; 0x01
    174a:	7a 83       	std	Y+2, r23	; 0x02
    174c:	8b 83       	std	Y+3, r24	; 0x03
    174e:	9c 83       	std	Y+4, r25	; 0x04
    1750:	2d 83       	std	Y+5, r18	; 0x05
    1752:	3e 83       	std	Y+6, r19	; 0x06
    1754:	4f 83       	std	Y+7, r20	; 0x07
    1756:	58 87       	std	Y+8, r21	; 0x08
    1758:	b9 e0       	ldi	r27, 0x09	; 9
    175a:	eb 2e       	mov	r14, r27
    175c:	f1 2c       	mov	r15, r1
    175e:	ec 0e       	add	r14, r28
    1760:	fd 1e       	adc	r15, r29
    1762:	ce 01       	movw	r24, r28
    1764:	01 96       	adiw	r24, 0x01	; 1
    1766:	b7 01       	movw	r22, r14
    1768:	0e 94 b0 0e 	call	0x1d60	; 0x1d60 <__unpack_f>
    176c:	8e 01       	movw	r16, r28
    176e:	0f 5e       	subi	r16, 0xEF	; 239
    1770:	1f 4f       	sbci	r17, 0xFF	; 255
    1772:	ce 01       	movw	r24, r28
    1774:	05 96       	adiw	r24, 0x05	; 5
    1776:	b8 01       	movw	r22, r16
    1778:	0e 94 b0 0e 	call	0x1d60	; 0x1d60 <__unpack_f>
    177c:	29 85       	ldd	r18, Y+9	; 0x09
    177e:	22 30       	cpi	r18, 0x02	; 2
    1780:	08 f4       	brcc	.+2      	; 0x1784 <__divsf3+0x48>
    1782:	7e c0       	rjmp	.+252    	; 0x1880 <__divsf3+0x144>
    1784:	39 89       	ldd	r19, Y+17	; 0x11
    1786:	32 30       	cpi	r19, 0x02	; 2
    1788:	10 f4       	brcc	.+4      	; 0x178e <__divsf3+0x52>
    178a:	b8 01       	movw	r22, r16
    178c:	7c c0       	rjmp	.+248    	; 0x1886 <__divsf3+0x14a>
    178e:	8a 85       	ldd	r24, Y+10	; 0x0a
    1790:	9a 89       	ldd	r25, Y+18	; 0x12
    1792:	89 27       	eor	r24, r25
    1794:	8a 87       	std	Y+10, r24	; 0x0a
    1796:	24 30       	cpi	r18, 0x04	; 4
    1798:	11 f0       	breq	.+4      	; 0x179e <__divsf3+0x62>
    179a:	22 30       	cpi	r18, 0x02	; 2
    179c:	31 f4       	brne	.+12     	; 0x17aa <__divsf3+0x6e>
    179e:	23 17       	cp	r18, r19
    17a0:	09 f0       	breq	.+2      	; 0x17a4 <__divsf3+0x68>
    17a2:	6e c0       	rjmp	.+220    	; 0x1880 <__divsf3+0x144>
    17a4:	60 e0       	ldi	r22, 0x00	; 0
    17a6:	71 e0       	ldi	r23, 0x01	; 1
    17a8:	6e c0       	rjmp	.+220    	; 0x1886 <__divsf3+0x14a>
    17aa:	34 30       	cpi	r19, 0x04	; 4
    17ac:	39 f4       	brne	.+14     	; 0x17bc <__divsf3+0x80>
    17ae:	1d 86       	std	Y+13, r1	; 0x0d
    17b0:	1e 86       	std	Y+14, r1	; 0x0e
    17b2:	1f 86       	std	Y+15, r1	; 0x0f
    17b4:	18 8a       	std	Y+16, r1	; 0x10
    17b6:	1c 86       	std	Y+12, r1	; 0x0c
    17b8:	1b 86       	std	Y+11, r1	; 0x0b
    17ba:	04 c0       	rjmp	.+8      	; 0x17c4 <__divsf3+0x88>
    17bc:	32 30       	cpi	r19, 0x02	; 2
    17be:	21 f4       	brne	.+8      	; 0x17c8 <__divsf3+0x8c>
    17c0:	84 e0       	ldi	r24, 0x04	; 4
    17c2:	89 87       	std	Y+9, r24	; 0x09
    17c4:	b7 01       	movw	r22, r14
    17c6:	5f c0       	rjmp	.+190    	; 0x1886 <__divsf3+0x14a>
    17c8:	2b 85       	ldd	r18, Y+11	; 0x0b
    17ca:	3c 85       	ldd	r19, Y+12	; 0x0c
    17cc:	8b 89       	ldd	r24, Y+19	; 0x13
    17ce:	9c 89       	ldd	r25, Y+20	; 0x14
    17d0:	28 1b       	sub	r18, r24
    17d2:	39 0b       	sbc	r19, r25
    17d4:	3c 87       	std	Y+12, r19	; 0x0c
    17d6:	2b 87       	std	Y+11, r18	; 0x0b
    17d8:	ed 84       	ldd	r14, Y+13	; 0x0d
    17da:	fe 84       	ldd	r15, Y+14	; 0x0e
    17dc:	0f 85       	ldd	r16, Y+15	; 0x0f
    17de:	18 89       	ldd	r17, Y+16	; 0x10
    17e0:	ad 88       	ldd	r10, Y+21	; 0x15
    17e2:	be 88       	ldd	r11, Y+22	; 0x16
    17e4:	cf 88       	ldd	r12, Y+23	; 0x17
    17e6:	d8 8c       	ldd	r13, Y+24	; 0x18
    17e8:	ea 14       	cp	r14, r10
    17ea:	fb 04       	cpc	r15, r11
    17ec:	0c 05       	cpc	r16, r12
    17ee:	1d 05       	cpc	r17, r13
    17f0:	40 f4       	brcc	.+16     	; 0x1802 <__divsf3+0xc6>
    17f2:	ee 0c       	add	r14, r14
    17f4:	ff 1c       	adc	r15, r15
    17f6:	00 1f       	adc	r16, r16
    17f8:	11 1f       	adc	r17, r17
    17fa:	21 50       	subi	r18, 0x01	; 1
    17fc:	30 40       	sbci	r19, 0x00	; 0
    17fe:	3c 87       	std	Y+12, r19	; 0x0c
    1800:	2b 87       	std	Y+11, r18	; 0x0b
    1802:	20 e0       	ldi	r18, 0x00	; 0
    1804:	30 e0       	ldi	r19, 0x00	; 0
    1806:	40 e0       	ldi	r20, 0x00	; 0
    1808:	50 e0       	ldi	r21, 0x00	; 0
    180a:	80 e0       	ldi	r24, 0x00	; 0
    180c:	90 e0       	ldi	r25, 0x00	; 0
    180e:	a0 e0       	ldi	r26, 0x00	; 0
    1810:	b0 e4       	ldi	r27, 0x40	; 64
    1812:	60 e0       	ldi	r22, 0x00	; 0
    1814:	70 e0       	ldi	r23, 0x00	; 0
    1816:	ea 14       	cp	r14, r10
    1818:	fb 04       	cpc	r15, r11
    181a:	0c 05       	cpc	r16, r12
    181c:	1d 05       	cpc	r17, r13
    181e:	40 f0       	brcs	.+16     	; 0x1830 <__divsf3+0xf4>
    1820:	28 2b       	or	r18, r24
    1822:	39 2b       	or	r19, r25
    1824:	4a 2b       	or	r20, r26
    1826:	5b 2b       	or	r21, r27
    1828:	ea 18       	sub	r14, r10
    182a:	fb 08       	sbc	r15, r11
    182c:	0c 09       	sbc	r16, r12
    182e:	1d 09       	sbc	r17, r13
    1830:	b6 95       	lsr	r27
    1832:	a7 95       	ror	r26
    1834:	97 95       	ror	r25
    1836:	87 95       	ror	r24
    1838:	ee 0c       	add	r14, r14
    183a:	ff 1c       	adc	r15, r15
    183c:	00 1f       	adc	r16, r16
    183e:	11 1f       	adc	r17, r17
    1840:	6f 5f       	subi	r22, 0xFF	; 255
    1842:	7f 4f       	sbci	r23, 0xFF	; 255
    1844:	6f 31       	cpi	r22, 0x1F	; 31
    1846:	71 05       	cpc	r23, r1
    1848:	31 f7       	brne	.-52     	; 0x1816 <__divsf3+0xda>
    184a:	da 01       	movw	r26, r20
    184c:	c9 01       	movw	r24, r18
    184e:	8f 77       	andi	r24, 0x7F	; 127
    1850:	90 70       	andi	r25, 0x00	; 0
    1852:	a0 70       	andi	r26, 0x00	; 0
    1854:	b0 70       	andi	r27, 0x00	; 0
    1856:	80 34       	cpi	r24, 0x40	; 64
    1858:	91 05       	cpc	r25, r1
    185a:	a1 05       	cpc	r26, r1
    185c:	b1 05       	cpc	r27, r1
    185e:	61 f4       	brne	.+24     	; 0x1878 <__divsf3+0x13c>
    1860:	27 fd       	sbrc	r18, 7
    1862:	0a c0       	rjmp	.+20     	; 0x1878 <__divsf3+0x13c>
    1864:	e1 14       	cp	r14, r1
    1866:	f1 04       	cpc	r15, r1
    1868:	01 05       	cpc	r16, r1
    186a:	11 05       	cpc	r17, r1
    186c:	29 f0       	breq	.+10     	; 0x1878 <__divsf3+0x13c>
    186e:	20 5c       	subi	r18, 0xC0	; 192
    1870:	3f 4f       	sbci	r19, 0xFF	; 255
    1872:	4f 4f       	sbci	r20, 0xFF	; 255
    1874:	5f 4f       	sbci	r21, 0xFF	; 255
    1876:	20 78       	andi	r18, 0x80	; 128
    1878:	2d 87       	std	Y+13, r18	; 0x0d
    187a:	3e 87       	std	Y+14, r19	; 0x0e
    187c:	4f 87       	std	Y+15, r20	; 0x0f
    187e:	58 8b       	std	Y+16, r21	; 0x10
    1880:	be 01       	movw	r22, r28
    1882:	67 5f       	subi	r22, 0xF7	; 247
    1884:	7f 4f       	sbci	r23, 0xFF	; 255
    1886:	cb 01       	movw	r24, r22
    1888:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <__pack_f>
    188c:	68 96       	adiw	r28, 0x18	; 24
    188e:	ea e0       	ldi	r30, 0x0A	; 10
    1890:	0c 94 c4 0f 	jmp	0x1f88	; 0x1f88 <__epilogue_restores__+0x10>

00001894 <__gtsf2>:
    1894:	a8 e1       	ldi	r26, 0x18	; 24
    1896:	b0 e0       	ldi	r27, 0x00	; 0
    1898:	e0 e5       	ldi	r30, 0x50	; 80
    189a:	fc e0       	ldi	r31, 0x0C	; 12
    189c:	0c 94 ac 0f 	jmp	0x1f58	; 0x1f58 <__prologue_saves__+0x18>
    18a0:	69 83       	std	Y+1, r22	; 0x01
    18a2:	7a 83       	std	Y+2, r23	; 0x02
    18a4:	8b 83       	std	Y+3, r24	; 0x03
    18a6:	9c 83       	std	Y+4, r25	; 0x04
    18a8:	2d 83       	std	Y+5, r18	; 0x05
    18aa:	3e 83       	std	Y+6, r19	; 0x06
    18ac:	4f 83       	std	Y+7, r20	; 0x07
    18ae:	58 87       	std	Y+8, r21	; 0x08
    18b0:	89 e0       	ldi	r24, 0x09	; 9
    18b2:	e8 2e       	mov	r14, r24
    18b4:	f1 2c       	mov	r15, r1
    18b6:	ec 0e       	add	r14, r28
    18b8:	fd 1e       	adc	r15, r29
    18ba:	ce 01       	movw	r24, r28
    18bc:	01 96       	adiw	r24, 0x01	; 1
    18be:	b7 01       	movw	r22, r14
    18c0:	0e 94 b0 0e 	call	0x1d60	; 0x1d60 <__unpack_f>
    18c4:	8e 01       	movw	r16, r28
    18c6:	0f 5e       	subi	r16, 0xEF	; 239
    18c8:	1f 4f       	sbci	r17, 0xFF	; 255
    18ca:	ce 01       	movw	r24, r28
    18cc:	05 96       	adiw	r24, 0x05	; 5
    18ce:	b8 01       	movw	r22, r16
    18d0:	0e 94 b0 0e 	call	0x1d60	; 0x1d60 <__unpack_f>
    18d4:	89 85       	ldd	r24, Y+9	; 0x09
    18d6:	82 30       	cpi	r24, 0x02	; 2
    18d8:	40 f0       	brcs	.+16     	; 0x18ea <__gtsf2+0x56>
    18da:	89 89       	ldd	r24, Y+17	; 0x11
    18dc:	82 30       	cpi	r24, 0x02	; 2
    18de:	28 f0       	brcs	.+10     	; 0x18ea <__gtsf2+0x56>
    18e0:	c7 01       	movw	r24, r14
    18e2:	b8 01       	movw	r22, r16
    18e4:	0e 94 28 0f 	call	0x1e50	; 0x1e50 <__fpcmp_parts_f>
    18e8:	01 c0       	rjmp	.+2      	; 0x18ec <__gtsf2+0x58>
    18ea:	8f ef       	ldi	r24, 0xFF	; 255
    18ec:	68 96       	adiw	r28, 0x18	; 24
    18ee:	e6 e0       	ldi	r30, 0x06	; 6
    18f0:	0c 94 c8 0f 	jmp	0x1f90	; 0x1f90 <__epilogue_restores__+0x18>

000018f4 <__gesf2>:
    18f4:	a8 e1       	ldi	r26, 0x18	; 24
    18f6:	b0 e0       	ldi	r27, 0x00	; 0
    18f8:	e0 e8       	ldi	r30, 0x80	; 128
    18fa:	fc e0       	ldi	r31, 0x0C	; 12
    18fc:	0c 94 ac 0f 	jmp	0x1f58	; 0x1f58 <__prologue_saves__+0x18>
    1900:	69 83       	std	Y+1, r22	; 0x01
    1902:	7a 83       	std	Y+2, r23	; 0x02
    1904:	8b 83       	std	Y+3, r24	; 0x03
    1906:	9c 83       	std	Y+4, r25	; 0x04
    1908:	2d 83       	std	Y+5, r18	; 0x05
    190a:	3e 83       	std	Y+6, r19	; 0x06
    190c:	4f 83       	std	Y+7, r20	; 0x07
    190e:	58 87       	std	Y+8, r21	; 0x08
    1910:	89 e0       	ldi	r24, 0x09	; 9
    1912:	e8 2e       	mov	r14, r24
    1914:	f1 2c       	mov	r15, r1
    1916:	ec 0e       	add	r14, r28
    1918:	fd 1e       	adc	r15, r29
    191a:	ce 01       	movw	r24, r28
    191c:	01 96       	adiw	r24, 0x01	; 1
    191e:	b7 01       	movw	r22, r14
    1920:	0e 94 b0 0e 	call	0x1d60	; 0x1d60 <__unpack_f>
    1924:	8e 01       	movw	r16, r28
    1926:	0f 5e       	subi	r16, 0xEF	; 239
    1928:	1f 4f       	sbci	r17, 0xFF	; 255
    192a:	ce 01       	movw	r24, r28
    192c:	05 96       	adiw	r24, 0x05	; 5
    192e:	b8 01       	movw	r22, r16
    1930:	0e 94 b0 0e 	call	0x1d60	; 0x1d60 <__unpack_f>
    1934:	89 85       	ldd	r24, Y+9	; 0x09
    1936:	82 30       	cpi	r24, 0x02	; 2
    1938:	40 f0       	brcs	.+16     	; 0x194a <__gesf2+0x56>
    193a:	89 89       	ldd	r24, Y+17	; 0x11
    193c:	82 30       	cpi	r24, 0x02	; 2
    193e:	28 f0       	brcs	.+10     	; 0x194a <__gesf2+0x56>
    1940:	c7 01       	movw	r24, r14
    1942:	b8 01       	movw	r22, r16
    1944:	0e 94 28 0f 	call	0x1e50	; 0x1e50 <__fpcmp_parts_f>
    1948:	01 c0       	rjmp	.+2      	; 0x194c <__gesf2+0x58>
    194a:	8f ef       	ldi	r24, 0xFF	; 255
    194c:	68 96       	adiw	r28, 0x18	; 24
    194e:	e6 e0       	ldi	r30, 0x06	; 6
    1950:	0c 94 c8 0f 	jmp	0x1f90	; 0x1f90 <__epilogue_restores__+0x18>

00001954 <__ltsf2>:
    1954:	a8 e1       	ldi	r26, 0x18	; 24
    1956:	b0 e0       	ldi	r27, 0x00	; 0
    1958:	e0 eb       	ldi	r30, 0xB0	; 176
    195a:	fc e0       	ldi	r31, 0x0C	; 12
    195c:	0c 94 ac 0f 	jmp	0x1f58	; 0x1f58 <__prologue_saves__+0x18>
    1960:	69 83       	std	Y+1, r22	; 0x01
    1962:	7a 83       	std	Y+2, r23	; 0x02
    1964:	8b 83       	std	Y+3, r24	; 0x03
    1966:	9c 83       	std	Y+4, r25	; 0x04
    1968:	2d 83       	std	Y+5, r18	; 0x05
    196a:	3e 83       	std	Y+6, r19	; 0x06
    196c:	4f 83       	std	Y+7, r20	; 0x07
    196e:	58 87       	std	Y+8, r21	; 0x08
    1970:	89 e0       	ldi	r24, 0x09	; 9
    1972:	e8 2e       	mov	r14, r24
    1974:	f1 2c       	mov	r15, r1
    1976:	ec 0e       	add	r14, r28
    1978:	fd 1e       	adc	r15, r29
    197a:	ce 01       	movw	r24, r28
    197c:	01 96       	adiw	r24, 0x01	; 1
    197e:	b7 01       	movw	r22, r14
    1980:	0e 94 b0 0e 	call	0x1d60	; 0x1d60 <__unpack_f>
    1984:	8e 01       	movw	r16, r28
    1986:	0f 5e       	subi	r16, 0xEF	; 239
    1988:	1f 4f       	sbci	r17, 0xFF	; 255
    198a:	ce 01       	movw	r24, r28
    198c:	05 96       	adiw	r24, 0x05	; 5
    198e:	b8 01       	movw	r22, r16
    1990:	0e 94 b0 0e 	call	0x1d60	; 0x1d60 <__unpack_f>
    1994:	89 85       	ldd	r24, Y+9	; 0x09
    1996:	82 30       	cpi	r24, 0x02	; 2
    1998:	40 f0       	brcs	.+16     	; 0x19aa <__ltsf2+0x56>
    199a:	89 89       	ldd	r24, Y+17	; 0x11
    199c:	82 30       	cpi	r24, 0x02	; 2
    199e:	28 f0       	brcs	.+10     	; 0x19aa <__ltsf2+0x56>
    19a0:	c7 01       	movw	r24, r14
    19a2:	b8 01       	movw	r22, r16
    19a4:	0e 94 28 0f 	call	0x1e50	; 0x1e50 <__fpcmp_parts_f>
    19a8:	01 c0       	rjmp	.+2      	; 0x19ac <__ltsf2+0x58>
    19aa:	81 e0       	ldi	r24, 0x01	; 1
    19ac:	68 96       	adiw	r28, 0x18	; 24
    19ae:	e6 e0       	ldi	r30, 0x06	; 6
    19b0:	0c 94 c8 0f 	jmp	0x1f90	; 0x1f90 <__epilogue_restores__+0x18>

000019b4 <__floatsisf>:
    19b4:	a8 e0       	ldi	r26, 0x08	; 8
    19b6:	b0 e0       	ldi	r27, 0x00	; 0
    19b8:	e0 ee       	ldi	r30, 0xE0	; 224
    19ba:	fc e0       	ldi	r31, 0x0C	; 12
    19bc:	0c 94 a9 0f 	jmp	0x1f52	; 0x1f52 <__prologue_saves__+0x12>
    19c0:	9b 01       	movw	r18, r22
    19c2:	ac 01       	movw	r20, r24
    19c4:	83 e0       	ldi	r24, 0x03	; 3
    19c6:	89 83       	std	Y+1, r24	; 0x01
    19c8:	da 01       	movw	r26, r20
    19ca:	c9 01       	movw	r24, r18
    19cc:	88 27       	eor	r24, r24
    19ce:	b7 fd       	sbrc	r27, 7
    19d0:	83 95       	inc	r24
    19d2:	99 27       	eor	r25, r25
    19d4:	aa 27       	eor	r26, r26
    19d6:	bb 27       	eor	r27, r27
    19d8:	b8 2e       	mov	r11, r24
    19da:	21 15       	cp	r18, r1
    19dc:	31 05       	cpc	r19, r1
    19de:	41 05       	cpc	r20, r1
    19e0:	51 05       	cpc	r21, r1
    19e2:	19 f4       	brne	.+6      	; 0x19ea <__floatsisf+0x36>
    19e4:	82 e0       	ldi	r24, 0x02	; 2
    19e6:	89 83       	std	Y+1, r24	; 0x01
    19e8:	3a c0       	rjmp	.+116    	; 0x1a5e <__floatsisf+0xaa>
    19ea:	88 23       	and	r24, r24
    19ec:	a9 f0       	breq	.+42     	; 0x1a18 <__floatsisf+0x64>
    19ee:	20 30       	cpi	r18, 0x00	; 0
    19f0:	80 e0       	ldi	r24, 0x00	; 0
    19f2:	38 07       	cpc	r19, r24
    19f4:	80 e0       	ldi	r24, 0x00	; 0
    19f6:	48 07       	cpc	r20, r24
    19f8:	80 e8       	ldi	r24, 0x80	; 128
    19fa:	58 07       	cpc	r21, r24
    19fc:	29 f4       	brne	.+10     	; 0x1a08 <__floatsisf+0x54>
    19fe:	60 e0       	ldi	r22, 0x00	; 0
    1a00:	70 e0       	ldi	r23, 0x00	; 0
    1a02:	80 e0       	ldi	r24, 0x00	; 0
    1a04:	9f ec       	ldi	r25, 0xCF	; 207
    1a06:	30 c0       	rjmp	.+96     	; 0x1a68 <__floatsisf+0xb4>
    1a08:	ee 24       	eor	r14, r14
    1a0a:	ff 24       	eor	r15, r15
    1a0c:	87 01       	movw	r16, r14
    1a0e:	e2 1a       	sub	r14, r18
    1a10:	f3 0a       	sbc	r15, r19
    1a12:	04 0b       	sbc	r16, r20
    1a14:	15 0b       	sbc	r17, r21
    1a16:	02 c0       	rjmp	.+4      	; 0x1a1c <__floatsisf+0x68>
    1a18:	79 01       	movw	r14, r18
    1a1a:	8a 01       	movw	r16, r20
    1a1c:	8e e1       	ldi	r24, 0x1E	; 30
    1a1e:	c8 2e       	mov	r12, r24
    1a20:	d1 2c       	mov	r13, r1
    1a22:	dc 82       	std	Y+4, r13	; 0x04
    1a24:	cb 82       	std	Y+3, r12	; 0x03
    1a26:	ed 82       	std	Y+5, r14	; 0x05
    1a28:	fe 82       	std	Y+6, r15	; 0x06
    1a2a:	0f 83       	std	Y+7, r16	; 0x07
    1a2c:	18 87       	std	Y+8, r17	; 0x08
    1a2e:	c8 01       	movw	r24, r16
    1a30:	b7 01       	movw	r22, r14
    1a32:	0e 94 8c 0d 	call	0x1b18	; 0x1b18 <__clzsi2>
    1a36:	01 97       	sbiw	r24, 0x01	; 1
    1a38:	18 16       	cp	r1, r24
    1a3a:	19 06       	cpc	r1, r25
    1a3c:	84 f4       	brge	.+32     	; 0x1a5e <__floatsisf+0xaa>
    1a3e:	08 2e       	mov	r0, r24
    1a40:	04 c0       	rjmp	.+8      	; 0x1a4a <__floatsisf+0x96>
    1a42:	ee 0c       	add	r14, r14
    1a44:	ff 1c       	adc	r15, r15
    1a46:	00 1f       	adc	r16, r16
    1a48:	11 1f       	adc	r17, r17
    1a4a:	0a 94       	dec	r0
    1a4c:	d2 f7       	brpl	.-12     	; 0x1a42 <__floatsisf+0x8e>
    1a4e:	ed 82       	std	Y+5, r14	; 0x05
    1a50:	fe 82       	std	Y+6, r15	; 0x06
    1a52:	0f 83       	std	Y+7, r16	; 0x07
    1a54:	18 87       	std	Y+8, r17	; 0x08
    1a56:	c8 1a       	sub	r12, r24
    1a58:	d9 0a       	sbc	r13, r25
    1a5a:	dc 82       	std	Y+4, r13	; 0x04
    1a5c:	cb 82       	std	Y+3, r12	; 0x03
    1a5e:	ba 82       	std	Y+2, r11	; 0x02
    1a60:	ce 01       	movw	r24, r28
    1a62:	01 96       	adiw	r24, 0x01	; 1
    1a64:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <__pack_f>
    1a68:	28 96       	adiw	r28, 0x08	; 8
    1a6a:	e9 e0       	ldi	r30, 0x09	; 9
    1a6c:	0c 94 c5 0f 	jmp	0x1f8a	; 0x1f8a <__epilogue_restores__+0x12>

00001a70 <__fixsfsi>:
    1a70:	ac e0       	ldi	r26, 0x0C	; 12
    1a72:	b0 e0       	ldi	r27, 0x00	; 0
    1a74:	ee e3       	ldi	r30, 0x3E	; 62
    1a76:	fd e0       	ldi	r31, 0x0D	; 13
    1a78:	0c 94 b0 0f 	jmp	0x1f60	; 0x1f60 <__prologue_saves__+0x20>
    1a7c:	69 83       	std	Y+1, r22	; 0x01
    1a7e:	7a 83       	std	Y+2, r23	; 0x02
    1a80:	8b 83       	std	Y+3, r24	; 0x03
    1a82:	9c 83       	std	Y+4, r25	; 0x04
    1a84:	ce 01       	movw	r24, r28
    1a86:	01 96       	adiw	r24, 0x01	; 1
    1a88:	be 01       	movw	r22, r28
    1a8a:	6b 5f       	subi	r22, 0xFB	; 251
    1a8c:	7f 4f       	sbci	r23, 0xFF	; 255
    1a8e:	0e 94 b0 0e 	call	0x1d60	; 0x1d60 <__unpack_f>
    1a92:	8d 81       	ldd	r24, Y+5	; 0x05
    1a94:	82 30       	cpi	r24, 0x02	; 2
    1a96:	61 f1       	breq	.+88     	; 0x1af0 <__fixsfsi+0x80>
    1a98:	82 30       	cpi	r24, 0x02	; 2
    1a9a:	50 f1       	brcs	.+84     	; 0x1af0 <__fixsfsi+0x80>
    1a9c:	84 30       	cpi	r24, 0x04	; 4
    1a9e:	21 f4       	brne	.+8      	; 0x1aa8 <__fixsfsi+0x38>
    1aa0:	8e 81       	ldd	r24, Y+6	; 0x06
    1aa2:	88 23       	and	r24, r24
    1aa4:	51 f1       	breq	.+84     	; 0x1afa <__fixsfsi+0x8a>
    1aa6:	2e c0       	rjmp	.+92     	; 0x1b04 <__fixsfsi+0x94>
    1aa8:	2f 81       	ldd	r18, Y+7	; 0x07
    1aaa:	38 85       	ldd	r19, Y+8	; 0x08
    1aac:	37 fd       	sbrc	r19, 7
    1aae:	20 c0       	rjmp	.+64     	; 0x1af0 <__fixsfsi+0x80>
    1ab0:	6e 81       	ldd	r22, Y+6	; 0x06
    1ab2:	2f 31       	cpi	r18, 0x1F	; 31
    1ab4:	31 05       	cpc	r19, r1
    1ab6:	1c f0       	brlt	.+6      	; 0x1abe <__fixsfsi+0x4e>
    1ab8:	66 23       	and	r22, r22
    1aba:	f9 f0       	breq	.+62     	; 0x1afa <__fixsfsi+0x8a>
    1abc:	23 c0       	rjmp	.+70     	; 0x1b04 <__fixsfsi+0x94>
    1abe:	8e e1       	ldi	r24, 0x1E	; 30
    1ac0:	90 e0       	ldi	r25, 0x00	; 0
    1ac2:	82 1b       	sub	r24, r18
    1ac4:	93 0b       	sbc	r25, r19
    1ac6:	29 85       	ldd	r18, Y+9	; 0x09
    1ac8:	3a 85       	ldd	r19, Y+10	; 0x0a
    1aca:	4b 85       	ldd	r20, Y+11	; 0x0b
    1acc:	5c 85       	ldd	r21, Y+12	; 0x0c
    1ace:	04 c0       	rjmp	.+8      	; 0x1ad8 <__fixsfsi+0x68>
    1ad0:	56 95       	lsr	r21
    1ad2:	47 95       	ror	r20
    1ad4:	37 95       	ror	r19
    1ad6:	27 95       	ror	r18
    1ad8:	8a 95       	dec	r24
    1ada:	d2 f7       	brpl	.-12     	; 0x1ad0 <__fixsfsi+0x60>
    1adc:	66 23       	and	r22, r22
    1ade:	b1 f0       	breq	.+44     	; 0x1b0c <__fixsfsi+0x9c>
    1ae0:	50 95       	com	r21
    1ae2:	40 95       	com	r20
    1ae4:	30 95       	com	r19
    1ae6:	21 95       	neg	r18
    1ae8:	3f 4f       	sbci	r19, 0xFF	; 255
    1aea:	4f 4f       	sbci	r20, 0xFF	; 255
    1aec:	5f 4f       	sbci	r21, 0xFF	; 255
    1aee:	0e c0       	rjmp	.+28     	; 0x1b0c <__fixsfsi+0x9c>
    1af0:	20 e0       	ldi	r18, 0x00	; 0
    1af2:	30 e0       	ldi	r19, 0x00	; 0
    1af4:	40 e0       	ldi	r20, 0x00	; 0
    1af6:	50 e0       	ldi	r21, 0x00	; 0
    1af8:	09 c0       	rjmp	.+18     	; 0x1b0c <__fixsfsi+0x9c>
    1afa:	2f ef       	ldi	r18, 0xFF	; 255
    1afc:	3f ef       	ldi	r19, 0xFF	; 255
    1afe:	4f ef       	ldi	r20, 0xFF	; 255
    1b00:	5f e7       	ldi	r21, 0x7F	; 127
    1b02:	04 c0       	rjmp	.+8      	; 0x1b0c <__fixsfsi+0x9c>
    1b04:	20 e0       	ldi	r18, 0x00	; 0
    1b06:	30 e0       	ldi	r19, 0x00	; 0
    1b08:	40 e0       	ldi	r20, 0x00	; 0
    1b0a:	50 e8       	ldi	r21, 0x80	; 128
    1b0c:	b9 01       	movw	r22, r18
    1b0e:	ca 01       	movw	r24, r20
    1b10:	2c 96       	adiw	r28, 0x0c	; 12
    1b12:	e2 e0       	ldi	r30, 0x02	; 2
    1b14:	0c 94 cc 0f 	jmp	0x1f98	; 0x1f98 <__epilogue_restores__+0x20>

00001b18 <__clzsi2>:
    1b18:	ef 92       	push	r14
    1b1a:	ff 92       	push	r15
    1b1c:	0f 93       	push	r16
    1b1e:	1f 93       	push	r17
    1b20:	7b 01       	movw	r14, r22
    1b22:	8c 01       	movw	r16, r24
    1b24:	80 e0       	ldi	r24, 0x00	; 0
    1b26:	e8 16       	cp	r14, r24
    1b28:	80 e0       	ldi	r24, 0x00	; 0
    1b2a:	f8 06       	cpc	r15, r24
    1b2c:	81 e0       	ldi	r24, 0x01	; 1
    1b2e:	08 07       	cpc	r16, r24
    1b30:	80 e0       	ldi	r24, 0x00	; 0
    1b32:	18 07       	cpc	r17, r24
    1b34:	88 f4       	brcc	.+34     	; 0x1b58 <__clzsi2+0x40>
    1b36:	8f ef       	ldi	r24, 0xFF	; 255
    1b38:	e8 16       	cp	r14, r24
    1b3a:	f1 04       	cpc	r15, r1
    1b3c:	01 05       	cpc	r16, r1
    1b3e:	11 05       	cpc	r17, r1
    1b40:	31 f0       	breq	.+12     	; 0x1b4e <__clzsi2+0x36>
    1b42:	28 f0       	brcs	.+10     	; 0x1b4e <__clzsi2+0x36>
    1b44:	88 e0       	ldi	r24, 0x08	; 8
    1b46:	90 e0       	ldi	r25, 0x00	; 0
    1b48:	a0 e0       	ldi	r26, 0x00	; 0
    1b4a:	b0 e0       	ldi	r27, 0x00	; 0
    1b4c:	17 c0       	rjmp	.+46     	; 0x1b7c <__clzsi2+0x64>
    1b4e:	80 e0       	ldi	r24, 0x00	; 0
    1b50:	90 e0       	ldi	r25, 0x00	; 0
    1b52:	a0 e0       	ldi	r26, 0x00	; 0
    1b54:	b0 e0       	ldi	r27, 0x00	; 0
    1b56:	12 c0       	rjmp	.+36     	; 0x1b7c <__clzsi2+0x64>
    1b58:	80 e0       	ldi	r24, 0x00	; 0
    1b5a:	e8 16       	cp	r14, r24
    1b5c:	80 e0       	ldi	r24, 0x00	; 0
    1b5e:	f8 06       	cpc	r15, r24
    1b60:	80 e0       	ldi	r24, 0x00	; 0
    1b62:	08 07       	cpc	r16, r24
    1b64:	81 e0       	ldi	r24, 0x01	; 1
    1b66:	18 07       	cpc	r17, r24
    1b68:	28 f0       	brcs	.+10     	; 0x1b74 <__clzsi2+0x5c>
    1b6a:	88 e1       	ldi	r24, 0x18	; 24
    1b6c:	90 e0       	ldi	r25, 0x00	; 0
    1b6e:	a0 e0       	ldi	r26, 0x00	; 0
    1b70:	b0 e0       	ldi	r27, 0x00	; 0
    1b72:	04 c0       	rjmp	.+8      	; 0x1b7c <__clzsi2+0x64>
    1b74:	80 e1       	ldi	r24, 0x10	; 16
    1b76:	90 e0       	ldi	r25, 0x00	; 0
    1b78:	a0 e0       	ldi	r26, 0x00	; 0
    1b7a:	b0 e0       	ldi	r27, 0x00	; 0
    1b7c:	20 e2       	ldi	r18, 0x20	; 32
    1b7e:	30 e0       	ldi	r19, 0x00	; 0
    1b80:	40 e0       	ldi	r20, 0x00	; 0
    1b82:	50 e0       	ldi	r21, 0x00	; 0
    1b84:	28 1b       	sub	r18, r24
    1b86:	39 0b       	sbc	r19, r25
    1b88:	4a 0b       	sbc	r20, r26
    1b8a:	5b 0b       	sbc	r21, r27
    1b8c:	04 c0       	rjmp	.+8      	; 0x1b96 <__clzsi2+0x7e>
    1b8e:	16 95       	lsr	r17
    1b90:	07 95       	ror	r16
    1b92:	f7 94       	ror	r15
    1b94:	e7 94       	ror	r14
    1b96:	8a 95       	dec	r24
    1b98:	d2 f7       	brpl	.-12     	; 0x1b8e <__clzsi2+0x76>
    1b9a:	f7 01       	movw	r30, r14
    1b9c:	e8 5f       	subi	r30, 0xF8	; 248
    1b9e:	fe 4f       	sbci	r31, 0xFE	; 254
    1ba0:	80 81       	ld	r24, Z
    1ba2:	28 1b       	sub	r18, r24
    1ba4:	31 09       	sbc	r19, r1
    1ba6:	41 09       	sbc	r20, r1
    1ba8:	51 09       	sbc	r21, r1
    1baa:	c9 01       	movw	r24, r18
    1bac:	1f 91       	pop	r17
    1bae:	0f 91       	pop	r16
    1bb0:	ff 90       	pop	r15
    1bb2:	ef 90       	pop	r14
    1bb4:	08 95       	ret

00001bb6 <__pack_f>:
    1bb6:	df 92       	push	r13
    1bb8:	ef 92       	push	r14
    1bba:	ff 92       	push	r15
    1bbc:	0f 93       	push	r16
    1bbe:	1f 93       	push	r17
    1bc0:	fc 01       	movw	r30, r24
    1bc2:	e4 80       	ldd	r14, Z+4	; 0x04
    1bc4:	f5 80       	ldd	r15, Z+5	; 0x05
    1bc6:	06 81       	ldd	r16, Z+6	; 0x06
    1bc8:	17 81       	ldd	r17, Z+7	; 0x07
    1bca:	d1 80       	ldd	r13, Z+1	; 0x01
    1bcc:	80 81       	ld	r24, Z
    1bce:	82 30       	cpi	r24, 0x02	; 2
    1bd0:	48 f4       	brcc	.+18     	; 0x1be4 <__pack_f+0x2e>
    1bd2:	80 e0       	ldi	r24, 0x00	; 0
    1bd4:	90 e0       	ldi	r25, 0x00	; 0
    1bd6:	a0 e1       	ldi	r26, 0x10	; 16
    1bd8:	b0 e0       	ldi	r27, 0x00	; 0
    1bda:	e8 2a       	or	r14, r24
    1bdc:	f9 2a       	or	r15, r25
    1bde:	0a 2b       	or	r16, r26
    1be0:	1b 2b       	or	r17, r27
    1be2:	a5 c0       	rjmp	.+330    	; 0x1d2e <__pack_f+0x178>
    1be4:	84 30       	cpi	r24, 0x04	; 4
    1be6:	09 f4       	brne	.+2      	; 0x1bea <__pack_f+0x34>
    1be8:	9f c0       	rjmp	.+318    	; 0x1d28 <__pack_f+0x172>
    1bea:	82 30       	cpi	r24, 0x02	; 2
    1bec:	21 f4       	brne	.+8      	; 0x1bf6 <__pack_f+0x40>
    1bee:	ee 24       	eor	r14, r14
    1bf0:	ff 24       	eor	r15, r15
    1bf2:	87 01       	movw	r16, r14
    1bf4:	05 c0       	rjmp	.+10     	; 0x1c00 <__pack_f+0x4a>
    1bf6:	e1 14       	cp	r14, r1
    1bf8:	f1 04       	cpc	r15, r1
    1bfa:	01 05       	cpc	r16, r1
    1bfc:	11 05       	cpc	r17, r1
    1bfe:	19 f4       	brne	.+6      	; 0x1c06 <__pack_f+0x50>
    1c00:	e0 e0       	ldi	r30, 0x00	; 0
    1c02:	f0 e0       	ldi	r31, 0x00	; 0
    1c04:	96 c0       	rjmp	.+300    	; 0x1d32 <__pack_f+0x17c>
    1c06:	62 81       	ldd	r22, Z+2	; 0x02
    1c08:	73 81       	ldd	r23, Z+3	; 0x03
    1c0a:	9f ef       	ldi	r25, 0xFF	; 255
    1c0c:	62 38       	cpi	r22, 0x82	; 130
    1c0e:	79 07       	cpc	r23, r25
    1c10:	0c f0       	brlt	.+2      	; 0x1c14 <__pack_f+0x5e>
    1c12:	5b c0       	rjmp	.+182    	; 0x1cca <__pack_f+0x114>
    1c14:	22 e8       	ldi	r18, 0x82	; 130
    1c16:	3f ef       	ldi	r19, 0xFF	; 255
    1c18:	26 1b       	sub	r18, r22
    1c1a:	37 0b       	sbc	r19, r23
    1c1c:	2a 31       	cpi	r18, 0x1A	; 26
    1c1e:	31 05       	cpc	r19, r1
    1c20:	2c f0       	brlt	.+10     	; 0x1c2c <__pack_f+0x76>
    1c22:	20 e0       	ldi	r18, 0x00	; 0
    1c24:	30 e0       	ldi	r19, 0x00	; 0
    1c26:	40 e0       	ldi	r20, 0x00	; 0
    1c28:	50 e0       	ldi	r21, 0x00	; 0
    1c2a:	2a c0       	rjmp	.+84     	; 0x1c80 <__pack_f+0xca>
    1c2c:	b8 01       	movw	r22, r16
    1c2e:	a7 01       	movw	r20, r14
    1c30:	02 2e       	mov	r0, r18
    1c32:	04 c0       	rjmp	.+8      	; 0x1c3c <__pack_f+0x86>
    1c34:	76 95       	lsr	r23
    1c36:	67 95       	ror	r22
    1c38:	57 95       	ror	r21
    1c3a:	47 95       	ror	r20
    1c3c:	0a 94       	dec	r0
    1c3e:	d2 f7       	brpl	.-12     	; 0x1c34 <__pack_f+0x7e>
    1c40:	81 e0       	ldi	r24, 0x01	; 1
    1c42:	90 e0       	ldi	r25, 0x00	; 0
    1c44:	a0 e0       	ldi	r26, 0x00	; 0
    1c46:	b0 e0       	ldi	r27, 0x00	; 0
    1c48:	04 c0       	rjmp	.+8      	; 0x1c52 <__pack_f+0x9c>
    1c4a:	88 0f       	add	r24, r24
    1c4c:	99 1f       	adc	r25, r25
    1c4e:	aa 1f       	adc	r26, r26
    1c50:	bb 1f       	adc	r27, r27
    1c52:	2a 95       	dec	r18
    1c54:	d2 f7       	brpl	.-12     	; 0x1c4a <__pack_f+0x94>
    1c56:	01 97       	sbiw	r24, 0x01	; 1
    1c58:	a1 09       	sbc	r26, r1
    1c5a:	b1 09       	sbc	r27, r1
    1c5c:	8e 21       	and	r24, r14
    1c5e:	9f 21       	and	r25, r15
    1c60:	a0 23       	and	r26, r16
    1c62:	b1 23       	and	r27, r17
    1c64:	00 97       	sbiw	r24, 0x00	; 0
    1c66:	a1 05       	cpc	r26, r1
    1c68:	b1 05       	cpc	r27, r1
    1c6a:	21 f0       	breq	.+8      	; 0x1c74 <__pack_f+0xbe>
    1c6c:	81 e0       	ldi	r24, 0x01	; 1
    1c6e:	90 e0       	ldi	r25, 0x00	; 0
    1c70:	a0 e0       	ldi	r26, 0x00	; 0
    1c72:	b0 e0       	ldi	r27, 0x00	; 0
    1c74:	9a 01       	movw	r18, r20
    1c76:	ab 01       	movw	r20, r22
    1c78:	28 2b       	or	r18, r24
    1c7a:	39 2b       	or	r19, r25
    1c7c:	4a 2b       	or	r20, r26
    1c7e:	5b 2b       	or	r21, r27
    1c80:	da 01       	movw	r26, r20
    1c82:	c9 01       	movw	r24, r18
    1c84:	8f 77       	andi	r24, 0x7F	; 127
    1c86:	90 70       	andi	r25, 0x00	; 0
    1c88:	a0 70       	andi	r26, 0x00	; 0
    1c8a:	b0 70       	andi	r27, 0x00	; 0
    1c8c:	80 34       	cpi	r24, 0x40	; 64
    1c8e:	91 05       	cpc	r25, r1
    1c90:	a1 05       	cpc	r26, r1
    1c92:	b1 05       	cpc	r27, r1
    1c94:	39 f4       	brne	.+14     	; 0x1ca4 <__pack_f+0xee>
    1c96:	27 ff       	sbrs	r18, 7
    1c98:	09 c0       	rjmp	.+18     	; 0x1cac <__pack_f+0xf6>
    1c9a:	20 5c       	subi	r18, 0xC0	; 192
    1c9c:	3f 4f       	sbci	r19, 0xFF	; 255
    1c9e:	4f 4f       	sbci	r20, 0xFF	; 255
    1ca0:	5f 4f       	sbci	r21, 0xFF	; 255
    1ca2:	04 c0       	rjmp	.+8      	; 0x1cac <__pack_f+0xf6>
    1ca4:	21 5c       	subi	r18, 0xC1	; 193
    1ca6:	3f 4f       	sbci	r19, 0xFF	; 255
    1ca8:	4f 4f       	sbci	r20, 0xFF	; 255
    1caa:	5f 4f       	sbci	r21, 0xFF	; 255
    1cac:	e0 e0       	ldi	r30, 0x00	; 0
    1cae:	f0 e0       	ldi	r31, 0x00	; 0
    1cb0:	20 30       	cpi	r18, 0x00	; 0
    1cb2:	a0 e0       	ldi	r26, 0x00	; 0
    1cb4:	3a 07       	cpc	r19, r26
    1cb6:	a0 e0       	ldi	r26, 0x00	; 0
    1cb8:	4a 07       	cpc	r20, r26
    1cba:	a0 e4       	ldi	r26, 0x40	; 64
    1cbc:	5a 07       	cpc	r21, r26
    1cbe:	10 f0       	brcs	.+4      	; 0x1cc4 <__pack_f+0x10e>
    1cc0:	e1 e0       	ldi	r30, 0x01	; 1
    1cc2:	f0 e0       	ldi	r31, 0x00	; 0
    1cc4:	79 01       	movw	r14, r18
    1cc6:	8a 01       	movw	r16, r20
    1cc8:	27 c0       	rjmp	.+78     	; 0x1d18 <__pack_f+0x162>
    1cca:	60 38       	cpi	r22, 0x80	; 128
    1ccc:	71 05       	cpc	r23, r1
    1cce:	64 f5       	brge	.+88     	; 0x1d28 <__pack_f+0x172>
    1cd0:	fb 01       	movw	r30, r22
    1cd2:	e1 58       	subi	r30, 0x81	; 129
    1cd4:	ff 4f       	sbci	r31, 0xFF	; 255
    1cd6:	d8 01       	movw	r26, r16
    1cd8:	c7 01       	movw	r24, r14
    1cda:	8f 77       	andi	r24, 0x7F	; 127
    1cdc:	90 70       	andi	r25, 0x00	; 0
    1cde:	a0 70       	andi	r26, 0x00	; 0
    1ce0:	b0 70       	andi	r27, 0x00	; 0
    1ce2:	80 34       	cpi	r24, 0x40	; 64
    1ce4:	91 05       	cpc	r25, r1
    1ce6:	a1 05       	cpc	r26, r1
    1ce8:	b1 05       	cpc	r27, r1
    1cea:	39 f4       	brne	.+14     	; 0x1cfa <__pack_f+0x144>
    1cec:	e7 fe       	sbrs	r14, 7
    1cee:	0d c0       	rjmp	.+26     	; 0x1d0a <__pack_f+0x154>
    1cf0:	80 e4       	ldi	r24, 0x40	; 64
    1cf2:	90 e0       	ldi	r25, 0x00	; 0
    1cf4:	a0 e0       	ldi	r26, 0x00	; 0
    1cf6:	b0 e0       	ldi	r27, 0x00	; 0
    1cf8:	04 c0       	rjmp	.+8      	; 0x1d02 <__pack_f+0x14c>
    1cfa:	8f e3       	ldi	r24, 0x3F	; 63
    1cfc:	90 e0       	ldi	r25, 0x00	; 0
    1cfe:	a0 e0       	ldi	r26, 0x00	; 0
    1d00:	b0 e0       	ldi	r27, 0x00	; 0
    1d02:	e8 0e       	add	r14, r24
    1d04:	f9 1e       	adc	r15, r25
    1d06:	0a 1f       	adc	r16, r26
    1d08:	1b 1f       	adc	r17, r27
    1d0a:	17 ff       	sbrs	r17, 7
    1d0c:	05 c0       	rjmp	.+10     	; 0x1d18 <__pack_f+0x162>
    1d0e:	16 95       	lsr	r17
    1d10:	07 95       	ror	r16
    1d12:	f7 94       	ror	r15
    1d14:	e7 94       	ror	r14
    1d16:	31 96       	adiw	r30, 0x01	; 1
    1d18:	87 e0       	ldi	r24, 0x07	; 7
    1d1a:	16 95       	lsr	r17
    1d1c:	07 95       	ror	r16
    1d1e:	f7 94       	ror	r15
    1d20:	e7 94       	ror	r14
    1d22:	8a 95       	dec	r24
    1d24:	d1 f7       	brne	.-12     	; 0x1d1a <__pack_f+0x164>
    1d26:	05 c0       	rjmp	.+10     	; 0x1d32 <__pack_f+0x17c>
    1d28:	ee 24       	eor	r14, r14
    1d2a:	ff 24       	eor	r15, r15
    1d2c:	87 01       	movw	r16, r14
    1d2e:	ef ef       	ldi	r30, 0xFF	; 255
    1d30:	f0 e0       	ldi	r31, 0x00	; 0
    1d32:	6e 2f       	mov	r22, r30
    1d34:	67 95       	ror	r22
    1d36:	66 27       	eor	r22, r22
    1d38:	67 95       	ror	r22
    1d3a:	90 2f       	mov	r25, r16
    1d3c:	9f 77       	andi	r25, 0x7F	; 127
    1d3e:	d7 94       	ror	r13
    1d40:	dd 24       	eor	r13, r13
    1d42:	d7 94       	ror	r13
    1d44:	8e 2f       	mov	r24, r30
    1d46:	86 95       	lsr	r24
    1d48:	49 2f       	mov	r20, r25
    1d4a:	46 2b       	or	r20, r22
    1d4c:	58 2f       	mov	r21, r24
    1d4e:	5d 29       	or	r21, r13
    1d50:	b7 01       	movw	r22, r14
    1d52:	ca 01       	movw	r24, r20
    1d54:	1f 91       	pop	r17
    1d56:	0f 91       	pop	r16
    1d58:	ff 90       	pop	r15
    1d5a:	ef 90       	pop	r14
    1d5c:	df 90       	pop	r13
    1d5e:	08 95       	ret

00001d60 <__unpack_f>:
    1d60:	fc 01       	movw	r30, r24
    1d62:	db 01       	movw	r26, r22
    1d64:	40 81       	ld	r20, Z
    1d66:	51 81       	ldd	r21, Z+1	; 0x01
    1d68:	22 81       	ldd	r18, Z+2	; 0x02
    1d6a:	62 2f       	mov	r22, r18
    1d6c:	6f 77       	andi	r22, 0x7F	; 127
    1d6e:	70 e0       	ldi	r23, 0x00	; 0
    1d70:	22 1f       	adc	r18, r18
    1d72:	22 27       	eor	r18, r18
    1d74:	22 1f       	adc	r18, r18
    1d76:	93 81       	ldd	r25, Z+3	; 0x03
    1d78:	89 2f       	mov	r24, r25
    1d7a:	88 0f       	add	r24, r24
    1d7c:	82 2b       	or	r24, r18
    1d7e:	28 2f       	mov	r18, r24
    1d80:	30 e0       	ldi	r19, 0x00	; 0
    1d82:	99 1f       	adc	r25, r25
    1d84:	99 27       	eor	r25, r25
    1d86:	99 1f       	adc	r25, r25
    1d88:	11 96       	adiw	r26, 0x01	; 1
    1d8a:	9c 93       	st	X, r25
    1d8c:	11 97       	sbiw	r26, 0x01	; 1
    1d8e:	21 15       	cp	r18, r1
    1d90:	31 05       	cpc	r19, r1
    1d92:	a9 f5       	brne	.+106    	; 0x1dfe <__unpack_f+0x9e>
    1d94:	41 15       	cp	r20, r1
    1d96:	51 05       	cpc	r21, r1
    1d98:	61 05       	cpc	r22, r1
    1d9a:	71 05       	cpc	r23, r1
    1d9c:	11 f4       	brne	.+4      	; 0x1da2 <__unpack_f+0x42>
    1d9e:	82 e0       	ldi	r24, 0x02	; 2
    1da0:	37 c0       	rjmp	.+110    	; 0x1e10 <__unpack_f+0xb0>
    1da2:	82 e8       	ldi	r24, 0x82	; 130
    1da4:	9f ef       	ldi	r25, 0xFF	; 255
    1da6:	13 96       	adiw	r26, 0x03	; 3
    1da8:	9c 93       	st	X, r25
    1daa:	8e 93       	st	-X, r24
    1dac:	12 97       	sbiw	r26, 0x02	; 2
    1dae:	9a 01       	movw	r18, r20
    1db0:	ab 01       	movw	r20, r22
    1db2:	67 e0       	ldi	r22, 0x07	; 7
    1db4:	22 0f       	add	r18, r18
    1db6:	33 1f       	adc	r19, r19
    1db8:	44 1f       	adc	r20, r20
    1dba:	55 1f       	adc	r21, r21
    1dbc:	6a 95       	dec	r22
    1dbe:	d1 f7       	brne	.-12     	; 0x1db4 <__unpack_f+0x54>
    1dc0:	83 e0       	ldi	r24, 0x03	; 3
    1dc2:	8c 93       	st	X, r24
    1dc4:	0d c0       	rjmp	.+26     	; 0x1de0 <__unpack_f+0x80>
    1dc6:	22 0f       	add	r18, r18
    1dc8:	33 1f       	adc	r19, r19
    1dca:	44 1f       	adc	r20, r20
    1dcc:	55 1f       	adc	r21, r21
    1dce:	12 96       	adiw	r26, 0x02	; 2
    1dd0:	8d 91       	ld	r24, X+
    1dd2:	9c 91       	ld	r25, X
    1dd4:	13 97       	sbiw	r26, 0x03	; 3
    1dd6:	01 97       	sbiw	r24, 0x01	; 1
    1dd8:	13 96       	adiw	r26, 0x03	; 3
    1dda:	9c 93       	st	X, r25
    1ddc:	8e 93       	st	-X, r24
    1dde:	12 97       	sbiw	r26, 0x02	; 2
    1de0:	20 30       	cpi	r18, 0x00	; 0
    1de2:	80 e0       	ldi	r24, 0x00	; 0
    1de4:	38 07       	cpc	r19, r24
    1de6:	80 e0       	ldi	r24, 0x00	; 0
    1de8:	48 07       	cpc	r20, r24
    1dea:	80 e4       	ldi	r24, 0x40	; 64
    1dec:	58 07       	cpc	r21, r24
    1dee:	58 f3       	brcs	.-42     	; 0x1dc6 <__unpack_f+0x66>
    1df0:	14 96       	adiw	r26, 0x04	; 4
    1df2:	2d 93       	st	X+, r18
    1df4:	3d 93       	st	X+, r19
    1df6:	4d 93       	st	X+, r20
    1df8:	5c 93       	st	X, r21
    1dfa:	17 97       	sbiw	r26, 0x07	; 7
    1dfc:	08 95       	ret
    1dfe:	2f 3f       	cpi	r18, 0xFF	; 255
    1e00:	31 05       	cpc	r19, r1
    1e02:	79 f4       	brne	.+30     	; 0x1e22 <__unpack_f+0xc2>
    1e04:	41 15       	cp	r20, r1
    1e06:	51 05       	cpc	r21, r1
    1e08:	61 05       	cpc	r22, r1
    1e0a:	71 05       	cpc	r23, r1
    1e0c:	19 f4       	brne	.+6      	; 0x1e14 <__unpack_f+0xb4>
    1e0e:	84 e0       	ldi	r24, 0x04	; 4
    1e10:	8c 93       	st	X, r24
    1e12:	08 95       	ret
    1e14:	64 ff       	sbrs	r22, 4
    1e16:	03 c0       	rjmp	.+6      	; 0x1e1e <__unpack_f+0xbe>
    1e18:	81 e0       	ldi	r24, 0x01	; 1
    1e1a:	8c 93       	st	X, r24
    1e1c:	12 c0       	rjmp	.+36     	; 0x1e42 <__unpack_f+0xe2>
    1e1e:	1c 92       	st	X, r1
    1e20:	10 c0       	rjmp	.+32     	; 0x1e42 <__unpack_f+0xe2>
    1e22:	2f 57       	subi	r18, 0x7F	; 127
    1e24:	30 40       	sbci	r19, 0x00	; 0
    1e26:	13 96       	adiw	r26, 0x03	; 3
    1e28:	3c 93       	st	X, r19
    1e2a:	2e 93       	st	-X, r18
    1e2c:	12 97       	sbiw	r26, 0x02	; 2
    1e2e:	83 e0       	ldi	r24, 0x03	; 3
    1e30:	8c 93       	st	X, r24
    1e32:	87 e0       	ldi	r24, 0x07	; 7
    1e34:	44 0f       	add	r20, r20
    1e36:	55 1f       	adc	r21, r21
    1e38:	66 1f       	adc	r22, r22
    1e3a:	77 1f       	adc	r23, r23
    1e3c:	8a 95       	dec	r24
    1e3e:	d1 f7       	brne	.-12     	; 0x1e34 <__unpack_f+0xd4>
    1e40:	70 64       	ori	r23, 0x40	; 64
    1e42:	14 96       	adiw	r26, 0x04	; 4
    1e44:	4d 93       	st	X+, r20
    1e46:	5d 93       	st	X+, r21
    1e48:	6d 93       	st	X+, r22
    1e4a:	7c 93       	st	X, r23
    1e4c:	17 97       	sbiw	r26, 0x07	; 7
    1e4e:	08 95       	ret

00001e50 <__fpcmp_parts_f>:
    1e50:	1f 93       	push	r17
    1e52:	dc 01       	movw	r26, r24
    1e54:	fb 01       	movw	r30, r22
    1e56:	9c 91       	ld	r25, X
    1e58:	92 30       	cpi	r25, 0x02	; 2
    1e5a:	08 f4       	brcc	.+2      	; 0x1e5e <__fpcmp_parts_f+0xe>
    1e5c:	47 c0       	rjmp	.+142    	; 0x1eec <__fpcmp_parts_f+0x9c>
    1e5e:	80 81       	ld	r24, Z
    1e60:	82 30       	cpi	r24, 0x02	; 2
    1e62:	08 f4       	brcc	.+2      	; 0x1e66 <__fpcmp_parts_f+0x16>
    1e64:	43 c0       	rjmp	.+134    	; 0x1eec <__fpcmp_parts_f+0x9c>
    1e66:	94 30       	cpi	r25, 0x04	; 4
    1e68:	51 f4       	brne	.+20     	; 0x1e7e <__fpcmp_parts_f+0x2e>
    1e6a:	11 96       	adiw	r26, 0x01	; 1
    1e6c:	1c 91       	ld	r17, X
    1e6e:	84 30       	cpi	r24, 0x04	; 4
    1e70:	99 f5       	brne	.+102    	; 0x1ed8 <__fpcmp_parts_f+0x88>
    1e72:	81 81       	ldd	r24, Z+1	; 0x01
    1e74:	68 2f       	mov	r22, r24
    1e76:	70 e0       	ldi	r23, 0x00	; 0
    1e78:	61 1b       	sub	r22, r17
    1e7a:	71 09       	sbc	r23, r1
    1e7c:	3f c0       	rjmp	.+126    	; 0x1efc <__fpcmp_parts_f+0xac>
    1e7e:	84 30       	cpi	r24, 0x04	; 4
    1e80:	21 f0       	breq	.+8      	; 0x1e8a <__fpcmp_parts_f+0x3a>
    1e82:	92 30       	cpi	r25, 0x02	; 2
    1e84:	31 f4       	brne	.+12     	; 0x1e92 <__fpcmp_parts_f+0x42>
    1e86:	82 30       	cpi	r24, 0x02	; 2
    1e88:	b9 f1       	breq	.+110    	; 0x1ef8 <__fpcmp_parts_f+0xa8>
    1e8a:	81 81       	ldd	r24, Z+1	; 0x01
    1e8c:	88 23       	and	r24, r24
    1e8e:	89 f1       	breq	.+98     	; 0x1ef2 <__fpcmp_parts_f+0xa2>
    1e90:	2d c0       	rjmp	.+90     	; 0x1eec <__fpcmp_parts_f+0x9c>
    1e92:	11 96       	adiw	r26, 0x01	; 1
    1e94:	1c 91       	ld	r17, X
    1e96:	11 97       	sbiw	r26, 0x01	; 1
    1e98:	82 30       	cpi	r24, 0x02	; 2
    1e9a:	f1 f0       	breq	.+60     	; 0x1ed8 <__fpcmp_parts_f+0x88>
    1e9c:	81 81       	ldd	r24, Z+1	; 0x01
    1e9e:	18 17       	cp	r17, r24
    1ea0:	d9 f4       	brne	.+54     	; 0x1ed8 <__fpcmp_parts_f+0x88>
    1ea2:	12 96       	adiw	r26, 0x02	; 2
    1ea4:	2d 91       	ld	r18, X+
    1ea6:	3c 91       	ld	r19, X
    1ea8:	13 97       	sbiw	r26, 0x03	; 3
    1eaa:	82 81       	ldd	r24, Z+2	; 0x02
    1eac:	93 81       	ldd	r25, Z+3	; 0x03
    1eae:	82 17       	cp	r24, r18
    1eb0:	93 07       	cpc	r25, r19
    1eb2:	94 f0       	brlt	.+36     	; 0x1ed8 <__fpcmp_parts_f+0x88>
    1eb4:	28 17       	cp	r18, r24
    1eb6:	39 07       	cpc	r19, r25
    1eb8:	bc f0       	brlt	.+46     	; 0x1ee8 <__fpcmp_parts_f+0x98>
    1eba:	14 96       	adiw	r26, 0x04	; 4
    1ebc:	8d 91       	ld	r24, X+
    1ebe:	9d 91       	ld	r25, X+
    1ec0:	0d 90       	ld	r0, X+
    1ec2:	bc 91       	ld	r27, X
    1ec4:	a0 2d       	mov	r26, r0
    1ec6:	24 81       	ldd	r18, Z+4	; 0x04
    1ec8:	35 81       	ldd	r19, Z+5	; 0x05
    1eca:	46 81       	ldd	r20, Z+6	; 0x06
    1ecc:	57 81       	ldd	r21, Z+7	; 0x07
    1ece:	28 17       	cp	r18, r24
    1ed0:	39 07       	cpc	r19, r25
    1ed2:	4a 07       	cpc	r20, r26
    1ed4:	5b 07       	cpc	r21, r27
    1ed6:	18 f4       	brcc	.+6      	; 0x1ede <__fpcmp_parts_f+0x8e>
    1ed8:	11 23       	and	r17, r17
    1eda:	41 f0       	breq	.+16     	; 0x1eec <__fpcmp_parts_f+0x9c>
    1edc:	0a c0       	rjmp	.+20     	; 0x1ef2 <__fpcmp_parts_f+0xa2>
    1ede:	82 17       	cp	r24, r18
    1ee0:	93 07       	cpc	r25, r19
    1ee2:	a4 07       	cpc	r26, r20
    1ee4:	b5 07       	cpc	r27, r21
    1ee6:	40 f4       	brcc	.+16     	; 0x1ef8 <__fpcmp_parts_f+0xa8>
    1ee8:	11 23       	and	r17, r17
    1eea:	19 f0       	breq	.+6      	; 0x1ef2 <__fpcmp_parts_f+0xa2>
    1eec:	61 e0       	ldi	r22, 0x01	; 1
    1eee:	70 e0       	ldi	r23, 0x00	; 0
    1ef0:	05 c0       	rjmp	.+10     	; 0x1efc <__fpcmp_parts_f+0xac>
    1ef2:	6f ef       	ldi	r22, 0xFF	; 255
    1ef4:	7f ef       	ldi	r23, 0xFF	; 255
    1ef6:	02 c0       	rjmp	.+4      	; 0x1efc <__fpcmp_parts_f+0xac>
    1ef8:	60 e0       	ldi	r22, 0x00	; 0
    1efa:	70 e0       	ldi	r23, 0x00	; 0
    1efc:	cb 01       	movw	r24, r22
    1efe:	1f 91       	pop	r17
    1f00:	08 95       	ret

00001f02 <__mulsi3>:
    1f02:	62 9f       	mul	r22, r18
    1f04:	d0 01       	movw	r26, r0
    1f06:	73 9f       	mul	r23, r19
    1f08:	f0 01       	movw	r30, r0
    1f0a:	82 9f       	mul	r24, r18
    1f0c:	e0 0d       	add	r30, r0
    1f0e:	f1 1d       	adc	r31, r1
    1f10:	64 9f       	mul	r22, r20
    1f12:	e0 0d       	add	r30, r0
    1f14:	f1 1d       	adc	r31, r1
    1f16:	92 9f       	mul	r25, r18
    1f18:	f0 0d       	add	r31, r0
    1f1a:	83 9f       	mul	r24, r19
    1f1c:	f0 0d       	add	r31, r0
    1f1e:	74 9f       	mul	r23, r20
    1f20:	f0 0d       	add	r31, r0
    1f22:	65 9f       	mul	r22, r21
    1f24:	f0 0d       	add	r31, r0
    1f26:	99 27       	eor	r25, r25
    1f28:	72 9f       	mul	r23, r18
    1f2a:	b0 0d       	add	r27, r0
    1f2c:	e1 1d       	adc	r30, r1
    1f2e:	f9 1f       	adc	r31, r25
    1f30:	63 9f       	mul	r22, r19
    1f32:	b0 0d       	add	r27, r0
    1f34:	e1 1d       	adc	r30, r1
    1f36:	f9 1f       	adc	r31, r25
    1f38:	bd 01       	movw	r22, r26
    1f3a:	cf 01       	movw	r24, r30
    1f3c:	11 24       	eor	r1, r1
    1f3e:	08 95       	ret

00001f40 <__prologue_saves__>:
    1f40:	2f 92       	push	r2
    1f42:	3f 92       	push	r3
    1f44:	4f 92       	push	r4
    1f46:	5f 92       	push	r5
    1f48:	6f 92       	push	r6
    1f4a:	7f 92       	push	r7
    1f4c:	8f 92       	push	r8
    1f4e:	9f 92       	push	r9
    1f50:	af 92       	push	r10
    1f52:	bf 92       	push	r11
    1f54:	cf 92       	push	r12
    1f56:	df 92       	push	r13
    1f58:	ef 92       	push	r14
    1f5a:	ff 92       	push	r15
    1f5c:	0f 93       	push	r16
    1f5e:	1f 93       	push	r17
    1f60:	cf 93       	push	r28
    1f62:	df 93       	push	r29
    1f64:	cd b7       	in	r28, 0x3d	; 61
    1f66:	de b7       	in	r29, 0x3e	; 62
    1f68:	ca 1b       	sub	r28, r26
    1f6a:	db 0b       	sbc	r29, r27
    1f6c:	0f b6       	in	r0, 0x3f	; 63
    1f6e:	f8 94       	cli
    1f70:	de bf       	out	0x3e, r29	; 62
    1f72:	0f be       	out	0x3f, r0	; 63
    1f74:	cd bf       	out	0x3d, r28	; 61
    1f76:	09 94       	ijmp

00001f78 <__epilogue_restores__>:
    1f78:	2a 88       	ldd	r2, Y+18	; 0x12
    1f7a:	39 88       	ldd	r3, Y+17	; 0x11
    1f7c:	48 88       	ldd	r4, Y+16	; 0x10
    1f7e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1f80:	6e 84       	ldd	r6, Y+14	; 0x0e
    1f82:	7d 84       	ldd	r7, Y+13	; 0x0d
    1f84:	8c 84       	ldd	r8, Y+12	; 0x0c
    1f86:	9b 84       	ldd	r9, Y+11	; 0x0b
    1f88:	aa 84       	ldd	r10, Y+10	; 0x0a
    1f8a:	b9 84       	ldd	r11, Y+9	; 0x09
    1f8c:	c8 84       	ldd	r12, Y+8	; 0x08
    1f8e:	df 80       	ldd	r13, Y+7	; 0x07
    1f90:	ee 80       	ldd	r14, Y+6	; 0x06
    1f92:	fd 80       	ldd	r15, Y+5	; 0x05
    1f94:	0c 81       	ldd	r16, Y+4	; 0x04
    1f96:	1b 81       	ldd	r17, Y+3	; 0x03
    1f98:	aa 81       	ldd	r26, Y+2	; 0x02
    1f9a:	b9 81       	ldd	r27, Y+1	; 0x01
    1f9c:	ce 0f       	add	r28, r30
    1f9e:	d1 1d       	adc	r29, r1
    1fa0:	0f b6       	in	r0, 0x3f	; 63
    1fa2:	f8 94       	cli
    1fa4:	de bf       	out	0x3e, r29	; 62
    1fa6:	0f be       	out	0x3f, r0	; 63
    1fa8:	cd bf       	out	0x3d, r28	; 61
    1faa:	ed 01       	movw	r28, r26
    1fac:	08 95       	ret

00001fae <_exit>:
    1fae:	f8 94       	cli

00001fb0 <__stop_program>:
    1fb0:	ff cf       	rjmp	.-2      	; 0x1fb0 <__stop_program>
