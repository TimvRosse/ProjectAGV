
bin\Debug\ProjectAGV_Uno.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000108  00800100  00001b6a  00001c1e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001b6a  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800208  00800208  00001d26  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  00001d26  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .debug_aranges 000001c0  00000000  00000000  00001d29  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000002c9  00000000  00000000  00001ee9  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000029fe  00000000  00000000  000021b2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001517  00000000  00000000  00004bb0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000190c  00000000  00000000  000060c7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000280  00000000  00000000  000079d4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000440  00000000  00000000  00007c54  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009ce  00000000  00000000  00008094  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00008a62  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 91 01 	jmp	0x322	; 0x322 <__vector_3>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 61 03 	jmp	0x6c2	; 0x6c2 <__vector_13>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
      74:	12 e0       	ldi	r17, 0x02	; 2
      76:	a8 e0       	ldi	r26, 0x08	; 8
      78:	b2 e0       	ldi	r27, 0x02	; 2
      7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
      7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
      7e:	ae 30       	cpi	r26, 0x0E	; 14
      80:	b1 07       	cpc	r27, r17
      82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>

00000084 <__do_copy_data>:
      84:	12 e0       	ldi	r17, 0x02	; 2
      86:	a0 e0       	ldi	r26, 0x00	; 0
      88:	b1 e0       	ldi	r27, 0x01	; 1
      8a:	ea e6       	ldi	r30, 0x6A	; 106
      8c:	fb e1       	ldi	r31, 0x1B	; 27
      8e:	02 c0       	rjmp	.+4      	; 0x94 <.do_copy_data_start>

00000090 <.do_copy_data_loop>:
      90:	05 90       	lpm	r0, Z+
      92:	0d 92       	st	X+, r0

00000094 <.do_copy_data_start>:
      94:	a8 30       	cpi	r26, 0x08	; 8
      96:	b1 07       	cpc	r27, r17
      98:	d9 f7       	brne	.-10     	; 0x90 <.do_copy_data_loop>
      9a:	0e 94 27 05 	call	0xa4e	; 0xa4e <main>
      9e:	0c 94 b3 0d 	jmp	0x1b66	; 0x1b66 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <init>:
volatile int aanwaarde = 0;
long int timer;


void init(void)
{
      a6:	df 93       	push	r29
      a8:	cf 93       	push	r28
      aa:	cd b7       	in	r28, 0x3d	; 61
      ac:	de b7       	in	r29, 0x3e	; 62
    //DDR Reg:
    DDRC |= _BV(motorPin);
      ae:	a7 e2       	ldi	r26, 0x27	; 39
      b0:	b0 e0       	ldi	r27, 0x00	; 0
      b2:	e7 e2       	ldi	r30, 0x27	; 39
      b4:	f0 e0       	ldi	r31, 0x00	; 0
      b6:	80 81       	ld	r24, Z
      b8:	80 61       	ori	r24, 0x10	; 16
      ba:	8c 93       	st	X, r24
    DDRC |= _BV(bochtPin);
      bc:	a7 e2       	ldi	r26, 0x27	; 39
      be:	b0 e0       	ldi	r27, 0x00	; 0
      c0:	e7 e2       	ldi	r30, 0x27	; 39
      c2:	f0 e0       	ldi	r31, 0x00	; 0
      c4:	80 81       	ld	r24, Z
      c6:	80 62       	ori	r24, 0x20	; 32
      c8:	8c 93       	st	X, r24
    DDRD |= _BV(buzzerPin);
      ca:	aa e2       	ldi	r26, 0x2A	; 42
      cc:	b0 e0       	ldi	r27, 0x00	; 0
      ce:	ea e2       	ldi	r30, 0x2A	; 42
      d0:	f0 e0       	ldi	r31, 0x00	; 0
      d2:	80 81       	ld	r24, Z
      d4:	82 60       	ori	r24, 0x02	; 2
      d6:	8c 93       	st	X, r24
    DDRD |= (1<<trig);
      d8:	aa e2       	ldi	r26, 0x2A	; 42
      da:	b0 e0       	ldi	r27, 0x00	; 0
      dc:	ea e2       	ldi	r30, 0x2A	; 42
      de:	f0 e0       	ldi	r31, 0x00	; 0
      e0:	80 81       	ld	r24, Z
      e2:	81 60       	ori	r24, 0x01	; 1
      e4:	8c 93       	st	X, r24

    //init pins:
    PORTB |= _BV(IrSen1);
      e6:	a5 e2       	ldi	r26, 0x25	; 37
      e8:	b0 e0       	ldi	r27, 0x00	; 0
      ea:	e5 e2       	ldi	r30, 0x25	; 37
      ec:	f0 e0       	ldi	r31, 0x00	; 0
      ee:	80 81       	ld	r24, Z
      f0:	82 60       	ori	r24, 0x02	; 2
      f2:	8c 93       	st	X, r24
    PORTB |= _BV(IrSen2);
      f4:	a5 e2       	ldi	r26, 0x25	; 37
      f6:	b0 e0       	ldi	r27, 0x00	; 0
      f8:	e5 e2       	ldi	r30, 0x25	; 37
      fa:	f0 e0       	ldi	r31, 0x00	; 0
      fc:	80 81       	ld	r24, Z
      fe:	84 60       	ori	r24, 0x04	; 4
     100:	8c 93       	st	X, r24

    //init PCINT
    PCICR |= (1 << PCIE0);
     102:	a8 e6       	ldi	r26, 0x68	; 104
     104:	b0 e0       	ldi	r27, 0x00	; 0
     106:	e8 e6       	ldi	r30, 0x68	; 104
     108:	f0 e0       	ldi	r31, 0x00	; 0
     10a:	80 81       	ld	r24, Z
     10c:	81 60       	ori	r24, 0x01	; 1
     10e:	8c 93       	st	X, r24
    PCMSK0 |= ((1 << IrSen1) | (1 << IrSen2));
     110:	ab e6       	ldi	r26, 0x6B	; 107
     112:	b0 e0       	ldi	r27, 0x00	; 0
     114:	eb e6       	ldi	r30, 0x6B	; 107
     116:	f0 e0       	ldi	r31, 0x00	; 0
     118:	80 81       	ld	r24, Z
     11a:	86 60       	ori	r24, 0x06	; 6
     11c:	8c 93       	st	X, r24

    //timer1 init
    TIMSK1 |= TOIE1;
     11e:	af e6       	ldi	r26, 0x6F	; 111
     120:	b0 e0       	ldi	r27, 0x00	; 0
     122:	ef e6       	ldi	r30, 0x6F	; 111
     124:	f0 e0       	ldi	r31, 0x00	; 0
     126:	80 81       	ld	r24, Z
     128:	8c 93       	st	X, r24
    TCCR1A = 0;
     12a:	e0 e8       	ldi	r30, 0x80	; 128
     12c:	f0 e0       	ldi	r31, 0x00	; 0
     12e:	10 82       	st	Z, r1

    //init interrupt
    sei();
     130:	78 94       	sei
}
     132:	cf 91       	pop	r28
     134:	df 91       	pop	r29
     136:	08 95       	ret

00000138 <buzzer>:

void buzzer(int freq, int aantal)
{
     138:	df 93       	push	r29
     13a:	cf 93       	push	r28
     13c:	cd b7       	in	r28, 0x3d	; 61
     13e:	de b7       	in	r29, 0x3e	; 62
     140:	6e 97       	sbiw	r28, 0x1e	; 30
     142:	0f b6       	in	r0, 0x3f	; 63
     144:	f8 94       	cli
     146:	de bf       	out	0x3e, r29	; 62
     148:	0f be       	out	0x3f, r0	; 63
     14a:	cd bf       	out	0x3d, r28	; 61
     14c:	9c 8f       	std	Y+28, r25	; 0x1c
     14e:	8b 8f       	std	Y+27, r24	; 0x1b
     150:	7e 8f       	std	Y+30, r23	; 0x1e
     152:	6d 8f       	std	Y+29, r22	; 0x1d
    for(int i = 0; i < aantal; i++)
     154:	1a 8e       	std	Y+26, r1	; 0x1a
     156:	19 8e       	std	Y+25, r1	; 0x19
     158:	d3 c0       	rjmp	.+422    	; 0x300 <buzzer+0x1c8>
    {
        PORTD ^= _BV(buzzerPin);
     15a:	ab e2       	ldi	r26, 0x2B	; 43
     15c:	b0 e0       	ldi	r27, 0x00	; 0
     15e:	eb e2       	ldi	r30, 0x2B	; 43
     160:	f0 e0       	ldi	r31, 0x00	; 0
     162:	90 81       	ld	r25, Z
     164:	82 e0       	ldi	r24, 0x02	; 2
     166:	89 27       	eor	r24, r25
     168:	8c 93       	st	X, r24
        _delay_us(freq);
     16a:	8b 8d       	ldd	r24, Y+27	; 0x1b
     16c:	9c 8d       	ldd	r25, Y+28	; 0x1c
     16e:	aa 27       	eor	r26, r26
     170:	97 fd       	sbrc	r25, 7
     172:	a0 95       	com	r26
     174:	ba 2f       	mov	r27, r26
     176:	bc 01       	movw	r22, r24
     178:	cd 01       	movw	r24, r26
     17a:	0e 94 b6 0a 	call	0x156c	; 0x156c <__floatsisf>
     17e:	dc 01       	movw	r26, r24
     180:	cb 01       	movw	r24, r22
     182:	8d 8b       	std	Y+21, r24	; 0x15
     184:	9e 8b       	std	Y+22, r25	; 0x16
     186:	af 8b       	std	Y+23, r26	; 0x17
     188:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     18a:	6d 89       	ldd	r22, Y+21	; 0x15
     18c:	7e 89       	ldd	r23, Y+22	; 0x16
     18e:	8f 89       	ldd	r24, Y+23	; 0x17
     190:	98 8d       	ldd	r25, Y+24	; 0x18
     192:	2b ea       	ldi	r18, 0xAB	; 171
     194:	3a ea       	ldi	r19, 0xAA	; 170
     196:	4a ea       	ldi	r20, 0xAA	; 170
     198:	50 e4       	ldi	r21, 0x40	; 64
     19a:	0e 94 80 08 	call	0x1100	; 0x1100 <__mulsf3>
     19e:	dc 01       	movw	r26, r24
     1a0:	cb 01       	movw	r24, r22
     1a2:	89 8b       	std	Y+17, r24	; 0x11
     1a4:	9a 8b       	std	Y+18, r25	; 0x12
     1a6:	ab 8b       	std	Y+19, r26	; 0x13
     1a8:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
     1aa:	69 89       	ldd	r22, Y+17	; 0x11
     1ac:	7a 89       	ldd	r23, Y+18	; 0x12
     1ae:	8b 89       	ldd	r24, Y+19	; 0x13
     1b0:	9c 89       	ldd	r25, Y+20	; 0x14
     1b2:	20 e0       	ldi	r18, 0x00	; 0
     1b4:	30 e0       	ldi	r19, 0x00	; 0
     1b6:	40 e8       	ldi	r20, 0x80	; 128
     1b8:	5f e3       	ldi	r21, 0x3F	; 63
     1ba:	0e 94 86 0a 	call	0x150c	; 0x150c <__ltsf2>
     1be:	88 23       	and	r24, r24
     1c0:	1c f4       	brge	.+6      	; 0x1c8 <buzzer+0x90>
		__ticks = 1;
     1c2:	81 e0       	ldi	r24, 0x01	; 1
     1c4:	88 8b       	std	Y+16, r24	; 0x10
     1c6:	91 c0       	rjmp	.+290    	; 0x2ea <buzzer+0x1b2>
	else if (__tmp > 255)
     1c8:	69 89       	ldd	r22, Y+17	; 0x11
     1ca:	7a 89       	ldd	r23, Y+18	; 0x12
     1cc:	8b 89       	ldd	r24, Y+19	; 0x13
     1ce:	9c 89       	ldd	r25, Y+20	; 0x14
     1d0:	20 e0       	ldi	r18, 0x00	; 0
     1d2:	30 e0       	ldi	r19, 0x00	; 0
     1d4:	4f e7       	ldi	r20, 0x7F	; 127
     1d6:	53 e4       	ldi	r21, 0x43	; 67
     1d8:	0e 94 26 0a 	call	0x144c	; 0x144c <__gtsf2>
     1dc:	18 16       	cp	r1, r24
     1de:	0c f0       	brlt	.+2      	; 0x1e2 <buzzer+0xaa>
     1e0:	7b c0       	rjmp	.+246    	; 0x2d8 <buzzer+0x1a0>
	{
		_delay_ms(__us / 1000.0);
     1e2:	6d 89       	ldd	r22, Y+21	; 0x15
     1e4:	7e 89       	ldd	r23, Y+22	; 0x16
     1e6:	8f 89       	ldd	r24, Y+23	; 0x17
     1e8:	98 8d       	ldd	r25, Y+24	; 0x18
     1ea:	20 e0       	ldi	r18, 0x00	; 0
     1ec:	30 e0       	ldi	r19, 0x00	; 0
     1ee:	4a e7       	ldi	r20, 0x7A	; 122
     1f0:	54 e4       	ldi	r21, 0x44	; 68
     1f2:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <__divsf3>
     1f6:	dc 01       	movw	r26, r24
     1f8:	cb 01       	movw	r24, r22
     1fa:	8c 87       	std	Y+12, r24	; 0x0c
     1fc:	9d 87       	std	Y+13, r25	; 0x0d
     1fe:	ae 87       	std	Y+14, r26	; 0x0e
     200:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     202:	6c 85       	ldd	r22, Y+12	; 0x0c
     204:	7d 85       	ldd	r23, Y+13	; 0x0d
     206:	8e 85       	ldd	r24, Y+14	; 0x0e
     208:	9f 85       	ldd	r25, Y+15	; 0x0f
     20a:	20 e0       	ldi	r18, 0x00	; 0
     20c:	30 e0       	ldi	r19, 0x00	; 0
     20e:	4a e7       	ldi	r20, 0x7A	; 122
     210:	55 e4       	ldi	r21, 0x45	; 69
     212:	0e 94 80 08 	call	0x1100	; 0x1100 <__mulsf3>
     216:	dc 01       	movw	r26, r24
     218:	cb 01       	movw	r24, r22
     21a:	88 87       	std	Y+8, r24	; 0x08
     21c:	99 87       	std	Y+9, r25	; 0x09
     21e:	aa 87       	std	Y+10, r26	; 0x0a
     220:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
     222:	68 85       	ldd	r22, Y+8	; 0x08
     224:	79 85       	ldd	r23, Y+9	; 0x09
     226:	8a 85       	ldd	r24, Y+10	; 0x0a
     228:	9b 85       	ldd	r25, Y+11	; 0x0b
     22a:	20 e0       	ldi	r18, 0x00	; 0
     22c:	30 e0       	ldi	r19, 0x00	; 0
     22e:	40 e8       	ldi	r20, 0x80	; 128
     230:	5f e3       	ldi	r21, 0x3F	; 63
     232:	0e 94 86 0a 	call	0x150c	; 0x150c <__ltsf2>
     236:	88 23       	and	r24, r24
     238:	2c f4       	brge	.+10     	; 0x244 <buzzer+0x10c>
		__ticks = 1;
     23a:	81 e0       	ldi	r24, 0x01	; 1
     23c:	90 e0       	ldi	r25, 0x00	; 0
     23e:	9f 83       	std	Y+7, r25	; 0x07
     240:	8e 83       	std	Y+6, r24	; 0x06
     242:	3f c0       	rjmp	.+126    	; 0x2c2 <buzzer+0x18a>
	else if (__tmp > 65535)
     244:	68 85       	ldd	r22, Y+8	; 0x08
     246:	79 85       	ldd	r23, Y+9	; 0x09
     248:	8a 85       	ldd	r24, Y+10	; 0x0a
     24a:	9b 85       	ldd	r25, Y+11	; 0x0b
     24c:	20 e0       	ldi	r18, 0x00	; 0
     24e:	3f ef       	ldi	r19, 0xFF	; 255
     250:	4f e7       	ldi	r20, 0x7F	; 127
     252:	57 e4       	ldi	r21, 0x47	; 71
     254:	0e 94 26 0a 	call	0x144c	; 0x144c <__gtsf2>
     258:	18 16       	cp	r1, r24
     25a:	4c f5       	brge	.+82     	; 0x2ae <buzzer+0x176>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     25c:	6c 85       	ldd	r22, Y+12	; 0x0c
     25e:	7d 85       	ldd	r23, Y+13	; 0x0d
     260:	8e 85       	ldd	r24, Y+14	; 0x0e
     262:	9f 85       	ldd	r25, Y+15	; 0x0f
     264:	20 e0       	ldi	r18, 0x00	; 0
     266:	30 e0       	ldi	r19, 0x00	; 0
     268:	40 e2       	ldi	r20, 0x20	; 32
     26a:	51 e4       	ldi	r21, 0x41	; 65
     26c:	0e 94 80 08 	call	0x1100	; 0x1100 <__mulsf3>
     270:	dc 01       	movw	r26, r24
     272:	cb 01       	movw	r24, r22
     274:	bc 01       	movw	r22, r24
     276:	cd 01       	movw	r24, r26
     278:	0e 94 aa 06 	call	0xd54	; 0xd54 <__fixunssfsi>
     27c:	dc 01       	movw	r26, r24
     27e:	cb 01       	movw	r24, r22
     280:	9f 83       	std	Y+7, r25	; 0x07
     282:	8e 83       	std	Y+6, r24	; 0x06
     284:	0f c0       	rjmp	.+30     	; 0x2a4 <buzzer+0x16c>
     286:	80 e9       	ldi	r24, 0x90	; 144
     288:	91 e0       	ldi	r25, 0x01	; 1
     28a:	9d 83       	std	Y+5, r25	; 0x05
     28c:	8c 83       	std	Y+4, r24	; 0x04
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     28e:	8c 81       	ldd	r24, Y+4	; 0x04
     290:	9d 81       	ldd	r25, Y+5	; 0x05
     292:	01 97       	sbiw	r24, 0x01	; 1
     294:	f1 f7       	brne	.-4      	; 0x292 <buzzer+0x15a>
     296:	9d 83       	std	Y+5, r25	; 0x05
     298:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     29a:	8e 81       	ldd	r24, Y+6	; 0x06
     29c:	9f 81       	ldd	r25, Y+7	; 0x07
     29e:	01 97       	sbiw	r24, 0x01	; 1
     2a0:	9f 83       	std	Y+7, r25	; 0x07
     2a2:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     2a4:	8e 81       	ldd	r24, Y+6	; 0x06
     2a6:	9f 81       	ldd	r25, Y+7	; 0x07
     2a8:	00 97       	sbiw	r24, 0x00	; 0
     2aa:	69 f7       	brne	.-38     	; 0x286 <buzzer+0x14e>
     2ac:	24 c0       	rjmp	.+72     	; 0x2f6 <buzzer+0x1be>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     2ae:	68 85       	ldd	r22, Y+8	; 0x08
     2b0:	79 85       	ldd	r23, Y+9	; 0x09
     2b2:	8a 85       	ldd	r24, Y+10	; 0x0a
     2b4:	9b 85       	ldd	r25, Y+11	; 0x0b
     2b6:	0e 94 aa 06 	call	0xd54	; 0xd54 <__fixunssfsi>
     2ba:	dc 01       	movw	r26, r24
     2bc:	cb 01       	movw	r24, r22
     2be:	9f 83       	std	Y+7, r25	; 0x07
     2c0:	8e 83       	std	Y+6, r24	; 0x06
     2c2:	8e 81       	ldd	r24, Y+6	; 0x06
     2c4:	9f 81       	ldd	r25, Y+7	; 0x07
     2c6:	9b 83       	std	Y+3, r25	; 0x03
     2c8:	8a 83       	std	Y+2, r24	; 0x02
     2ca:	8a 81       	ldd	r24, Y+2	; 0x02
     2cc:	9b 81       	ldd	r25, Y+3	; 0x03
     2ce:	01 97       	sbiw	r24, 0x01	; 1
     2d0:	f1 f7       	brne	.-4      	; 0x2ce <buzzer+0x196>
     2d2:	9b 83       	std	Y+3, r25	; 0x03
     2d4:	8a 83       	std	Y+2, r24	; 0x02
     2d6:	0f c0       	rjmp	.+30     	; 0x2f6 <buzzer+0x1be>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     2d8:	69 89       	ldd	r22, Y+17	; 0x11
     2da:	7a 89       	ldd	r23, Y+18	; 0x12
     2dc:	8b 89       	ldd	r24, Y+19	; 0x13
     2de:	9c 89       	ldd	r25, Y+20	; 0x14
     2e0:	0e 94 aa 06 	call	0xd54	; 0xd54 <__fixunssfsi>
     2e4:	dc 01       	movw	r26, r24
     2e6:	cb 01       	movw	r24, r22
     2e8:	88 8b       	std	Y+16, r24	; 0x10
     2ea:	88 89       	ldd	r24, Y+16	; 0x10
     2ec:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     2ee:	89 81       	ldd	r24, Y+1	; 0x01
     2f0:	8a 95       	dec	r24
     2f2:	f1 f7       	brne	.-4      	; 0x2f0 <buzzer+0x1b8>
     2f4:	89 83       	std	Y+1, r24	; 0x01
    sei();
}

void buzzer(int freq, int aantal)
{
    for(int i = 0; i < aantal; i++)
     2f6:	89 8d       	ldd	r24, Y+25	; 0x19
     2f8:	9a 8d       	ldd	r25, Y+26	; 0x1a
     2fa:	01 96       	adiw	r24, 0x01	; 1
     2fc:	9a 8f       	std	Y+26, r25	; 0x1a
     2fe:	89 8f       	std	Y+25, r24	; 0x19
     300:	29 8d       	ldd	r18, Y+25	; 0x19
     302:	3a 8d       	ldd	r19, Y+26	; 0x1a
     304:	8d 8d       	ldd	r24, Y+29	; 0x1d
     306:	9e 8d       	ldd	r25, Y+30	; 0x1e
     308:	28 17       	cp	r18, r24
     30a:	39 07       	cpc	r19, r25
     30c:	0c f4       	brge	.+2      	; 0x310 <buzzer+0x1d8>
     30e:	25 cf       	rjmp	.-438    	; 0x15a <buzzer+0x22>
    {
        PORTD ^= _BV(buzzerPin);
        _delay_us(freq);

    }
}
     310:	6e 96       	adiw	r28, 0x1e	; 30
     312:	0f b6       	in	r0, 0x3f	; 63
     314:	f8 94       	cli
     316:	de bf       	out	0x3e, r29	; 62
     318:	0f be       	out	0x3f, r0	; 63
     31a:	cd bf       	out	0x3d, r28	; 61
     31c:	cf 91       	pop	r28
     31e:	df 91       	pop	r29
     320:	08 95       	ret

00000322 <__vector_3>:

ISR(PCINT0_vect)
{
     322:	1f 92       	push	r1
     324:	0f 92       	push	r0
     326:	0f b6       	in	r0, 0x3f	; 63
     328:	0f 92       	push	r0
     32a:	11 24       	eor	r1, r1
     32c:	2f 93       	push	r18
     32e:	3f 93       	push	r19
     330:	4f 93       	push	r20
     332:	5f 93       	push	r21
     334:	6f 93       	push	r22
     336:	7f 93       	push	r23
     338:	8f 93       	push	r24
     33a:	9f 93       	push	r25
     33c:	af 93       	push	r26
     33e:	bf 93       	push	r27
     340:	ef 93       	push	r30
     342:	ff 93       	push	r31
     344:	df 93       	push	r29
     346:	cf 93       	push	r28
     348:	cd b7       	in	r28, 0x3d	; 61
     34a:	de b7       	in	r29, 0x3e	; 62
     34c:	aa 97       	sbiw	r28, 0x2a	; 42
     34e:	de bf       	out	0x3e, r29	; 62
     350:	cd bf       	out	0x3d, r28	; 61
     352:	80 e0       	ldi	r24, 0x00	; 0
     354:	90 e0       	ldi	r25, 0x00	; 0
     356:	a8 ec       	ldi	r26, 0xC8	; 200
     358:	b1 e4       	ldi	r27, 0x41	; 65
     35a:	8f a3       	std	Y+39, r24	; 0x27
     35c:	98 a7       	std	Y+40, r25	; 0x28
     35e:	a9 a7       	std	Y+41, r26	; 0x29
     360:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     362:	6f a1       	ldd	r22, Y+39	; 0x27
     364:	78 a5       	ldd	r23, Y+40	; 0x28
     366:	89 a5       	ldd	r24, Y+41	; 0x29
     368:	9a a5       	ldd	r25, Y+42	; 0x2a
     36a:	20 e0       	ldi	r18, 0x00	; 0
     36c:	30 e0       	ldi	r19, 0x00	; 0
     36e:	4a e7       	ldi	r20, 0x7A	; 122
     370:	55 e4       	ldi	r21, 0x45	; 69
     372:	0e 94 80 08 	call	0x1100	; 0x1100 <__mulsf3>
     376:	dc 01       	movw	r26, r24
     378:	cb 01       	movw	r24, r22
     37a:	8b a3       	std	Y+35, r24	; 0x23
     37c:	9c a3       	std	Y+36, r25	; 0x24
     37e:	ad a3       	std	Y+37, r26	; 0x25
     380:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     382:	6b a1       	ldd	r22, Y+35	; 0x23
     384:	7c a1       	ldd	r23, Y+36	; 0x24
     386:	8d a1       	ldd	r24, Y+37	; 0x25
     388:	9e a1       	ldd	r25, Y+38	; 0x26
     38a:	20 e0       	ldi	r18, 0x00	; 0
     38c:	30 e0       	ldi	r19, 0x00	; 0
     38e:	40 e8       	ldi	r20, 0x80	; 128
     390:	5f e3       	ldi	r21, 0x3F	; 63
     392:	0e 94 86 0a 	call	0x150c	; 0x150c <__ltsf2>
     396:	88 23       	and	r24, r24
     398:	2c f4       	brge	.+10     	; 0x3a4 <__vector_3+0x82>
		__ticks = 1;
     39a:	81 e0       	ldi	r24, 0x01	; 1
     39c:	90 e0       	ldi	r25, 0x00	; 0
     39e:	9a a3       	std	Y+34, r25	; 0x22
     3a0:	89 a3       	std	Y+33, r24	; 0x21
     3a2:	3f c0       	rjmp	.+126    	; 0x422 <__vector_3+0x100>
	else if (__tmp > 65535)
     3a4:	6b a1       	ldd	r22, Y+35	; 0x23
     3a6:	7c a1       	ldd	r23, Y+36	; 0x24
     3a8:	8d a1       	ldd	r24, Y+37	; 0x25
     3aa:	9e a1       	ldd	r25, Y+38	; 0x26
     3ac:	20 e0       	ldi	r18, 0x00	; 0
     3ae:	3f ef       	ldi	r19, 0xFF	; 255
     3b0:	4f e7       	ldi	r20, 0x7F	; 127
     3b2:	57 e4       	ldi	r21, 0x47	; 71
     3b4:	0e 94 26 0a 	call	0x144c	; 0x144c <__gtsf2>
     3b8:	18 16       	cp	r1, r24
     3ba:	4c f5       	brge	.+82     	; 0x40e <__vector_3+0xec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     3bc:	6f a1       	ldd	r22, Y+39	; 0x27
     3be:	78 a5       	ldd	r23, Y+40	; 0x28
     3c0:	89 a5       	ldd	r24, Y+41	; 0x29
     3c2:	9a a5       	ldd	r25, Y+42	; 0x2a
     3c4:	20 e0       	ldi	r18, 0x00	; 0
     3c6:	30 e0       	ldi	r19, 0x00	; 0
     3c8:	40 e2       	ldi	r20, 0x20	; 32
     3ca:	51 e4       	ldi	r21, 0x41	; 65
     3cc:	0e 94 80 08 	call	0x1100	; 0x1100 <__mulsf3>
     3d0:	dc 01       	movw	r26, r24
     3d2:	cb 01       	movw	r24, r22
     3d4:	bc 01       	movw	r22, r24
     3d6:	cd 01       	movw	r24, r26
     3d8:	0e 94 aa 06 	call	0xd54	; 0xd54 <__fixunssfsi>
     3dc:	dc 01       	movw	r26, r24
     3de:	cb 01       	movw	r24, r22
     3e0:	9a a3       	std	Y+34, r25	; 0x22
     3e2:	89 a3       	std	Y+33, r24	; 0x21
     3e4:	0f c0       	rjmp	.+30     	; 0x404 <__vector_3+0xe2>
     3e6:	80 e9       	ldi	r24, 0x90	; 144
     3e8:	91 e0       	ldi	r25, 0x01	; 1
     3ea:	98 a3       	std	Y+32, r25	; 0x20
     3ec:	8f 8f       	std	Y+31, r24	; 0x1f
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     3ee:	8f 8d       	ldd	r24, Y+31	; 0x1f
     3f0:	98 a1       	ldd	r25, Y+32	; 0x20
     3f2:	01 97       	sbiw	r24, 0x01	; 1
     3f4:	f1 f7       	brne	.-4      	; 0x3f2 <__vector_3+0xd0>
     3f6:	98 a3       	std	Y+32, r25	; 0x20
     3f8:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     3fa:	89 a1       	ldd	r24, Y+33	; 0x21
     3fc:	9a a1       	ldd	r25, Y+34	; 0x22
     3fe:	01 97       	sbiw	r24, 0x01	; 1
     400:	9a a3       	std	Y+34, r25	; 0x22
     402:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     404:	89 a1       	ldd	r24, Y+33	; 0x21
     406:	9a a1       	ldd	r25, Y+34	; 0x22
     408:	00 97       	sbiw	r24, 0x00	; 0
     40a:	69 f7       	brne	.-38     	; 0x3e6 <__vector_3+0xc4>
     40c:	14 c0       	rjmp	.+40     	; 0x436 <__vector_3+0x114>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     40e:	6b a1       	ldd	r22, Y+35	; 0x23
     410:	7c a1       	ldd	r23, Y+36	; 0x24
     412:	8d a1       	ldd	r24, Y+37	; 0x25
     414:	9e a1       	ldd	r25, Y+38	; 0x26
     416:	0e 94 aa 06 	call	0xd54	; 0xd54 <__fixunssfsi>
     41a:	dc 01       	movw	r26, r24
     41c:	cb 01       	movw	r24, r22
     41e:	9a a3       	std	Y+34, r25	; 0x22
     420:	89 a3       	std	Y+33, r24	; 0x21
     422:	89 a1       	ldd	r24, Y+33	; 0x21
     424:	9a a1       	ldd	r25, Y+34	; 0x22
     426:	9e 8f       	std	Y+30, r25	; 0x1e
     428:	8d 8f       	std	Y+29, r24	; 0x1d
     42a:	8d 8d       	ldd	r24, Y+29	; 0x1d
     42c:	9e 8d       	ldd	r25, Y+30	; 0x1e
     42e:	01 97       	sbiw	r24, 0x01	; 1
     430:	f1 f7       	brne	.-4      	; 0x42e <__vector_3+0x10c>
     432:	9e 8f       	std	Y+30, r25	; 0x1e
     434:	8d 8f       	std	Y+29, r24	; 0x1d
    _delay_ms(25);
    if(bit_is_clear(PINB, IrSen1))
     436:	e3 e2       	ldi	r30, 0x23	; 35
     438:	f0 e0       	ldi	r31, 0x00	; 0
     43a:	80 81       	ld	r24, Z
     43c:	88 2f       	mov	r24, r24
     43e:	90 e0       	ldi	r25, 0x00	; 0
     440:	82 70       	andi	r24, 0x02	; 2
     442:	90 70       	andi	r25, 0x00	; 0
     444:	00 97       	sbiw	r24, 0x00	; 0
     446:	09 f0       	breq	.+2      	; 0x44a <__vector_3+0x128>
     448:	8e c0       	rjmp	.+284    	; 0x566 <__vector_3+0x244>
    {
        if(aanwaarde != 1)
     44a:	80 91 08 02 	lds	r24, 0x0208
     44e:	90 91 09 02 	lds	r25, 0x0209
     452:	81 30       	cpi	r24, 0x01	; 1
     454:	91 05       	cpc	r25, r1
     456:	09 f4       	brne	.+2      	; 0x45a <__vector_3+0x138>
     458:	86 c0       	rjmp	.+268    	; 0x566 <__vector_3+0x244>
        {
            PORTC |= _BV(motorPin);
     45a:	a8 e2       	ldi	r26, 0x28	; 40
     45c:	b0 e0       	ldi	r27, 0x00	; 0
     45e:	e8 e2       	ldi	r30, 0x28	; 40
     460:	f0 e0       	ldi	r31, 0x00	; 0
     462:	80 81       	ld	r24, Z
     464:	80 61       	ori	r24, 0x10	; 16
     466:	8c 93       	st	X, r24
            buzzer(350, 1000);
     468:	8e e5       	ldi	r24, 0x5E	; 94
     46a:	91 e0       	ldi	r25, 0x01	; 1
     46c:	68 ee       	ldi	r22, 0xE8	; 232
     46e:	73 e0       	ldi	r23, 0x03	; 3
     470:	0e 94 9c 00 	call	0x138	; 0x138 <buzzer>
     474:	80 e0       	ldi	r24, 0x00	; 0
     476:	90 e0       	ldi	r25, 0x00	; 0
     478:	aa ef       	ldi	r26, 0xFA	; 250
     47a:	b3 e4       	ldi	r27, 0x43	; 67
     47c:	89 8f       	std	Y+25, r24	; 0x19
     47e:	9a 8f       	std	Y+26, r25	; 0x1a
     480:	ab 8f       	std	Y+27, r26	; 0x1b
     482:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     484:	69 8d       	ldd	r22, Y+25	; 0x19
     486:	7a 8d       	ldd	r23, Y+26	; 0x1a
     488:	8b 8d       	ldd	r24, Y+27	; 0x1b
     48a:	9c 8d       	ldd	r25, Y+28	; 0x1c
     48c:	20 e0       	ldi	r18, 0x00	; 0
     48e:	30 e0       	ldi	r19, 0x00	; 0
     490:	4a e7       	ldi	r20, 0x7A	; 122
     492:	55 e4       	ldi	r21, 0x45	; 69
     494:	0e 94 80 08 	call	0x1100	; 0x1100 <__mulsf3>
     498:	dc 01       	movw	r26, r24
     49a:	cb 01       	movw	r24, r22
     49c:	8d 8b       	std	Y+21, r24	; 0x15
     49e:	9e 8b       	std	Y+22, r25	; 0x16
     4a0:	af 8b       	std	Y+23, r26	; 0x17
     4a2:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     4a4:	6d 89       	ldd	r22, Y+21	; 0x15
     4a6:	7e 89       	ldd	r23, Y+22	; 0x16
     4a8:	8f 89       	ldd	r24, Y+23	; 0x17
     4aa:	98 8d       	ldd	r25, Y+24	; 0x18
     4ac:	20 e0       	ldi	r18, 0x00	; 0
     4ae:	30 e0       	ldi	r19, 0x00	; 0
     4b0:	40 e8       	ldi	r20, 0x80	; 128
     4b2:	5f e3       	ldi	r21, 0x3F	; 63
     4b4:	0e 94 86 0a 	call	0x150c	; 0x150c <__ltsf2>
     4b8:	88 23       	and	r24, r24
     4ba:	2c f4       	brge	.+10     	; 0x4c6 <__vector_3+0x1a4>
		__ticks = 1;
     4bc:	81 e0       	ldi	r24, 0x01	; 1
     4be:	90 e0       	ldi	r25, 0x00	; 0
     4c0:	9c 8b       	std	Y+20, r25	; 0x14
     4c2:	8b 8b       	std	Y+19, r24	; 0x13
     4c4:	3f c0       	rjmp	.+126    	; 0x544 <__vector_3+0x222>
	else if (__tmp > 65535)
     4c6:	6d 89       	ldd	r22, Y+21	; 0x15
     4c8:	7e 89       	ldd	r23, Y+22	; 0x16
     4ca:	8f 89       	ldd	r24, Y+23	; 0x17
     4cc:	98 8d       	ldd	r25, Y+24	; 0x18
     4ce:	20 e0       	ldi	r18, 0x00	; 0
     4d0:	3f ef       	ldi	r19, 0xFF	; 255
     4d2:	4f e7       	ldi	r20, 0x7F	; 127
     4d4:	57 e4       	ldi	r21, 0x47	; 71
     4d6:	0e 94 26 0a 	call	0x144c	; 0x144c <__gtsf2>
     4da:	18 16       	cp	r1, r24
     4dc:	4c f5       	brge	.+82     	; 0x530 <__vector_3+0x20e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     4de:	69 8d       	ldd	r22, Y+25	; 0x19
     4e0:	7a 8d       	ldd	r23, Y+26	; 0x1a
     4e2:	8b 8d       	ldd	r24, Y+27	; 0x1b
     4e4:	9c 8d       	ldd	r25, Y+28	; 0x1c
     4e6:	20 e0       	ldi	r18, 0x00	; 0
     4e8:	30 e0       	ldi	r19, 0x00	; 0
     4ea:	40 e2       	ldi	r20, 0x20	; 32
     4ec:	51 e4       	ldi	r21, 0x41	; 65
     4ee:	0e 94 80 08 	call	0x1100	; 0x1100 <__mulsf3>
     4f2:	dc 01       	movw	r26, r24
     4f4:	cb 01       	movw	r24, r22
     4f6:	bc 01       	movw	r22, r24
     4f8:	cd 01       	movw	r24, r26
     4fa:	0e 94 aa 06 	call	0xd54	; 0xd54 <__fixunssfsi>
     4fe:	dc 01       	movw	r26, r24
     500:	cb 01       	movw	r24, r22
     502:	9c 8b       	std	Y+20, r25	; 0x14
     504:	8b 8b       	std	Y+19, r24	; 0x13
     506:	0f c0       	rjmp	.+30     	; 0x526 <__vector_3+0x204>
     508:	80 e9       	ldi	r24, 0x90	; 144
     50a:	91 e0       	ldi	r25, 0x01	; 1
     50c:	9a 8b       	std	Y+18, r25	; 0x12
     50e:	89 8b       	std	Y+17, r24	; 0x11
     510:	89 89       	ldd	r24, Y+17	; 0x11
     512:	9a 89       	ldd	r25, Y+18	; 0x12
     514:	01 97       	sbiw	r24, 0x01	; 1
     516:	f1 f7       	brne	.-4      	; 0x514 <__vector_3+0x1f2>
     518:	9a 8b       	std	Y+18, r25	; 0x12
     51a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     51c:	8b 89       	ldd	r24, Y+19	; 0x13
     51e:	9c 89       	ldd	r25, Y+20	; 0x14
     520:	01 97       	sbiw	r24, 0x01	; 1
     522:	9c 8b       	std	Y+20, r25	; 0x14
     524:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     526:	8b 89       	ldd	r24, Y+19	; 0x13
     528:	9c 89       	ldd	r25, Y+20	; 0x14
     52a:	00 97       	sbiw	r24, 0x00	; 0
     52c:	69 f7       	brne	.-38     	; 0x508 <__vector_3+0x1e6>
     52e:	14 c0       	rjmp	.+40     	; 0x558 <__vector_3+0x236>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     530:	6d 89       	ldd	r22, Y+21	; 0x15
     532:	7e 89       	ldd	r23, Y+22	; 0x16
     534:	8f 89       	ldd	r24, Y+23	; 0x17
     536:	98 8d       	ldd	r25, Y+24	; 0x18
     538:	0e 94 aa 06 	call	0xd54	; 0xd54 <__fixunssfsi>
     53c:	dc 01       	movw	r26, r24
     53e:	cb 01       	movw	r24, r22
     540:	9c 8b       	std	Y+20, r25	; 0x14
     542:	8b 8b       	std	Y+19, r24	; 0x13
     544:	8b 89       	ldd	r24, Y+19	; 0x13
     546:	9c 89       	ldd	r25, Y+20	; 0x14
     548:	98 8b       	std	Y+16, r25	; 0x10
     54a:	8f 87       	std	Y+15, r24	; 0x0f
     54c:	8f 85       	ldd	r24, Y+15	; 0x0f
     54e:	98 89       	ldd	r25, Y+16	; 0x10
     550:	01 97       	sbiw	r24, 0x01	; 1
     552:	f1 f7       	brne	.-4      	; 0x550 <__vector_3+0x22e>
     554:	98 8b       	std	Y+16, r25	; 0x10
     556:	8f 87       	std	Y+15, r24	; 0x0f
            _delay_ms(500);
            PORTC &= ~_BV(motorPin);
     558:	a8 e2       	ldi	r26, 0x28	; 40
     55a:	b0 e0       	ldi	r27, 0x00	; 0
     55c:	e8 e2       	ldi	r30, 0x28	; 40
     55e:	f0 e0       	ldi	r31, 0x00	; 0
     560:	80 81       	ld	r24, Z
     562:	8f 7e       	andi	r24, 0xEF	; 239
     564:	8c 93       	st	X, r24
        }

    }
    if(bit_is_clear(PINB, IrSen2))
     566:	e3 e2       	ldi	r30, 0x23	; 35
     568:	f0 e0       	ldi	r31, 0x00	; 0
     56a:	80 81       	ld	r24, Z
     56c:	88 2f       	mov	r24, r24
     56e:	90 e0       	ldi	r25, 0x00	; 0
     570:	84 70       	andi	r24, 0x04	; 4
     572:	90 70       	andi	r25, 0x00	; 0
     574:	00 97       	sbiw	r24, 0x00	; 0
     576:	09 f0       	breq	.+2      	; 0x57a <__vector_3+0x258>
     578:	8e c0       	rjmp	.+284    	; 0x696 <__vector_3+0x374>
    {
        if(aanwaarde != 2)
     57a:	80 91 08 02 	lds	r24, 0x0208
     57e:	90 91 09 02 	lds	r25, 0x0209
     582:	82 30       	cpi	r24, 0x02	; 2
     584:	91 05       	cpc	r25, r1
     586:	09 f4       	brne	.+2      	; 0x58a <__vector_3+0x268>
     588:	86 c0       	rjmp	.+268    	; 0x696 <__vector_3+0x374>
        {
            PORTC |= _BV(motorPin);
     58a:	a8 e2       	ldi	r26, 0x28	; 40
     58c:	b0 e0       	ldi	r27, 0x00	; 0
     58e:	e8 e2       	ldi	r30, 0x28	; 40
     590:	f0 e0       	ldi	r31, 0x00	; 0
     592:	80 81       	ld	r24, Z
     594:	80 61       	ori	r24, 0x10	; 16
     596:	8c 93       	st	X, r24
            buzzer(350, 1000);
     598:	8e e5       	ldi	r24, 0x5E	; 94
     59a:	91 e0       	ldi	r25, 0x01	; 1
     59c:	68 ee       	ldi	r22, 0xE8	; 232
     59e:	73 e0       	ldi	r23, 0x03	; 3
     5a0:	0e 94 9c 00 	call	0x138	; 0x138 <buzzer>
     5a4:	80 e0       	ldi	r24, 0x00	; 0
     5a6:	90 e0       	ldi	r25, 0x00	; 0
     5a8:	aa ef       	ldi	r26, 0xFA	; 250
     5aa:	b3 e4       	ldi	r27, 0x43	; 67
     5ac:	8b 87       	std	Y+11, r24	; 0x0b
     5ae:	9c 87       	std	Y+12, r25	; 0x0c
     5b0:	ad 87       	std	Y+13, r26	; 0x0d
     5b2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     5b4:	6b 85       	ldd	r22, Y+11	; 0x0b
     5b6:	7c 85       	ldd	r23, Y+12	; 0x0c
     5b8:	8d 85       	ldd	r24, Y+13	; 0x0d
     5ba:	9e 85       	ldd	r25, Y+14	; 0x0e
     5bc:	20 e0       	ldi	r18, 0x00	; 0
     5be:	30 e0       	ldi	r19, 0x00	; 0
     5c0:	4a e7       	ldi	r20, 0x7A	; 122
     5c2:	55 e4       	ldi	r21, 0x45	; 69
     5c4:	0e 94 80 08 	call	0x1100	; 0x1100 <__mulsf3>
     5c8:	dc 01       	movw	r26, r24
     5ca:	cb 01       	movw	r24, r22
     5cc:	8f 83       	std	Y+7, r24	; 0x07
     5ce:	98 87       	std	Y+8, r25	; 0x08
     5d0:	a9 87       	std	Y+9, r26	; 0x09
     5d2:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     5d4:	6f 81       	ldd	r22, Y+7	; 0x07
     5d6:	78 85       	ldd	r23, Y+8	; 0x08
     5d8:	89 85       	ldd	r24, Y+9	; 0x09
     5da:	9a 85       	ldd	r25, Y+10	; 0x0a
     5dc:	20 e0       	ldi	r18, 0x00	; 0
     5de:	30 e0       	ldi	r19, 0x00	; 0
     5e0:	40 e8       	ldi	r20, 0x80	; 128
     5e2:	5f e3       	ldi	r21, 0x3F	; 63
     5e4:	0e 94 86 0a 	call	0x150c	; 0x150c <__ltsf2>
     5e8:	88 23       	and	r24, r24
     5ea:	2c f4       	brge	.+10     	; 0x5f6 <__vector_3+0x2d4>
		__ticks = 1;
     5ec:	81 e0       	ldi	r24, 0x01	; 1
     5ee:	90 e0       	ldi	r25, 0x00	; 0
     5f0:	9e 83       	std	Y+6, r25	; 0x06
     5f2:	8d 83       	std	Y+5, r24	; 0x05
     5f4:	3f c0       	rjmp	.+126    	; 0x674 <__vector_3+0x352>
	else if (__tmp > 65535)
     5f6:	6f 81       	ldd	r22, Y+7	; 0x07
     5f8:	78 85       	ldd	r23, Y+8	; 0x08
     5fa:	89 85       	ldd	r24, Y+9	; 0x09
     5fc:	9a 85       	ldd	r25, Y+10	; 0x0a
     5fe:	20 e0       	ldi	r18, 0x00	; 0
     600:	3f ef       	ldi	r19, 0xFF	; 255
     602:	4f e7       	ldi	r20, 0x7F	; 127
     604:	57 e4       	ldi	r21, 0x47	; 71
     606:	0e 94 26 0a 	call	0x144c	; 0x144c <__gtsf2>
     60a:	18 16       	cp	r1, r24
     60c:	4c f5       	brge	.+82     	; 0x660 <__vector_3+0x33e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     60e:	6b 85       	ldd	r22, Y+11	; 0x0b
     610:	7c 85       	ldd	r23, Y+12	; 0x0c
     612:	8d 85       	ldd	r24, Y+13	; 0x0d
     614:	9e 85       	ldd	r25, Y+14	; 0x0e
     616:	20 e0       	ldi	r18, 0x00	; 0
     618:	30 e0       	ldi	r19, 0x00	; 0
     61a:	40 e2       	ldi	r20, 0x20	; 32
     61c:	51 e4       	ldi	r21, 0x41	; 65
     61e:	0e 94 80 08 	call	0x1100	; 0x1100 <__mulsf3>
     622:	dc 01       	movw	r26, r24
     624:	cb 01       	movw	r24, r22
     626:	bc 01       	movw	r22, r24
     628:	cd 01       	movw	r24, r26
     62a:	0e 94 aa 06 	call	0xd54	; 0xd54 <__fixunssfsi>
     62e:	dc 01       	movw	r26, r24
     630:	cb 01       	movw	r24, r22
     632:	9e 83       	std	Y+6, r25	; 0x06
     634:	8d 83       	std	Y+5, r24	; 0x05
     636:	0f c0       	rjmp	.+30     	; 0x656 <__vector_3+0x334>
     638:	80 e9       	ldi	r24, 0x90	; 144
     63a:	91 e0       	ldi	r25, 0x01	; 1
     63c:	9c 83       	std	Y+4, r25	; 0x04
     63e:	8b 83       	std	Y+3, r24	; 0x03
     640:	8b 81       	ldd	r24, Y+3	; 0x03
     642:	9c 81       	ldd	r25, Y+4	; 0x04
     644:	01 97       	sbiw	r24, 0x01	; 1
     646:	f1 f7       	brne	.-4      	; 0x644 <__vector_3+0x322>
     648:	9c 83       	std	Y+4, r25	; 0x04
     64a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     64c:	8d 81       	ldd	r24, Y+5	; 0x05
     64e:	9e 81       	ldd	r25, Y+6	; 0x06
     650:	01 97       	sbiw	r24, 0x01	; 1
     652:	9e 83       	std	Y+6, r25	; 0x06
     654:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     656:	8d 81       	ldd	r24, Y+5	; 0x05
     658:	9e 81       	ldd	r25, Y+6	; 0x06
     65a:	00 97       	sbiw	r24, 0x00	; 0
     65c:	69 f7       	brne	.-38     	; 0x638 <__vector_3+0x316>
     65e:	14 c0       	rjmp	.+40     	; 0x688 <__vector_3+0x366>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     660:	6f 81       	ldd	r22, Y+7	; 0x07
     662:	78 85       	ldd	r23, Y+8	; 0x08
     664:	89 85       	ldd	r24, Y+9	; 0x09
     666:	9a 85       	ldd	r25, Y+10	; 0x0a
     668:	0e 94 aa 06 	call	0xd54	; 0xd54 <__fixunssfsi>
     66c:	dc 01       	movw	r26, r24
     66e:	cb 01       	movw	r24, r22
     670:	9e 83       	std	Y+6, r25	; 0x06
     672:	8d 83       	std	Y+5, r24	; 0x05
     674:	8d 81       	ldd	r24, Y+5	; 0x05
     676:	9e 81       	ldd	r25, Y+6	; 0x06
     678:	9a 83       	std	Y+2, r25	; 0x02
     67a:	89 83       	std	Y+1, r24	; 0x01
     67c:	89 81       	ldd	r24, Y+1	; 0x01
     67e:	9a 81       	ldd	r25, Y+2	; 0x02
     680:	01 97       	sbiw	r24, 0x01	; 1
     682:	f1 f7       	brne	.-4      	; 0x680 <__vector_3+0x35e>
     684:	9a 83       	std	Y+2, r25	; 0x02
     686:	89 83       	std	Y+1, r24	; 0x01
            _delay_ms(500);
            PORTC &= ~_BV(motorPin);
     688:	a8 e2       	ldi	r26, 0x28	; 40
     68a:	b0 e0       	ldi	r27, 0x00	; 0
     68c:	e8 e2       	ldi	r30, 0x28	; 40
     68e:	f0 e0       	ldi	r31, 0x00	; 0
     690:	80 81       	ld	r24, Z
     692:	8f 7e       	andi	r24, 0xEF	; 239
     694:	8c 93       	st	X, r24
        }

    }
}
     696:	aa 96       	adiw	r28, 0x2a	; 42
     698:	de bf       	out	0x3e, r29	; 62
     69a:	cd bf       	out	0x3d, r28	; 61
     69c:	cf 91       	pop	r28
     69e:	df 91       	pop	r29
     6a0:	ff 91       	pop	r31
     6a2:	ef 91       	pop	r30
     6a4:	bf 91       	pop	r27
     6a6:	af 91       	pop	r26
     6a8:	9f 91       	pop	r25
     6aa:	8f 91       	pop	r24
     6ac:	7f 91       	pop	r23
     6ae:	6f 91       	pop	r22
     6b0:	5f 91       	pop	r21
     6b2:	4f 91       	pop	r20
     6b4:	3f 91       	pop	r19
     6b6:	2f 91       	pop	r18
     6b8:	0f 90       	pop	r0
     6ba:	0f be       	out	0x3f, r0	; 63
     6bc:	0f 90       	pop	r0
     6be:	1f 90       	pop	r1
     6c0:	18 95       	reti

000006c2 <__vector_13>:

ISR(TIMER1_OVF_vect)
{
     6c2:	1f 92       	push	r1
     6c4:	0f 92       	push	r0
     6c6:	0f b6       	in	r0, 0x3f	; 63
     6c8:	0f 92       	push	r0
     6ca:	11 24       	eor	r1, r1
     6cc:	8f 93       	push	r24
     6ce:	9f 93       	push	r25
     6d0:	af 93       	push	r26
     6d2:	bf 93       	push	r27
     6d4:	df 93       	push	r29
     6d6:	cf 93       	push	r28
     6d8:	cd b7       	in	r28, 0x3d	; 61
     6da:	de b7       	in	r29, 0x3e	; 62
    timer++;
     6dc:	80 91 0a 02 	lds	r24, 0x020A
     6e0:	90 91 0b 02 	lds	r25, 0x020B
     6e4:	a0 91 0c 02 	lds	r26, 0x020C
     6e8:	b0 91 0d 02 	lds	r27, 0x020D
     6ec:	01 96       	adiw	r24, 0x01	; 1
     6ee:	a1 1d       	adc	r26, r1
     6f0:	b1 1d       	adc	r27, r1
     6f2:	80 93 0a 02 	sts	0x020A, r24
     6f6:	90 93 0b 02 	sts	0x020B, r25
     6fa:	a0 93 0c 02 	sts	0x020C, r26
     6fe:	b0 93 0d 02 	sts	0x020D, r27
}
     702:	cf 91       	pop	r28
     704:	df 91       	pop	r29
     706:	bf 91       	pop	r27
     708:	af 91       	pop	r26
     70a:	9f 91       	pop	r25
     70c:	8f 91       	pop	r24
     70e:	0f 90       	pop	r0
     710:	0f be       	out	0x3f, r0	; 63
     712:	0f 90       	pop	r0
     714:	1f 90       	pop	r1
     716:	18 95       	reti

00000718 <functie1>:

void functie1 (void) //links uit
{
     718:	df 93       	push	r29
     71a:	cf 93       	push	r28
     71c:	cd b7       	in	r28, 0x3d	; 61
     71e:	de b7       	in	r29, 0x3e	; 62
    aanwaarde = 2;
     720:	82 e0       	ldi	r24, 0x02	; 2
     722:	90 e0       	ldi	r25, 0x00	; 0
     724:	90 93 09 02 	sts	0x0209, r25
     728:	80 93 08 02 	sts	0x0208, r24
}
     72c:	cf 91       	pop	r28
     72e:	df 91       	pop	r29
     730:	08 95       	ret

00000732 <functie2>:

void functie2 (void) // rechts uit
{
     732:	df 93       	push	r29
     734:	cf 93       	push	r28
     736:	cd b7       	in	r28, 0x3d	; 61
     738:	de b7       	in	r29, 0x3e	; 62
    aanwaarde = 1;
     73a:	81 e0       	ldi	r24, 0x01	; 1
     73c:	90 e0       	ldi	r25, 0x00	; 0
     73e:	90 93 09 02 	sts	0x0209, r25
     742:	80 93 08 02 	sts	0x0208, r24
}
     746:	cf 91       	pop	r28
     748:	df 91       	pop	r29
     74a:	08 95       	ret

0000074c <functie3>:

void functie3 (void) // geen IR uit
{
     74c:	df 93       	push	r29
     74e:	cf 93       	push	r28
     750:	cd b7       	in	r28, 0x3d	; 61
     752:	de b7       	in	r29, 0x3e	; 62
    aanwaarde = 0;
     754:	10 92 09 02 	sts	0x0209, r1
     758:	10 92 08 02 	sts	0x0208, r1
}
     75c:	cf 91       	pop	r28
     75e:	df 91       	pop	r29
     760:	08 95       	ret

00000762 <functie4>:

void functie4 (void)
{
     762:	df 93       	push	r29
     764:	cf 93       	push	r28
     766:	cd b7       	in	r28, 0x3d	; 61
     768:	de b7       	in	r29, 0x3e	; 62

}
     76a:	cf 91       	pop	r28
     76c:	df 91       	pop	r29
     76e:	08 95       	ret

00000770 <functie5>:

void functie5 (void)
{
     770:	df 93       	push	r29
     772:	cf 93       	push	r28
     774:	cd b7       	in	r28, 0x3d	; 61
     776:	de b7       	in	r29, 0x3e	; 62

}
     778:	cf 91       	pop	r28
     77a:	df 91       	pop	r29
     77c:	08 95       	ret

0000077e <ultrasoneAfstand>:

int ultrasoneAfstand(void)
{
     77e:	ef 92       	push	r14
     780:	ff 92       	push	r15
     782:	0f 93       	push	r16
     784:	1f 93       	push	r17
     786:	df 93       	push	r29
     788:	cf 93       	push	r28
     78a:	cd b7       	in	r28, 0x3d	; 61
     78c:	de b7       	in	r29, 0x3e	; 62
     78e:	a0 97       	sbiw	r28, 0x20	; 32
     790:	0f b6       	in	r0, 0x3f	; 63
     792:	f8 94       	cli
     794:	de bf       	out	0x3e, r29	; 62
     796:	0f be       	out	0x3f, r0	; 63
     798:	cd bf       	out	0x3d, r28	; 61

    long count;
	double distance;

    PORTD |= (1<<trig);
     79a:	ab e2       	ldi	r26, 0x2B	; 43
     79c:	b0 e0       	ldi	r27, 0x00	; 0
     79e:	eb e2       	ldi	r30, 0x2B	; 43
     7a0:	f0 e0       	ldi	r31, 0x00	; 0
     7a2:	80 81       	ld	r24, Z
     7a4:	81 60       	ori	r24, 0x01	; 1
     7a6:	8c 93       	st	X, r24
     7a8:	80 e0       	ldi	r24, 0x00	; 0
     7aa:	90 e0       	ldi	r25, 0x00	; 0
     7ac:	a0 e2       	ldi	r26, 0x20	; 32
     7ae:	b1 e4       	ldi	r27, 0x41	; 65
     7b0:	8d 8b       	std	Y+21, r24	; 0x15
     7b2:	9e 8b       	std	Y+22, r25	; 0x16
     7b4:	af 8b       	std	Y+23, r26	; 0x17
     7b6:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     7b8:	6d 89       	ldd	r22, Y+21	; 0x15
     7ba:	7e 89       	ldd	r23, Y+22	; 0x16
     7bc:	8f 89       	ldd	r24, Y+23	; 0x17
     7be:	98 8d       	ldd	r25, Y+24	; 0x18
     7c0:	2b ea       	ldi	r18, 0xAB	; 171
     7c2:	3a ea       	ldi	r19, 0xAA	; 170
     7c4:	4a ea       	ldi	r20, 0xAA	; 170
     7c6:	50 e4       	ldi	r21, 0x40	; 64
     7c8:	0e 94 80 08 	call	0x1100	; 0x1100 <__mulsf3>
     7cc:	dc 01       	movw	r26, r24
     7ce:	cb 01       	movw	r24, r22
     7d0:	89 8b       	std	Y+17, r24	; 0x11
     7d2:	9a 8b       	std	Y+18, r25	; 0x12
     7d4:	ab 8b       	std	Y+19, r26	; 0x13
     7d6:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
     7d8:	69 89       	ldd	r22, Y+17	; 0x11
     7da:	7a 89       	ldd	r23, Y+18	; 0x12
     7dc:	8b 89       	ldd	r24, Y+19	; 0x13
     7de:	9c 89       	ldd	r25, Y+20	; 0x14
     7e0:	20 e0       	ldi	r18, 0x00	; 0
     7e2:	30 e0       	ldi	r19, 0x00	; 0
     7e4:	40 e8       	ldi	r20, 0x80	; 128
     7e6:	5f e3       	ldi	r21, 0x3F	; 63
     7e8:	0e 94 86 0a 	call	0x150c	; 0x150c <__ltsf2>
     7ec:	88 23       	and	r24, r24
     7ee:	1c f4       	brge	.+6      	; 0x7f6 <ultrasoneAfstand+0x78>
		__ticks = 1;
     7f0:	81 e0       	ldi	r24, 0x01	; 1
     7f2:	88 8b       	std	Y+16, r24	; 0x10
     7f4:	91 c0       	rjmp	.+290    	; 0x918 <__stack+0x19>
	else if (__tmp > 255)
     7f6:	69 89       	ldd	r22, Y+17	; 0x11
     7f8:	7a 89       	ldd	r23, Y+18	; 0x12
     7fa:	8b 89       	ldd	r24, Y+19	; 0x13
     7fc:	9c 89       	ldd	r25, Y+20	; 0x14
     7fe:	20 e0       	ldi	r18, 0x00	; 0
     800:	30 e0       	ldi	r19, 0x00	; 0
     802:	4f e7       	ldi	r20, 0x7F	; 127
     804:	53 e4       	ldi	r21, 0x43	; 67
     806:	0e 94 26 0a 	call	0x144c	; 0x144c <__gtsf2>
     80a:	18 16       	cp	r1, r24
     80c:	0c f0       	brlt	.+2      	; 0x810 <ultrasoneAfstand+0x92>
     80e:	7b c0       	rjmp	.+246    	; 0x906 <__stack+0x7>
	{
		_delay_ms(__us / 1000.0);
     810:	6d 89       	ldd	r22, Y+21	; 0x15
     812:	7e 89       	ldd	r23, Y+22	; 0x16
     814:	8f 89       	ldd	r24, Y+23	; 0x17
     816:	98 8d       	ldd	r25, Y+24	; 0x18
     818:	20 e0       	ldi	r18, 0x00	; 0
     81a:	30 e0       	ldi	r19, 0x00	; 0
     81c:	4a e7       	ldi	r20, 0x7A	; 122
     81e:	54 e4       	ldi	r21, 0x44	; 68
     820:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <__divsf3>
     824:	dc 01       	movw	r26, r24
     826:	cb 01       	movw	r24, r22
     828:	8c 87       	std	Y+12, r24	; 0x0c
     82a:	9d 87       	std	Y+13, r25	; 0x0d
     82c:	ae 87       	std	Y+14, r26	; 0x0e
     82e:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     830:	6c 85       	ldd	r22, Y+12	; 0x0c
     832:	7d 85       	ldd	r23, Y+13	; 0x0d
     834:	8e 85       	ldd	r24, Y+14	; 0x0e
     836:	9f 85       	ldd	r25, Y+15	; 0x0f
     838:	20 e0       	ldi	r18, 0x00	; 0
     83a:	30 e0       	ldi	r19, 0x00	; 0
     83c:	4a e7       	ldi	r20, 0x7A	; 122
     83e:	55 e4       	ldi	r21, 0x45	; 69
     840:	0e 94 80 08 	call	0x1100	; 0x1100 <__mulsf3>
     844:	dc 01       	movw	r26, r24
     846:	cb 01       	movw	r24, r22
     848:	88 87       	std	Y+8, r24	; 0x08
     84a:	99 87       	std	Y+9, r25	; 0x09
     84c:	aa 87       	std	Y+10, r26	; 0x0a
     84e:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
     850:	68 85       	ldd	r22, Y+8	; 0x08
     852:	79 85       	ldd	r23, Y+9	; 0x09
     854:	8a 85       	ldd	r24, Y+10	; 0x0a
     856:	9b 85       	ldd	r25, Y+11	; 0x0b
     858:	20 e0       	ldi	r18, 0x00	; 0
     85a:	30 e0       	ldi	r19, 0x00	; 0
     85c:	40 e8       	ldi	r20, 0x80	; 128
     85e:	5f e3       	ldi	r21, 0x3F	; 63
     860:	0e 94 86 0a 	call	0x150c	; 0x150c <__ltsf2>
     864:	88 23       	and	r24, r24
     866:	2c f4       	brge	.+10     	; 0x872 <ultrasoneAfstand+0xf4>
		__ticks = 1;
     868:	81 e0       	ldi	r24, 0x01	; 1
     86a:	90 e0       	ldi	r25, 0x00	; 0
     86c:	9f 83       	std	Y+7, r25	; 0x07
     86e:	8e 83       	std	Y+6, r24	; 0x06
     870:	3f c0       	rjmp	.+126    	; 0x8f0 <ultrasoneAfstand+0x172>
	else if (__tmp > 65535)
     872:	68 85       	ldd	r22, Y+8	; 0x08
     874:	79 85       	ldd	r23, Y+9	; 0x09
     876:	8a 85       	ldd	r24, Y+10	; 0x0a
     878:	9b 85       	ldd	r25, Y+11	; 0x0b
     87a:	20 e0       	ldi	r18, 0x00	; 0
     87c:	3f ef       	ldi	r19, 0xFF	; 255
     87e:	4f e7       	ldi	r20, 0x7F	; 127
     880:	57 e4       	ldi	r21, 0x47	; 71
     882:	0e 94 26 0a 	call	0x144c	; 0x144c <__gtsf2>
     886:	18 16       	cp	r1, r24
     888:	4c f5       	brge	.+82     	; 0x8dc <ultrasoneAfstand+0x15e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     88a:	6c 85       	ldd	r22, Y+12	; 0x0c
     88c:	7d 85       	ldd	r23, Y+13	; 0x0d
     88e:	8e 85       	ldd	r24, Y+14	; 0x0e
     890:	9f 85       	ldd	r25, Y+15	; 0x0f
     892:	20 e0       	ldi	r18, 0x00	; 0
     894:	30 e0       	ldi	r19, 0x00	; 0
     896:	40 e2       	ldi	r20, 0x20	; 32
     898:	51 e4       	ldi	r21, 0x41	; 65
     89a:	0e 94 80 08 	call	0x1100	; 0x1100 <__mulsf3>
     89e:	dc 01       	movw	r26, r24
     8a0:	cb 01       	movw	r24, r22
     8a2:	bc 01       	movw	r22, r24
     8a4:	cd 01       	movw	r24, r26
     8a6:	0e 94 aa 06 	call	0xd54	; 0xd54 <__fixunssfsi>
     8aa:	dc 01       	movw	r26, r24
     8ac:	cb 01       	movw	r24, r22
     8ae:	9f 83       	std	Y+7, r25	; 0x07
     8b0:	8e 83       	std	Y+6, r24	; 0x06
     8b2:	0f c0       	rjmp	.+30     	; 0x8d2 <ultrasoneAfstand+0x154>
     8b4:	80 e9       	ldi	r24, 0x90	; 144
     8b6:	91 e0       	ldi	r25, 0x01	; 1
     8b8:	9d 83       	std	Y+5, r25	; 0x05
     8ba:	8c 83       	std	Y+4, r24	; 0x04
     8bc:	8c 81       	ldd	r24, Y+4	; 0x04
     8be:	9d 81       	ldd	r25, Y+5	; 0x05
     8c0:	01 97       	sbiw	r24, 0x01	; 1
     8c2:	f1 f7       	brne	.-4      	; 0x8c0 <ultrasoneAfstand+0x142>
     8c4:	9d 83       	std	Y+5, r25	; 0x05
     8c6:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     8c8:	8e 81       	ldd	r24, Y+6	; 0x06
     8ca:	9f 81       	ldd	r25, Y+7	; 0x07
     8cc:	01 97       	sbiw	r24, 0x01	; 1
     8ce:	9f 83       	std	Y+7, r25	; 0x07
     8d0:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     8d2:	8e 81       	ldd	r24, Y+6	; 0x06
     8d4:	9f 81       	ldd	r25, Y+7	; 0x07
     8d6:	00 97       	sbiw	r24, 0x00	; 0
     8d8:	69 f7       	brne	.-38     	; 0x8b4 <ultrasoneAfstand+0x136>
     8da:	24 c0       	rjmp	.+72     	; 0x924 <__stack+0x25>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     8dc:	68 85       	ldd	r22, Y+8	; 0x08
     8de:	79 85       	ldd	r23, Y+9	; 0x09
     8e0:	8a 85       	ldd	r24, Y+10	; 0x0a
     8e2:	9b 85       	ldd	r25, Y+11	; 0x0b
     8e4:	0e 94 aa 06 	call	0xd54	; 0xd54 <__fixunssfsi>
     8e8:	dc 01       	movw	r26, r24
     8ea:	cb 01       	movw	r24, r22
     8ec:	9f 83       	std	Y+7, r25	; 0x07
     8ee:	8e 83       	std	Y+6, r24	; 0x06
     8f0:	8e 81       	ldd	r24, Y+6	; 0x06
     8f2:	9f 81       	ldd	r25, Y+7	; 0x07
     8f4:	9b 83       	std	Y+3, r25	; 0x03
     8f6:	8a 83       	std	Y+2, r24	; 0x02
     8f8:	8a 81       	ldd	r24, Y+2	; 0x02
     8fa:	9b 81       	ldd	r25, Y+3	; 0x03
     8fc:	01 97       	sbiw	r24, 0x01	; 1
     8fe:	f1 f7       	brne	.-4      	; 0x8fc <ultrasoneAfstand+0x17e>
     900:	9b 83       	std	Y+3, r25	; 0x03
     902:	8a 83       	std	Y+2, r24	; 0x02
     904:	0f c0       	rjmp	.+30     	; 0x924 <__stack+0x25>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     906:	69 89       	ldd	r22, Y+17	; 0x11
     908:	7a 89       	ldd	r23, Y+18	; 0x12
     90a:	8b 89       	ldd	r24, Y+19	; 0x13
     90c:	9c 89       	ldd	r25, Y+20	; 0x14
     90e:	0e 94 aa 06 	call	0xd54	; 0xd54 <__fixunssfsi>
     912:	dc 01       	movw	r26, r24
     914:	cb 01       	movw	r24, r22
     916:	88 8b       	std	Y+16, r24	; 0x10
     918:	88 89       	ldd	r24, Y+16	; 0x10
     91a:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     91c:	89 81       	ldd	r24, Y+1	; 0x01
     91e:	8a 95       	dec	r24
     920:	f1 f7       	brne	.-4      	; 0x91e <__stack+0x1f>
     922:	89 83       	std	Y+1, r24	; 0x01
    _delay_us (10);
    PORTD &= ~(1<<trig);
     924:	ab e2       	ldi	r26, 0x2B	; 43
     926:	b0 e0       	ldi	r27, 0x00	; 0
     928:	eb e2       	ldi	r30, 0x2B	; 43
     92a:	f0 e0       	ldi	r31, 0x00	; 0
     92c:	80 81       	ld	r24, Z
     92e:	8e 7f       	andi	r24, 0xFE	; 254
     930:	8c 93       	st	X, r24
    TCNT1 = 0;
     932:	e4 e8       	ldi	r30, 0x84	; 132
     934:	f0 e0       	ldi	r31, 0x00	; 0
     936:	11 82       	std	Z+1, r1	; 0x01
     938:	10 82       	st	Z, r1
    timer = 0;
     93a:	10 92 0a 02 	sts	0x020A, r1
     93e:	10 92 0b 02 	sts	0x020B, r1
     942:	10 92 0c 02 	sts	0x020C, r1
     946:	10 92 0d 02 	sts	0x020D, r1
    TIFR1 = 1<<ICF1;
     94a:	e6 e3       	ldi	r30, 0x36	; 54
     94c:	f0 e0       	ldi	r31, 0x00	; 0
     94e:	80 e2       	ldi	r24, 0x20	; 32
     950:	80 83       	st	Z, r24
    TIFR1 = 1<<TOV1;
     952:	e6 e3       	ldi	r30, 0x36	; 54
     954:	f0 e0       	ldi	r31, 0x00	; 0
     956:	81 e0       	ldi	r24, 0x01	; 1
     958:	80 83       	st	Z, r24
    TCCR1B = 0x41;
     95a:	e1 e8       	ldi	r30, 0x81	; 129
     95c:	f0 e0       	ldi	r31, 0x00	; 0
     95e:	81 e4       	ldi	r24, 0x41	; 65
     960:	80 83       	st	Z, r24

    while ((TIFR1 & (1 << ICF1)) == 0);/* Wait for rising edge */
     962:	e6 e3       	ldi	r30, 0x36	; 54
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	80 81       	ld	r24, Z
     968:	88 2f       	mov	r24, r24
     96a:	90 e0       	ldi	r25, 0x00	; 0
     96c:	80 72       	andi	r24, 0x20	; 32
     96e:	90 70       	andi	r25, 0x00	; 0
     970:	00 97       	sbiw	r24, 0x00	; 0
     972:	b9 f3       	breq	.-18     	; 0x962 <__stack+0x63>
		TCNT1 = 0;	/* Clear Timer counter */
     974:	e4 e8       	ldi	r30, 0x84	; 132
     976:	f0 e0       	ldi	r31, 0x00	; 0
     978:	11 82       	std	Z+1, r1	; 0x01
     97a:	10 82       	st	Z, r1
		TCCR1B = 0x01;	/* Capture on falling edge, No prescaler */
     97c:	e1 e8       	ldi	r30, 0x81	; 129
     97e:	f0 e0       	ldi	r31, 0x00	; 0
     980:	81 e0       	ldi	r24, 0x01	; 1
     982:	80 83       	st	Z, r24
		TIFR1 = 1<<ICF1;	/* Clear ICP flag (Input Capture flag) */
     984:	e6 e3       	ldi	r30, 0x36	; 54
     986:	f0 e0       	ldi	r31, 0x00	; 0
     988:	80 e2       	ldi	r24, 0x20	; 32
     98a:	80 83       	st	Z, r24
		TIFR1 = 1<<TOV1;	/* Clear Timer Overflow flag */
     98c:	e6 e3       	ldi	r30, 0x36	; 54
     98e:	f0 e0       	ldi	r31, 0x00	; 0
     990:	81 e0       	ldi	r24, 0x01	; 1
     992:	80 83       	st	Z, r24
		timer = 0;/* Clear Timer overflow count */
     994:	10 92 0a 02 	sts	0x020A, r1
     998:	10 92 0b 02 	sts	0x020B, r1
     99c:	10 92 0c 02 	sts	0x020C, r1
     9a0:	10 92 0d 02 	sts	0x020D, r1

    while ((TIFR1 & (1 << ICF1)) == 0);/* Wait for falling edge */
     9a4:	e6 e3       	ldi	r30, 0x36	; 54
     9a6:	f0 e0       	ldi	r31, 0x00	; 0
     9a8:	80 81       	ld	r24, Z
     9aa:	88 2f       	mov	r24, r24
     9ac:	90 e0       	ldi	r25, 0x00	; 0
     9ae:	80 72       	andi	r24, 0x20	; 32
     9b0:	90 70       	andi	r25, 0x00	; 0
     9b2:	00 97       	sbiw	r24, 0x00	; 0
     9b4:	b9 f3       	breq	.-18     	; 0x9a4 <__stack+0xa5>
		count = ICR1 + (65535 * timer);	/* Take count */
     9b6:	e6 e8       	ldi	r30, 0x86	; 134
     9b8:	f0 e0       	ldi	r31, 0x00	; 0
     9ba:	80 81       	ld	r24, Z
     9bc:	91 81       	ldd	r25, Z+1	; 0x01
     9be:	7c 01       	movw	r14, r24
     9c0:	00 e0       	ldi	r16, 0x00	; 0
     9c2:	10 e0       	ldi	r17, 0x00	; 0
     9c4:	80 91 0a 02 	lds	r24, 0x020A
     9c8:	90 91 0b 02 	lds	r25, 0x020B
     9cc:	a0 91 0c 02 	lds	r26, 0x020C
     9d0:	b0 91 0d 02 	lds	r27, 0x020D
     9d4:	2f ef       	ldi	r18, 0xFF	; 255
     9d6:	3f ef       	ldi	r19, 0xFF	; 255
     9d8:	40 e0       	ldi	r20, 0x00	; 0
     9da:	50 e0       	ldi	r21, 0x00	; 0
     9dc:	bc 01       	movw	r22, r24
     9de:	cd 01       	movw	r24, r26
     9e0:	0e 94 5d 0d 	call	0x1aba	; 0x1aba <__mulsi3>
     9e4:	dc 01       	movw	r26, r24
     9e6:	cb 01       	movw	r24, r22
     9e8:	8e 0d       	add	r24, r14
     9ea:	9f 1d       	adc	r25, r15
     9ec:	a0 1f       	adc	r26, r16
     9ee:	b1 1f       	adc	r27, r17
     9f0:	8d 8f       	std	Y+29, r24	; 0x1d
     9f2:	9e 8f       	std	Y+30, r25	; 0x1e
     9f4:	af 8f       	std	Y+31, r26	; 0x1f
     9f6:	b8 a3       	std	Y+32, r27	; 0x20
		/* 16MHz Timer freq, sound speed =343 m/s */
		distance = (double)count / 93.294; // in cm
     9f8:	6d 8d       	ldd	r22, Y+29	; 0x1d
     9fa:	7e 8d       	ldd	r23, Y+30	; 0x1e
     9fc:	8f 8d       	ldd	r24, Y+31	; 0x1f
     9fe:	98 a1       	ldd	r25, Y+32	; 0x20
     a00:	0e 94 b6 0a 	call	0x156c	; 0x156c <__floatsisf>
     a04:	dc 01       	movw	r26, r24
     a06:	cb 01       	movw	r24, r22
     a08:	bc 01       	movw	r22, r24
     a0a:	cd 01       	movw	r24, r26
     a0c:	27 e8       	ldi	r18, 0x87	; 135
     a0e:	36 e9       	ldi	r19, 0x96	; 150
     a10:	4a eb       	ldi	r20, 0xBA	; 186
     a12:	52 e4       	ldi	r21, 0x42	; 66
     a14:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <__divsf3>
     a18:	dc 01       	movw	r26, r24
     a1a:	cb 01       	movw	r24, r22
     a1c:	89 8f       	std	Y+25, r24	; 0x19
     a1e:	9a 8f       	std	Y+26, r25	; 0x1a
     a20:	ab 8f       	std	Y+27, r26	; 0x1b
     a22:	bc 8f       	std	Y+28, r27	; 0x1c
    return(distance);
     a24:	69 8d       	ldd	r22, Y+25	; 0x19
     a26:	7a 8d       	ldd	r23, Y+26	; 0x1a
     a28:	8b 8d       	ldd	r24, Y+27	; 0x1b
     a2a:	9c 8d       	ldd	r25, Y+28	; 0x1c
     a2c:	0e 94 14 0b 	call	0x1628	; 0x1628 <__fixsfsi>
     a30:	dc 01       	movw	r26, r24
     a32:	cb 01       	movw	r24, r22
}
     a34:	a0 96       	adiw	r28, 0x20	; 32
     a36:	0f b6       	in	r0, 0x3f	; 63
     a38:	f8 94       	cli
     a3a:	de bf       	out	0x3e, r29	; 62
     a3c:	0f be       	out	0x3f, r0	; 63
     a3e:	cd bf       	out	0x3d, r28	; 61
     a40:	cf 91       	pop	r28
     a42:	df 91       	pop	r29
     a44:	1f 91       	pop	r17
     a46:	0f 91       	pop	r16
     a48:	ff 90       	pop	r15
     a4a:	ef 90       	pop	r14
     a4c:	08 95       	ret

00000a4e <main>:


int main(void)
{
     a4e:	df 93       	push	r29
     a50:	cf 93       	push	r28
     a52:	cd b7       	in	r28, 0x3d	; 61
     a54:	de b7       	in	r29, 0x3e	; 62
     a56:	aa 97       	sbiw	r28, 0x2a	; 42
     a58:	0f b6       	in	r0, 0x3f	; 63
     a5a:	f8 94       	cli
     a5c:	de bf       	out	0x3e, r29	; 62
     a5e:	0f be       	out	0x3f, r0	; 63
     a60:	cd bf       	out	0x3d, r28	; 61
    init();
     a62:	0e 94 53 00 	call	0xa6	; 0xa6 <init>

    while(1)
    {


        if(ultrasoneAfstand() < 150)
     a66:	0e 94 bf 03 	call	0x77e	; 0x77e <ultrasoneAfstand>
     a6a:	86 39       	cpi	r24, 0x96	; 150
     a6c:	91 05       	cpc	r25, r1
     a6e:	dc f7       	brge	.-10     	; 0xa66 <main+0x18>
     a70:	80 e0       	ldi	r24, 0x00	; 0
     a72:	90 e0       	ldi	r25, 0x00	; 0
     a74:	a8 ec       	ldi	r26, 0xC8	; 200
     a76:	b1 e4       	ldi	r27, 0x41	; 65
     a78:	8f a3       	std	Y+39, r24	; 0x27
     a7a:	98 a7       	std	Y+40, r25	; 0x28
     a7c:	a9 a7       	std	Y+41, r26	; 0x29
     a7e:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     a80:	6f a1       	ldd	r22, Y+39	; 0x27
     a82:	78 a5       	ldd	r23, Y+40	; 0x28
     a84:	89 a5       	ldd	r24, Y+41	; 0x29
     a86:	9a a5       	ldd	r25, Y+42	; 0x2a
     a88:	20 e0       	ldi	r18, 0x00	; 0
     a8a:	30 e0       	ldi	r19, 0x00	; 0
     a8c:	4a e7       	ldi	r20, 0x7A	; 122
     a8e:	55 e4       	ldi	r21, 0x45	; 69
     a90:	0e 94 80 08 	call	0x1100	; 0x1100 <__mulsf3>
     a94:	dc 01       	movw	r26, r24
     a96:	cb 01       	movw	r24, r22
     a98:	8b a3       	std	Y+35, r24	; 0x23
     a9a:	9c a3       	std	Y+36, r25	; 0x24
     a9c:	ad a3       	std	Y+37, r26	; 0x25
     a9e:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     aa0:	6b a1       	ldd	r22, Y+35	; 0x23
     aa2:	7c a1       	ldd	r23, Y+36	; 0x24
     aa4:	8d a1       	ldd	r24, Y+37	; 0x25
     aa6:	9e a1       	ldd	r25, Y+38	; 0x26
     aa8:	20 e0       	ldi	r18, 0x00	; 0
     aaa:	30 e0       	ldi	r19, 0x00	; 0
     aac:	40 e8       	ldi	r20, 0x80	; 128
     aae:	5f e3       	ldi	r21, 0x3F	; 63
     ab0:	0e 94 86 0a 	call	0x150c	; 0x150c <__ltsf2>
     ab4:	88 23       	and	r24, r24
     ab6:	2c f4       	brge	.+10     	; 0xac2 <main+0x74>
		__ticks = 1;
     ab8:	81 e0       	ldi	r24, 0x01	; 1
     aba:	90 e0       	ldi	r25, 0x00	; 0
     abc:	9a a3       	std	Y+34, r25	; 0x22
     abe:	89 a3       	std	Y+33, r24	; 0x21
     ac0:	3f c0       	rjmp	.+126    	; 0xb40 <main+0xf2>
	else if (__tmp > 65535)
     ac2:	6b a1       	ldd	r22, Y+35	; 0x23
     ac4:	7c a1       	ldd	r23, Y+36	; 0x24
     ac6:	8d a1       	ldd	r24, Y+37	; 0x25
     ac8:	9e a1       	ldd	r25, Y+38	; 0x26
     aca:	20 e0       	ldi	r18, 0x00	; 0
     acc:	3f ef       	ldi	r19, 0xFF	; 255
     ace:	4f e7       	ldi	r20, 0x7F	; 127
     ad0:	57 e4       	ldi	r21, 0x47	; 71
     ad2:	0e 94 26 0a 	call	0x144c	; 0x144c <__gtsf2>
     ad6:	18 16       	cp	r1, r24
     ad8:	4c f5       	brge	.+82     	; 0xb2c <main+0xde>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     ada:	6f a1       	ldd	r22, Y+39	; 0x27
     adc:	78 a5       	ldd	r23, Y+40	; 0x28
     ade:	89 a5       	ldd	r24, Y+41	; 0x29
     ae0:	9a a5       	ldd	r25, Y+42	; 0x2a
     ae2:	20 e0       	ldi	r18, 0x00	; 0
     ae4:	30 e0       	ldi	r19, 0x00	; 0
     ae6:	40 e2       	ldi	r20, 0x20	; 32
     ae8:	51 e4       	ldi	r21, 0x41	; 65
     aea:	0e 94 80 08 	call	0x1100	; 0x1100 <__mulsf3>
     aee:	dc 01       	movw	r26, r24
     af0:	cb 01       	movw	r24, r22
     af2:	bc 01       	movw	r22, r24
     af4:	cd 01       	movw	r24, r26
     af6:	0e 94 aa 06 	call	0xd54	; 0xd54 <__fixunssfsi>
     afa:	dc 01       	movw	r26, r24
     afc:	cb 01       	movw	r24, r22
     afe:	9a a3       	std	Y+34, r25	; 0x22
     b00:	89 a3       	std	Y+33, r24	; 0x21
     b02:	0f c0       	rjmp	.+30     	; 0xb22 <main+0xd4>
     b04:	80 e9       	ldi	r24, 0x90	; 144
     b06:	91 e0       	ldi	r25, 0x01	; 1
     b08:	98 a3       	std	Y+32, r25	; 0x20
     b0a:	8f 8f       	std	Y+31, r24	; 0x1f
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     b0c:	8f 8d       	ldd	r24, Y+31	; 0x1f
     b0e:	98 a1       	ldd	r25, Y+32	; 0x20
     b10:	01 97       	sbiw	r24, 0x01	; 1
     b12:	f1 f7       	brne	.-4      	; 0xb10 <main+0xc2>
     b14:	98 a3       	std	Y+32, r25	; 0x20
     b16:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     b18:	89 a1       	ldd	r24, Y+33	; 0x21
     b1a:	9a a1       	ldd	r25, Y+34	; 0x22
     b1c:	01 97       	sbiw	r24, 0x01	; 1
     b1e:	9a a3       	std	Y+34, r25	; 0x22
     b20:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     b22:	89 a1       	ldd	r24, Y+33	; 0x21
     b24:	9a a1       	ldd	r25, Y+34	; 0x22
     b26:	00 97       	sbiw	r24, 0x00	; 0
     b28:	69 f7       	brne	.-38     	; 0xb04 <main+0xb6>
     b2a:	14 c0       	rjmp	.+40     	; 0xb54 <main+0x106>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     b2c:	6b a1       	ldd	r22, Y+35	; 0x23
     b2e:	7c a1       	ldd	r23, Y+36	; 0x24
     b30:	8d a1       	ldd	r24, Y+37	; 0x25
     b32:	9e a1       	ldd	r25, Y+38	; 0x26
     b34:	0e 94 aa 06 	call	0xd54	; 0xd54 <__fixunssfsi>
     b38:	dc 01       	movw	r26, r24
     b3a:	cb 01       	movw	r24, r22
     b3c:	9a a3       	std	Y+34, r25	; 0x22
     b3e:	89 a3       	std	Y+33, r24	; 0x21
     b40:	89 a1       	ldd	r24, Y+33	; 0x21
     b42:	9a a1       	ldd	r25, Y+34	; 0x22
     b44:	9e 8f       	std	Y+30, r25	; 0x1e
     b46:	8d 8f       	std	Y+29, r24	; 0x1d
     b48:	8d 8d       	ldd	r24, Y+29	; 0x1d
     b4a:	9e 8d       	ldd	r25, Y+30	; 0x1e
     b4c:	01 97       	sbiw	r24, 0x01	; 1
     b4e:	f1 f7       	brne	.-4      	; 0xb4c <main+0xfe>
     b50:	9e 8f       	std	Y+30, r25	; 0x1e
     b52:	8d 8f       	std	Y+29, r24	; 0x1d
        {
            _delay_ms(25);
            if(ultrasoneAfstand() < 100)
     b54:	0e 94 bf 03 	call	0x77e	; 0x77e <ultrasoneAfstand>
     b58:	84 36       	cpi	r24, 0x64	; 100
     b5a:	91 05       	cpc	r25, r1
     b5c:	0c f0       	brlt	.+2      	; 0xb60 <main+0x112>
     b5e:	83 cf       	rjmp	.-250    	; 0xa66 <main+0x18>
            {
                PORTC |= _BV(motorPin);
     b60:	a8 e2       	ldi	r26, 0x28	; 40
     b62:	b0 e0       	ldi	r27, 0x00	; 0
     b64:	e8 e2       	ldi	r30, 0x28	; 40
     b66:	f0 e0       	ldi	r31, 0x00	; 0
     b68:	80 81       	ld	r24, Z
     b6a:	80 61       	ori	r24, 0x10	; 16
     b6c:	8c 93       	st	X, r24
     b6e:	80 e0       	ldi	r24, 0x00	; 0
     b70:	90 e0       	ldi	r25, 0x00	; 0
     b72:	aa e7       	ldi	r26, 0x7A	; 122
     b74:	b4 e4       	ldi	r27, 0x44	; 68
     b76:	89 8f       	std	Y+25, r24	; 0x19
     b78:	9a 8f       	std	Y+26, r25	; 0x1a
     b7a:	ab 8f       	std	Y+27, r26	; 0x1b
     b7c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     b7e:	69 8d       	ldd	r22, Y+25	; 0x19
     b80:	7a 8d       	ldd	r23, Y+26	; 0x1a
     b82:	8b 8d       	ldd	r24, Y+27	; 0x1b
     b84:	9c 8d       	ldd	r25, Y+28	; 0x1c
     b86:	20 e0       	ldi	r18, 0x00	; 0
     b88:	30 e0       	ldi	r19, 0x00	; 0
     b8a:	4a e7       	ldi	r20, 0x7A	; 122
     b8c:	55 e4       	ldi	r21, 0x45	; 69
     b8e:	0e 94 80 08 	call	0x1100	; 0x1100 <__mulsf3>
     b92:	dc 01       	movw	r26, r24
     b94:	cb 01       	movw	r24, r22
     b96:	8d 8b       	std	Y+21, r24	; 0x15
     b98:	9e 8b       	std	Y+22, r25	; 0x16
     b9a:	af 8b       	std	Y+23, r26	; 0x17
     b9c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     b9e:	6d 89       	ldd	r22, Y+21	; 0x15
     ba0:	7e 89       	ldd	r23, Y+22	; 0x16
     ba2:	8f 89       	ldd	r24, Y+23	; 0x17
     ba4:	98 8d       	ldd	r25, Y+24	; 0x18
     ba6:	20 e0       	ldi	r18, 0x00	; 0
     ba8:	30 e0       	ldi	r19, 0x00	; 0
     baa:	40 e8       	ldi	r20, 0x80	; 128
     bac:	5f e3       	ldi	r21, 0x3F	; 63
     bae:	0e 94 86 0a 	call	0x150c	; 0x150c <__ltsf2>
     bb2:	88 23       	and	r24, r24
     bb4:	2c f4       	brge	.+10     	; 0xbc0 <main+0x172>
		__ticks = 1;
     bb6:	81 e0       	ldi	r24, 0x01	; 1
     bb8:	90 e0       	ldi	r25, 0x00	; 0
     bba:	9c 8b       	std	Y+20, r25	; 0x14
     bbc:	8b 8b       	std	Y+19, r24	; 0x13
     bbe:	3f c0       	rjmp	.+126    	; 0xc3e <main+0x1f0>
	else if (__tmp > 65535)
     bc0:	6d 89       	ldd	r22, Y+21	; 0x15
     bc2:	7e 89       	ldd	r23, Y+22	; 0x16
     bc4:	8f 89       	ldd	r24, Y+23	; 0x17
     bc6:	98 8d       	ldd	r25, Y+24	; 0x18
     bc8:	20 e0       	ldi	r18, 0x00	; 0
     bca:	3f ef       	ldi	r19, 0xFF	; 255
     bcc:	4f e7       	ldi	r20, 0x7F	; 127
     bce:	57 e4       	ldi	r21, 0x47	; 71
     bd0:	0e 94 26 0a 	call	0x144c	; 0x144c <__gtsf2>
     bd4:	18 16       	cp	r1, r24
     bd6:	4c f5       	brge	.+82     	; 0xc2a <main+0x1dc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     bd8:	69 8d       	ldd	r22, Y+25	; 0x19
     bda:	7a 8d       	ldd	r23, Y+26	; 0x1a
     bdc:	8b 8d       	ldd	r24, Y+27	; 0x1b
     bde:	9c 8d       	ldd	r25, Y+28	; 0x1c
     be0:	20 e0       	ldi	r18, 0x00	; 0
     be2:	30 e0       	ldi	r19, 0x00	; 0
     be4:	40 e2       	ldi	r20, 0x20	; 32
     be6:	51 e4       	ldi	r21, 0x41	; 65
     be8:	0e 94 80 08 	call	0x1100	; 0x1100 <__mulsf3>
     bec:	dc 01       	movw	r26, r24
     bee:	cb 01       	movw	r24, r22
     bf0:	bc 01       	movw	r22, r24
     bf2:	cd 01       	movw	r24, r26
     bf4:	0e 94 aa 06 	call	0xd54	; 0xd54 <__fixunssfsi>
     bf8:	dc 01       	movw	r26, r24
     bfa:	cb 01       	movw	r24, r22
     bfc:	9c 8b       	std	Y+20, r25	; 0x14
     bfe:	8b 8b       	std	Y+19, r24	; 0x13
     c00:	0f c0       	rjmp	.+30     	; 0xc20 <main+0x1d2>
     c02:	80 e9       	ldi	r24, 0x90	; 144
     c04:	91 e0       	ldi	r25, 0x01	; 1
     c06:	9a 8b       	std	Y+18, r25	; 0x12
     c08:	89 8b       	std	Y+17, r24	; 0x11
     c0a:	89 89       	ldd	r24, Y+17	; 0x11
     c0c:	9a 89       	ldd	r25, Y+18	; 0x12
     c0e:	01 97       	sbiw	r24, 0x01	; 1
     c10:	f1 f7       	brne	.-4      	; 0xc0e <main+0x1c0>
     c12:	9a 8b       	std	Y+18, r25	; 0x12
     c14:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c16:	8b 89       	ldd	r24, Y+19	; 0x13
     c18:	9c 89       	ldd	r25, Y+20	; 0x14
     c1a:	01 97       	sbiw	r24, 0x01	; 1
     c1c:	9c 8b       	std	Y+20, r25	; 0x14
     c1e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c20:	8b 89       	ldd	r24, Y+19	; 0x13
     c22:	9c 89       	ldd	r25, Y+20	; 0x14
     c24:	00 97       	sbiw	r24, 0x00	; 0
     c26:	69 f7       	brne	.-38     	; 0xc02 <main+0x1b4>
     c28:	87 c0       	rjmp	.+270    	; 0xd38 <main+0x2ea>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     c2a:	6d 89       	ldd	r22, Y+21	; 0x15
     c2c:	7e 89       	ldd	r23, Y+22	; 0x16
     c2e:	8f 89       	ldd	r24, Y+23	; 0x17
     c30:	98 8d       	ldd	r25, Y+24	; 0x18
     c32:	0e 94 aa 06 	call	0xd54	; 0xd54 <__fixunssfsi>
     c36:	dc 01       	movw	r26, r24
     c38:	cb 01       	movw	r24, r22
     c3a:	9c 8b       	std	Y+20, r25	; 0x14
     c3c:	8b 8b       	std	Y+19, r24	; 0x13
     c3e:	8b 89       	ldd	r24, Y+19	; 0x13
     c40:	9c 89       	ldd	r25, Y+20	; 0x14
     c42:	98 8b       	std	Y+16, r25	; 0x10
     c44:	8f 87       	std	Y+15, r24	; 0x0f
     c46:	8f 85       	ldd	r24, Y+15	; 0x0f
     c48:	98 89       	ldd	r25, Y+16	; 0x10
     c4a:	01 97       	sbiw	r24, 0x01	; 1
     c4c:	f1 f7       	brne	.-4      	; 0xc4a <main+0x1fc>
     c4e:	98 8b       	std	Y+16, r25	; 0x10
     c50:	8f 87       	std	Y+15, r24	; 0x0f
     c52:	72 c0       	rjmp	.+228    	; 0xd38 <main+0x2ea>
                _delay_ms(1000);
                while(ultrasoneAfstand() < 100)
     c54:	80 e0       	ldi	r24, 0x00	; 0
     c56:	90 e0       	ldi	r25, 0x00	; 0
     c58:	a8 ec       	ldi	r26, 0xC8	; 200
     c5a:	b2 e4       	ldi	r27, 0x42	; 66
     c5c:	8b 87       	std	Y+11, r24	; 0x0b
     c5e:	9c 87       	std	Y+12, r25	; 0x0c
     c60:	ad 87       	std	Y+13, r26	; 0x0d
     c62:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     c64:	6b 85       	ldd	r22, Y+11	; 0x0b
     c66:	7c 85       	ldd	r23, Y+12	; 0x0c
     c68:	8d 85       	ldd	r24, Y+13	; 0x0d
     c6a:	9e 85       	ldd	r25, Y+14	; 0x0e
     c6c:	20 e0       	ldi	r18, 0x00	; 0
     c6e:	30 e0       	ldi	r19, 0x00	; 0
     c70:	4a e7       	ldi	r20, 0x7A	; 122
     c72:	55 e4       	ldi	r21, 0x45	; 69
     c74:	0e 94 80 08 	call	0x1100	; 0x1100 <__mulsf3>
     c78:	dc 01       	movw	r26, r24
     c7a:	cb 01       	movw	r24, r22
     c7c:	8f 83       	std	Y+7, r24	; 0x07
     c7e:	98 87       	std	Y+8, r25	; 0x08
     c80:	a9 87       	std	Y+9, r26	; 0x09
     c82:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     c84:	6f 81       	ldd	r22, Y+7	; 0x07
     c86:	78 85       	ldd	r23, Y+8	; 0x08
     c88:	89 85       	ldd	r24, Y+9	; 0x09
     c8a:	9a 85       	ldd	r25, Y+10	; 0x0a
     c8c:	20 e0       	ldi	r18, 0x00	; 0
     c8e:	30 e0       	ldi	r19, 0x00	; 0
     c90:	40 e8       	ldi	r20, 0x80	; 128
     c92:	5f e3       	ldi	r21, 0x3F	; 63
     c94:	0e 94 86 0a 	call	0x150c	; 0x150c <__ltsf2>
     c98:	88 23       	and	r24, r24
     c9a:	2c f4       	brge	.+10     	; 0xca6 <main+0x258>
		__ticks = 1;
     c9c:	81 e0       	ldi	r24, 0x01	; 1
     c9e:	90 e0       	ldi	r25, 0x00	; 0
     ca0:	9e 83       	std	Y+6, r25	; 0x06
     ca2:	8d 83       	std	Y+5, r24	; 0x05
     ca4:	3f c0       	rjmp	.+126    	; 0xd24 <main+0x2d6>
	else if (__tmp > 65535)
     ca6:	6f 81       	ldd	r22, Y+7	; 0x07
     ca8:	78 85       	ldd	r23, Y+8	; 0x08
     caa:	89 85       	ldd	r24, Y+9	; 0x09
     cac:	9a 85       	ldd	r25, Y+10	; 0x0a
     cae:	20 e0       	ldi	r18, 0x00	; 0
     cb0:	3f ef       	ldi	r19, 0xFF	; 255
     cb2:	4f e7       	ldi	r20, 0x7F	; 127
     cb4:	57 e4       	ldi	r21, 0x47	; 71
     cb6:	0e 94 26 0a 	call	0x144c	; 0x144c <__gtsf2>
     cba:	18 16       	cp	r1, r24
     cbc:	4c f5       	brge	.+82     	; 0xd10 <main+0x2c2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     cbe:	6b 85       	ldd	r22, Y+11	; 0x0b
     cc0:	7c 85       	ldd	r23, Y+12	; 0x0c
     cc2:	8d 85       	ldd	r24, Y+13	; 0x0d
     cc4:	9e 85       	ldd	r25, Y+14	; 0x0e
     cc6:	20 e0       	ldi	r18, 0x00	; 0
     cc8:	30 e0       	ldi	r19, 0x00	; 0
     cca:	40 e2       	ldi	r20, 0x20	; 32
     ccc:	51 e4       	ldi	r21, 0x41	; 65
     cce:	0e 94 80 08 	call	0x1100	; 0x1100 <__mulsf3>
     cd2:	dc 01       	movw	r26, r24
     cd4:	cb 01       	movw	r24, r22
     cd6:	bc 01       	movw	r22, r24
     cd8:	cd 01       	movw	r24, r26
     cda:	0e 94 aa 06 	call	0xd54	; 0xd54 <__fixunssfsi>
     cde:	dc 01       	movw	r26, r24
     ce0:	cb 01       	movw	r24, r22
     ce2:	9e 83       	std	Y+6, r25	; 0x06
     ce4:	8d 83       	std	Y+5, r24	; 0x05
     ce6:	0f c0       	rjmp	.+30     	; 0xd06 <main+0x2b8>
     ce8:	80 e9       	ldi	r24, 0x90	; 144
     cea:	91 e0       	ldi	r25, 0x01	; 1
     cec:	9c 83       	std	Y+4, r25	; 0x04
     cee:	8b 83       	std	Y+3, r24	; 0x03
     cf0:	8b 81       	ldd	r24, Y+3	; 0x03
     cf2:	9c 81       	ldd	r25, Y+4	; 0x04
     cf4:	01 97       	sbiw	r24, 0x01	; 1
     cf6:	f1 f7       	brne	.-4      	; 0xcf4 <main+0x2a6>
     cf8:	9c 83       	std	Y+4, r25	; 0x04
     cfa:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     cfc:	8d 81       	ldd	r24, Y+5	; 0x05
     cfe:	9e 81       	ldd	r25, Y+6	; 0x06
     d00:	01 97       	sbiw	r24, 0x01	; 1
     d02:	9e 83       	std	Y+6, r25	; 0x06
     d04:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     d06:	8d 81       	ldd	r24, Y+5	; 0x05
     d08:	9e 81       	ldd	r25, Y+6	; 0x06
     d0a:	00 97       	sbiw	r24, 0x00	; 0
     d0c:	69 f7       	brne	.-38     	; 0xce8 <main+0x29a>
     d0e:	14 c0       	rjmp	.+40     	; 0xd38 <main+0x2ea>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     d10:	6f 81       	ldd	r22, Y+7	; 0x07
     d12:	78 85       	ldd	r23, Y+8	; 0x08
     d14:	89 85       	ldd	r24, Y+9	; 0x09
     d16:	9a 85       	ldd	r25, Y+10	; 0x0a
     d18:	0e 94 aa 06 	call	0xd54	; 0xd54 <__fixunssfsi>
     d1c:	dc 01       	movw	r26, r24
     d1e:	cb 01       	movw	r24, r22
     d20:	9e 83       	std	Y+6, r25	; 0x06
     d22:	8d 83       	std	Y+5, r24	; 0x05
     d24:	8d 81       	ldd	r24, Y+5	; 0x05
     d26:	9e 81       	ldd	r25, Y+6	; 0x06
     d28:	9a 83       	std	Y+2, r25	; 0x02
     d2a:	89 83       	std	Y+1, r24	; 0x01
     d2c:	89 81       	ldd	r24, Y+1	; 0x01
     d2e:	9a 81       	ldd	r25, Y+2	; 0x02
     d30:	01 97       	sbiw	r24, 0x01	; 1
     d32:	f1 f7       	brne	.-4      	; 0xd30 <main+0x2e2>
     d34:	9a 83       	std	Y+2, r25	; 0x02
     d36:	89 83       	std	Y+1, r24	; 0x01
     d38:	0e 94 bf 03 	call	0x77e	; 0x77e <ultrasoneAfstand>
     d3c:	84 36       	cpi	r24, 0x64	; 100
     d3e:	91 05       	cpc	r25, r1
     d40:	0c f4       	brge	.+2      	; 0xd44 <main+0x2f6>
     d42:	88 cf       	rjmp	.-240    	; 0xc54 <main+0x206>
                {
                    _delay_ms(100);
                }

                    PORTC &= ~_BV(motorPin);
     d44:	a8 e2       	ldi	r26, 0x28	; 40
     d46:	b0 e0       	ldi	r27, 0x00	; 0
     d48:	e8 e2       	ldi	r30, 0x28	; 40
     d4a:	f0 e0       	ldi	r31, 0x00	; 0
     d4c:	80 81       	ld	r24, Z
     d4e:	8f 7e       	andi	r24, 0xEF	; 239
     d50:	8c 93       	st	X, r24
     d52:	89 ce       	rjmp	.-750    	; 0xa66 <main+0x18>

00000d54 <__fixunssfsi>:
     d54:	ef 92       	push	r14
     d56:	ff 92       	push	r15
     d58:	0f 93       	push	r16
     d5a:	1f 93       	push	r17
     d5c:	7b 01       	movw	r14, r22
     d5e:	8c 01       	movw	r16, r24
     d60:	20 e0       	ldi	r18, 0x00	; 0
     d62:	30 e0       	ldi	r19, 0x00	; 0
     d64:	40 e0       	ldi	r20, 0x00	; 0
     d66:	5f e4       	ldi	r21, 0x4F	; 79
     d68:	0e 94 56 0a 	call	0x14ac	; 0x14ac <__gesf2>
     d6c:	88 23       	and	r24, r24
     d6e:	8c f0       	brlt	.+34     	; 0xd92 <__fixunssfsi+0x3e>
     d70:	c8 01       	movw	r24, r16
     d72:	b7 01       	movw	r22, r14
     d74:	20 e0       	ldi	r18, 0x00	; 0
     d76:	30 e0       	ldi	r19, 0x00	; 0
     d78:	40 e0       	ldi	r20, 0x00	; 0
     d7a:	5f e4       	ldi	r21, 0x4F	; 79
     d7c:	0e 94 22 08 	call	0x1044	; 0x1044 <__subsf3>
     d80:	0e 94 14 0b 	call	0x1628	; 0x1628 <__fixsfsi>
     d84:	9b 01       	movw	r18, r22
     d86:	ac 01       	movw	r20, r24
     d88:	20 50       	subi	r18, 0x00	; 0
     d8a:	30 40       	sbci	r19, 0x00	; 0
     d8c:	40 40       	sbci	r20, 0x00	; 0
     d8e:	50 48       	sbci	r21, 0x80	; 128
     d90:	06 c0       	rjmp	.+12     	; 0xd9e <__fixunssfsi+0x4a>
     d92:	c8 01       	movw	r24, r16
     d94:	b7 01       	movw	r22, r14
     d96:	0e 94 14 0b 	call	0x1628	; 0x1628 <__fixsfsi>
     d9a:	9b 01       	movw	r18, r22
     d9c:	ac 01       	movw	r20, r24
     d9e:	b9 01       	movw	r22, r18
     da0:	ca 01       	movw	r24, r20
     da2:	1f 91       	pop	r17
     da4:	0f 91       	pop	r16
     da6:	ff 90       	pop	r15
     da8:	ef 90       	pop	r14
     daa:	08 95       	ret

00000dac <_fpadd_parts>:
     dac:	a0 e0       	ldi	r26, 0x00	; 0
     dae:	b0 e0       	ldi	r27, 0x00	; 0
     db0:	ec ed       	ldi	r30, 0xDC	; 220
     db2:	f6 e0       	ldi	r31, 0x06	; 6
     db4:	0c 94 7c 0d 	jmp	0x1af8	; 0x1af8 <__prologue_saves__>
     db8:	dc 01       	movw	r26, r24
     dba:	2b 01       	movw	r4, r22
     dbc:	fa 01       	movw	r30, r20
     dbe:	9c 91       	ld	r25, X
     dc0:	92 30       	cpi	r25, 0x02	; 2
     dc2:	08 f4       	brcc	.+2      	; 0xdc6 <_fpadd_parts+0x1a>
     dc4:	39 c1       	rjmp	.+626    	; 0x1038 <_fpadd_parts+0x28c>
     dc6:	eb 01       	movw	r28, r22
     dc8:	88 81       	ld	r24, Y
     dca:	82 30       	cpi	r24, 0x02	; 2
     dcc:	08 f4       	brcc	.+2      	; 0xdd0 <_fpadd_parts+0x24>
     dce:	33 c1       	rjmp	.+614    	; 0x1036 <_fpadd_parts+0x28a>
     dd0:	94 30       	cpi	r25, 0x04	; 4
     dd2:	69 f4       	brne	.+26     	; 0xdee <_fpadd_parts+0x42>
     dd4:	84 30       	cpi	r24, 0x04	; 4
     dd6:	09 f0       	breq	.+2      	; 0xdda <_fpadd_parts+0x2e>
     dd8:	2f c1       	rjmp	.+606    	; 0x1038 <_fpadd_parts+0x28c>
     dda:	11 96       	adiw	r26, 0x01	; 1
     ddc:	9c 91       	ld	r25, X
     dde:	11 97       	sbiw	r26, 0x01	; 1
     de0:	89 81       	ldd	r24, Y+1	; 0x01
     de2:	98 17       	cp	r25, r24
     de4:	09 f4       	brne	.+2      	; 0xde8 <_fpadd_parts+0x3c>
     de6:	28 c1       	rjmp	.+592    	; 0x1038 <_fpadd_parts+0x28c>
     de8:	a0 e0       	ldi	r26, 0x00	; 0
     dea:	b1 e0       	ldi	r27, 0x01	; 1
     dec:	25 c1       	rjmp	.+586    	; 0x1038 <_fpadd_parts+0x28c>
     dee:	84 30       	cpi	r24, 0x04	; 4
     df0:	09 f4       	brne	.+2      	; 0xdf4 <_fpadd_parts+0x48>
     df2:	21 c1       	rjmp	.+578    	; 0x1036 <_fpadd_parts+0x28a>
     df4:	82 30       	cpi	r24, 0x02	; 2
     df6:	a9 f4       	brne	.+42     	; 0xe22 <_fpadd_parts+0x76>
     df8:	92 30       	cpi	r25, 0x02	; 2
     dfa:	09 f0       	breq	.+2      	; 0xdfe <_fpadd_parts+0x52>
     dfc:	1d c1       	rjmp	.+570    	; 0x1038 <_fpadd_parts+0x28c>
     dfe:	9a 01       	movw	r18, r20
     e00:	ad 01       	movw	r20, r26
     e02:	88 e0       	ldi	r24, 0x08	; 8
     e04:	ea 01       	movw	r28, r20
     e06:	09 90       	ld	r0, Y+
     e08:	ae 01       	movw	r20, r28
     e0a:	e9 01       	movw	r28, r18
     e0c:	09 92       	st	Y+, r0
     e0e:	9e 01       	movw	r18, r28
     e10:	81 50       	subi	r24, 0x01	; 1
     e12:	c1 f7       	brne	.-16     	; 0xe04 <_fpadd_parts+0x58>
     e14:	e2 01       	movw	r28, r4
     e16:	89 81       	ldd	r24, Y+1	; 0x01
     e18:	11 96       	adiw	r26, 0x01	; 1
     e1a:	9c 91       	ld	r25, X
     e1c:	89 23       	and	r24, r25
     e1e:	81 83       	std	Z+1, r24	; 0x01
     e20:	08 c1       	rjmp	.+528    	; 0x1032 <_fpadd_parts+0x286>
     e22:	92 30       	cpi	r25, 0x02	; 2
     e24:	09 f4       	brne	.+2      	; 0xe28 <_fpadd_parts+0x7c>
     e26:	07 c1       	rjmp	.+526    	; 0x1036 <_fpadd_parts+0x28a>
     e28:	12 96       	adiw	r26, 0x02	; 2
     e2a:	2d 90       	ld	r2, X+
     e2c:	3c 90       	ld	r3, X
     e2e:	13 97       	sbiw	r26, 0x03	; 3
     e30:	eb 01       	movw	r28, r22
     e32:	8a 81       	ldd	r24, Y+2	; 0x02
     e34:	9b 81       	ldd	r25, Y+3	; 0x03
     e36:	14 96       	adiw	r26, 0x04	; 4
     e38:	ad 90       	ld	r10, X+
     e3a:	bd 90       	ld	r11, X+
     e3c:	cd 90       	ld	r12, X+
     e3e:	dc 90       	ld	r13, X
     e40:	17 97       	sbiw	r26, 0x07	; 7
     e42:	ec 80       	ldd	r14, Y+4	; 0x04
     e44:	fd 80       	ldd	r15, Y+5	; 0x05
     e46:	0e 81       	ldd	r16, Y+6	; 0x06
     e48:	1f 81       	ldd	r17, Y+7	; 0x07
     e4a:	91 01       	movw	r18, r2
     e4c:	28 1b       	sub	r18, r24
     e4e:	39 0b       	sbc	r19, r25
     e50:	b9 01       	movw	r22, r18
     e52:	37 ff       	sbrs	r19, 7
     e54:	04 c0       	rjmp	.+8      	; 0xe5e <_fpadd_parts+0xb2>
     e56:	66 27       	eor	r22, r22
     e58:	77 27       	eor	r23, r23
     e5a:	62 1b       	sub	r22, r18
     e5c:	73 0b       	sbc	r23, r19
     e5e:	60 32       	cpi	r22, 0x20	; 32
     e60:	71 05       	cpc	r23, r1
     e62:	0c f0       	brlt	.+2      	; 0xe66 <_fpadd_parts+0xba>
     e64:	61 c0       	rjmp	.+194    	; 0xf28 <_fpadd_parts+0x17c>
     e66:	12 16       	cp	r1, r18
     e68:	13 06       	cpc	r1, r19
     e6a:	6c f5       	brge	.+90     	; 0xec6 <_fpadd_parts+0x11a>
     e6c:	37 01       	movw	r6, r14
     e6e:	48 01       	movw	r8, r16
     e70:	06 2e       	mov	r0, r22
     e72:	04 c0       	rjmp	.+8      	; 0xe7c <_fpadd_parts+0xd0>
     e74:	96 94       	lsr	r9
     e76:	87 94       	ror	r8
     e78:	77 94       	ror	r7
     e7a:	67 94       	ror	r6
     e7c:	0a 94       	dec	r0
     e7e:	d2 f7       	brpl	.-12     	; 0xe74 <_fpadd_parts+0xc8>
     e80:	21 e0       	ldi	r18, 0x01	; 1
     e82:	30 e0       	ldi	r19, 0x00	; 0
     e84:	40 e0       	ldi	r20, 0x00	; 0
     e86:	50 e0       	ldi	r21, 0x00	; 0
     e88:	04 c0       	rjmp	.+8      	; 0xe92 <_fpadd_parts+0xe6>
     e8a:	22 0f       	add	r18, r18
     e8c:	33 1f       	adc	r19, r19
     e8e:	44 1f       	adc	r20, r20
     e90:	55 1f       	adc	r21, r21
     e92:	6a 95       	dec	r22
     e94:	d2 f7       	brpl	.-12     	; 0xe8a <_fpadd_parts+0xde>
     e96:	21 50       	subi	r18, 0x01	; 1
     e98:	30 40       	sbci	r19, 0x00	; 0
     e9a:	40 40       	sbci	r20, 0x00	; 0
     e9c:	50 40       	sbci	r21, 0x00	; 0
     e9e:	2e 21       	and	r18, r14
     ea0:	3f 21       	and	r19, r15
     ea2:	40 23       	and	r20, r16
     ea4:	51 23       	and	r21, r17
     ea6:	21 15       	cp	r18, r1
     ea8:	31 05       	cpc	r19, r1
     eaa:	41 05       	cpc	r20, r1
     eac:	51 05       	cpc	r21, r1
     eae:	21 f0       	breq	.+8      	; 0xeb8 <_fpadd_parts+0x10c>
     eb0:	21 e0       	ldi	r18, 0x01	; 1
     eb2:	30 e0       	ldi	r19, 0x00	; 0
     eb4:	40 e0       	ldi	r20, 0x00	; 0
     eb6:	50 e0       	ldi	r21, 0x00	; 0
     eb8:	79 01       	movw	r14, r18
     eba:	8a 01       	movw	r16, r20
     ebc:	e6 28       	or	r14, r6
     ebe:	f7 28       	or	r15, r7
     ec0:	08 29       	or	r16, r8
     ec2:	19 29       	or	r17, r9
     ec4:	3c c0       	rjmp	.+120    	; 0xf3e <_fpadd_parts+0x192>
     ec6:	23 2b       	or	r18, r19
     ec8:	d1 f1       	breq	.+116    	; 0xf3e <_fpadd_parts+0x192>
     eca:	26 0e       	add	r2, r22
     ecc:	37 1e       	adc	r3, r23
     ece:	35 01       	movw	r6, r10
     ed0:	46 01       	movw	r8, r12
     ed2:	06 2e       	mov	r0, r22
     ed4:	04 c0       	rjmp	.+8      	; 0xede <_fpadd_parts+0x132>
     ed6:	96 94       	lsr	r9
     ed8:	87 94       	ror	r8
     eda:	77 94       	ror	r7
     edc:	67 94       	ror	r6
     ede:	0a 94       	dec	r0
     ee0:	d2 f7       	brpl	.-12     	; 0xed6 <_fpadd_parts+0x12a>
     ee2:	21 e0       	ldi	r18, 0x01	; 1
     ee4:	30 e0       	ldi	r19, 0x00	; 0
     ee6:	40 e0       	ldi	r20, 0x00	; 0
     ee8:	50 e0       	ldi	r21, 0x00	; 0
     eea:	04 c0       	rjmp	.+8      	; 0xef4 <_fpadd_parts+0x148>
     eec:	22 0f       	add	r18, r18
     eee:	33 1f       	adc	r19, r19
     ef0:	44 1f       	adc	r20, r20
     ef2:	55 1f       	adc	r21, r21
     ef4:	6a 95       	dec	r22
     ef6:	d2 f7       	brpl	.-12     	; 0xeec <_fpadd_parts+0x140>
     ef8:	21 50       	subi	r18, 0x01	; 1
     efa:	30 40       	sbci	r19, 0x00	; 0
     efc:	40 40       	sbci	r20, 0x00	; 0
     efe:	50 40       	sbci	r21, 0x00	; 0
     f00:	2a 21       	and	r18, r10
     f02:	3b 21       	and	r19, r11
     f04:	4c 21       	and	r20, r12
     f06:	5d 21       	and	r21, r13
     f08:	21 15       	cp	r18, r1
     f0a:	31 05       	cpc	r19, r1
     f0c:	41 05       	cpc	r20, r1
     f0e:	51 05       	cpc	r21, r1
     f10:	21 f0       	breq	.+8      	; 0xf1a <_fpadd_parts+0x16e>
     f12:	21 e0       	ldi	r18, 0x01	; 1
     f14:	30 e0       	ldi	r19, 0x00	; 0
     f16:	40 e0       	ldi	r20, 0x00	; 0
     f18:	50 e0       	ldi	r21, 0x00	; 0
     f1a:	59 01       	movw	r10, r18
     f1c:	6a 01       	movw	r12, r20
     f1e:	a6 28       	or	r10, r6
     f20:	b7 28       	or	r11, r7
     f22:	c8 28       	or	r12, r8
     f24:	d9 28       	or	r13, r9
     f26:	0b c0       	rjmp	.+22     	; 0xf3e <_fpadd_parts+0x192>
     f28:	82 15       	cp	r24, r2
     f2a:	93 05       	cpc	r25, r3
     f2c:	2c f0       	brlt	.+10     	; 0xf38 <_fpadd_parts+0x18c>
     f2e:	1c 01       	movw	r2, r24
     f30:	aa 24       	eor	r10, r10
     f32:	bb 24       	eor	r11, r11
     f34:	65 01       	movw	r12, r10
     f36:	03 c0       	rjmp	.+6      	; 0xf3e <_fpadd_parts+0x192>
     f38:	ee 24       	eor	r14, r14
     f3a:	ff 24       	eor	r15, r15
     f3c:	87 01       	movw	r16, r14
     f3e:	11 96       	adiw	r26, 0x01	; 1
     f40:	9c 91       	ld	r25, X
     f42:	d2 01       	movw	r26, r4
     f44:	11 96       	adiw	r26, 0x01	; 1
     f46:	8c 91       	ld	r24, X
     f48:	98 17       	cp	r25, r24
     f4a:	09 f4       	brne	.+2      	; 0xf4e <_fpadd_parts+0x1a2>
     f4c:	45 c0       	rjmp	.+138    	; 0xfd8 <_fpadd_parts+0x22c>
     f4e:	99 23       	and	r25, r25
     f50:	39 f0       	breq	.+14     	; 0xf60 <_fpadd_parts+0x1b4>
     f52:	a8 01       	movw	r20, r16
     f54:	97 01       	movw	r18, r14
     f56:	2a 19       	sub	r18, r10
     f58:	3b 09       	sbc	r19, r11
     f5a:	4c 09       	sbc	r20, r12
     f5c:	5d 09       	sbc	r21, r13
     f5e:	06 c0       	rjmp	.+12     	; 0xf6c <_fpadd_parts+0x1c0>
     f60:	a6 01       	movw	r20, r12
     f62:	95 01       	movw	r18, r10
     f64:	2e 19       	sub	r18, r14
     f66:	3f 09       	sbc	r19, r15
     f68:	40 0b       	sbc	r20, r16
     f6a:	51 0b       	sbc	r21, r17
     f6c:	57 fd       	sbrc	r21, 7
     f6e:	08 c0       	rjmp	.+16     	; 0xf80 <_fpadd_parts+0x1d4>
     f70:	11 82       	std	Z+1, r1	; 0x01
     f72:	33 82       	std	Z+3, r3	; 0x03
     f74:	22 82       	std	Z+2, r2	; 0x02
     f76:	24 83       	std	Z+4, r18	; 0x04
     f78:	35 83       	std	Z+5, r19	; 0x05
     f7a:	46 83       	std	Z+6, r20	; 0x06
     f7c:	57 83       	std	Z+7, r21	; 0x07
     f7e:	1d c0       	rjmp	.+58     	; 0xfba <_fpadd_parts+0x20e>
     f80:	81 e0       	ldi	r24, 0x01	; 1
     f82:	81 83       	std	Z+1, r24	; 0x01
     f84:	33 82       	std	Z+3, r3	; 0x03
     f86:	22 82       	std	Z+2, r2	; 0x02
     f88:	88 27       	eor	r24, r24
     f8a:	99 27       	eor	r25, r25
     f8c:	dc 01       	movw	r26, r24
     f8e:	82 1b       	sub	r24, r18
     f90:	93 0b       	sbc	r25, r19
     f92:	a4 0b       	sbc	r26, r20
     f94:	b5 0b       	sbc	r27, r21
     f96:	84 83       	std	Z+4, r24	; 0x04
     f98:	95 83       	std	Z+5, r25	; 0x05
     f9a:	a6 83       	std	Z+6, r26	; 0x06
     f9c:	b7 83       	std	Z+7, r27	; 0x07
     f9e:	0d c0       	rjmp	.+26     	; 0xfba <_fpadd_parts+0x20e>
     fa0:	22 0f       	add	r18, r18
     fa2:	33 1f       	adc	r19, r19
     fa4:	44 1f       	adc	r20, r20
     fa6:	55 1f       	adc	r21, r21
     fa8:	24 83       	std	Z+4, r18	; 0x04
     faa:	35 83       	std	Z+5, r19	; 0x05
     fac:	46 83       	std	Z+6, r20	; 0x06
     fae:	57 83       	std	Z+7, r21	; 0x07
     fb0:	82 81       	ldd	r24, Z+2	; 0x02
     fb2:	93 81       	ldd	r25, Z+3	; 0x03
     fb4:	01 97       	sbiw	r24, 0x01	; 1
     fb6:	93 83       	std	Z+3, r25	; 0x03
     fb8:	82 83       	std	Z+2, r24	; 0x02
     fba:	24 81       	ldd	r18, Z+4	; 0x04
     fbc:	35 81       	ldd	r19, Z+5	; 0x05
     fbe:	46 81       	ldd	r20, Z+6	; 0x06
     fc0:	57 81       	ldd	r21, Z+7	; 0x07
     fc2:	da 01       	movw	r26, r20
     fc4:	c9 01       	movw	r24, r18
     fc6:	01 97       	sbiw	r24, 0x01	; 1
     fc8:	a1 09       	sbc	r26, r1
     fca:	b1 09       	sbc	r27, r1
     fcc:	8f 5f       	subi	r24, 0xFF	; 255
     fce:	9f 4f       	sbci	r25, 0xFF	; 255
     fd0:	af 4f       	sbci	r26, 0xFF	; 255
     fd2:	bf 43       	sbci	r27, 0x3F	; 63
     fd4:	28 f3       	brcs	.-54     	; 0xfa0 <_fpadd_parts+0x1f4>
     fd6:	0b c0       	rjmp	.+22     	; 0xfee <_fpadd_parts+0x242>
     fd8:	91 83       	std	Z+1, r25	; 0x01
     fda:	33 82       	std	Z+3, r3	; 0x03
     fdc:	22 82       	std	Z+2, r2	; 0x02
     fde:	ea 0c       	add	r14, r10
     fe0:	fb 1c       	adc	r15, r11
     fe2:	0c 1d       	adc	r16, r12
     fe4:	1d 1d       	adc	r17, r13
     fe6:	e4 82       	std	Z+4, r14	; 0x04
     fe8:	f5 82       	std	Z+5, r15	; 0x05
     fea:	06 83       	std	Z+6, r16	; 0x06
     fec:	17 83       	std	Z+7, r17	; 0x07
     fee:	83 e0       	ldi	r24, 0x03	; 3
     ff0:	80 83       	st	Z, r24
     ff2:	24 81       	ldd	r18, Z+4	; 0x04
     ff4:	35 81       	ldd	r19, Z+5	; 0x05
     ff6:	46 81       	ldd	r20, Z+6	; 0x06
     ff8:	57 81       	ldd	r21, Z+7	; 0x07
     ffa:	57 ff       	sbrs	r21, 7
     ffc:	1a c0       	rjmp	.+52     	; 0x1032 <_fpadd_parts+0x286>
     ffe:	c9 01       	movw	r24, r18
    1000:	aa 27       	eor	r26, r26
    1002:	97 fd       	sbrc	r25, 7
    1004:	a0 95       	com	r26
    1006:	ba 2f       	mov	r27, r26
    1008:	81 70       	andi	r24, 0x01	; 1
    100a:	90 70       	andi	r25, 0x00	; 0
    100c:	a0 70       	andi	r26, 0x00	; 0
    100e:	b0 70       	andi	r27, 0x00	; 0
    1010:	56 95       	lsr	r21
    1012:	47 95       	ror	r20
    1014:	37 95       	ror	r19
    1016:	27 95       	ror	r18
    1018:	82 2b       	or	r24, r18
    101a:	93 2b       	or	r25, r19
    101c:	a4 2b       	or	r26, r20
    101e:	b5 2b       	or	r27, r21
    1020:	84 83       	std	Z+4, r24	; 0x04
    1022:	95 83       	std	Z+5, r25	; 0x05
    1024:	a6 83       	std	Z+6, r26	; 0x06
    1026:	b7 83       	std	Z+7, r27	; 0x07
    1028:	82 81       	ldd	r24, Z+2	; 0x02
    102a:	93 81       	ldd	r25, Z+3	; 0x03
    102c:	01 96       	adiw	r24, 0x01	; 1
    102e:	93 83       	std	Z+3, r25	; 0x03
    1030:	82 83       	std	Z+2, r24	; 0x02
    1032:	df 01       	movw	r26, r30
    1034:	01 c0       	rjmp	.+2      	; 0x1038 <_fpadd_parts+0x28c>
    1036:	d2 01       	movw	r26, r4
    1038:	cd 01       	movw	r24, r26
    103a:	cd b7       	in	r28, 0x3d	; 61
    103c:	de b7       	in	r29, 0x3e	; 62
    103e:	e2 e1       	ldi	r30, 0x12	; 18
    1040:	0c 94 98 0d 	jmp	0x1b30	; 0x1b30 <__epilogue_restores__>

00001044 <__subsf3>:
    1044:	a0 e2       	ldi	r26, 0x20	; 32
    1046:	b0 e0       	ldi	r27, 0x00	; 0
    1048:	e8 e2       	ldi	r30, 0x28	; 40
    104a:	f8 e0       	ldi	r31, 0x08	; 8
    104c:	0c 94 88 0d 	jmp	0x1b10	; 0x1b10 <__prologue_saves__+0x18>
    1050:	69 83       	std	Y+1, r22	; 0x01
    1052:	7a 83       	std	Y+2, r23	; 0x02
    1054:	8b 83       	std	Y+3, r24	; 0x03
    1056:	9c 83       	std	Y+4, r25	; 0x04
    1058:	2d 83       	std	Y+5, r18	; 0x05
    105a:	3e 83       	std	Y+6, r19	; 0x06
    105c:	4f 83       	std	Y+7, r20	; 0x07
    105e:	58 87       	std	Y+8, r21	; 0x08
    1060:	e9 e0       	ldi	r30, 0x09	; 9
    1062:	ee 2e       	mov	r14, r30
    1064:	f1 2c       	mov	r15, r1
    1066:	ec 0e       	add	r14, r28
    1068:	fd 1e       	adc	r15, r29
    106a:	ce 01       	movw	r24, r28
    106c:	01 96       	adiw	r24, 0x01	; 1
    106e:	b7 01       	movw	r22, r14
    1070:	0e 94 8c 0c 	call	0x1918	; 0x1918 <__unpack_f>
    1074:	8e 01       	movw	r16, r28
    1076:	0f 5e       	subi	r16, 0xEF	; 239
    1078:	1f 4f       	sbci	r17, 0xFF	; 255
    107a:	ce 01       	movw	r24, r28
    107c:	05 96       	adiw	r24, 0x05	; 5
    107e:	b8 01       	movw	r22, r16
    1080:	0e 94 8c 0c 	call	0x1918	; 0x1918 <__unpack_f>
    1084:	8a 89       	ldd	r24, Y+18	; 0x12
    1086:	91 e0       	ldi	r25, 0x01	; 1
    1088:	89 27       	eor	r24, r25
    108a:	8a 8b       	std	Y+18, r24	; 0x12
    108c:	c7 01       	movw	r24, r14
    108e:	b8 01       	movw	r22, r16
    1090:	ae 01       	movw	r20, r28
    1092:	47 5e       	subi	r20, 0xE7	; 231
    1094:	5f 4f       	sbci	r21, 0xFF	; 255
    1096:	0e 94 d6 06 	call	0xdac	; 0xdac <_fpadd_parts>
    109a:	0e 94 b7 0b 	call	0x176e	; 0x176e <__pack_f>
    109e:	a0 96       	adiw	r28, 0x20	; 32
    10a0:	e6 e0       	ldi	r30, 0x06	; 6
    10a2:	0c 94 a4 0d 	jmp	0x1b48	; 0x1b48 <__epilogue_restores__+0x18>

000010a6 <__addsf3>:
    10a6:	a0 e2       	ldi	r26, 0x20	; 32
    10a8:	b0 e0       	ldi	r27, 0x00	; 0
    10aa:	e9 e5       	ldi	r30, 0x59	; 89
    10ac:	f8 e0       	ldi	r31, 0x08	; 8
    10ae:	0c 94 88 0d 	jmp	0x1b10	; 0x1b10 <__prologue_saves__+0x18>
    10b2:	69 83       	std	Y+1, r22	; 0x01
    10b4:	7a 83       	std	Y+2, r23	; 0x02
    10b6:	8b 83       	std	Y+3, r24	; 0x03
    10b8:	9c 83       	std	Y+4, r25	; 0x04
    10ba:	2d 83       	std	Y+5, r18	; 0x05
    10bc:	3e 83       	std	Y+6, r19	; 0x06
    10be:	4f 83       	std	Y+7, r20	; 0x07
    10c0:	58 87       	std	Y+8, r21	; 0x08
    10c2:	f9 e0       	ldi	r31, 0x09	; 9
    10c4:	ef 2e       	mov	r14, r31
    10c6:	f1 2c       	mov	r15, r1
    10c8:	ec 0e       	add	r14, r28
    10ca:	fd 1e       	adc	r15, r29
    10cc:	ce 01       	movw	r24, r28
    10ce:	01 96       	adiw	r24, 0x01	; 1
    10d0:	b7 01       	movw	r22, r14
    10d2:	0e 94 8c 0c 	call	0x1918	; 0x1918 <__unpack_f>
    10d6:	8e 01       	movw	r16, r28
    10d8:	0f 5e       	subi	r16, 0xEF	; 239
    10da:	1f 4f       	sbci	r17, 0xFF	; 255
    10dc:	ce 01       	movw	r24, r28
    10de:	05 96       	adiw	r24, 0x05	; 5
    10e0:	b8 01       	movw	r22, r16
    10e2:	0e 94 8c 0c 	call	0x1918	; 0x1918 <__unpack_f>
    10e6:	c7 01       	movw	r24, r14
    10e8:	b8 01       	movw	r22, r16
    10ea:	ae 01       	movw	r20, r28
    10ec:	47 5e       	subi	r20, 0xE7	; 231
    10ee:	5f 4f       	sbci	r21, 0xFF	; 255
    10f0:	0e 94 d6 06 	call	0xdac	; 0xdac <_fpadd_parts>
    10f4:	0e 94 b7 0b 	call	0x176e	; 0x176e <__pack_f>
    10f8:	a0 96       	adiw	r28, 0x20	; 32
    10fa:	e6 e0       	ldi	r30, 0x06	; 6
    10fc:	0c 94 a4 0d 	jmp	0x1b48	; 0x1b48 <__epilogue_restores__+0x18>

00001100 <__mulsf3>:
    1100:	a0 e2       	ldi	r26, 0x20	; 32
    1102:	b0 e0       	ldi	r27, 0x00	; 0
    1104:	e6 e8       	ldi	r30, 0x86	; 134
    1106:	f8 e0       	ldi	r31, 0x08	; 8
    1108:	0c 94 7c 0d 	jmp	0x1af8	; 0x1af8 <__prologue_saves__>
    110c:	69 83       	std	Y+1, r22	; 0x01
    110e:	7a 83       	std	Y+2, r23	; 0x02
    1110:	8b 83       	std	Y+3, r24	; 0x03
    1112:	9c 83       	std	Y+4, r25	; 0x04
    1114:	2d 83       	std	Y+5, r18	; 0x05
    1116:	3e 83       	std	Y+6, r19	; 0x06
    1118:	4f 83       	std	Y+7, r20	; 0x07
    111a:	58 87       	std	Y+8, r21	; 0x08
    111c:	ce 01       	movw	r24, r28
    111e:	01 96       	adiw	r24, 0x01	; 1
    1120:	be 01       	movw	r22, r28
    1122:	67 5f       	subi	r22, 0xF7	; 247
    1124:	7f 4f       	sbci	r23, 0xFF	; 255
    1126:	0e 94 8c 0c 	call	0x1918	; 0x1918 <__unpack_f>
    112a:	ce 01       	movw	r24, r28
    112c:	05 96       	adiw	r24, 0x05	; 5
    112e:	be 01       	movw	r22, r28
    1130:	6f 5e       	subi	r22, 0xEF	; 239
    1132:	7f 4f       	sbci	r23, 0xFF	; 255
    1134:	0e 94 8c 0c 	call	0x1918	; 0x1918 <__unpack_f>
    1138:	99 85       	ldd	r25, Y+9	; 0x09
    113a:	92 30       	cpi	r25, 0x02	; 2
    113c:	88 f0       	brcs	.+34     	; 0x1160 <__mulsf3+0x60>
    113e:	89 89       	ldd	r24, Y+17	; 0x11
    1140:	82 30       	cpi	r24, 0x02	; 2
    1142:	c8 f0       	brcs	.+50     	; 0x1176 <__mulsf3+0x76>
    1144:	94 30       	cpi	r25, 0x04	; 4
    1146:	19 f4       	brne	.+6      	; 0x114e <__mulsf3+0x4e>
    1148:	82 30       	cpi	r24, 0x02	; 2
    114a:	51 f4       	brne	.+20     	; 0x1160 <__mulsf3+0x60>
    114c:	04 c0       	rjmp	.+8      	; 0x1156 <__mulsf3+0x56>
    114e:	84 30       	cpi	r24, 0x04	; 4
    1150:	29 f4       	brne	.+10     	; 0x115c <__mulsf3+0x5c>
    1152:	92 30       	cpi	r25, 0x02	; 2
    1154:	81 f4       	brne	.+32     	; 0x1176 <__mulsf3+0x76>
    1156:	80 e0       	ldi	r24, 0x00	; 0
    1158:	91 e0       	ldi	r25, 0x01	; 1
    115a:	c6 c0       	rjmp	.+396    	; 0x12e8 <__mulsf3+0x1e8>
    115c:	92 30       	cpi	r25, 0x02	; 2
    115e:	49 f4       	brne	.+18     	; 0x1172 <__mulsf3+0x72>
    1160:	20 e0       	ldi	r18, 0x00	; 0
    1162:	9a 85       	ldd	r25, Y+10	; 0x0a
    1164:	8a 89       	ldd	r24, Y+18	; 0x12
    1166:	98 13       	cpse	r25, r24
    1168:	21 e0       	ldi	r18, 0x01	; 1
    116a:	2a 87       	std	Y+10, r18	; 0x0a
    116c:	ce 01       	movw	r24, r28
    116e:	09 96       	adiw	r24, 0x09	; 9
    1170:	bb c0       	rjmp	.+374    	; 0x12e8 <__mulsf3+0x1e8>
    1172:	82 30       	cpi	r24, 0x02	; 2
    1174:	49 f4       	brne	.+18     	; 0x1188 <__mulsf3+0x88>
    1176:	20 e0       	ldi	r18, 0x00	; 0
    1178:	9a 85       	ldd	r25, Y+10	; 0x0a
    117a:	8a 89       	ldd	r24, Y+18	; 0x12
    117c:	98 13       	cpse	r25, r24
    117e:	21 e0       	ldi	r18, 0x01	; 1
    1180:	2a 8b       	std	Y+18, r18	; 0x12
    1182:	ce 01       	movw	r24, r28
    1184:	41 96       	adiw	r24, 0x11	; 17
    1186:	b0 c0       	rjmp	.+352    	; 0x12e8 <__mulsf3+0x1e8>
    1188:	2d 84       	ldd	r2, Y+13	; 0x0d
    118a:	3e 84       	ldd	r3, Y+14	; 0x0e
    118c:	4f 84       	ldd	r4, Y+15	; 0x0f
    118e:	58 88       	ldd	r5, Y+16	; 0x10
    1190:	6d 88       	ldd	r6, Y+21	; 0x15
    1192:	7e 88       	ldd	r7, Y+22	; 0x16
    1194:	8f 88       	ldd	r8, Y+23	; 0x17
    1196:	98 8c       	ldd	r9, Y+24	; 0x18
    1198:	ee 24       	eor	r14, r14
    119a:	ff 24       	eor	r15, r15
    119c:	87 01       	movw	r16, r14
    119e:	aa 24       	eor	r10, r10
    11a0:	bb 24       	eor	r11, r11
    11a2:	65 01       	movw	r12, r10
    11a4:	40 e0       	ldi	r20, 0x00	; 0
    11a6:	50 e0       	ldi	r21, 0x00	; 0
    11a8:	60 e0       	ldi	r22, 0x00	; 0
    11aa:	70 e0       	ldi	r23, 0x00	; 0
    11ac:	e0 e0       	ldi	r30, 0x00	; 0
    11ae:	f0 e0       	ldi	r31, 0x00	; 0
    11b0:	c1 01       	movw	r24, r2
    11b2:	81 70       	andi	r24, 0x01	; 1
    11b4:	90 70       	andi	r25, 0x00	; 0
    11b6:	89 2b       	or	r24, r25
    11b8:	e9 f0       	breq	.+58     	; 0x11f4 <__mulsf3+0xf4>
    11ba:	e6 0c       	add	r14, r6
    11bc:	f7 1c       	adc	r15, r7
    11be:	08 1d       	adc	r16, r8
    11c0:	19 1d       	adc	r17, r9
    11c2:	9a 01       	movw	r18, r20
    11c4:	ab 01       	movw	r20, r22
    11c6:	2a 0d       	add	r18, r10
    11c8:	3b 1d       	adc	r19, r11
    11ca:	4c 1d       	adc	r20, r12
    11cc:	5d 1d       	adc	r21, r13
    11ce:	80 e0       	ldi	r24, 0x00	; 0
    11d0:	90 e0       	ldi	r25, 0x00	; 0
    11d2:	a0 e0       	ldi	r26, 0x00	; 0
    11d4:	b0 e0       	ldi	r27, 0x00	; 0
    11d6:	e6 14       	cp	r14, r6
    11d8:	f7 04       	cpc	r15, r7
    11da:	08 05       	cpc	r16, r8
    11dc:	19 05       	cpc	r17, r9
    11de:	20 f4       	brcc	.+8      	; 0x11e8 <__mulsf3+0xe8>
    11e0:	81 e0       	ldi	r24, 0x01	; 1
    11e2:	90 e0       	ldi	r25, 0x00	; 0
    11e4:	a0 e0       	ldi	r26, 0x00	; 0
    11e6:	b0 e0       	ldi	r27, 0x00	; 0
    11e8:	ba 01       	movw	r22, r20
    11ea:	a9 01       	movw	r20, r18
    11ec:	48 0f       	add	r20, r24
    11ee:	59 1f       	adc	r21, r25
    11f0:	6a 1f       	adc	r22, r26
    11f2:	7b 1f       	adc	r23, r27
    11f4:	aa 0c       	add	r10, r10
    11f6:	bb 1c       	adc	r11, r11
    11f8:	cc 1c       	adc	r12, r12
    11fa:	dd 1c       	adc	r13, r13
    11fc:	97 fe       	sbrs	r9, 7
    11fe:	08 c0       	rjmp	.+16     	; 0x1210 <__mulsf3+0x110>
    1200:	81 e0       	ldi	r24, 0x01	; 1
    1202:	90 e0       	ldi	r25, 0x00	; 0
    1204:	a0 e0       	ldi	r26, 0x00	; 0
    1206:	b0 e0       	ldi	r27, 0x00	; 0
    1208:	a8 2a       	or	r10, r24
    120a:	b9 2a       	or	r11, r25
    120c:	ca 2a       	or	r12, r26
    120e:	db 2a       	or	r13, r27
    1210:	31 96       	adiw	r30, 0x01	; 1
    1212:	e0 32       	cpi	r30, 0x20	; 32
    1214:	f1 05       	cpc	r31, r1
    1216:	49 f0       	breq	.+18     	; 0x122a <__mulsf3+0x12a>
    1218:	66 0c       	add	r6, r6
    121a:	77 1c       	adc	r7, r7
    121c:	88 1c       	adc	r8, r8
    121e:	99 1c       	adc	r9, r9
    1220:	56 94       	lsr	r5
    1222:	47 94       	ror	r4
    1224:	37 94       	ror	r3
    1226:	27 94       	ror	r2
    1228:	c3 cf       	rjmp	.-122    	; 0x11b0 <__mulsf3+0xb0>
    122a:	fa 85       	ldd	r31, Y+10	; 0x0a
    122c:	ea 89       	ldd	r30, Y+18	; 0x12
    122e:	2b 89       	ldd	r18, Y+19	; 0x13
    1230:	3c 89       	ldd	r19, Y+20	; 0x14
    1232:	8b 85       	ldd	r24, Y+11	; 0x0b
    1234:	9c 85       	ldd	r25, Y+12	; 0x0c
    1236:	28 0f       	add	r18, r24
    1238:	39 1f       	adc	r19, r25
    123a:	2e 5f       	subi	r18, 0xFE	; 254
    123c:	3f 4f       	sbci	r19, 0xFF	; 255
    123e:	17 c0       	rjmp	.+46     	; 0x126e <__mulsf3+0x16e>
    1240:	ca 01       	movw	r24, r20
    1242:	81 70       	andi	r24, 0x01	; 1
    1244:	90 70       	andi	r25, 0x00	; 0
    1246:	89 2b       	or	r24, r25
    1248:	61 f0       	breq	.+24     	; 0x1262 <__mulsf3+0x162>
    124a:	16 95       	lsr	r17
    124c:	07 95       	ror	r16
    124e:	f7 94       	ror	r15
    1250:	e7 94       	ror	r14
    1252:	80 e0       	ldi	r24, 0x00	; 0
    1254:	90 e0       	ldi	r25, 0x00	; 0
    1256:	a0 e0       	ldi	r26, 0x00	; 0
    1258:	b0 e8       	ldi	r27, 0x80	; 128
    125a:	e8 2a       	or	r14, r24
    125c:	f9 2a       	or	r15, r25
    125e:	0a 2b       	or	r16, r26
    1260:	1b 2b       	or	r17, r27
    1262:	76 95       	lsr	r23
    1264:	67 95       	ror	r22
    1266:	57 95       	ror	r21
    1268:	47 95       	ror	r20
    126a:	2f 5f       	subi	r18, 0xFF	; 255
    126c:	3f 4f       	sbci	r19, 0xFF	; 255
    126e:	77 fd       	sbrc	r23, 7
    1270:	e7 cf       	rjmp	.-50     	; 0x1240 <__mulsf3+0x140>
    1272:	0c c0       	rjmp	.+24     	; 0x128c <__mulsf3+0x18c>
    1274:	44 0f       	add	r20, r20
    1276:	55 1f       	adc	r21, r21
    1278:	66 1f       	adc	r22, r22
    127a:	77 1f       	adc	r23, r23
    127c:	17 fd       	sbrc	r17, 7
    127e:	41 60       	ori	r20, 0x01	; 1
    1280:	ee 0c       	add	r14, r14
    1282:	ff 1c       	adc	r15, r15
    1284:	00 1f       	adc	r16, r16
    1286:	11 1f       	adc	r17, r17
    1288:	21 50       	subi	r18, 0x01	; 1
    128a:	30 40       	sbci	r19, 0x00	; 0
    128c:	40 30       	cpi	r20, 0x00	; 0
    128e:	90 e0       	ldi	r25, 0x00	; 0
    1290:	59 07       	cpc	r21, r25
    1292:	90 e0       	ldi	r25, 0x00	; 0
    1294:	69 07       	cpc	r22, r25
    1296:	90 e4       	ldi	r25, 0x40	; 64
    1298:	79 07       	cpc	r23, r25
    129a:	60 f3       	brcs	.-40     	; 0x1274 <__mulsf3+0x174>
    129c:	2b 8f       	std	Y+27, r18	; 0x1b
    129e:	3c 8f       	std	Y+28, r19	; 0x1c
    12a0:	db 01       	movw	r26, r22
    12a2:	ca 01       	movw	r24, r20
    12a4:	8f 77       	andi	r24, 0x7F	; 127
    12a6:	90 70       	andi	r25, 0x00	; 0
    12a8:	a0 70       	andi	r26, 0x00	; 0
    12aa:	b0 70       	andi	r27, 0x00	; 0
    12ac:	80 34       	cpi	r24, 0x40	; 64
    12ae:	91 05       	cpc	r25, r1
    12b0:	a1 05       	cpc	r26, r1
    12b2:	b1 05       	cpc	r27, r1
    12b4:	61 f4       	brne	.+24     	; 0x12ce <__mulsf3+0x1ce>
    12b6:	47 fd       	sbrc	r20, 7
    12b8:	0a c0       	rjmp	.+20     	; 0x12ce <__mulsf3+0x1ce>
    12ba:	e1 14       	cp	r14, r1
    12bc:	f1 04       	cpc	r15, r1
    12be:	01 05       	cpc	r16, r1
    12c0:	11 05       	cpc	r17, r1
    12c2:	29 f0       	breq	.+10     	; 0x12ce <__mulsf3+0x1ce>
    12c4:	40 5c       	subi	r20, 0xC0	; 192
    12c6:	5f 4f       	sbci	r21, 0xFF	; 255
    12c8:	6f 4f       	sbci	r22, 0xFF	; 255
    12ca:	7f 4f       	sbci	r23, 0xFF	; 255
    12cc:	40 78       	andi	r20, 0x80	; 128
    12ce:	1a 8e       	std	Y+26, r1	; 0x1a
    12d0:	fe 17       	cp	r31, r30
    12d2:	11 f0       	breq	.+4      	; 0x12d8 <__mulsf3+0x1d8>
    12d4:	81 e0       	ldi	r24, 0x01	; 1
    12d6:	8a 8f       	std	Y+26, r24	; 0x1a
    12d8:	4d 8f       	std	Y+29, r20	; 0x1d
    12da:	5e 8f       	std	Y+30, r21	; 0x1e
    12dc:	6f 8f       	std	Y+31, r22	; 0x1f
    12de:	78 a3       	std	Y+32, r23	; 0x20
    12e0:	83 e0       	ldi	r24, 0x03	; 3
    12e2:	89 8f       	std	Y+25, r24	; 0x19
    12e4:	ce 01       	movw	r24, r28
    12e6:	49 96       	adiw	r24, 0x19	; 25
    12e8:	0e 94 b7 0b 	call	0x176e	; 0x176e <__pack_f>
    12ec:	a0 96       	adiw	r28, 0x20	; 32
    12ee:	e2 e1       	ldi	r30, 0x12	; 18
    12f0:	0c 94 98 0d 	jmp	0x1b30	; 0x1b30 <__epilogue_restores__>

000012f4 <__divsf3>:
    12f4:	a8 e1       	ldi	r26, 0x18	; 24
    12f6:	b0 e0       	ldi	r27, 0x00	; 0
    12f8:	e0 e8       	ldi	r30, 0x80	; 128
    12fa:	f9 e0       	ldi	r31, 0x09	; 9
    12fc:	0c 94 84 0d 	jmp	0x1b08	; 0x1b08 <__prologue_saves__+0x10>
    1300:	69 83       	std	Y+1, r22	; 0x01
    1302:	7a 83       	std	Y+2, r23	; 0x02
    1304:	8b 83       	std	Y+3, r24	; 0x03
    1306:	9c 83       	std	Y+4, r25	; 0x04
    1308:	2d 83       	std	Y+5, r18	; 0x05
    130a:	3e 83       	std	Y+6, r19	; 0x06
    130c:	4f 83       	std	Y+7, r20	; 0x07
    130e:	58 87       	std	Y+8, r21	; 0x08
    1310:	b9 e0       	ldi	r27, 0x09	; 9
    1312:	eb 2e       	mov	r14, r27
    1314:	f1 2c       	mov	r15, r1
    1316:	ec 0e       	add	r14, r28
    1318:	fd 1e       	adc	r15, r29
    131a:	ce 01       	movw	r24, r28
    131c:	01 96       	adiw	r24, 0x01	; 1
    131e:	b7 01       	movw	r22, r14
    1320:	0e 94 8c 0c 	call	0x1918	; 0x1918 <__unpack_f>
    1324:	8e 01       	movw	r16, r28
    1326:	0f 5e       	subi	r16, 0xEF	; 239
    1328:	1f 4f       	sbci	r17, 0xFF	; 255
    132a:	ce 01       	movw	r24, r28
    132c:	05 96       	adiw	r24, 0x05	; 5
    132e:	b8 01       	movw	r22, r16
    1330:	0e 94 8c 0c 	call	0x1918	; 0x1918 <__unpack_f>
    1334:	29 85       	ldd	r18, Y+9	; 0x09
    1336:	22 30       	cpi	r18, 0x02	; 2
    1338:	08 f4       	brcc	.+2      	; 0x133c <__divsf3+0x48>
    133a:	7e c0       	rjmp	.+252    	; 0x1438 <__divsf3+0x144>
    133c:	39 89       	ldd	r19, Y+17	; 0x11
    133e:	32 30       	cpi	r19, 0x02	; 2
    1340:	10 f4       	brcc	.+4      	; 0x1346 <__divsf3+0x52>
    1342:	b8 01       	movw	r22, r16
    1344:	7c c0       	rjmp	.+248    	; 0x143e <__divsf3+0x14a>
    1346:	8a 85       	ldd	r24, Y+10	; 0x0a
    1348:	9a 89       	ldd	r25, Y+18	; 0x12
    134a:	89 27       	eor	r24, r25
    134c:	8a 87       	std	Y+10, r24	; 0x0a
    134e:	24 30       	cpi	r18, 0x04	; 4
    1350:	11 f0       	breq	.+4      	; 0x1356 <__divsf3+0x62>
    1352:	22 30       	cpi	r18, 0x02	; 2
    1354:	31 f4       	brne	.+12     	; 0x1362 <__divsf3+0x6e>
    1356:	23 17       	cp	r18, r19
    1358:	09 f0       	breq	.+2      	; 0x135c <__divsf3+0x68>
    135a:	6e c0       	rjmp	.+220    	; 0x1438 <__divsf3+0x144>
    135c:	60 e0       	ldi	r22, 0x00	; 0
    135e:	71 e0       	ldi	r23, 0x01	; 1
    1360:	6e c0       	rjmp	.+220    	; 0x143e <__divsf3+0x14a>
    1362:	34 30       	cpi	r19, 0x04	; 4
    1364:	39 f4       	brne	.+14     	; 0x1374 <__divsf3+0x80>
    1366:	1d 86       	std	Y+13, r1	; 0x0d
    1368:	1e 86       	std	Y+14, r1	; 0x0e
    136a:	1f 86       	std	Y+15, r1	; 0x0f
    136c:	18 8a       	std	Y+16, r1	; 0x10
    136e:	1c 86       	std	Y+12, r1	; 0x0c
    1370:	1b 86       	std	Y+11, r1	; 0x0b
    1372:	04 c0       	rjmp	.+8      	; 0x137c <__divsf3+0x88>
    1374:	32 30       	cpi	r19, 0x02	; 2
    1376:	21 f4       	brne	.+8      	; 0x1380 <__divsf3+0x8c>
    1378:	84 e0       	ldi	r24, 0x04	; 4
    137a:	89 87       	std	Y+9, r24	; 0x09
    137c:	b7 01       	movw	r22, r14
    137e:	5f c0       	rjmp	.+190    	; 0x143e <__divsf3+0x14a>
    1380:	2b 85       	ldd	r18, Y+11	; 0x0b
    1382:	3c 85       	ldd	r19, Y+12	; 0x0c
    1384:	8b 89       	ldd	r24, Y+19	; 0x13
    1386:	9c 89       	ldd	r25, Y+20	; 0x14
    1388:	28 1b       	sub	r18, r24
    138a:	39 0b       	sbc	r19, r25
    138c:	3c 87       	std	Y+12, r19	; 0x0c
    138e:	2b 87       	std	Y+11, r18	; 0x0b
    1390:	ed 84       	ldd	r14, Y+13	; 0x0d
    1392:	fe 84       	ldd	r15, Y+14	; 0x0e
    1394:	0f 85       	ldd	r16, Y+15	; 0x0f
    1396:	18 89       	ldd	r17, Y+16	; 0x10
    1398:	ad 88       	ldd	r10, Y+21	; 0x15
    139a:	be 88       	ldd	r11, Y+22	; 0x16
    139c:	cf 88       	ldd	r12, Y+23	; 0x17
    139e:	d8 8c       	ldd	r13, Y+24	; 0x18
    13a0:	ea 14       	cp	r14, r10
    13a2:	fb 04       	cpc	r15, r11
    13a4:	0c 05       	cpc	r16, r12
    13a6:	1d 05       	cpc	r17, r13
    13a8:	40 f4       	brcc	.+16     	; 0x13ba <__divsf3+0xc6>
    13aa:	ee 0c       	add	r14, r14
    13ac:	ff 1c       	adc	r15, r15
    13ae:	00 1f       	adc	r16, r16
    13b0:	11 1f       	adc	r17, r17
    13b2:	21 50       	subi	r18, 0x01	; 1
    13b4:	30 40       	sbci	r19, 0x00	; 0
    13b6:	3c 87       	std	Y+12, r19	; 0x0c
    13b8:	2b 87       	std	Y+11, r18	; 0x0b
    13ba:	20 e0       	ldi	r18, 0x00	; 0
    13bc:	30 e0       	ldi	r19, 0x00	; 0
    13be:	40 e0       	ldi	r20, 0x00	; 0
    13c0:	50 e0       	ldi	r21, 0x00	; 0
    13c2:	80 e0       	ldi	r24, 0x00	; 0
    13c4:	90 e0       	ldi	r25, 0x00	; 0
    13c6:	a0 e0       	ldi	r26, 0x00	; 0
    13c8:	b0 e4       	ldi	r27, 0x40	; 64
    13ca:	60 e0       	ldi	r22, 0x00	; 0
    13cc:	70 e0       	ldi	r23, 0x00	; 0
    13ce:	ea 14       	cp	r14, r10
    13d0:	fb 04       	cpc	r15, r11
    13d2:	0c 05       	cpc	r16, r12
    13d4:	1d 05       	cpc	r17, r13
    13d6:	40 f0       	brcs	.+16     	; 0x13e8 <__divsf3+0xf4>
    13d8:	28 2b       	or	r18, r24
    13da:	39 2b       	or	r19, r25
    13dc:	4a 2b       	or	r20, r26
    13de:	5b 2b       	or	r21, r27
    13e0:	ea 18       	sub	r14, r10
    13e2:	fb 08       	sbc	r15, r11
    13e4:	0c 09       	sbc	r16, r12
    13e6:	1d 09       	sbc	r17, r13
    13e8:	b6 95       	lsr	r27
    13ea:	a7 95       	ror	r26
    13ec:	97 95       	ror	r25
    13ee:	87 95       	ror	r24
    13f0:	ee 0c       	add	r14, r14
    13f2:	ff 1c       	adc	r15, r15
    13f4:	00 1f       	adc	r16, r16
    13f6:	11 1f       	adc	r17, r17
    13f8:	6f 5f       	subi	r22, 0xFF	; 255
    13fa:	7f 4f       	sbci	r23, 0xFF	; 255
    13fc:	6f 31       	cpi	r22, 0x1F	; 31
    13fe:	71 05       	cpc	r23, r1
    1400:	31 f7       	brne	.-52     	; 0x13ce <__divsf3+0xda>
    1402:	da 01       	movw	r26, r20
    1404:	c9 01       	movw	r24, r18
    1406:	8f 77       	andi	r24, 0x7F	; 127
    1408:	90 70       	andi	r25, 0x00	; 0
    140a:	a0 70       	andi	r26, 0x00	; 0
    140c:	b0 70       	andi	r27, 0x00	; 0
    140e:	80 34       	cpi	r24, 0x40	; 64
    1410:	91 05       	cpc	r25, r1
    1412:	a1 05       	cpc	r26, r1
    1414:	b1 05       	cpc	r27, r1
    1416:	61 f4       	brne	.+24     	; 0x1430 <__divsf3+0x13c>
    1418:	27 fd       	sbrc	r18, 7
    141a:	0a c0       	rjmp	.+20     	; 0x1430 <__divsf3+0x13c>
    141c:	e1 14       	cp	r14, r1
    141e:	f1 04       	cpc	r15, r1
    1420:	01 05       	cpc	r16, r1
    1422:	11 05       	cpc	r17, r1
    1424:	29 f0       	breq	.+10     	; 0x1430 <__divsf3+0x13c>
    1426:	20 5c       	subi	r18, 0xC0	; 192
    1428:	3f 4f       	sbci	r19, 0xFF	; 255
    142a:	4f 4f       	sbci	r20, 0xFF	; 255
    142c:	5f 4f       	sbci	r21, 0xFF	; 255
    142e:	20 78       	andi	r18, 0x80	; 128
    1430:	2d 87       	std	Y+13, r18	; 0x0d
    1432:	3e 87       	std	Y+14, r19	; 0x0e
    1434:	4f 87       	std	Y+15, r20	; 0x0f
    1436:	58 8b       	std	Y+16, r21	; 0x10
    1438:	be 01       	movw	r22, r28
    143a:	67 5f       	subi	r22, 0xF7	; 247
    143c:	7f 4f       	sbci	r23, 0xFF	; 255
    143e:	cb 01       	movw	r24, r22
    1440:	0e 94 b7 0b 	call	0x176e	; 0x176e <__pack_f>
    1444:	68 96       	adiw	r28, 0x18	; 24
    1446:	ea e0       	ldi	r30, 0x0A	; 10
    1448:	0c 94 a0 0d 	jmp	0x1b40	; 0x1b40 <__epilogue_restores__+0x10>

0000144c <__gtsf2>:
    144c:	a8 e1       	ldi	r26, 0x18	; 24
    144e:	b0 e0       	ldi	r27, 0x00	; 0
    1450:	ec e2       	ldi	r30, 0x2C	; 44
    1452:	fa e0       	ldi	r31, 0x0A	; 10
    1454:	0c 94 88 0d 	jmp	0x1b10	; 0x1b10 <__prologue_saves__+0x18>
    1458:	69 83       	std	Y+1, r22	; 0x01
    145a:	7a 83       	std	Y+2, r23	; 0x02
    145c:	8b 83       	std	Y+3, r24	; 0x03
    145e:	9c 83       	std	Y+4, r25	; 0x04
    1460:	2d 83       	std	Y+5, r18	; 0x05
    1462:	3e 83       	std	Y+6, r19	; 0x06
    1464:	4f 83       	std	Y+7, r20	; 0x07
    1466:	58 87       	std	Y+8, r21	; 0x08
    1468:	89 e0       	ldi	r24, 0x09	; 9
    146a:	e8 2e       	mov	r14, r24
    146c:	f1 2c       	mov	r15, r1
    146e:	ec 0e       	add	r14, r28
    1470:	fd 1e       	adc	r15, r29
    1472:	ce 01       	movw	r24, r28
    1474:	01 96       	adiw	r24, 0x01	; 1
    1476:	b7 01       	movw	r22, r14
    1478:	0e 94 8c 0c 	call	0x1918	; 0x1918 <__unpack_f>
    147c:	8e 01       	movw	r16, r28
    147e:	0f 5e       	subi	r16, 0xEF	; 239
    1480:	1f 4f       	sbci	r17, 0xFF	; 255
    1482:	ce 01       	movw	r24, r28
    1484:	05 96       	adiw	r24, 0x05	; 5
    1486:	b8 01       	movw	r22, r16
    1488:	0e 94 8c 0c 	call	0x1918	; 0x1918 <__unpack_f>
    148c:	89 85       	ldd	r24, Y+9	; 0x09
    148e:	82 30       	cpi	r24, 0x02	; 2
    1490:	40 f0       	brcs	.+16     	; 0x14a2 <__gtsf2+0x56>
    1492:	89 89       	ldd	r24, Y+17	; 0x11
    1494:	82 30       	cpi	r24, 0x02	; 2
    1496:	28 f0       	brcs	.+10     	; 0x14a2 <__gtsf2+0x56>
    1498:	c7 01       	movw	r24, r14
    149a:	b8 01       	movw	r22, r16
    149c:	0e 94 04 0d 	call	0x1a08	; 0x1a08 <__fpcmp_parts_f>
    14a0:	01 c0       	rjmp	.+2      	; 0x14a4 <__gtsf2+0x58>
    14a2:	8f ef       	ldi	r24, 0xFF	; 255
    14a4:	68 96       	adiw	r28, 0x18	; 24
    14a6:	e6 e0       	ldi	r30, 0x06	; 6
    14a8:	0c 94 a4 0d 	jmp	0x1b48	; 0x1b48 <__epilogue_restores__+0x18>

000014ac <__gesf2>:
    14ac:	a8 e1       	ldi	r26, 0x18	; 24
    14ae:	b0 e0       	ldi	r27, 0x00	; 0
    14b0:	ec e5       	ldi	r30, 0x5C	; 92
    14b2:	fa e0       	ldi	r31, 0x0A	; 10
    14b4:	0c 94 88 0d 	jmp	0x1b10	; 0x1b10 <__prologue_saves__+0x18>
    14b8:	69 83       	std	Y+1, r22	; 0x01
    14ba:	7a 83       	std	Y+2, r23	; 0x02
    14bc:	8b 83       	std	Y+3, r24	; 0x03
    14be:	9c 83       	std	Y+4, r25	; 0x04
    14c0:	2d 83       	std	Y+5, r18	; 0x05
    14c2:	3e 83       	std	Y+6, r19	; 0x06
    14c4:	4f 83       	std	Y+7, r20	; 0x07
    14c6:	58 87       	std	Y+8, r21	; 0x08
    14c8:	89 e0       	ldi	r24, 0x09	; 9
    14ca:	e8 2e       	mov	r14, r24
    14cc:	f1 2c       	mov	r15, r1
    14ce:	ec 0e       	add	r14, r28
    14d0:	fd 1e       	adc	r15, r29
    14d2:	ce 01       	movw	r24, r28
    14d4:	01 96       	adiw	r24, 0x01	; 1
    14d6:	b7 01       	movw	r22, r14
    14d8:	0e 94 8c 0c 	call	0x1918	; 0x1918 <__unpack_f>
    14dc:	8e 01       	movw	r16, r28
    14de:	0f 5e       	subi	r16, 0xEF	; 239
    14e0:	1f 4f       	sbci	r17, 0xFF	; 255
    14e2:	ce 01       	movw	r24, r28
    14e4:	05 96       	adiw	r24, 0x05	; 5
    14e6:	b8 01       	movw	r22, r16
    14e8:	0e 94 8c 0c 	call	0x1918	; 0x1918 <__unpack_f>
    14ec:	89 85       	ldd	r24, Y+9	; 0x09
    14ee:	82 30       	cpi	r24, 0x02	; 2
    14f0:	40 f0       	brcs	.+16     	; 0x1502 <__gesf2+0x56>
    14f2:	89 89       	ldd	r24, Y+17	; 0x11
    14f4:	82 30       	cpi	r24, 0x02	; 2
    14f6:	28 f0       	brcs	.+10     	; 0x1502 <__gesf2+0x56>
    14f8:	c7 01       	movw	r24, r14
    14fa:	b8 01       	movw	r22, r16
    14fc:	0e 94 04 0d 	call	0x1a08	; 0x1a08 <__fpcmp_parts_f>
    1500:	01 c0       	rjmp	.+2      	; 0x1504 <__gesf2+0x58>
    1502:	8f ef       	ldi	r24, 0xFF	; 255
    1504:	68 96       	adiw	r28, 0x18	; 24
    1506:	e6 e0       	ldi	r30, 0x06	; 6
    1508:	0c 94 a4 0d 	jmp	0x1b48	; 0x1b48 <__epilogue_restores__+0x18>

0000150c <__ltsf2>:
    150c:	a8 e1       	ldi	r26, 0x18	; 24
    150e:	b0 e0       	ldi	r27, 0x00	; 0
    1510:	ec e8       	ldi	r30, 0x8C	; 140
    1512:	fa e0       	ldi	r31, 0x0A	; 10
    1514:	0c 94 88 0d 	jmp	0x1b10	; 0x1b10 <__prologue_saves__+0x18>
    1518:	69 83       	std	Y+1, r22	; 0x01
    151a:	7a 83       	std	Y+2, r23	; 0x02
    151c:	8b 83       	std	Y+3, r24	; 0x03
    151e:	9c 83       	std	Y+4, r25	; 0x04
    1520:	2d 83       	std	Y+5, r18	; 0x05
    1522:	3e 83       	std	Y+6, r19	; 0x06
    1524:	4f 83       	std	Y+7, r20	; 0x07
    1526:	58 87       	std	Y+8, r21	; 0x08
    1528:	89 e0       	ldi	r24, 0x09	; 9
    152a:	e8 2e       	mov	r14, r24
    152c:	f1 2c       	mov	r15, r1
    152e:	ec 0e       	add	r14, r28
    1530:	fd 1e       	adc	r15, r29
    1532:	ce 01       	movw	r24, r28
    1534:	01 96       	adiw	r24, 0x01	; 1
    1536:	b7 01       	movw	r22, r14
    1538:	0e 94 8c 0c 	call	0x1918	; 0x1918 <__unpack_f>
    153c:	8e 01       	movw	r16, r28
    153e:	0f 5e       	subi	r16, 0xEF	; 239
    1540:	1f 4f       	sbci	r17, 0xFF	; 255
    1542:	ce 01       	movw	r24, r28
    1544:	05 96       	adiw	r24, 0x05	; 5
    1546:	b8 01       	movw	r22, r16
    1548:	0e 94 8c 0c 	call	0x1918	; 0x1918 <__unpack_f>
    154c:	89 85       	ldd	r24, Y+9	; 0x09
    154e:	82 30       	cpi	r24, 0x02	; 2
    1550:	40 f0       	brcs	.+16     	; 0x1562 <__ltsf2+0x56>
    1552:	89 89       	ldd	r24, Y+17	; 0x11
    1554:	82 30       	cpi	r24, 0x02	; 2
    1556:	28 f0       	brcs	.+10     	; 0x1562 <__ltsf2+0x56>
    1558:	c7 01       	movw	r24, r14
    155a:	b8 01       	movw	r22, r16
    155c:	0e 94 04 0d 	call	0x1a08	; 0x1a08 <__fpcmp_parts_f>
    1560:	01 c0       	rjmp	.+2      	; 0x1564 <__ltsf2+0x58>
    1562:	81 e0       	ldi	r24, 0x01	; 1
    1564:	68 96       	adiw	r28, 0x18	; 24
    1566:	e6 e0       	ldi	r30, 0x06	; 6
    1568:	0c 94 a4 0d 	jmp	0x1b48	; 0x1b48 <__epilogue_restores__+0x18>

0000156c <__floatsisf>:
    156c:	a8 e0       	ldi	r26, 0x08	; 8
    156e:	b0 e0       	ldi	r27, 0x00	; 0
    1570:	ec eb       	ldi	r30, 0xBC	; 188
    1572:	fa e0       	ldi	r31, 0x0A	; 10
    1574:	0c 94 85 0d 	jmp	0x1b0a	; 0x1b0a <__prologue_saves__+0x12>
    1578:	9b 01       	movw	r18, r22
    157a:	ac 01       	movw	r20, r24
    157c:	83 e0       	ldi	r24, 0x03	; 3
    157e:	89 83       	std	Y+1, r24	; 0x01
    1580:	da 01       	movw	r26, r20
    1582:	c9 01       	movw	r24, r18
    1584:	88 27       	eor	r24, r24
    1586:	b7 fd       	sbrc	r27, 7
    1588:	83 95       	inc	r24
    158a:	99 27       	eor	r25, r25
    158c:	aa 27       	eor	r26, r26
    158e:	bb 27       	eor	r27, r27
    1590:	b8 2e       	mov	r11, r24
    1592:	21 15       	cp	r18, r1
    1594:	31 05       	cpc	r19, r1
    1596:	41 05       	cpc	r20, r1
    1598:	51 05       	cpc	r21, r1
    159a:	19 f4       	brne	.+6      	; 0x15a2 <__floatsisf+0x36>
    159c:	82 e0       	ldi	r24, 0x02	; 2
    159e:	89 83       	std	Y+1, r24	; 0x01
    15a0:	3a c0       	rjmp	.+116    	; 0x1616 <__floatsisf+0xaa>
    15a2:	88 23       	and	r24, r24
    15a4:	a9 f0       	breq	.+42     	; 0x15d0 <__floatsisf+0x64>
    15a6:	20 30       	cpi	r18, 0x00	; 0
    15a8:	80 e0       	ldi	r24, 0x00	; 0
    15aa:	38 07       	cpc	r19, r24
    15ac:	80 e0       	ldi	r24, 0x00	; 0
    15ae:	48 07       	cpc	r20, r24
    15b0:	80 e8       	ldi	r24, 0x80	; 128
    15b2:	58 07       	cpc	r21, r24
    15b4:	29 f4       	brne	.+10     	; 0x15c0 <__floatsisf+0x54>
    15b6:	60 e0       	ldi	r22, 0x00	; 0
    15b8:	70 e0       	ldi	r23, 0x00	; 0
    15ba:	80 e0       	ldi	r24, 0x00	; 0
    15bc:	9f ec       	ldi	r25, 0xCF	; 207
    15be:	30 c0       	rjmp	.+96     	; 0x1620 <__floatsisf+0xb4>
    15c0:	ee 24       	eor	r14, r14
    15c2:	ff 24       	eor	r15, r15
    15c4:	87 01       	movw	r16, r14
    15c6:	e2 1a       	sub	r14, r18
    15c8:	f3 0a       	sbc	r15, r19
    15ca:	04 0b       	sbc	r16, r20
    15cc:	15 0b       	sbc	r17, r21
    15ce:	02 c0       	rjmp	.+4      	; 0x15d4 <__floatsisf+0x68>
    15d0:	79 01       	movw	r14, r18
    15d2:	8a 01       	movw	r16, r20
    15d4:	8e e1       	ldi	r24, 0x1E	; 30
    15d6:	c8 2e       	mov	r12, r24
    15d8:	d1 2c       	mov	r13, r1
    15da:	dc 82       	std	Y+4, r13	; 0x04
    15dc:	cb 82       	std	Y+3, r12	; 0x03
    15de:	ed 82       	std	Y+5, r14	; 0x05
    15e0:	fe 82       	std	Y+6, r15	; 0x06
    15e2:	0f 83       	std	Y+7, r16	; 0x07
    15e4:	18 87       	std	Y+8, r17	; 0x08
    15e6:	c8 01       	movw	r24, r16
    15e8:	b7 01       	movw	r22, r14
    15ea:	0e 94 68 0b 	call	0x16d0	; 0x16d0 <__clzsi2>
    15ee:	01 97       	sbiw	r24, 0x01	; 1
    15f0:	18 16       	cp	r1, r24
    15f2:	19 06       	cpc	r1, r25
    15f4:	84 f4       	brge	.+32     	; 0x1616 <__floatsisf+0xaa>
    15f6:	08 2e       	mov	r0, r24
    15f8:	04 c0       	rjmp	.+8      	; 0x1602 <__floatsisf+0x96>
    15fa:	ee 0c       	add	r14, r14
    15fc:	ff 1c       	adc	r15, r15
    15fe:	00 1f       	adc	r16, r16
    1600:	11 1f       	adc	r17, r17
    1602:	0a 94       	dec	r0
    1604:	d2 f7       	brpl	.-12     	; 0x15fa <__floatsisf+0x8e>
    1606:	ed 82       	std	Y+5, r14	; 0x05
    1608:	fe 82       	std	Y+6, r15	; 0x06
    160a:	0f 83       	std	Y+7, r16	; 0x07
    160c:	18 87       	std	Y+8, r17	; 0x08
    160e:	c8 1a       	sub	r12, r24
    1610:	d9 0a       	sbc	r13, r25
    1612:	dc 82       	std	Y+4, r13	; 0x04
    1614:	cb 82       	std	Y+3, r12	; 0x03
    1616:	ba 82       	std	Y+2, r11	; 0x02
    1618:	ce 01       	movw	r24, r28
    161a:	01 96       	adiw	r24, 0x01	; 1
    161c:	0e 94 b7 0b 	call	0x176e	; 0x176e <__pack_f>
    1620:	28 96       	adiw	r28, 0x08	; 8
    1622:	e9 e0       	ldi	r30, 0x09	; 9
    1624:	0c 94 a1 0d 	jmp	0x1b42	; 0x1b42 <__epilogue_restores__+0x12>

00001628 <__fixsfsi>:
    1628:	ac e0       	ldi	r26, 0x0C	; 12
    162a:	b0 e0       	ldi	r27, 0x00	; 0
    162c:	ea e1       	ldi	r30, 0x1A	; 26
    162e:	fb e0       	ldi	r31, 0x0B	; 11
    1630:	0c 94 8c 0d 	jmp	0x1b18	; 0x1b18 <__prologue_saves__+0x20>
    1634:	69 83       	std	Y+1, r22	; 0x01
    1636:	7a 83       	std	Y+2, r23	; 0x02
    1638:	8b 83       	std	Y+3, r24	; 0x03
    163a:	9c 83       	std	Y+4, r25	; 0x04
    163c:	ce 01       	movw	r24, r28
    163e:	01 96       	adiw	r24, 0x01	; 1
    1640:	be 01       	movw	r22, r28
    1642:	6b 5f       	subi	r22, 0xFB	; 251
    1644:	7f 4f       	sbci	r23, 0xFF	; 255
    1646:	0e 94 8c 0c 	call	0x1918	; 0x1918 <__unpack_f>
    164a:	8d 81       	ldd	r24, Y+5	; 0x05
    164c:	82 30       	cpi	r24, 0x02	; 2
    164e:	61 f1       	breq	.+88     	; 0x16a8 <__fixsfsi+0x80>
    1650:	82 30       	cpi	r24, 0x02	; 2
    1652:	50 f1       	brcs	.+84     	; 0x16a8 <__fixsfsi+0x80>
    1654:	84 30       	cpi	r24, 0x04	; 4
    1656:	21 f4       	brne	.+8      	; 0x1660 <__fixsfsi+0x38>
    1658:	8e 81       	ldd	r24, Y+6	; 0x06
    165a:	88 23       	and	r24, r24
    165c:	51 f1       	breq	.+84     	; 0x16b2 <__fixsfsi+0x8a>
    165e:	2e c0       	rjmp	.+92     	; 0x16bc <__fixsfsi+0x94>
    1660:	2f 81       	ldd	r18, Y+7	; 0x07
    1662:	38 85       	ldd	r19, Y+8	; 0x08
    1664:	37 fd       	sbrc	r19, 7
    1666:	20 c0       	rjmp	.+64     	; 0x16a8 <__fixsfsi+0x80>
    1668:	6e 81       	ldd	r22, Y+6	; 0x06
    166a:	2f 31       	cpi	r18, 0x1F	; 31
    166c:	31 05       	cpc	r19, r1
    166e:	1c f0       	brlt	.+6      	; 0x1676 <__fixsfsi+0x4e>
    1670:	66 23       	and	r22, r22
    1672:	f9 f0       	breq	.+62     	; 0x16b2 <__fixsfsi+0x8a>
    1674:	23 c0       	rjmp	.+70     	; 0x16bc <__fixsfsi+0x94>
    1676:	8e e1       	ldi	r24, 0x1E	; 30
    1678:	90 e0       	ldi	r25, 0x00	; 0
    167a:	82 1b       	sub	r24, r18
    167c:	93 0b       	sbc	r25, r19
    167e:	29 85       	ldd	r18, Y+9	; 0x09
    1680:	3a 85       	ldd	r19, Y+10	; 0x0a
    1682:	4b 85       	ldd	r20, Y+11	; 0x0b
    1684:	5c 85       	ldd	r21, Y+12	; 0x0c
    1686:	04 c0       	rjmp	.+8      	; 0x1690 <__fixsfsi+0x68>
    1688:	56 95       	lsr	r21
    168a:	47 95       	ror	r20
    168c:	37 95       	ror	r19
    168e:	27 95       	ror	r18
    1690:	8a 95       	dec	r24
    1692:	d2 f7       	brpl	.-12     	; 0x1688 <__fixsfsi+0x60>
    1694:	66 23       	and	r22, r22
    1696:	b1 f0       	breq	.+44     	; 0x16c4 <__fixsfsi+0x9c>
    1698:	50 95       	com	r21
    169a:	40 95       	com	r20
    169c:	30 95       	com	r19
    169e:	21 95       	neg	r18
    16a0:	3f 4f       	sbci	r19, 0xFF	; 255
    16a2:	4f 4f       	sbci	r20, 0xFF	; 255
    16a4:	5f 4f       	sbci	r21, 0xFF	; 255
    16a6:	0e c0       	rjmp	.+28     	; 0x16c4 <__fixsfsi+0x9c>
    16a8:	20 e0       	ldi	r18, 0x00	; 0
    16aa:	30 e0       	ldi	r19, 0x00	; 0
    16ac:	40 e0       	ldi	r20, 0x00	; 0
    16ae:	50 e0       	ldi	r21, 0x00	; 0
    16b0:	09 c0       	rjmp	.+18     	; 0x16c4 <__fixsfsi+0x9c>
    16b2:	2f ef       	ldi	r18, 0xFF	; 255
    16b4:	3f ef       	ldi	r19, 0xFF	; 255
    16b6:	4f ef       	ldi	r20, 0xFF	; 255
    16b8:	5f e7       	ldi	r21, 0x7F	; 127
    16ba:	04 c0       	rjmp	.+8      	; 0x16c4 <__fixsfsi+0x9c>
    16bc:	20 e0       	ldi	r18, 0x00	; 0
    16be:	30 e0       	ldi	r19, 0x00	; 0
    16c0:	40 e0       	ldi	r20, 0x00	; 0
    16c2:	50 e8       	ldi	r21, 0x80	; 128
    16c4:	b9 01       	movw	r22, r18
    16c6:	ca 01       	movw	r24, r20
    16c8:	2c 96       	adiw	r28, 0x0c	; 12
    16ca:	e2 e0       	ldi	r30, 0x02	; 2
    16cc:	0c 94 a8 0d 	jmp	0x1b50	; 0x1b50 <__epilogue_restores__+0x20>

000016d0 <__clzsi2>:
    16d0:	ef 92       	push	r14
    16d2:	ff 92       	push	r15
    16d4:	0f 93       	push	r16
    16d6:	1f 93       	push	r17
    16d8:	7b 01       	movw	r14, r22
    16da:	8c 01       	movw	r16, r24
    16dc:	80 e0       	ldi	r24, 0x00	; 0
    16de:	e8 16       	cp	r14, r24
    16e0:	80 e0       	ldi	r24, 0x00	; 0
    16e2:	f8 06       	cpc	r15, r24
    16e4:	81 e0       	ldi	r24, 0x01	; 1
    16e6:	08 07       	cpc	r16, r24
    16e8:	80 e0       	ldi	r24, 0x00	; 0
    16ea:	18 07       	cpc	r17, r24
    16ec:	88 f4       	brcc	.+34     	; 0x1710 <__clzsi2+0x40>
    16ee:	8f ef       	ldi	r24, 0xFF	; 255
    16f0:	e8 16       	cp	r14, r24
    16f2:	f1 04       	cpc	r15, r1
    16f4:	01 05       	cpc	r16, r1
    16f6:	11 05       	cpc	r17, r1
    16f8:	31 f0       	breq	.+12     	; 0x1706 <__clzsi2+0x36>
    16fa:	28 f0       	brcs	.+10     	; 0x1706 <__clzsi2+0x36>
    16fc:	88 e0       	ldi	r24, 0x08	; 8
    16fe:	90 e0       	ldi	r25, 0x00	; 0
    1700:	a0 e0       	ldi	r26, 0x00	; 0
    1702:	b0 e0       	ldi	r27, 0x00	; 0
    1704:	17 c0       	rjmp	.+46     	; 0x1734 <__clzsi2+0x64>
    1706:	80 e0       	ldi	r24, 0x00	; 0
    1708:	90 e0       	ldi	r25, 0x00	; 0
    170a:	a0 e0       	ldi	r26, 0x00	; 0
    170c:	b0 e0       	ldi	r27, 0x00	; 0
    170e:	12 c0       	rjmp	.+36     	; 0x1734 <__clzsi2+0x64>
    1710:	80 e0       	ldi	r24, 0x00	; 0
    1712:	e8 16       	cp	r14, r24
    1714:	80 e0       	ldi	r24, 0x00	; 0
    1716:	f8 06       	cpc	r15, r24
    1718:	80 e0       	ldi	r24, 0x00	; 0
    171a:	08 07       	cpc	r16, r24
    171c:	81 e0       	ldi	r24, 0x01	; 1
    171e:	18 07       	cpc	r17, r24
    1720:	28 f0       	brcs	.+10     	; 0x172c <__clzsi2+0x5c>
    1722:	88 e1       	ldi	r24, 0x18	; 24
    1724:	90 e0       	ldi	r25, 0x00	; 0
    1726:	a0 e0       	ldi	r26, 0x00	; 0
    1728:	b0 e0       	ldi	r27, 0x00	; 0
    172a:	04 c0       	rjmp	.+8      	; 0x1734 <__clzsi2+0x64>
    172c:	80 e1       	ldi	r24, 0x10	; 16
    172e:	90 e0       	ldi	r25, 0x00	; 0
    1730:	a0 e0       	ldi	r26, 0x00	; 0
    1732:	b0 e0       	ldi	r27, 0x00	; 0
    1734:	20 e2       	ldi	r18, 0x20	; 32
    1736:	30 e0       	ldi	r19, 0x00	; 0
    1738:	40 e0       	ldi	r20, 0x00	; 0
    173a:	50 e0       	ldi	r21, 0x00	; 0
    173c:	28 1b       	sub	r18, r24
    173e:	39 0b       	sbc	r19, r25
    1740:	4a 0b       	sbc	r20, r26
    1742:	5b 0b       	sbc	r21, r27
    1744:	04 c0       	rjmp	.+8      	; 0x174e <__clzsi2+0x7e>
    1746:	16 95       	lsr	r17
    1748:	07 95       	ror	r16
    174a:	f7 94       	ror	r15
    174c:	e7 94       	ror	r14
    174e:	8a 95       	dec	r24
    1750:	d2 f7       	brpl	.-12     	; 0x1746 <__clzsi2+0x76>
    1752:	f7 01       	movw	r30, r14
    1754:	e8 5f       	subi	r30, 0xF8	; 248
    1756:	fe 4f       	sbci	r31, 0xFE	; 254
    1758:	80 81       	ld	r24, Z
    175a:	28 1b       	sub	r18, r24
    175c:	31 09       	sbc	r19, r1
    175e:	41 09       	sbc	r20, r1
    1760:	51 09       	sbc	r21, r1
    1762:	c9 01       	movw	r24, r18
    1764:	1f 91       	pop	r17
    1766:	0f 91       	pop	r16
    1768:	ff 90       	pop	r15
    176a:	ef 90       	pop	r14
    176c:	08 95       	ret

0000176e <__pack_f>:
    176e:	df 92       	push	r13
    1770:	ef 92       	push	r14
    1772:	ff 92       	push	r15
    1774:	0f 93       	push	r16
    1776:	1f 93       	push	r17
    1778:	fc 01       	movw	r30, r24
    177a:	e4 80       	ldd	r14, Z+4	; 0x04
    177c:	f5 80       	ldd	r15, Z+5	; 0x05
    177e:	06 81       	ldd	r16, Z+6	; 0x06
    1780:	17 81       	ldd	r17, Z+7	; 0x07
    1782:	d1 80       	ldd	r13, Z+1	; 0x01
    1784:	80 81       	ld	r24, Z
    1786:	82 30       	cpi	r24, 0x02	; 2
    1788:	48 f4       	brcc	.+18     	; 0x179c <__pack_f+0x2e>
    178a:	80 e0       	ldi	r24, 0x00	; 0
    178c:	90 e0       	ldi	r25, 0x00	; 0
    178e:	a0 e1       	ldi	r26, 0x10	; 16
    1790:	b0 e0       	ldi	r27, 0x00	; 0
    1792:	e8 2a       	or	r14, r24
    1794:	f9 2a       	or	r15, r25
    1796:	0a 2b       	or	r16, r26
    1798:	1b 2b       	or	r17, r27
    179a:	a5 c0       	rjmp	.+330    	; 0x18e6 <__pack_f+0x178>
    179c:	84 30       	cpi	r24, 0x04	; 4
    179e:	09 f4       	brne	.+2      	; 0x17a2 <__pack_f+0x34>
    17a0:	9f c0       	rjmp	.+318    	; 0x18e0 <__pack_f+0x172>
    17a2:	82 30       	cpi	r24, 0x02	; 2
    17a4:	21 f4       	brne	.+8      	; 0x17ae <__pack_f+0x40>
    17a6:	ee 24       	eor	r14, r14
    17a8:	ff 24       	eor	r15, r15
    17aa:	87 01       	movw	r16, r14
    17ac:	05 c0       	rjmp	.+10     	; 0x17b8 <__pack_f+0x4a>
    17ae:	e1 14       	cp	r14, r1
    17b0:	f1 04       	cpc	r15, r1
    17b2:	01 05       	cpc	r16, r1
    17b4:	11 05       	cpc	r17, r1
    17b6:	19 f4       	brne	.+6      	; 0x17be <__pack_f+0x50>
    17b8:	e0 e0       	ldi	r30, 0x00	; 0
    17ba:	f0 e0       	ldi	r31, 0x00	; 0
    17bc:	96 c0       	rjmp	.+300    	; 0x18ea <__pack_f+0x17c>
    17be:	62 81       	ldd	r22, Z+2	; 0x02
    17c0:	73 81       	ldd	r23, Z+3	; 0x03
    17c2:	9f ef       	ldi	r25, 0xFF	; 255
    17c4:	62 38       	cpi	r22, 0x82	; 130
    17c6:	79 07       	cpc	r23, r25
    17c8:	0c f0       	brlt	.+2      	; 0x17cc <__pack_f+0x5e>
    17ca:	5b c0       	rjmp	.+182    	; 0x1882 <__pack_f+0x114>
    17cc:	22 e8       	ldi	r18, 0x82	; 130
    17ce:	3f ef       	ldi	r19, 0xFF	; 255
    17d0:	26 1b       	sub	r18, r22
    17d2:	37 0b       	sbc	r19, r23
    17d4:	2a 31       	cpi	r18, 0x1A	; 26
    17d6:	31 05       	cpc	r19, r1
    17d8:	2c f0       	brlt	.+10     	; 0x17e4 <__pack_f+0x76>
    17da:	20 e0       	ldi	r18, 0x00	; 0
    17dc:	30 e0       	ldi	r19, 0x00	; 0
    17de:	40 e0       	ldi	r20, 0x00	; 0
    17e0:	50 e0       	ldi	r21, 0x00	; 0
    17e2:	2a c0       	rjmp	.+84     	; 0x1838 <__pack_f+0xca>
    17e4:	b8 01       	movw	r22, r16
    17e6:	a7 01       	movw	r20, r14
    17e8:	02 2e       	mov	r0, r18
    17ea:	04 c0       	rjmp	.+8      	; 0x17f4 <__pack_f+0x86>
    17ec:	76 95       	lsr	r23
    17ee:	67 95       	ror	r22
    17f0:	57 95       	ror	r21
    17f2:	47 95       	ror	r20
    17f4:	0a 94       	dec	r0
    17f6:	d2 f7       	brpl	.-12     	; 0x17ec <__pack_f+0x7e>
    17f8:	81 e0       	ldi	r24, 0x01	; 1
    17fa:	90 e0       	ldi	r25, 0x00	; 0
    17fc:	a0 e0       	ldi	r26, 0x00	; 0
    17fe:	b0 e0       	ldi	r27, 0x00	; 0
    1800:	04 c0       	rjmp	.+8      	; 0x180a <__pack_f+0x9c>
    1802:	88 0f       	add	r24, r24
    1804:	99 1f       	adc	r25, r25
    1806:	aa 1f       	adc	r26, r26
    1808:	bb 1f       	adc	r27, r27
    180a:	2a 95       	dec	r18
    180c:	d2 f7       	brpl	.-12     	; 0x1802 <__pack_f+0x94>
    180e:	01 97       	sbiw	r24, 0x01	; 1
    1810:	a1 09       	sbc	r26, r1
    1812:	b1 09       	sbc	r27, r1
    1814:	8e 21       	and	r24, r14
    1816:	9f 21       	and	r25, r15
    1818:	a0 23       	and	r26, r16
    181a:	b1 23       	and	r27, r17
    181c:	00 97       	sbiw	r24, 0x00	; 0
    181e:	a1 05       	cpc	r26, r1
    1820:	b1 05       	cpc	r27, r1
    1822:	21 f0       	breq	.+8      	; 0x182c <__pack_f+0xbe>
    1824:	81 e0       	ldi	r24, 0x01	; 1
    1826:	90 e0       	ldi	r25, 0x00	; 0
    1828:	a0 e0       	ldi	r26, 0x00	; 0
    182a:	b0 e0       	ldi	r27, 0x00	; 0
    182c:	9a 01       	movw	r18, r20
    182e:	ab 01       	movw	r20, r22
    1830:	28 2b       	or	r18, r24
    1832:	39 2b       	or	r19, r25
    1834:	4a 2b       	or	r20, r26
    1836:	5b 2b       	or	r21, r27
    1838:	da 01       	movw	r26, r20
    183a:	c9 01       	movw	r24, r18
    183c:	8f 77       	andi	r24, 0x7F	; 127
    183e:	90 70       	andi	r25, 0x00	; 0
    1840:	a0 70       	andi	r26, 0x00	; 0
    1842:	b0 70       	andi	r27, 0x00	; 0
    1844:	80 34       	cpi	r24, 0x40	; 64
    1846:	91 05       	cpc	r25, r1
    1848:	a1 05       	cpc	r26, r1
    184a:	b1 05       	cpc	r27, r1
    184c:	39 f4       	brne	.+14     	; 0x185c <__pack_f+0xee>
    184e:	27 ff       	sbrs	r18, 7
    1850:	09 c0       	rjmp	.+18     	; 0x1864 <__pack_f+0xf6>
    1852:	20 5c       	subi	r18, 0xC0	; 192
    1854:	3f 4f       	sbci	r19, 0xFF	; 255
    1856:	4f 4f       	sbci	r20, 0xFF	; 255
    1858:	5f 4f       	sbci	r21, 0xFF	; 255
    185a:	04 c0       	rjmp	.+8      	; 0x1864 <__pack_f+0xf6>
    185c:	21 5c       	subi	r18, 0xC1	; 193
    185e:	3f 4f       	sbci	r19, 0xFF	; 255
    1860:	4f 4f       	sbci	r20, 0xFF	; 255
    1862:	5f 4f       	sbci	r21, 0xFF	; 255
    1864:	e0 e0       	ldi	r30, 0x00	; 0
    1866:	f0 e0       	ldi	r31, 0x00	; 0
    1868:	20 30       	cpi	r18, 0x00	; 0
    186a:	a0 e0       	ldi	r26, 0x00	; 0
    186c:	3a 07       	cpc	r19, r26
    186e:	a0 e0       	ldi	r26, 0x00	; 0
    1870:	4a 07       	cpc	r20, r26
    1872:	a0 e4       	ldi	r26, 0x40	; 64
    1874:	5a 07       	cpc	r21, r26
    1876:	10 f0       	brcs	.+4      	; 0x187c <__pack_f+0x10e>
    1878:	e1 e0       	ldi	r30, 0x01	; 1
    187a:	f0 e0       	ldi	r31, 0x00	; 0
    187c:	79 01       	movw	r14, r18
    187e:	8a 01       	movw	r16, r20
    1880:	27 c0       	rjmp	.+78     	; 0x18d0 <__pack_f+0x162>
    1882:	60 38       	cpi	r22, 0x80	; 128
    1884:	71 05       	cpc	r23, r1
    1886:	64 f5       	brge	.+88     	; 0x18e0 <__pack_f+0x172>
    1888:	fb 01       	movw	r30, r22
    188a:	e1 58       	subi	r30, 0x81	; 129
    188c:	ff 4f       	sbci	r31, 0xFF	; 255
    188e:	d8 01       	movw	r26, r16
    1890:	c7 01       	movw	r24, r14
    1892:	8f 77       	andi	r24, 0x7F	; 127
    1894:	90 70       	andi	r25, 0x00	; 0
    1896:	a0 70       	andi	r26, 0x00	; 0
    1898:	b0 70       	andi	r27, 0x00	; 0
    189a:	80 34       	cpi	r24, 0x40	; 64
    189c:	91 05       	cpc	r25, r1
    189e:	a1 05       	cpc	r26, r1
    18a0:	b1 05       	cpc	r27, r1
    18a2:	39 f4       	brne	.+14     	; 0x18b2 <__pack_f+0x144>
    18a4:	e7 fe       	sbrs	r14, 7
    18a6:	0d c0       	rjmp	.+26     	; 0x18c2 <__pack_f+0x154>
    18a8:	80 e4       	ldi	r24, 0x40	; 64
    18aa:	90 e0       	ldi	r25, 0x00	; 0
    18ac:	a0 e0       	ldi	r26, 0x00	; 0
    18ae:	b0 e0       	ldi	r27, 0x00	; 0
    18b0:	04 c0       	rjmp	.+8      	; 0x18ba <__pack_f+0x14c>
    18b2:	8f e3       	ldi	r24, 0x3F	; 63
    18b4:	90 e0       	ldi	r25, 0x00	; 0
    18b6:	a0 e0       	ldi	r26, 0x00	; 0
    18b8:	b0 e0       	ldi	r27, 0x00	; 0
    18ba:	e8 0e       	add	r14, r24
    18bc:	f9 1e       	adc	r15, r25
    18be:	0a 1f       	adc	r16, r26
    18c0:	1b 1f       	adc	r17, r27
    18c2:	17 ff       	sbrs	r17, 7
    18c4:	05 c0       	rjmp	.+10     	; 0x18d0 <__pack_f+0x162>
    18c6:	16 95       	lsr	r17
    18c8:	07 95       	ror	r16
    18ca:	f7 94       	ror	r15
    18cc:	e7 94       	ror	r14
    18ce:	31 96       	adiw	r30, 0x01	; 1
    18d0:	87 e0       	ldi	r24, 0x07	; 7
    18d2:	16 95       	lsr	r17
    18d4:	07 95       	ror	r16
    18d6:	f7 94       	ror	r15
    18d8:	e7 94       	ror	r14
    18da:	8a 95       	dec	r24
    18dc:	d1 f7       	brne	.-12     	; 0x18d2 <__pack_f+0x164>
    18de:	05 c0       	rjmp	.+10     	; 0x18ea <__pack_f+0x17c>
    18e0:	ee 24       	eor	r14, r14
    18e2:	ff 24       	eor	r15, r15
    18e4:	87 01       	movw	r16, r14
    18e6:	ef ef       	ldi	r30, 0xFF	; 255
    18e8:	f0 e0       	ldi	r31, 0x00	; 0
    18ea:	6e 2f       	mov	r22, r30
    18ec:	67 95       	ror	r22
    18ee:	66 27       	eor	r22, r22
    18f0:	67 95       	ror	r22
    18f2:	90 2f       	mov	r25, r16
    18f4:	9f 77       	andi	r25, 0x7F	; 127
    18f6:	d7 94       	ror	r13
    18f8:	dd 24       	eor	r13, r13
    18fa:	d7 94       	ror	r13
    18fc:	8e 2f       	mov	r24, r30
    18fe:	86 95       	lsr	r24
    1900:	49 2f       	mov	r20, r25
    1902:	46 2b       	or	r20, r22
    1904:	58 2f       	mov	r21, r24
    1906:	5d 29       	or	r21, r13
    1908:	b7 01       	movw	r22, r14
    190a:	ca 01       	movw	r24, r20
    190c:	1f 91       	pop	r17
    190e:	0f 91       	pop	r16
    1910:	ff 90       	pop	r15
    1912:	ef 90       	pop	r14
    1914:	df 90       	pop	r13
    1916:	08 95       	ret

00001918 <__unpack_f>:
    1918:	fc 01       	movw	r30, r24
    191a:	db 01       	movw	r26, r22
    191c:	40 81       	ld	r20, Z
    191e:	51 81       	ldd	r21, Z+1	; 0x01
    1920:	22 81       	ldd	r18, Z+2	; 0x02
    1922:	62 2f       	mov	r22, r18
    1924:	6f 77       	andi	r22, 0x7F	; 127
    1926:	70 e0       	ldi	r23, 0x00	; 0
    1928:	22 1f       	adc	r18, r18
    192a:	22 27       	eor	r18, r18
    192c:	22 1f       	adc	r18, r18
    192e:	93 81       	ldd	r25, Z+3	; 0x03
    1930:	89 2f       	mov	r24, r25
    1932:	88 0f       	add	r24, r24
    1934:	82 2b       	or	r24, r18
    1936:	28 2f       	mov	r18, r24
    1938:	30 e0       	ldi	r19, 0x00	; 0
    193a:	99 1f       	adc	r25, r25
    193c:	99 27       	eor	r25, r25
    193e:	99 1f       	adc	r25, r25
    1940:	11 96       	adiw	r26, 0x01	; 1
    1942:	9c 93       	st	X, r25
    1944:	11 97       	sbiw	r26, 0x01	; 1
    1946:	21 15       	cp	r18, r1
    1948:	31 05       	cpc	r19, r1
    194a:	a9 f5       	brne	.+106    	; 0x19b6 <__unpack_f+0x9e>
    194c:	41 15       	cp	r20, r1
    194e:	51 05       	cpc	r21, r1
    1950:	61 05       	cpc	r22, r1
    1952:	71 05       	cpc	r23, r1
    1954:	11 f4       	brne	.+4      	; 0x195a <__unpack_f+0x42>
    1956:	82 e0       	ldi	r24, 0x02	; 2
    1958:	37 c0       	rjmp	.+110    	; 0x19c8 <__unpack_f+0xb0>
    195a:	82 e8       	ldi	r24, 0x82	; 130
    195c:	9f ef       	ldi	r25, 0xFF	; 255
    195e:	13 96       	adiw	r26, 0x03	; 3
    1960:	9c 93       	st	X, r25
    1962:	8e 93       	st	-X, r24
    1964:	12 97       	sbiw	r26, 0x02	; 2
    1966:	9a 01       	movw	r18, r20
    1968:	ab 01       	movw	r20, r22
    196a:	67 e0       	ldi	r22, 0x07	; 7
    196c:	22 0f       	add	r18, r18
    196e:	33 1f       	adc	r19, r19
    1970:	44 1f       	adc	r20, r20
    1972:	55 1f       	adc	r21, r21
    1974:	6a 95       	dec	r22
    1976:	d1 f7       	brne	.-12     	; 0x196c <__unpack_f+0x54>
    1978:	83 e0       	ldi	r24, 0x03	; 3
    197a:	8c 93       	st	X, r24
    197c:	0d c0       	rjmp	.+26     	; 0x1998 <__unpack_f+0x80>
    197e:	22 0f       	add	r18, r18
    1980:	33 1f       	adc	r19, r19
    1982:	44 1f       	adc	r20, r20
    1984:	55 1f       	adc	r21, r21
    1986:	12 96       	adiw	r26, 0x02	; 2
    1988:	8d 91       	ld	r24, X+
    198a:	9c 91       	ld	r25, X
    198c:	13 97       	sbiw	r26, 0x03	; 3
    198e:	01 97       	sbiw	r24, 0x01	; 1
    1990:	13 96       	adiw	r26, 0x03	; 3
    1992:	9c 93       	st	X, r25
    1994:	8e 93       	st	-X, r24
    1996:	12 97       	sbiw	r26, 0x02	; 2
    1998:	20 30       	cpi	r18, 0x00	; 0
    199a:	80 e0       	ldi	r24, 0x00	; 0
    199c:	38 07       	cpc	r19, r24
    199e:	80 e0       	ldi	r24, 0x00	; 0
    19a0:	48 07       	cpc	r20, r24
    19a2:	80 e4       	ldi	r24, 0x40	; 64
    19a4:	58 07       	cpc	r21, r24
    19a6:	58 f3       	brcs	.-42     	; 0x197e <__unpack_f+0x66>
    19a8:	14 96       	adiw	r26, 0x04	; 4
    19aa:	2d 93       	st	X+, r18
    19ac:	3d 93       	st	X+, r19
    19ae:	4d 93       	st	X+, r20
    19b0:	5c 93       	st	X, r21
    19b2:	17 97       	sbiw	r26, 0x07	; 7
    19b4:	08 95       	ret
    19b6:	2f 3f       	cpi	r18, 0xFF	; 255
    19b8:	31 05       	cpc	r19, r1
    19ba:	79 f4       	brne	.+30     	; 0x19da <__unpack_f+0xc2>
    19bc:	41 15       	cp	r20, r1
    19be:	51 05       	cpc	r21, r1
    19c0:	61 05       	cpc	r22, r1
    19c2:	71 05       	cpc	r23, r1
    19c4:	19 f4       	brne	.+6      	; 0x19cc <__unpack_f+0xb4>
    19c6:	84 e0       	ldi	r24, 0x04	; 4
    19c8:	8c 93       	st	X, r24
    19ca:	08 95       	ret
    19cc:	64 ff       	sbrs	r22, 4
    19ce:	03 c0       	rjmp	.+6      	; 0x19d6 <__unpack_f+0xbe>
    19d0:	81 e0       	ldi	r24, 0x01	; 1
    19d2:	8c 93       	st	X, r24
    19d4:	12 c0       	rjmp	.+36     	; 0x19fa <__unpack_f+0xe2>
    19d6:	1c 92       	st	X, r1
    19d8:	10 c0       	rjmp	.+32     	; 0x19fa <__unpack_f+0xe2>
    19da:	2f 57       	subi	r18, 0x7F	; 127
    19dc:	30 40       	sbci	r19, 0x00	; 0
    19de:	13 96       	adiw	r26, 0x03	; 3
    19e0:	3c 93       	st	X, r19
    19e2:	2e 93       	st	-X, r18
    19e4:	12 97       	sbiw	r26, 0x02	; 2
    19e6:	83 e0       	ldi	r24, 0x03	; 3
    19e8:	8c 93       	st	X, r24
    19ea:	87 e0       	ldi	r24, 0x07	; 7
    19ec:	44 0f       	add	r20, r20
    19ee:	55 1f       	adc	r21, r21
    19f0:	66 1f       	adc	r22, r22
    19f2:	77 1f       	adc	r23, r23
    19f4:	8a 95       	dec	r24
    19f6:	d1 f7       	brne	.-12     	; 0x19ec <__unpack_f+0xd4>
    19f8:	70 64       	ori	r23, 0x40	; 64
    19fa:	14 96       	adiw	r26, 0x04	; 4
    19fc:	4d 93       	st	X+, r20
    19fe:	5d 93       	st	X+, r21
    1a00:	6d 93       	st	X+, r22
    1a02:	7c 93       	st	X, r23
    1a04:	17 97       	sbiw	r26, 0x07	; 7
    1a06:	08 95       	ret

00001a08 <__fpcmp_parts_f>:
    1a08:	1f 93       	push	r17
    1a0a:	dc 01       	movw	r26, r24
    1a0c:	fb 01       	movw	r30, r22
    1a0e:	9c 91       	ld	r25, X
    1a10:	92 30       	cpi	r25, 0x02	; 2
    1a12:	08 f4       	brcc	.+2      	; 0x1a16 <__fpcmp_parts_f+0xe>
    1a14:	47 c0       	rjmp	.+142    	; 0x1aa4 <__fpcmp_parts_f+0x9c>
    1a16:	80 81       	ld	r24, Z
    1a18:	82 30       	cpi	r24, 0x02	; 2
    1a1a:	08 f4       	brcc	.+2      	; 0x1a1e <__fpcmp_parts_f+0x16>
    1a1c:	43 c0       	rjmp	.+134    	; 0x1aa4 <__fpcmp_parts_f+0x9c>
    1a1e:	94 30       	cpi	r25, 0x04	; 4
    1a20:	51 f4       	brne	.+20     	; 0x1a36 <__fpcmp_parts_f+0x2e>
    1a22:	11 96       	adiw	r26, 0x01	; 1
    1a24:	1c 91       	ld	r17, X
    1a26:	84 30       	cpi	r24, 0x04	; 4
    1a28:	99 f5       	brne	.+102    	; 0x1a90 <__fpcmp_parts_f+0x88>
    1a2a:	81 81       	ldd	r24, Z+1	; 0x01
    1a2c:	68 2f       	mov	r22, r24
    1a2e:	70 e0       	ldi	r23, 0x00	; 0
    1a30:	61 1b       	sub	r22, r17
    1a32:	71 09       	sbc	r23, r1
    1a34:	3f c0       	rjmp	.+126    	; 0x1ab4 <__fpcmp_parts_f+0xac>
    1a36:	84 30       	cpi	r24, 0x04	; 4
    1a38:	21 f0       	breq	.+8      	; 0x1a42 <__fpcmp_parts_f+0x3a>
    1a3a:	92 30       	cpi	r25, 0x02	; 2
    1a3c:	31 f4       	brne	.+12     	; 0x1a4a <__fpcmp_parts_f+0x42>
    1a3e:	82 30       	cpi	r24, 0x02	; 2
    1a40:	b9 f1       	breq	.+110    	; 0x1ab0 <__fpcmp_parts_f+0xa8>
    1a42:	81 81       	ldd	r24, Z+1	; 0x01
    1a44:	88 23       	and	r24, r24
    1a46:	89 f1       	breq	.+98     	; 0x1aaa <__fpcmp_parts_f+0xa2>
    1a48:	2d c0       	rjmp	.+90     	; 0x1aa4 <__fpcmp_parts_f+0x9c>
    1a4a:	11 96       	adiw	r26, 0x01	; 1
    1a4c:	1c 91       	ld	r17, X
    1a4e:	11 97       	sbiw	r26, 0x01	; 1
    1a50:	82 30       	cpi	r24, 0x02	; 2
    1a52:	f1 f0       	breq	.+60     	; 0x1a90 <__fpcmp_parts_f+0x88>
    1a54:	81 81       	ldd	r24, Z+1	; 0x01
    1a56:	18 17       	cp	r17, r24
    1a58:	d9 f4       	brne	.+54     	; 0x1a90 <__fpcmp_parts_f+0x88>
    1a5a:	12 96       	adiw	r26, 0x02	; 2
    1a5c:	2d 91       	ld	r18, X+
    1a5e:	3c 91       	ld	r19, X
    1a60:	13 97       	sbiw	r26, 0x03	; 3
    1a62:	82 81       	ldd	r24, Z+2	; 0x02
    1a64:	93 81       	ldd	r25, Z+3	; 0x03
    1a66:	82 17       	cp	r24, r18
    1a68:	93 07       	cpc	r25, r19
    1a6a:	94 f0       	brlt	.+36     	; 0x1a90 <__fpcmp_parts_f+0x88>
    1a6c:	28 17       	cp	r18, r24
    1a6e:	39 07       	cpc	r19, r25
    1a70:	bc f0       	brlt	.+46     	; 0x1aa0 <__fpcmp_parts_f+0x98>
    1a72:	14 96       	adiw	r26, 0x04	; 4
    1a74:	8d 91       	ld	r24, X+
    1a76:	9d 91       	ld	r25, X+
    1a78:	0d 90       	ld	r0, X+
    1a7a:	bc 91       	ld	r27, X
    1a7c:	a0 2d       	mov	r26, r0
    1a7e:	24 81       	ldd	r18, Z+4	; 0x04
    1a80:	35 81       	ldd	r19, Z+5	; 0x05
    1a82:	46 81       	ldd	r20, Z+6	; 0x06
    1a84:	57 81       	ldd	r21, Z+7	; 0x07
    1a86:	28 17       	cp	r18, r24
    1a88:	39 07       	cpc	r19, r25
    1a8a:	4a 07       	cpc	r20, r26
    1a8c:	5b 07       	cpc	r21, r27
    1a8e:	18 f4       	brcc	.+6      	; 0x1a96 <__fpcmp_parts_f+0x8e>
    1a90:	11 23       	and	r17, r17
    1a92:	41 f0       	breq	.+16     	; 0x1aa4 <__fpcmp_parts_f+0x9c>
    1a94:	0a c0       	rjmp	.+20     	; 0x1aaa <__fpcmp_parts_f+0xa2>
    1a96:	82 17       	cp	r24, r18
    1a98:	93 07       	cpc	r25, r19
    1a9a:	a4 07       	cpc	r26, r20
    1a9c:	b5 07       	cpc	r27, r21
    1a9e:	40 f4       	brcc	.+16     	; 0x1ab0 <__fpcmp_parts_f+0xa8>
    1aa0:	11 23       	and	r17, r17
    1aa2:	19 f0       	breq	.+6      	; 0x1aaa <__fpcmp_parts_f+0xa2>
    1aa4:	61 e0       	ldi	r22, 0x01	; 1
    1aa6:	70 e0       	ldi	r23, 0x00	; 0
    1aa8:	05 c0       	rjmp	.+10     	; 0x1ab4 <__fpcmp_parts_f+0xac>
    1aaa:	6f ef       	ldi	r22, 0xFF	; 255
    1aac:	7f ef       	ldi	r23, 0xFF	; 255
    1aae:	02 c0       	rjmp	.+4      	; 0x1ab4 <__fpcmp_parts_f+0xac>
    1ab0:	60 e0       	ldi	r22, 0x00	; 0
    1ab2:	70 e0       	ldi	r23, 0x00	; 0
    1ab4:	cb 01       	movw	r24, r22
    1ab6:	1f 91       	pop	r17
    1ab8:	08 95       	ret

00001aba <__mulsi3>:
    1aba:	62 9f       	mul	r22, r18
    1abc:	d0 01       	movw	r26, r0
    1abe:	73 9f       	mul	r23, r19
    1ac0:	f0 01       	movw	r30, r0
    1ac2:	82 9f       	mul	r24, r18
    1ac4:	e0 0d       	add	r30, r0
    1ac6:	f1 1d       	adc	r31, r1
    1ac8:	64 9f       	mul	r22, r20
    1aca:	e0 0d       	add	r30, r0
    1acc:	f1 1d       	adc	r31, r1
    1ace:	92 9f       	mul	r25, r18
    1ad0:	f0 0d       	add	r31, r0
    1ad2:	83 9f       	mul	r24, r19
    1ad4:	f0 0d       	add	r31, r0
    1ad6:	74 9f       	mul	r23, r20
    1ad8:	f0 0d       	add	r31, r0
    1ada:	65 9f       	mul	r22, r21
    1adc:	f0 0d       	add	r31, r0
    1ade:	99 27       	eor	r25, r25
    1ae0:	72 9f       	mul	r23, r18
    1ae2:	b0 0d       	add	r27, r0
    1ae4:	e1 1d       	adc	r30, r1
    1ae6:	f9 1f       	adc	r31, r25
    1ae8:	63 9f       	mul	r22, r19
    1aea:	b0 0d       	add	r27, r0
    1aec:	e1 1d       	adc	r30, r1
    1aee:	f9 1f       	adc	r31, r25
    1af0:	bd 01       	movw	r22, r26
    1af2:	cf 01       	movw	r24, r30
    1af4:	11 24       	eor	r1, r1
    1af6:	08 95       	ret

00001af8 <__prologue_saves__>:
    1af8:	2f 92       	push	r2
    1afa:	3f 92       	push	r3
    1afc:	4f 92       	push	r4
    1afe:	5f 92       	push	r5
    1b00:	6f 92       	push	r6
    1b02:	7f 92       	push	r7
    1b04:	8f 92       	push	r8
    1b06:	9f 92       	push	r9
    1b08:	af 92       	push	r10
    1b0a:	bf 92       	push	r11
    1b0c:	cf 92       	push	r12
    1b0e:	df 92       	push	r13
    1b10:	ef 92       	push	r14
    1b12:	ff 92       	push	r15
    1b14:	0f 93       	push	r16
    1b16:	1f 93       	push	r17
    1b18:	cf 93       	push	r28
    1b1a:	df 93       	push	r29
    1b1c:	cd b7       	in	r28, 0x3d	; 61
    1b1e:	de b7       	in	r29, 0x3e	; 62
    1b20:	ca 1b       	sub	r28, r26
    1b22:	db 0b       	sbc	r29, r27
    1b24:	0f b6       	in	r0, 0x3f	; 63
    1b26:	f8 94       	cli
    1b28:	de bf       	out	0x3e, r29	; 62
    1b2a:	0f be       	out	0x3f, r0	; 63
    1b2c:	cd bf       	out	0x3d, r28	; 61
    1b2e:	09 94       	ijmp

00001b30 <__epilogue_restores__>:
    1b30:	2a 88       	ldd	r2, Y+18	; 0x12
    1b32:	39 88       	ldd	r3, Y+17	; 0x11
    1b34:	48 88       	ldd	r4, Y+16	; 0x10
    1b36:	5f 84       	ldd	r5, Y+15	; 0x0f
    1b38:	6e 84       	ldd	r6, Y+14	; 0x0e
    1b3a:	7d 84       	ldd	r7, Y+13	; 0x0d
    1b3c:	8c 84       	ldd	r8, Y+12	; 0x0c
    1b3e:	9b 84       	ldd	r9, Y+11	; 0x0b
    1b40:	aa 84       	ldd	r10, Y+10	; 0x0a
    1b42:	b9 84       	ldd	r11, Y+9	; 0x09
    1b44:	c8 84       	ldd	r12, Y+8	; 0x08
    1b46:	df 80       	ldd	r13, Y+7	; 0x07
    1b48:	ee 80       	ldd	r14, Y+6	; 0x06
    1b4a:	fd 80       	ldd	r15, Y+5	; 0x05
    1b4c:	0c 81       	ldd	r16, Y+4	; 0x04
    1b4e:	1b 81       	ldd	r17, Y+3	; 0x03
    1b50:	aa 81       	ldd	r26, Y+2	; 0x02
    1b52:	b9 81       	ldd	r27, Y+1	; 0x01
    1b54:	ce 0f       	add	r28, r30
    1b56:	d1 1d       	adc	r29, r1
    1b58:	0f b6       	in	r0, 0x3f	; 63
    1b5a:	f8 94       	cli
    1b5c:	de bf       	out	0x3e, r29	; 62
    1b5e:	0f be       	out	0x3f, r0	; 63
    1b60:	cd bf       	out	0x3d, r28	; 61
    1b62:	ed 01       	movw	r28, r26
    1b64:	08 95       	ret

00001b66 <_exit>:
    1b66:	f8 94       	cli

00001b68 <__stop_program>:
    1b68:	ff cf       	rjmp	.-2      	; 0x1b68 <__stop_program>
