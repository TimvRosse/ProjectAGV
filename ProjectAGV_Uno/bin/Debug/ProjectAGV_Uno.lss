
bin\Debug\ProjectAGV_Uno.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000108  00800100  00001640  000016d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001640  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .fuse         00000003  00820000  00820000  000017dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .debug_aranges 000001c0  00000000  00000000  000017df  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000259  00000000  00000000  0000199f  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000285c  00000000  00000000  00001bf8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001507  00000000  00000000  00004454  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000016bc  00000000  00000000  0000595b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000220  00000000  00000000  00007018  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003e7  00000000  00000000  00007238  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000009ce  00000000  00000000  0000761f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  00007fed  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
       8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
       c:	0c 94 8e 01 	jmp	0x31c	; 0x31c <__vector_3>
      10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	12 e0       	ldi	r17, 0x02	; 2
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e0 e4       	ldi	r30, 0x40	; 64
      7c:	f6 e1       	ldi	r31, 0x16	; 22
      7e:	02 c0       	rjmp	.+4      	; 0x84 <.do_copy_data_start>

00000080 <.do_copy_data_loop>:
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0

00000084 <.do_copy_data_start>:
      84:	a8 30       	cpi	r26, 0x08	; 8
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <.do_copy_data_loop>
      8a:	0e 94 2d 04 	call	0x85a	; 0x85a <main>
      8e:	0c 94 1e 0b 	jmp	0x163c	; 0x163c <_exit>

00000092 <__bad_interrupt>:
      92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <init>:
#define IrSen2 PB1 // linker
#define triggerPin PD7
#define echoPin PB2

void init(void)
{
      96:	df 93       	push	r29
      98:	cf 93       	push	r28
      9a:	cd b7       	in	r28, 0x3d	; 61
      9c:	de b7       	in	r29, 0x3e	; 62
    //DDR Reg:
    DDRC |= _BV(motorPin);
      9e:	a7 e2       	ldi	r26, 0x27	; 39
      a0:	b0 e0       	ldi	r27, 0x00	; 0
      a2:	e7 e2       	ldi	r30, 0x27	; 39
      a4:	f0 e0       	ldi	r31, 0x00	; 0
      a6:	80 81       	ld	r24, Z
      a8:	80 61       	ori	r24, 0x10	; 16
      aa:	8c 93       	st	X, r24
    DDRC |= _BV(bochtPin);
      ac:	a7 e2       	ldi	r26, 0x27	; 39
      ae:	b0 e0       	ldi	r27, 0x00	; 0
      b0:	e7 e2       	ldi	r30, 0x27	; 39
      b2:	f0 e0       	ldi	r31, 0x00	; 0
      b4:	80 81       	ld	r24, Z
      b6:	80 62       	ori	r24, 0x20	; 32
      b8:	8c 93       	st	X, r24
    DDRD |= _BV(buzzerPin);
      ba:	aa e2       	ldi	r26, 0x2A	; 42
      bc:	b0 e0       	ldi	r27, 0x00	; 0
      be:	ea e2       	ldi	r30, 0x2A	; 42
      c0:	f0 e0       	ldi	r31, 0x00	; 0
      c2:	80 81       	ld	r24, Z
      c4:	80 64       	ori	r24, 0x40	; 64
      c6:	8c 93       	st	X, r24
    DDRD |= _BV(triggerPin);
      c8:	aa e2       	ldi	r26, 0x2A	; 42
      ca:	b0 e0       	ldi	r27, 0x00	; 0
      cc:	ea e2       	ldi	r30, 0x2A	; 42
      ce:	f0 e0       	ldi	r31, 0x00	; 0
      d0:	80 81       	ld	r24, Z
      d2:	80 68       	ori	r24, 0x80	; 128
      d4:	8c 93       	st	X, r24
    DDRB &= ~_BV(echoPin);
      d6:	a4 e2       	ldi	r26, 0x24	; 36
      d8:	b0 e0       	ldi	r27, 0x00	; 0
      da:	e4 e2       	ldi	r30, 0x24	; 36
      dc:	f0 e0       	ldi	r31, 0x00	; 0
      de:	80 81       	ld	r24, Z
      e0:	8b 7f       	andi	r24, 0xFB	; 251
      e2:	8c 93       	st	X, r24

    //init pins:
    PORTB |= _BV(IrSen1);
      e4:	a5 e2       	ldi	r26, 0x25	; 37
      e6:	b0 e0       	ldi	r27, 0x00	; 0
      e8:	e5 e2       	ldi	r30, 0x25	; 37
      ea:	f0 e0       	ldi	r31, 0x00	; 0
      ec:	80 81       	ld	r24, Z
      ee:	81 60       	ori	r24, 0x01	; 1
      f0:	8c 93       	st	X, r24
    PORTB |= _BV(IrSen2);
      f2:	a5 e2       	ldi	r26, 0x25	; 37
      f4:	b0 e0       	ldi	r27, 0x00	; 0
      f6:	e5 e2       	ldi	r30, 0x25	; 37
      f8:	f0 e0       	ldi	r31, 0x00	; 0
      fa:	80 81       	ld	r24, Z
      fc:	82 60       	ori	r24, 0x02	; 2
      fe:	8c 93       	st	X, r24

    //init PCINT
    PCICR |= (1 << PCIE0);
     100:	a8 e6       	ldi	r26, 0x68	; 104
     102:	b0 e0       	ldi	r27, 0x00	; 0
     104:	e8 e6       	ldi	r30, 0x68	; 104
     106:	f0 e0       	ldi	r31, 0x00	; 0
     108:	80 81       	ld	r24, Z
     10a:	81 60       	ori	r24, 0x01	; 1
     10c:	8c 93       	st	X, r24
    PCMSK0 |= ((1 << IrSen1) | (1 << IrSen2));
     10e:	ab e6       	ldi	r26, 0x6B	; 107
     110:	b0 e0       	ldi	r27, 0x00	; 0
     112:	eb e6       	ldi	r30, 0x6B	; 107
     114:	f0 e0       	ldi	r31, 0x00	; 0
     116:	80 81       	ld	r24, Z
     118:	83 60       	ori	r24, 0x03	; 3
     11a:	8c 93       	st	X, r24

    //init timer0 voor ultrasone //16000000 / 256 / 8 = ~7800Hz
    TCCR0A = 0;
     11c:	e4 e4       	ldi	r30, 0x44	; 68
     11e:	f0 e0       	ldi	r31, 0x00	; 0
     120:	10 82       	st	Z, r1
    TCCR0B = (0 << CS00) | (1 << CS01) | (1 << CS02);
     122:	e5 e4       	ldi	r30, 0x45	; 69
     124:	f0 e0       	ldi	r31, 0x00	; 0
     126:	86 e0       	ldi	r24, 0x06	; 6
     128:	80 83       	st	Z, r24

    //init interrupt
    sei();
     12a:	78 94       	sei
}
     12c:	cf 91       	pop	r28
     12e:	df 91       	pop	r29
     130:	08 95       	ret

00000132 <buzzer>:

void buzzer(int freq, int aantal)
{
     132:	df 93       	push	r29
     134:	cf 93       	push	r28
     136:	cd b7       	in	r28, 0x3d	; 61
     138:	de b7       	in	r29, 0x3e	; 62
     13a:	6e 97       	sbiw	r28, 0x1e	; 30
     13c:	0f b6       	in	r0, 0x3f	; 63
     13e:	f8 94       	cli
     140:	de bf       	out	0x3e, r29	; 62
     142:	0f be       	out	0x3f, r0	; 63
     144:	cd bf       	out	0x3d, r28	; 61
     146:	9c 8f       	std	Y+28, r25	; 0x1c
     148:	8b 8f       	std	Y+27, r24	; 0x1b
     14a:	7e 8f       	std	Y+30, r23	; 0x1e
     14c:	6d 8f       	std	Y+29, r22	; 0x1d
    for(int i = 0; i < aantal; i++)
     14e:	1a 8e       	std	Y+26, r1	; 0x1a
     150:	19 8e       	std	Y+25, r1	; 0x19
     152:	d3 c0       	rjmp	.+422    	; 0x2fa <buzzer+0x1c8>
    {
        PORTD ^= _BV(buzzerPin);
     154:	ab e2       	ldi	r26, 0x2B	; 43
     156:	b0 e0       	ldi	r27, 0x00	; 0
     158:	eb e2       	ldi	r30, 0x2B	; 43
     15a:	f0 e0       	ldi	r31, 0x00	; 0
     15c:	90 81       	ld	r25, Z
     15e:	80 e4       	ldi	r24, 0x40	; 64
     160:	89 27       	eor	r24, r25
     162:	8c 93       	st	X, r24
        _delay_us(freq);
     164:	8b 8d       	ldd	r24, Y+27	; 0x1b
     166:	9c 8d       	ldd	r25, Y+28	; 0x1c
     168:	aa 27       	eor	r26, r26
     16a:	97 fd       	sbrc	r25, 7
     16c:	a0 95       	com	r26
     16e:	ba 2f       	mov	r27, r26
     170:	bc 01       	movw	r22, r24
     172:	cd 01       	movw	r24, r26
     174:	0e 94 40 08 	call	0x1080	; 0x1080 <__floatsisf>
     178:	dc 01       	movw	r26, r24
     17a:	cb 01       	movw	r24, r22
     17c:	8d 8b       	std	Y+21, r24	; 0x15
     17e:	9e 8b       	std	Y+22, r25	; 0x16
     180:	af 8b       	std	Y+23, r26	; 0x17
     182:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     184:	6d 89       	ldd	r22, Y+21	; 0x15
     186:	7e 89       	ldd	r23, Y+22	; 0x16
     188:	8f 89       	ldd	r24, Y+23	; 0x17
     18a:	98 8d       	ldd	r25, Y+24	; 0x18
     18c:	2b ea       	ldi	r18, 0xAB	; 171
     18e:	3a ea       	ldi	r19, 0xAA	; 170
     190:	4a ea       	ldi	r20, 0xAA	; 170
     192:	50 e4       	ldi	r21, 0x40	; 64
     194:	0e 94 0a 06 	call	0xc14	; 0xc14 <__mulsf3>
     198:	dc 01       	movw	r26, r24
     19a:	cb 01       	movw	r24, r22
     19c:	89 8b       	std	Y+17, r24	; 0x11
     19e:	9a 8b       	std	Y+18, r25	; 0x12
     1a0:	ab 8b       	std	Y+19, r26	; 0x13
     1a2:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
     1a4:	69 89       	ldd	r22, Y+17	; 0x11
     1a6:	7a 89       	ldd	r23, Y+18	; 0x12
     1a8:	8b 89       	ldd	r24, Y+19	; 0x13
     1aa:	9c 89       	ldd	r25, Y+20	; 0x14
     1ac:	20 e0       	ldi	r18, 0x00	; 0
     1ae:	30 e0       	ldi	r19, 0x00	; 0
     1b0:	40 e8       	ldi	r20, 0x80	; 128
     1b2:	5f e3       	ldi	r21, 0x3F	; 63
     1b4:	0e 94 10 08 	call	0x1020	; 0x1020 <__ltsf2>
     1b8:	88 23       	and	r24, r24
     1ba:	1c f4       	brge	.+6      	; 0x1c2 <buzzer+0x90>
		__ticks = 1;
     1bc:	81 e0       	ldi	r24, 0x01	; 1
     1be:	88 8b       	std	Y+16, r24	; 0x10
     1c0:	91 c0       	rjmp	.+290    	; 0x2e4 <buzzer+0x1b2>
	else if (__tmp > 255)
     1c2:	69 89       	ldd	r22, Y+17	; 0x11
     1c4:	7a 89       	ldd	r23, Y+18	; 0x12
     1c6:	8b 89       	ldd	r24, Y+19	; 0x13
     1c8:	9c 89       	ldd	r25, Y+20	; 0x14
     1ca:	20 e0       	ldi	r18, 0x00	; 0
     1cc:	30 e0       	ldi	r19, 0x00	; 0
     1ce:	4f e7       	ldi	r20, 0x7F	; 127
     1d0:	53 e4       	ldi	r21, 0x43	; 67
     1d2:	0e 94 b0 07 	call	0xf60	; 0xf60 <__gtsf2>
     1d6:	18 16       	cp	r1, r24
     1d8:	0c f0       	brlt	.+2      	; 0x1dc <buzzer+0xaa>
     1da:	7b c0       	rjmp	.+246    	; 0x2d2 <buzzer+0x1a0>
	{
		_delay_ms(__us / 1000.0);
     1dc:	6d 89       	ldd	r22, Y+21	; 0x15
     1de:	7e 89       	ldd	r23, Y+22	; 0x16
     1e0:	8f 89       	ldd	r24, Y+23	; 0x17
     1e2:	98 8d       	ldd	r25, Y+24	; 0x18
     1e4:	20 e0       	ldi	r18, 0x00	; 0
     1e6:	30 e0       	ldi	r19, 0x00	; 0
     1e8:	4a e7       	ldi	r20, 0x7A	; 122
     1ea:	54 e4       	ldi	r21, 0x44	; 68
     1ec:	0e 94 04 07 	call	0xe08	; 0xe08 <__divsf3>
     1f0:	dc 01       	movw	r26, r24
     1f2:	cb 01       	movw	r24, r22
     1f4:	8c 87       	std	Y+12, r24	; 0x0c
     1f6:	9d 87       	std	Y+13, r25	; 0x0d
     1f8:	ae 87       	std	Y+14, r26	; 0x0e
     1fa:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     1fc:	6c 85       	ldd	r22, Y+12	; 0x0c
     1fe:	7d 85       	ldd	r23, Y+13	; 0x0d
     200:	8e 85       	ldd	r24, Y+14	; 0x0e
     202:	9f 85       	ldd	r25, Y+15	; 0x0f
     204:	20 e0       	ldi	r18, 0x00	; 0
     206:	30 e0       	ldi	r19, 0x00	; 0
     208:	4a e7       	ldi	r20, 0x7A	; 122
     20a:	55 e4       	ldi	r21, 0x45	; 69
     20c:	0e 94 0a 06 	call	0xc14	; 0xc14 <__mulsf3>
     210:	dc 01       	movw	r26, r24
     212:	cb 01       	movw	r24, r22
     214:	88 87       	std	Y+8, r24	; 0x08
     216:	99 87       	std	Y+9, r25	; 0x09
     218:	aa 87       	std	Y+10, r26	; 0x0a
     21a:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
     21c:	68 85       	ldd	r22, Y+8	; 0x08
     21e:	79 85       	ldd	r23, Y+9	; 0x09
     220:	8a 85       	ldd	r24, Y+10	; 0x0a
     222:	9b 85       	ldd	r25, Y+11	; 0x0b
     224:	20 e0       	ldi	r18, 0x00	; 0
     226:	30 e0       	ldi	r19, 0x00	; 0
     228:	40 e8       	ldi	r20, 0x80	; 128
     22a:	5f e3       	ldi	r21, 0x3F	; 63
     22c:	0e 94 10 08 	call	0x1020	; 0x1020 <__ltsf2>
     230:	88 23       	and	r24, r24
     232:	2c f4       	brge	.+10     	; 0x23e <buzzer+0x10c>
		__ticks = 1;
     234:	81 e0       	ldi	r24, 0x01	; 1
     236:	90 e0       	ldi	r25, 0x00	; 0
     238:	9f 83       	std	Y+7, r25	; 0x07
     23a:	8e 83       	std	Y+6, r24	; 0x06
     23c:	3f c0       	rjmp	.+126    	; 0x2bc <buzzer+0x18a>
	else if (__tmp > 65535)
     23e:	68 85       	ldd	r22, Y+8	; 0x08
     240:	79 85       	ldd	r23, Y+9	; 0x09
     242:	8a 85       	ldd	r24, Y+10	; 0x0a
     244:	9b 85       	ldd	r25, Y+11	; 0x0b
     246:	20 e0       	ldi	r18, 0x00	; 0
     248:	3f ef       	ldi	r19, 0xFF	; 255
     24a:	4f e7       	ldi	r20, 0x7F	; 127
     24c:	57 e4       	ldi	r21, 0x47	; 71
     24e:	0e 94 b0 07 	call	0xf60	; 0xf60 <__gtsf2>
     252:	18 16       	cp	r1, r24
     254:	4c f5       	brge	.+82     	; 0x2a8 <buzzer+0x176>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     256:	6c 85       	ldd	r22, Y+12	; 0x0c
     258:	7d 85       	ldd	r23, Y+13	; 0x0d
     25a:	8e 85       	ldd	r24, Y+14	; 0x0e
     25c:	9f 85       	ldd	r25, Y+15	; 0x0f
     25e:	20 e0       	ldi	r18, 0x00	; 0
     260:	30 e0       	ldi	r19, 0x00	; 0
     262:	40 e2       	ldi	r20, 0x20	; 32
     264:	51 e4       	ldi	r21, 0x41	; 65
     266:	0e 94 0a 06 	call	0xc14	; 0xc14 <__mulsf3>
     26a:	dc 01       	movw	r26, r24
     26c:	cb 01       	movw	r24, r22
     26e:	bc 01       	movw	r22, r24
     270:	cd 01       	movw	r24, r26
     272:	0e 94 34 04 	call	0x868	; 0x868 <__fixunssfsi>
     276:	dc 01       	movw	r26, r24
     278:	cb 01       	movw	r24, r22
     27a:	9f 83       	std	Y+7, r25	; 0x07
     27c:	8e 83       	std	Y+6, r24	; 0x06
     27e:	0f c0       	rjmp	.+30     	; 0x29e <buzzer+0x16c>
     280:	80 e9       	ldi	r24, 0x90	; 144
     282:	91 e0       	ldi	r25, 0x01	; 1
     284:	9d 83       	std	Y+5, r25	; 0x05
     286:	8c 83       	std	Y+4, r24	; 0x04
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     288:	8c 81       	ldd	r24, Y+4	; 0x04
     28a:	9d 81       	ldd	r25, Y+5	; 0x05
     28c:	01 97       	sbiw	r24, 0x01	; 1
     28e:	f1 f7       	brne	.-4      	; 0x28c <buzzer+0x15a>
     290:	9d 83       	std	Y+5, r25	; 0x05
     292:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     294:	8e 81       	ldd	r24, Y+6	; 0x06
     296:	9f 81       	ldd	r25, Y+7	; 0x07
     298:	01 97       	sbiw	r24, 0x01	; 1
     29a:	9f 83       	std	Y+7, r25	; 0x07
     29c:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     29e:	8e 81       	ldd	r24, Y+6	; 0x06
     2a0:	9f 81       	ldd	r25, Y+7	; 0x07
     2a2:	00 97       	sbiw	r24, 0x00	; 0
     2a4:	69 f7       	brne	.-38     	; 0x280 <buzzer+0x14e>
     2a6:	24 c0       	rjmp	.+72     	; 0x2f0 <buzzer+0x1be>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     2a8:	68 85       	ldd	r22, Y+8	; 0x08
     2aa:	79 85       	ldd	r23, Y+9	; 0x09
     2ac:	8a 85       	ldd	r24, Y+10	; 0x0a
     2ae:	9b 85       	ldd	r25, Y+11	; 0x0b
     2b0:	0e 94 34 04 	call	0x868	; 0x868 <__fixunssfsi>
     2b4:	dc 01       	movw	r26, r24
     2b6:	cb 01       	movw	r24, r22
     2b8:	9f 83       	std	Y+7, r25	; 0x07
     2ba:	8e 83       	std	Y+6, r24	; 0x06
     2bc:	8e 81       	ldd	r24, Y+6	; 0x06
     2be:	9f 81       	ldd	r25, Y+7	; 0x07
     2c0:	9b 83       	std	Y+3, r25	; 0x03
     2c2:	8a 83       	std	Y+2, r24	; 0x02
     2c4:	8a 81       	ldd	r24, Y+2	; 0x02
     2c6:	9b 81       	ldd	r25, Y+3	; 0x03
     2c8:	01 97       	sbiw	r24, 0x01	; 1
     2ca:	f1 f7       	brne	.-4      	; 0x2c8 <buzzer+0x196>
     2cc:	9b 83       	std	Y+3, r25	; 0x03
     2ce:	8a 83       	std	Y+2, r24	; 0x02
     2d0:	0f c0       	rjmp	.+30     	; 0x2f0 <buzzer+0x1be>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     2d2:	69 89       	ldd	r22, Y+17	; 0x11
     2d4:	7a 89       	ldd	r23, Y+18	; 0x12
     2d6:	8b 89       	ldd	r24, Y+19	; 0x13
     2d8:	9c 89       	ldd	r25, Y+20	; 0x14
     2da:	0e 94 34 04 	call	0x868	; 0x868 <__fixunssfsi>
     2de:	dc 01       	movw	r26, r24
     2e0:	cb 01       	movw	r24, r22
     2e2:	88 8b       	std	Y+16, r24	; 0x10
     2e4:	88 89       	ldd	r24, Y+16	; 0x10
     2e6:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     2e8:	89 81       	ldd	r24, Y+1	; 0x01
     2ea:	8a 95       	dec	r24
     2ec:	f1 f7       	brne	.-4      	; 0x2ea <buzzer+0x1b8>
     2ee:	89 83       	std	Y+1, r24	; 0x01
    sei();
}

void buzzer(int freq, int aantal)
{
    for(int i = 0; i < aantal; i++)
     2f0:	89 8d       	ldd	r24, Y+25	; 0x19
     2f2:	9a 8d       	ldd	r25, Y+26	; 0x1a
     2f4:	01 96       	adiw	r24, 0x01	; 1
     2f6:	9a 8f       	std	Y+26, r25	; 0x1a
     2f8:	89 8f       	std	Y+25, r24	; 0x19
     2fa:	29 8d       	ldd	r18, Y+25	; 0x19
     2fc:	3a 8d       	ldd	r19, Y+26	; 0x1a
     2fe:	8d 8d       	ldd	r24, Y+29	; 0x1d
     300:	9e 8d       	ldd	r25, Y+30	; 0x1e
     302:	28 17       	cp	r18, r24
     304:	39 07       	cpc	r19, r25
     306:	0c f4       	brge	.+2      	; 0x30a <buzzer+0x1d8>
     308:	25 cf       	rjmp	.-438    	; 0x154 <buzzer+0x22>
    {
        PORTD ^= _BV(buzzerPin);
        _delay_us(freq);

    }
}
     30a:	6e 96       	adiw	r28, 0x1e	; 30
     30c:	0f b6       	in	r0, 0x3f	; 63
     30e:	f8 94       	cli
     310:	de bf       	out	0x3e, r29	; 62
     312:	0f be       	out	0x3f, r0	; 63
     314:	cd bf       	out	0x3d, r28	; 61
     316:	cf 91       	pop	r28
     318:	df 91       	pop	r29
     31a:	08 95       	ret

0000031c <__vector_3>:

ISR(PCINT0_vect)
{
     31c:	1f 92       	push	r1
     31e:	0f 92       	push	r0
     320:	0f b6       	in	r0, 0x3f	; 63
     322:	0f 92       	push	r0
     324:	11 24       	eor	r1, r1
     326:	2f 93       	push	r18
     328:	3f 93       	push	r19
     32a:	4f 93       	push	r20
     32c:	5f 93       	push	r21
     32e:	6f 93       	push	r22
     330:	7f 93       	push	r23
     332:	8f 93       	push	r24
     334:	9f 93       	push	r25
     336:	af 93       	push	r26
     338:	bf 93       	push	r27
     33a:	ef 93       	push	r30
     33c:	ff 93       	push	r31
     33e:	df 93       	push	r29
     340:	cf 93       	push	r28
     342:	cd b7       	in	r28, 0x3d	; 61
     344:	de b7       	in	r29, 0x3e	; 62
     346:	aa 97       	sbiw	r28, 0x2a	; 42
     348:	de bf       	out	0x3e, r29	; 62
     34a:	cd bf       	out	0x3d, r28	; 61
     34c:	80 e0       	ldi	r24, 0x00	; 0
     34e:	90 e0       	ldi	r25, 0x00	; 0
     350:	a8 ec       	ldi	r26, 0xC8	; 200
     352:	b1 e4       	ldi	r27, 0x41	; 65
     354:	8f a3       	std	Y+39, r24	; 0x27
     356:	98 a7       	std	Y+40, r25	; 0x28
     358:	a9 a7       	std	Y+41, r26	; 0x29
     35a:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     35c:	6f a1       	ldd	r22, Y+39	; 0x27
     35e:	78 a5       	ldd	r23, Y+40	; 0x28
     360:	89 a5       	ldd	r24, Y+41	; 0x29
     362:	9a a5       	ldd	r25, Y+42	; 0x2a
     364:	20 e0       	ldi	r18, 0x00	; 0
     366:	30 e0       	ldi	r19, 0x00	; 0
     368:	4a e7       	ldi	r20, 0x7A	; 122
     36a:	55 e4       	ldi	r21, 0x45	; 69
     36c:	0e 94 0a 06 	call	0xc14	; 0xc14 <__mulsf3>
     370:	dc 01       	movw	r26, r24
     372:	cb 01       	movw	r24, r22
     374:	8b a3       	std	Y+35, r24	; 0x23
     376:	9c a3       	std	Y+36, r25	; 0x24
     378:	ad a3       	std	Y+37, r26	; 0x25
     37a:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     37c:	6b a1       	ldd	r22, Y+35	; 0x23
     37e:	7c a1       	ldd	r23, Y+36	; 0x24
     380:	8d a1       	ldd	r24, Y+37	; 0x25
     382:	9e a1       	ldd	r25, Y+38	; 0x26
     384:	20 e0       	ldi	r18, 0x00	; 0
     386:	30 e0       	ldi	r19, 0x00	; 0
     388:	40 e8       	ldi	r20, 0x80	; 128
     38a:	5f e3       	ldi	r21, 0x3F	; 63
     38c:	0e 94 10 08 	call	0x1020	; 0x1020 <__ltsf2>
     390:	88 23       	and	r24, r24
     392:	2c f4       	brge	.+10     	; 0x39e <__vector_3+0x82>
		__ticks = 1;
     394:	81 e0       	ldi	r24, 0x01	; 1
     396:	90 e0       	ldi	r25, 0x00	; 0
     398:	9a a3       	std	Y+34, r25	; 0x22
     39a:	89 a3       	std	Y+33, r24	; 0x21
     39c:	3f c0       	rjmp	.+126    	; 0x41c <__vector_3+0x100>
	else if (__tmp > 65535)
     39e:	6b a1       	ldd	r22, Y+35	; 0x23
     3a0:	7c a1       	ldd	r23, Y+36	; 0x24
     3a2:	8d a1       	ldd	r24, Y+37	; 0x25
     3a4:	9e a1       	ldd	r25, Y+38	; 0x26
     3a6:	20 e0       	ldi	r18, 0x00	; 0
     3a8:	3f ef       	ldi	r19, 0xFF	; 255
     3aa:	4f e7       	ldi	r20, 0x7F	; 127
     3ac:	57 e4       	ldi	r21, 0x47	; 71
     3ae:	0e 94 b0 07 	call	0xf60	; 0xf60 <__gtsf2>
     3b2:	18 16       	cp	r1, r24
     3b4:	4c f5       	brge	.+82     	; 0x408 <__vector_3+0xec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     3b6:	6f a1       	ldd	r22, Y+39	; 0x27
     3b8:	78 a5       	ldd	r23, Y+40	; 0x28
     3ba:	89 a5       	ldd	r24, Y+41	; 0x29
     3bc:	9a a5       	ldd	r25, Y+42	; 0x2a
     3be:	20 e0       	ldi	r18, 0x00	; 0
     3c0:	30 e0       	ldi	r19, 0x00	; 0
     3c2:	40 e2       	ldi	r20, 0x20	; 32
     3c4:	51 e4       	ldi	r21, 0x41	; 65
     3c6:	0e 94 0a 06 	call	0xc14	; 0xc14 <__mulsf3>
     3ca:	dc 01       	movw	r26, r24
     3cc:	cb 01       	movw	r24, r22
     3ce:	bc 01       	movw	r22, r24
     3d0:	cd 01       	movw	r24, r26
     3d2:	0e 94 34 04 	call	0x868	; 0x868 <__fixunssfsi>
     3d6:	dc 01       	movw	r26, r24
     3d8:	cb 01       	movw	r24, r22
     3da:	9a a3       	std	Y+34, r25	; 0x22
     3dc:	89 a3       	std	Y+33, r24	; 0x21
     3de:	0f c0       	rjmp	.+30     	; 0x3fe <__vector_3+0xe2>
     3e0:	80 e9       	ldi	r24, 0x90	; 144
     3e2:	91 e0       	ldi	r25, 0x01	; 1
     3e4:	98 a3       	std	Y+32, r25	; 0x20
     3e6:	8f 8f       	std	Y+31, r24	; 0x1f
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     3e8:	8f 8d       	ldd	r24, Y+31	; 0x1f
     3ea:	98 a1       	ldd	r25, Y+32	; 0x20
     3ec:	01 97       	sbiw	r24, 0x01	; 1
     3ee:	f1 f7       	brne	.-4      	; 0x3ec <__vector_3+0xd0>
     3f0:	98 a3       	std	Y+32, r25	; 0x20
     3f2:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     3f4:	89 a1       	ldd	r24, Y+33	; 0x21
     3f6:	9a a1       	ldd	r25, Y+34	; 0x22
     3f8:	01 97       	sbiw	r24, 0x01	; 1
     3fa:	9a a3       	std	Y+34, r25	; 0x22
     3fc:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     3fe:	89 a1       	ldd	r24, Y+33	; 0x21
     400:	9a a1       	ldd	r25, Y+34	; 0x22
     402:	00 97       	sbiw	r24, 0x00	; 0
     404:	69 f7       	brne	.-38     	; 0x3e0 <__vector_3+0xc4>
     406:	14 c0       	rjmp	.+40     	; 0x430 <__vector_3+0x114>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     408:	6b a1       	ldd	r22, Y+35	; 0x23
     40a:	7c a1       	ldd	r23, Y+36	; 0x24
     40c:	8d a1       	ldd	r24, Y+37	; 0x25
     40e:	9e a1       	ldd	r25, Y+38	; 0x26
     410:	0e 94 34 04 	call	0x868	; 0x868 <__fixunssfsi>
     414:	dc 01       	movw	r26, r24
     416:	cb 01       	movw	r24, r22
     418:	9a a3       	std	Y+34, r25	; 0x22
     41a:	89 a3       	std	Y+33, r24	; 0x21
     41c:	89 a1       	ldd	r24, Y+33	; 0x21
     41e:	9a a1       	ldd	r25, Y+34	; 0x22
     420:	9e 8f       	std	Y+30, r25	; 0x1e
     422:	8d 8f       	std	Y+29, r24	; 0x1d
     424:	8d 8d       	ldd	r24, Y+29	; 0x1d
     426:	9e 8d       	ldd	r25, Y+30	; 0x1e
     428:	01 97       	sbiw	r24, 0x01	; 1
     42a:	f1 f7       	brne	.-4      	; 0x428 <__vector_3+0x10c>
     42c:	9e 8f       	std	Y+30, r25	; 0x1e
     42e:	8d 8f       	std	Y+29, r24	; 0x1d
    _delay_ms(25);
    if(bit_is_clear(PINB, IrSen1))
     430:	e3 e2       	ldi	r30, 0x23	; 35
     432:	f0 e0       	ldi	r31, 0x00	; 0
     434:	80 81       	ld	r24, Z
     436:	88 2f       	mov	r24, r24
     438:	90 e0       	ldi	r25, 0x00	; 0
     43a:	81 70       	andi	r24, 0x01	; 1
     43c:	90 70       	andi	r25, 0x00	; 0
     43e:	00 97       	sbiw	r24, 0x00	; 0
     440:	09 f0       	breq	.+2      	; 0x444 <__vector_3+0x128>
     442:	86 c0       	rjmp	.+268    	; 0x550 <__vector_3+0x234>
    {
        PORTC |= _BV(motorPin);
     444:	a8 e2       	ldi	r26, 0x28	; 40
     446:	b0 e0       	ldi	r27, 0x00	; 0
     448:	e8 e2       	ldi	r30, 0x28	; 40
     44a:	f0 e0       	ldi	r31, 0x00	; 0
     44c:	80 81       	ld	r24, Z
     44e:	80 61       	ori	r24, 0x10	; 16
     450:	8c 93       	st	X, r24
        buzzer(350, 1000);
     452:	8e e5       	ldi	r24, 0x5E	; 94
     454:	91 e0       	ldi	r25, 0x01	; 1
     456:	68 ee       	ldi	r22, 0xE8	; 232
     458:	73 e0       	ldi	r23, 0x03	; 3
     45a:	0e 94 99 00 	call	0x132	; 0x132 <buzzer>
     45e:	80 e0       	ldi	r24, 0x00	; 0
     460:	90 e0       	ldi	r25, 0x00	; 0
     462:	aa ef       	ldi	r26, 0xFA	; 250
     464:	b3 e4       	ldi	r27, 0x43	; 67
     466:	89 8f       	std	Y+25, r24	; 0x19
     468:	9a 8f       	std	Y+26, r25	; 0x1a
     46a:	ab 8f       	std	Y+27, r26	; 0x1b
     46c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     46e:	69 8d       	ldd	r22, Y+25	; 0x19
     470:	7a 8d       	ldd	r23, Y+26	; 0x1a
     472:	8b 8d       	ldd	r24, Y+27	; 0x1b
     474:	9c 8d       	ldd	r25, Y+28	; 0x1c
     476:	20 e0       	ldi	r18, 0x00	; 0
     478:	30 e0       	ldi	r19, 0x00	; 0
     47a:	4a e7       	ldi	r20, 0x7A	; 122
     47c:	55 e4       	ldi	r21, 0x45	; 69
     47e:	0e 94 0a 06 	call	0xc14	; 0xc14 <__mulsf3>
     482:	dc 01       	movw	r26, r24
     484:	cb 01       	movw	r24, r22
     486:	8d 8b       	std	Y+21, r24	; 0x15
     488:	9e 8b       	std	Y+22, r25	; 0x16
     48a:	af 8b       	std	Y+23, r26	; 0x17
     48c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     48e:	6d 89       	ldd	r22, Y+21	; 0x15
     490:	7e 89       	ldd	r23, Y+22	; 0x16
     492:	8f 89       	ldd	r24, Y+23	; 0x17
     494:	98 8d       	ldd	r25, Y+24	; 0x18
     496:	20 e0       	ldi	r18, 0x00	; 0
     498:	30 e0       	ldi	r19, 0x00	; 0
     49a:	40 e8       	ldi	r20, 0x80	; 128
     49c:	5f e3       	ldi	r21, 0x3F	; 63
     49e:	0e 94 10 08 	call	0x1020	; 0x1020 <__ltsf2>
     4a2:	88 23       	and	r24, r24
     4a4:	2c f4       	brge	.+10     	; 0x4b0 <__vector_3+0x194>
		__ticks = 1;
     4a6:	81 e0       	ldi	r24, 0x01	; 1
     4a8:	90 e0       	ldi	r25, 0x00	; 0
     4aa:	9c 8b       	std	Y+20, r25	; 0x14
     4ac:	8b 8b       	std	Y+19, r24	; 0x13
     4ae:	3f c0       	rjmp	.+126    	; 0x52e <__vector_3+0x212>
	else if (__tmp > 65535)
     4b0:	6d 89       	ldd	r22, Y+21	; 0x15
     4b2:	7e 89       	ldd	r23, Y+22	; 0x16
     4b4:	8f 89       	ldd	r24, Y+23	; 0x17
     4b6:	98 8d       	ldd	r25, Y+24	; 0x18
     4b8:	20 e0       	ldi	r18, 0x00	; 0
     4ba:	3f ef       	ldi	r19, 0xFF	; 255
     4bc:	4f e7       	ldi	r20, 0x7F	; 127
     4be:	57 e4       	ldi	r21, 0x47	; 71
     4c0:	0e 94 b0 07 	call	0xf60	; 0xf60 <__gtsf2>
     4c4:	18 16       	cp	r1, r24
     4c6:	4c f5       	brge	.+82     	; 0x51a <__vector_3+0x1fe>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     4c8:	69 8d       	ldd	r22, Y+25	; 0x19
     4ca:	7a 8d       	ldd	r23, Y+26	; 0x1a
     4cc:	8b 8d       	ldd	r24, Y+27	; 0x1b
     4ce:	9c 8d       	ldd	r25, Y+28	; 0x1c
     4d0:	20 e0       	ldi	r18, 0x00	; 0
     4d2:	30 e0       	ldi	r19, 0x00	; 0
     4d4:	40 e2       	ldi	r20, 0x20	; 32
     4d6:	51 e4       	ldi	r21, 0x41	; 65
     4d8:	0e 94 0a 06 	call	0xc14	; 0xc14 <__mulsf3>
     4dc:	dc 01       	movw	r26, r24
     4de:	cb 01       	movw	r24, r22
     4e0:	bc 01       	movw	r22, r24
     4e2:	cd 01       	movw	r24, r26
     4e4:	0e 94 34 04 	call	0x868	; 0x868 <__fixunssfsi>
     4e8:	dc 01       	movw	r26, r24
     4ea:	cb 01       	movw	r24, r22
     4ec:	9c 8b       	std	Y+20, r25	; 0x14
     4ee:	8b 8b       	std	Y+19, r24	; 0x13
     4f0:	0f c0       	rjmp	.+30     	; 0x510 <__vector_3+0x1f4>
     4f2:	80 e9       	ldi	r24, 0x90	; 144
     4f4:	91 e0       	ldi	r25, 0x01	; 1
     4f6:	9a 8b       	std	Y+18, r25	; 0x12
     4f8:	89 8b       	std	Y+17, r24	; 0x11
     4fa:	89 89       	ldd	r24, Y+17	; 0x11
     4fc:	9a 89       	ldd	r25, Y+18	; 0x12
     4fe:	01 97       	sbiw	r24, 0x01	; 1
     500:	f1 f7       	brne	.-4      	; 0x4fe <__vector_3+0x1e2>
     502:	9a 8b       	std	Y+18, r25	; 0x12
     504:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     506:	8b 89       	ldd	r24, Y+19	; 0x13
     508:	9c 89       	ldd	r25, Y+20	; 0x14
     50a:	01 97       	sbiw	r24, 0x01	; 1
     50c:	9c 8b       	std	Y+20, r25	; 0x14
     50e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     510:	8b 89       	ldd	r24, Y+19	; 0x13
     512:	9c 89       	ldd	r25, Y+20	; 0x14
     514:	00 97       	sbiw	r24, 0x00	; 0
     516:	69 f7       	brne	.-38     	; 0x4f2 <__vector_3+0x1d6>
     518:	14 c0       	rjmp	.+40     	; 0x542 <__vector_3+0x226>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     51a:	6d 89       	ldd	r22, Y+21	; 0x15
     51c:	7e 89       	ldd	r23, Y+22	; 0x16
     51e:	8f 89       	ldd	r24, Y+23	; 0x17
     520:	98 8d       	ldd	r25, Y+24	; 0x18
     522:	0e 94 34 04 	call	0x868	; 0x868 <__fixunssfsi>
     526:	dc 01       	movw	r26, r24
     528:	cb 01       	movw	r24, r22
     52a:	9c 8b       	std	Y+20, r25	; 0x14
     52c:	8b 8b       	std	Y+19, r24	; 0x13
     52e:	8b 89       	ldd	r24, Y+19	; 0x13
     530:	9c 89       	ldd	r25, Y+20	; 0x14
     532:	98 8b       	std	Y+16, r25	; 0x10
     534:	8f 87       	std	Y+15, r24	; 0x0f
     536:	8f 85       	ldd	r24, Y+15	; 0x0f
     538:	98 89       	ldd	r25, Y+16	; 0x10
     53a:	01 97       	sbiw	r24, 0x01	; 1
     53c:	f1 f7       	brne	.-4      	; 0x53a <__vector_3+0x21e>
     53e:	98 8b       	std	Y+16, r25	; 0x10
     540:	8f 87       	std	Y+15, r24	; 0x0f
        _delay_ms(500);
        PORTC &= ~_BV(motorPin);
     542:	a8 e2       	ldi	r26, 0x28	; 40
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	e8 e2       	ldi	r30, 0x28	; 40
     548:	f0 e0       	ldi	r31, 0x00	; 0
     54a:	80 81       	ld	r24, Z
     54c:	8f 7e       	andi	r24, 0xEF	; 239
     54e:	8c 93       	st	X, r24
    }
    if(bit_is_clear(PINB, IrSen2))
     550:	e3 e2       	ldi	r30, 0x23	; 35
     552:	f0 e0       	ldi	r31, 0x00	; 0
     554:	80 81       	ld	r24, Z
     556:	88 2f       	mov	r24, r24
     558:	90 e0       	ldi	r25, 0x00	; 0
     55a:	82 70       	andi	r24, 0x02	; 2
     55c:	90 70       	andi	r25, 0x00	; 0
     55e:	00 97       	sbiw	r24, 0x00	; 0
     560:	09 f0       	breq	.+2      	; 0x564 <__vector_3+0x248>
     562:	86 c0       	rjmp	.+268    	; 0x670 <__vector_3+0x354>
    {
        PORTC |= _BV(motorPin);
     564:	a8 e2       	ldi	r26, 0x28	; 40
     566:	b0 e0       	ldi	r27, 0x00	; 0
     568:	e8 e2       	ldi	r30, 0x28	; 40
     56a:	f0 e0       	ldi	r31, 0x00	; 0
     56c:	80 81       	ld	r24, Z
     56e:	80 61       	ori	r24, 0x10	; 16
     570:	8c 93       	st	X, r24
        buzzer(350, 1000);
     572:	8e e5       	ldi	r24, 0x5E	; 94
     574:	91 e0       	ldi	r25, 0x01	; 1
     576:	68 ee       	ldi	r22, 0xE8	; 232
     578:	73 e0       	ldi	r23, 0x03	; 3
     57a:	0e 94 99 00 	call	0x132	; 0x132 <buzzer>
     57e:	80 e0       	ldi	r24, 0x00	; 0
     580:	90 e0       	ldi	r25, 0x00	; 0
     582:	aa ef       	ldi	r26, 0xFA	; 250
     584:	b3 e4       	ldi	r27, 0x43	; 67
     586:	8b 87       	std	Y+11, r24	; 0x0b
     588:	9c 87       	std	Y+12, r25	; 0x0c
     58a:	ad 87       	std	Y+13, r26	; 0x0d
     58c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     58e:	6b 85       	ldd	r22, Y+11	; 0x0b
     590:	7c 85       	ldd	r23, Y+12	; 0x0c
     592:	8d 85       	ldd	r24, Y+13	; 0x0d
     594:	9e 85       	ldd	r25, Y+14	; 0x0e
     596:	20 e0       	ldi	r18, 0x00	; 0
     598:	30 e0       	ldi	r19, 0x00	; 0
     59a:	4a e7       	ldi	r20, 0x7A	; 122
     59c:	55 e4       	ldi	r21, 0x45	; 69
     59e:	0e 94 0a 06 	call	0xc14	; 0xc14 <__mulsf3>
     5a2:	dc 01       	movw	r26, r24
     5a4:	cb 01       	movw	r24, r22
     5a6:	8f 83       	std	Y+7, r24	; 0x07
     5a8:	98 87       	std	Y+8, r25	; 0x08
     5aa:	a9 87       	std	Y+9, r26	; 0x09
     5ac:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     5ae:	6f 81       	ldd	r22, Y+7	; 0x07
     5b0:	78 85       	ldd	r23, Y+8	; 0x08
     5b2:	89 85       	ldd	r24, Y+9	; 0x09
     5b4:	9a 85       	ldd	r25, Y+10	; 0x0a
     5b6:	20 e0       	ldi	r18, 0x00	; 0
     5b8:	30 e0       	ldi	r19, 0x00	; 0
     5ba:	40 e8       	ldi	r20, 0x80	; 128
     5bc:	5f e3       	ldi	r21, 0x3F	; 63
     5be:	0e 94 10 08 	call	0x1020	; 0x1020 <__ltsf2>
     5c2:	88 23       	and	r24, r24
     5c4:	2c f4       	brge	.+10     	; 0x5d0 <__vector_3+0x2b4>
		__ticks = 1;
     5c6:	81 e0       	ldi	r24, 0x01	; 1
     5c8:	90 e0       	ldi	r25, 0x00	; 0
     5ca:	9e 83       	std	Y+6, r25	; 0x06
     5cc:	8d 83       	std	Y+5, r24	; 0x05
     5ce:	3f c0       	rjmp	.+126    	; 0x64e <__vector_3+0x332>
	else if (__tmp > 65535)
     5d0:	6f 81       	ldd	r22, Y+7	; 0x07
     5d2:	78 85       	ldd	r23, Y+8	; 0x08
     5d4:	89 85       	ldd	r24, Y+9	; 0x09
     5d6:	9a 85       	ldd	r25, Y+10	; 0x0a
     5d8:	20 e0       	ldi	r18, 0x00	; 0
     5da:	3f ef       	ldi	r19, 0xFF	; 255
     5dc:	4f e7       	ldi	r20, 0x7F	; 127
     5de:	57 e4       	ldi	r21, 0x47	; 71
     5e0:	0e 94 b0 07 	call	0xf60	; 0xf60 <__gtsf2>
     5e4:	18 16       	cp	r1, r24
     5e6:	4c f5       	brge	.+82     	; 0x63a <__vector_3+0x31e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     5e8:	6b 85       	ldd	r22, Y+11	; 0x0b
     5ea:	7c 85       	ldd	r23, Y+12	; 0x0c
     5ec:	8d 85       	ldd	r24, Y+13	; 0x0d
     5ee:	9e 85       	ldd	r25, Y+14	; 0x0e
     5f0:	20 e0       	ldi	r18, 0x00	; 0
     5f2:	30 e0       	ldi	r19, 0x00	; 0
     5f4:	40 e2       	ldi	r20, 0x20	; 32
     5f6:	51 e4       	ldi	r21, 0x41	; 65
     5f8:	0e 94 0a 06 	call	0xc14	; 0xc14 <__mulsf3>
     5fc:	dc 01       	movw	r26, r24
     5fe:	cb 01       	movw	r24, r22
     600:	bc 01       	movw	r22, r24
     602:	cd 01       	movw	r24, r26
     604:	0e 94 34 04 	call	0x868	; 0x868 <__fixunssfsi>
     608:	dc 01       	movw	r26, r24
     60a:	cb 01       	movw	r24, r22
     60c:	9e 83       	std	Y+6, r25	; 0x06
     60e:	8d 83       	std	Y+5, r24	; 0x05
     610:	0f c0       	rjmp	.+30     	; 0x630 <__vector_3+0x314>
     612:	80 e9       	ldi	r24, 0x90	; 144
     614:	91 e0       	ldi	r25, 0x01	; 1
     616:	9c 83       	std	Y+4, r25	; 0x04
     618:	8b 83       	std	Y+3, r24	; 0x03
     61a:	8b 81       	ldd	r24, Y+3	; 0x03
     61c:	9c 81       	ldd	r25, Y+4	; 0x04
     61e:	01 97       	sbiw	r24, 0x01	; 1
     620:	f1 f7       	brne	.-4      	; 0x61e <__vector_3+0x302>
     622:	9c 83       	std	Y+4, r25	; 0x04
     624:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     626:	8d 81       	ldd	r24, Y+5	; 0x05
     628:	9e 81       	ldd	r25, Y+6	; 0x06
     62a:	01 97       	sbiw	r24, 0x01	; 1
     62c:	9e 83       	std	Y+6, r25	; 0x06
     62e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     630:	8d 81       	ldd	r24, Y+5	; 0x05
     632:	9e 81       	ldd	r25, Y+6	; 0x06
     634:	00 97       	sbiw	r24, 0x00	; 0
     636:	69 f7       	brne	.-38     	; 0x612 <__vector_3+0x2f6>
     638:	14 c0       	rjmp	.+40     	; 0x662 <__vector_3+0x346>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     63a:	6f 81       	ldd	r22, Y+7	; 0x07
     63c:	78 85       	ldd	r23, Y+8	; 0x08
     63e:	89 85       	ldd	r24, Y+9	; 0x09
     640:	9a 85       	ldd	r25, Y+10	; 0x0a
     642:	0e 94 34 04 	call	0x868	; 0x868 <__fixunssfsi>
     646:	dc 01       	movw	r26, r24
     648:	cb 01       	movw	r24, r22
     64a:	9e 83       	std	Y+6, r25	; 0x06
     64c:	8d 83       	std	Y+5, r24	; 0x05
     64e:	8d 81       	ldd	r24, Y+5	; 0x05
     650:	9e 81       	ldd	r25, Y+6	; 0x06
     652:	9a 83       	std	Y+2, r25	; 0x02
     654:	89 83       	std	Y+1, r24	; 0x01
     656:	89 81       	ldd	r24, Y+1	; 0x01
     658:	9a 81       	ldd	r25, Y+2	; 0x02
     65a:	01 97       	sbiw	r24, 0x01	; 1
     65c:	f1 f7       	brne	.-4      	; 0x65a <__vector_3+0x33e>
     65e:	9a 83       	std	Y+2, r25	; 0x02
     660:	89 83       	std	Y+1, r24	; 0x01
        _delay_ms(500);
        PORTC &= ~_BV(motorPin);
     662:	a8 e2       	ldi	r26, 0x28	; 40
     664:	b0 e0       	ldi	r27, 0x00	; 0
     666:	e8 e2       	ldi	r30, 0x28	; 40
     668:	f0 e0       	ldi	r31, 0x00	; 0
     66a:	80 81       	ld	r24, Z
     66c:	8f 7e       	andi	r24, 0xEF	; 239
     66e:	8c 93       	st	X, r24
    }
}
     670:	aa 96       	adiw	r28, 0x2a	; 42
     672:	de bf       	out	0x3e, r29	; 62
     674:	cd bf       	out	0x3d, r28	; 61
     676:	cf 91       	pop	r28
     678:	df 91       	pop	r29
     67a:	ff 91       	pop	r31
     67c:	ef 91       	pop	r30
     67e:	bf 91       	pop	r27
     680:	af 91       	pop	r26
     682:	9f 91       	pop	r25
     684:	8f 91       	pop	r24
     686:	7f 91       	pop	r23
     688:	6f 91       	pop	r22
     68a:	5f 91       	pop	r21
     68c:	4f 91       	pop	r20
     68e:	3f 91       	pop	r19
     690:	2f 91       	pop	r18
     692:	0f 90       	pop	r0
     694:	0f be       	out	0x3f, r0	; 63
     696:	0f 90       	pop	r0
     698:	1f 90       	pop	r1
     69a:	18 95       	reti

0000069c <UltraDist>:

int UltraDist (void)
{
     69c:	df 93       	push	r29
     69e:	cf 93       	push	r28
     6a0:	cd b7       	in	r28, 0x3d	; 61
     6a2:	de b7       	in	r29, 0x3e	; 62
     6a4:	6a 97       	sbiw	r28, 0x1a	; 26
     6a6:	0f b6       	in	r0, 0x3f	; 63
     6a8:	f8 94       	cli
     6aa:	de bf       	out	0x3e, r29	; 62
     6ac:	0f be       	out	0x3f, r0	; 63
     6ae:	cd bf       	out	0x3d, r28	; 61
    PORTD |= _BV(triggerPin);
     6b0:	ab e2       	ldi	r26, 0x2B	; 43
     6b2:	b0 e0       	ldi	r27, 0x00	; 0
     6b4:	eb e2       	ldi	r30, 0x2B	; 43
     6b6:	f0 e0       	ldi	r31, 0x00	; 0
     6b8:	80 81       	ld	r24, Z
     6ba:	80 68       	ori	r24, 0x80	; 128
     6bc:	8c 93       	st	X, r24
     6be:	80 e0       	ldi	r24, 0x00	; 0
     6c0:	90 e0       	ldi	r25, 0x00	; 0
     6c2:	a0 e2       	ldi	r26, 0x20	; 32
     6c4:	b1 e4       	ldi	r27, 0x41	; 65
     6c6:	8d 8b       	std	Y+21, r24	; 0x15
     6c8:	9e 8b       	std	Y+22, r25	; 0x16
     6ca:	af 8b       	std	Y+23, r26	; 0x17
     6cc:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     6ce:	6d 89       	ldd	r22, Y+21	; 0x15
     6d0:	7e 89       	ldd	r23, Y+22	; 0x16
     6d2:	8f 89       	ldd	r24, Y+23	; 0x17
     6d4:	98 8d       	ldd	r25, Y+24	; 0x18
     6d6:	2b ea       	ldi	r18, 0xAB	; 171
     6d8:	3a ea       	ldi	r19, 0xAA	; 170
     6da:	4a ea       	ldi	r20, 0xAA	; 170
     6dc:	50 e4       	ldi	r21, 0x40	; 64
     6de:	0e 94 0a 06 	call	0xc14	; 0xc14 <__mulsf3>
     6e2:	dc 01       	movw	r26, r24
     6e4:	cb 01       	movw	r24, r22
     6e6:	89 8b       	std	Y+17, r24	; 0x11
     6e8:	9a 8b       	std	Y+18, r25	; 0x12
     6ea:	ab 8b       	std	Y+19, r26	; 0x13
     6ec:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
     6ee:	69 89       	ldd	r22, Y+17	; 0x11
     6f0:	7a 89       	ldd	r23, Y+18	; 0x12
     6f2:	8b 89       	ldd	r24, Y+19	; 0x13
     6f4:	9c 89       	ldd	r25, Y+20	; 0x14
     6f6:	20 e0       	ldi	r18, 0x00	; 0
     6f8:	30 e0       	ldi	r19, 0x00	; 0
     6fa:	40 e8       	ldi	r20, 0x80	; 128
     6fc:	5f e3       	ldi	r21, 0x3F	; 63
     6fe:	0e 94 10 08 	call	0x1020	; 0x1020 <__ltsf2>
     702:	88 23       	and	r24, r24
     704:	1c f4       	brge	.+6      	; 0x70c <UltraDist+0x70>
		__ticks = 1;
     706:	81 e0       	ldi	r24, 0x01	; 1
     708:	88 8b       	std	Y+16, r24	; 0x10
     70a:	91 c0       	rjmp	.+290    	; 0x82e <UltraDist+0x192>
	else if (__tmp > 255)
     70c:	69 89       	ldd	r22, Y+17	; 0x11
     70e:	7a 89       	ldd	r23, Y+18	; 0x12
     710:	8b 89       	ldd	r24, Y+19	; 0x13
     712:	9c 89       	ldd	r25, Y+20	; 0x14
     714:	20 e0       	ldi	r18, 0x00	; 0
     716:	30 e0       	ldi	r19, 0x00	; 0
     718:	4f e7       	ldi	r20, 0x7F	; 127
     71a:	53 e4       	ldi	r21, 0x43	; 67
     71c:	0e 94 b0 07 	call	0xf60	; 0xf60 <__gtsf2>
     720:	18 16       	cp	r1, r24
     722:	0c f0       	brlt	.+2      	; 0x726 <UltraDist+0x8a>
     724:	7b c0       	rjmp	.+246    	; 0x81c <UltraDist+0x180>
	{
		_delay_ms(__us / 1000.0);
     726:	6d 89       	ldd	r22, Y+21	; 0x15
     728:	7e 89       	ldd	r23, Y+22	; 0x16
     72a:	8f 89       	ldd	r24, Y+23	; 0x17
     72c:	98 8d       	ldd	r25, Y+24	; 0x18
     72e:	20 e0       	ldi	r18, 0x00	; 0
     730:	30 e0       	ldi	r19, 0x00	; 0
     732:	4a e7       	ldi	r20, 0x7A	; 122
     734:	54 e4       	ldi	r21, 0x44	; 68
     736:	0e 94 04 07 	call	0xe08	; 0xe08 <__divsf3>
     73a:	dc 01       	movw	r26, r24
     73c:	cb 01       	movw	r24, r22
     73e:	8c 87       	std	Y+12, r24	; 0x0c
     740:	9d 87       	std	Y+13, r25	; 0x0d
     742:	ae 87       	std	Y+14, r26	; 0x0e
     744:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     746:	6c 85       	ldd	r22, Y+12	; 0x0c
     748:	7d 85       	ldd	r23, Y+13	; 0x0d
     74a:	8e 85       	ldd	r24, Y+14	; 0x0e
     74c:	9f 85       	ldd	r25, Y+15	; 0x0f
     74e:	20 e0       	ldi	r18, 0x00	; 0
     750:	30 e0       	ldi	r19, 0x00	; 0
     752:	4a e7       	ldi	r20, 0x7A	; 122
     754:	55 e4       	ldi	r21, 0x45	; 69
     756:	0e 94 0a 06 	call	0xc14	; 0xc14 <__mulsf3>
     75a:	dc 01       	movw	r26, r24
     75c:	cb 01       	movw	r24, r22
     75e:	88 87       	std	Y+8, r24	; 0x08
     760:	99 87       	std	Y+9, r25	; 0x09
     762:	aa 87       	std	Y+10, r26	; 0x0a
     764:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
     766:	68 85       	ldd	r22, Y+8	; 0x08
     768:	79 85       	ldd	r23, Y+9	; 0x09
     76a:	8a 85       	ldd	r24, Y+10	; 0x0a
     76c:	9b 85       	ldd	r25, Y+11	; 0x0b
     76e:	20 e0       	ldi	r18, 0x00	; 0
     770:	30 e0       	ldi	r19, 0x00	; 0
     772:	40 e8       	ldi	r20, 0x80	; 128
     774:	5f e3       	ldi	r21, 0x3F	; 63
     776:	0e 94 10 08 	call	0x1020	; 0x1020 <__ltsf2>
     77a:	88 23       	and	r24, r24
     77c:	2c f4       	brge	.+10     	; 0x788 <UltraDist+0xec>
		__ticks = 1;
     77e:	81 e0       	ldi	r24, 0x01	; 1
     780:	90 e0       	ldi	r25, 0x00	; 0
     782:	9f 83       	std	Y+7, r25	; 0x07
     784:	8e 83       	std	Y+6, r24	; 0x06
     786:	3f c0       	rjmp	.+126    	; 0x806 <UltraDist+0x16a>
	else if (__tmp > 65535)
     788:	68 85       	ldd	r22, Y+8	; 0x08
     78a:	79 85       	ldd	r23, Y+9	; 0x09
     78c:	8a 85       	ldd	r24, Y+10	; 0x0a
     78e:	9b 85       	ldd	r25, Y+11	; 0x0b
     790:	20 e0       	ldi	r18, 0x00	; 0
     792:	3f ef       	ldi	r19, 0xFF	; 255
     794:	4f e7       	ldi	r20, 0x7F	; 127
     796:	57 e4       	ldi	r21, 0x47	; 71
     798:	0e 94 b0 07 	call	0xf60	; 0xf60 <__gtsf2>
     79c:	18 16       	cp	r1, r24
     79e:	4c f5       	brge	.+82     	; 0x7f2 <UltraDist+0x156>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     7a0:	6c 85       	ldd	r22, Y+12	; 0x0c
     7a2:	7d 85       	ldd	r23, Y+13	; 0x0d
     7a4:	8e 85       	ldd	r24, Y+14	; 0x0e
     7a6:	9f 85       	ldd	r25, Y+15	; 0x0f
     7a8:	20 e0       	ldi	r18, 0x00	; 0
     7aa:	30 e0       	ldi	r19, 0x00	; 0
     7ac:	40 e2       	ldi	r20, 0x20	; 32
     7ae:	51 e4       	ldi	r21, 0x41	; 65
     7b0:	0e 94 0a 06 	call	0xc14	; 0xc14 <__mulsf3>
     7b4:	dc 01       	movw	r26, r24
     7b6:	cb 01       	movw	r24, r22
     7b8:	bc 01       	movw	r22, r24
     7ba:	cd 01       	movw	r24, r26
     7bc:	0e 94 34 04 	call	0x868	; 0x868 <__fixunssfsi>
     7c0:	dc 01       	movw	r26, r24
     7c2:	cb 01       	movw	r24, r22
     7c4:	9f 83       	std	Y+7, r25	; 0x07
     7c6:	8e 83       	std	Y+6, r24	; 0x06
     7c8:	0f c0       	rjmp	.+30     	; 0x7e8 <UltraDist+0x14c>
     7ca:	80 e9       	ldi	r24, 0x90	; 144
     7cc:	91 e0       	ldi	r25, 0x01	; 1
     7ce:	9d 83       	std	Y+5, r25	; 0x05
     7d0:	8c 83       	std	Y+4, r24	; 0x04
     7d2:	8c 81       	ldd	r24, Y+4	; 0x04
     7d4:	9d 81       	ldd	r25, Y+5	; 0x05
     7d6:	01 97       	sbiw	r24, 0x01	; 1
     7d8:	f1 f7       	brne	.-4      	; 0x7d6 <UltraDist+0x13a>
     7da:	9d 83       	std	Y+5, r25	; 0x05
     7dc:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     7de:	8e 81       	ldd	r24, Y+6	; 0x06
     7e0:	9f 81       	ldd	r25, Y+7	; 0x07
     7e2:	01 97       	sbiw	r24, 0x01	; 1
     7e4:	9f 83       	std	Y+7, r25	; 0x07
     7e6:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     7e8:	8e 81       	ldd	r24, Y+6	; 0x06
     7ea:	9f 81       	ldd	r25, Y+7	; 0x07
     7ec:	00 97       	sbiw	r24, 0x00	; 0
     7ee:	69 f7       	brne	.-38     	; 0x7ca <UltraDist+0x12e>
     7f0:	24 c0       	rjmp	.+72     	; 0x83a <UltraDist+0x19e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     7f2:	68 85       	ldd	r22, Y+8	; 0x08
     7f4:	79 85       	ldd	r23, Y+9	; 0x09
     7f6:	8a 85       	ldd	r24, Y+10	; 0x0a
     7f8:	9b 85       	ldd	r25, Y+11	; 0x0b
     7fa:	0e 94 34 04 	call	0x868	; 0x868 <__fixunssfsi>
     7fe:	dc 01       	movw	r26, r24
     800:	cb 01       	movw	r24, r22
     802:	9f 83       	std	Y+7, r25	; 0x07
     804:	8e 83       	std	Y+6, r24	; 0x06
     806:	8e 81       	ldd	r24, Y+6	; 0x06
     808:	9f 81       	ldd	r25, Y+7	; 0x07
     80a:	9b 83       	std	Y+3, r25	; 0x03
     80c:	8a 83       	std	Y+2, r24	; 0x02
     80e:	8a 81       	ldd	r24, Y+2	; 0x02
     810:	9b 81       	ldd	r25, Y+3	; 0x03
     812:	01 97       	sbiw	r24, 0x01	; 1
     814:	f1 f7       	brne	.-4      	; 0x812 <UltraDist+0x176>
     816:	9b 83       	std	Y+3, r25	; 0x03
     818:	8a 83       	std	Y+2, r24	; 0x02
     81a:	0f c0       	rjmp	.+30     	; 0x83a <UltraDist+0x19e>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     81c:	69 89       	ldd	r22, Y+17	; 0x11
     81e:	7a 89       	ldd	r23, Y+18	; 0x12
     820:	8b 89       	ldd	r24, Y+19	; 0x13
     822:	9c 89       	ldd	r25, Y+20	; 0x14
     824:	0e 94 34 04 	call	0x868	; 0x868 <__fixunssfsi>
     828:	dc 01       	movw	r26, r24
     82a:	cb 01       	movw	r24, r22
     82c:	88 8b       	std	Y+16, r24	; 0x10
     82e:	88 89       	ldd	r24, Y+16	; 0x10
     830:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     832:	89 81       	ldd	r24, Y+1	; 0x01
     834:	8a 95       	dec	r24
     836:	f1 f7       	brne	.-4      	; 0x834 <UltraDist+0x198>
     838:	89 83       	std	Y+1, r24	; 0x01
    _delay_us(10);
    PORTD &= ~_BV(triggerPin);
     83a:	ab e2       	ldi	r26, 0x2B	; 43
     83c:	b0 e0       	ldi	r27, 0x00	; 0
     83e:	eb e2       	ldi	r30, 0x2B	; 43
     840:	f0 e0       	ldi	r31, 0x00	; 0
     842:	80 81       	ld	r24, Z
     844:	8f 77       	andi	r24, 0x7F	; 127
     846:	8c 93       	st	X, r24
}
     848:	6a 96       	adiw	r28, 0x1a	; 26
     84a:	0f b6       	in	r0, 0x3f	; 63
     84c:	f8 94       	cli
     84e:	de bf       	out	0x3e, r29	; 62
     850:	0f be       	out	0x3f, r0	; 63
     852:	cd bf       	out	0x3d, r28	; 61
     854:	cf 91       	pop	r28
     856:	df 91       	pop	r29
     858:	08 95       	ret

0000085a <main>:

int main(void)
{
     85a:	df 93       	push	r29
     85c:	cf 93       	push	r28
     85e:	cd b7       	in	r28, 0x3d	; 61
     860:	de b7       	in	r29, 0x3e	; 62
    init();
     862:	0e 94 4b 00 	call	0x96	; 0x96 <init>
     866:	ff cf       	rjmp	.-2      	; 0x866 <main+0xc>

00000868 <__fixunssfsi>:
     868:	ef 92       	push	r14
     86a:	ff 92       	push	r15
     86c:	0f 93       	push	r16
     86e:	1f 93       	push	r17
     870:	7b 01       	movw	r14, r22
     872:	8c 01       	movw	r16, r24
     874:	20 e0       	ldi	r18, 0x00	; 0
     876:	30 e0       	ldi	r19, 0x00	; 0
     878:	40 e0       	ldi	r20, 0x00	; 0
     87a:	5f e4       	ldi	r21, 0x4F	; 79
     87c:	0e 94 e0 07 	call	0xfc0	; 0xfc0 <__gesf2>
     880:	88 23       	and	r24, r24
     882:	8c f0       	brlt	.+34     	; 0x8a6 <__fixunssfsi+0x3e>
     884:	c8 01       	movw	r24, r16
     886:	b7 01       	movw	r22, r14
     888:	20 e0       	ldi	r18, 0x00	; 0
     88a:	30 e0       	ldi	r19, 0x00	; 0
     88c:	40 e0       	ldi	r20, 0x00	; 0
     88e:	5f e4       	ldi	r21, 0x4F	; 79
     890:	0e 94 ac 05 	call	0xb58	; 0xb58 <__subsf3>
     894:	0e 94 9e 08 	call	0x113c	; 0x113c <__fixsfsi>
     898:	9b 01       	movw	r18, r22
     89a:	ac 01       	movw	r20, r24
     89c:	20 50       	subi	r18, 0x00	; 0
     89e:	30 40       	sbci	r19, 0x00	; 0
     8a0:	40 40       	sbci	r20, 0x00	; 0
     8a2:	50 48       	sbci	r21, 0x80	; 128
     8a4:	06 c0       	rjmp	.+12     	; 0x8b2 <__fixunssfsi+0x4a>
     8a6:	c8 01       	movw	r24, r16
     8a8:	b7 01       	movw	r22, r14
     8aa:	0e 94 9e 08 	call	0x113c	; 0x113c <__fixsfsi>
     8ae:	9b 01       	movw	r18, r22
     8b0:	ac 01       	movw	r20, r24
     8b2:	b9 01       	movw	r22, r18
     8b4:	ca 01       	movw	r24, r20
     8b6:	1f 91       	pop	r17
     8b8:	0f 91       	pop	r16
     8ba:	ff 90       	pop	r15
     8bc:	ef 90       	pop	r14
     8be:	08 95       	ret

000008c0 <_fpadd_parts>:
     8c0:	a0 e0       	ldi	r26, 0x00	; 0
     8c2:	b0 e0       	ldi	r27, 0x00	; 0
     8c4:	e6 e6       	ldi	r30, 0x66	; 102
     8c6:	f4 e0       	ldi	r31, 0x04	; 4
     8c8:	0c 94 e7 0a 	jmp	0x15ce	; 0x15ce <__prologue_saves__>
     8cc:	dc 01       	movw	r26, r24
     8ce:	2b 01       	movw	r4, r22
     8d0:	fa 01       	movw	r30, r20
     8d2:	9c 91       	ld	r25, X
     8d4:	92 30       	cpi	r25, 0x02	; 2
     8d6:	08 f4       	brcc	.+2      	; 0x8da <_fpadd_parts+0x1a>
     8d8:	39 c1       	rjmp	.+626    	; 0xb4c <__stack+0x24d>
     8da:	eb 01       	movw	r28, r22
     8dc:	88 81       	ld	r24, Y
     8de:	82 30       	cpi	r24, 0x02	; 2
     8e0:	08 f4       	brcc	.+2      	; 0x8e4 <_fpadd_parts+0x24>
     8e2:	33 c1       	rjmp	.+614    	; 0xb4a <__stack+0x24b>
     8e4:	94 30       	cpi	r25, 0x04	; 4
     8e6:	69 f4       	brne	.+26     	; 0x902 <__stack+0x3>
     8e8:	84 30       	cpi	r24, 0x04	; 4
     8ea:	09 f0       	breq	.+2      	; 0x8ee <_fpadd_parts+0x2e>
     8ec:	2f c1       	rjmp	.+606    	; 0xb4c <__stack+0x24d>
     8ee:	11 96       	adiw	r26, 0x01	; 1
     8f0:	9c 91       	ld	r25, X
     8f2:	11 97       	sbiw	r26, 0x01	; 1
     8f4:	89 81       	ldd	r24, Y+1	; 0x01
     8f6:	98 17       	cp	r25, r24
     8f8:	09 f4       	brne	.+2      	; 0x8fc <_fpadd_parts+0x3c>
     8fa:	28 c1       	rjmp	.+592    	; 0xb4c <__stack+0x24d>
     8fc:	a0 e0       	ldi	r26, 0x00	; 0
     8fe:	b1 e0       	ldi	r27, 0x01	; 1
     900:	25 c1       	rjmp	.+586    	; 0xb4c <__stack+0x24d>
     902:	84 30       	cpi	r24, 0x04	; 4
     904:	09 f4       	brne	.+2      	; 0x908 <__stack+0x9>
     906:	21 c1       	rjmp	.+578    	; 0xb4a <__stack+0x24b>
     908:	82 30       	cpi	r24, 0x02	; 2
     90a:	a9 f4       	brne	.+42     	; 0x936 <__stack+0x37>
     90c:	92 30       	cpi	r25, 0x02	; 2
     90e:	09 f0       	breq	.+2      	; 0x912 <__stack+0x13>
     910:	1d c1       	rjmp	.+570    	; 0xb4c <__stack+0x24d>
     912:	9a 01       	movw	r18, r20
     914:	ad 01       	movw	r20, r26
     916:	88 e0       	ldi	r24, 0x08	; 8
     918:	ea 01       	movw	r28, r20
     91a:	09 90       	ld	r0, Y+
     91c:	ae 01       	movw	r20, r28
     91e:	e9 01       	movw	r28, r18
     920:	09 92       	st	Y+, r0
     922:	9e 01       	movw	r18, r28
     924:	81 50       	subi	r24, 0x01	; 1
     926:	c1 f7       	brne	.-16     	; 0x918 <__stack+0x19>
     928:	e2 01       	movw	r28, r4
     92a:	89 81       	ldd	r24, Y+1	; 0x01
     92c:	11 96       	adiw	r26, 0x01	; 1
     92e:	9c 91       	ld	r25, X
     930:	89 23       	and	r24, r25
     932:	81 83       	std	Z+1, r24	; 0x01
     934:	08 c1       	rjmp	.+528    	; 0xb46 <__stack+0x247>
     936:	92 30       	cpi	r25, 0x02	; 2
     938:	09 f4       	brne	.+2      	; 0x93c <__stack+0x3d>
     93a:	07 c1       	rjmp	.+526    	; 0xb4a <__stack+0x24b>
     93c:	12 96       	adiw	r26, 0x02	; 2
     93e:	2d 90       	ld	r2, X+
     940:	3c 90       	ld	r3, X
     942:	13 97       	sbiw	r26, 0x03	; 3
     944:	eb 01       	movw	r28, r22
     946:	8a 81       	ldd	r24, Y+2	; 0x02
     948:	9b 81       	ldd	r25, Y+3	; 0x03
     94a:	14 96       	adiw	r26, 0x04	; 4
     94c:	ad 90       	ld	r10, X+
     94e:	bd 90       	ld	r11, X+
     950:	cd 90       	ld	r12, X+
     952:	dc 90       	ld	r13, X
     954:	17 97       	sbiw	r26, 0x07	; 7
     956:	ec 80       	ldd	r14, Y+4	; 0x04
     958:	fd 80       	ldd	r15, Y+5	; 0x05
     95a:	0e 81       	ldd	r16, Y+6	; 0x06
     95c:	1f 81       	ldd	r17, Y+7	; 0x07
     95e:	91 01       	movw	r18, r2
     960:	28 1b       	sub	r18, r24
     962:	39 0b       	sbc	r19, r25
     964:	b9 01       	movw	r22, r18
     966:	37 ff       	sbrs	r19, 7
     968:	04 c0       	rjmp	.+8      	; 0x972 <__stack+0x73>
     96a:	66 27       	eor	r22, r22
     96c:	77 27       	eor	r23, r23
     96e:	62 1b       	sub	r22, r18
     970:	73 0b       	sbc	r23, r19
     972:	60 32       	cpi	r22, 0x20	; 32
     974:	71 05       	cpc	r23, r1
     976:	0c f0       	brlt	.+2      	; 0x97a <__stack+0x7b>
     978:	61 c0       	rjmp	.+194    	; 0xa3c <__stack+0x13d>
     97a:	12 16       	cp	r1, r18
     97c:	13 06       	cpc	r1, r19
     97e:	6c f5       	brge	.+90     	; 0x9da <__stack+0xdb>
     980:	37 01       	movw	r6, r14
     982:	48 01       	movw	r8, r16
     984:	06 2e       	mov	r0, r22
     986:	04 c0       	rjmp	.+8      	; 0x990 <__stack+0x91>
     988:	96 94       	lsr	r9
     98a:	87 94       	ror	r8
     98c:	77 94       	ror	r7
     98e:	67 94       	ror	r6
     990:	0a 94       	dec	r0
     992:	d2 f7       	brpl	.-12     	; 0x988 <__stack+0x89>
     994:	21 e0       	ldi	r18, 0x01	; 1
     996:	30 e0       	ldi	r19, 0x00	; 0
     998:	40 e0       	ldi	r20, 0x00	; 0
     99a:	50 e0       	ldi	r21, 0x00	; 0
     99c:	04 c0       	rjmp	.+8      	; 0x9a6 <__stack+0xa7>
     99e:	22 0f       	add	r18, r18
     9a0:	33 1f       	adc	r19, r19
     9a2:	44 1f       	adc	r20, r20
     9a4:	55 1f       	adc	r21, r21
     9a6:	6a 95       	dec	r22
     9a8:	d2 f7       	brpl	.-12     	; 0x99e <__stack+0x9f>
     9aa:	21 50       	subi	r18, 0x01	; 1
     9ac:	30 40       	sbci	r19, 0x00	; 0
     9ae:	40 40       	sbci	r20, 0x00	; 0
     9b0:	50 40       	sbci	r21, 0x00	; 0
     9b2:	2e 21       	and	r18, r14
     9b4:	3f 21       	and	r19, r15
     9b6:	40 23       	and	r20, r16
     9b8:	51 23       	and	r21, r17
     9ba:	21 15       	cp	r18, r1
     9bc:	31 05       	cpc	r19, r1
     9be:	41 05       	cpc	r20, r1
     9c0:	51 05       	cpc	r21, r1
     9c2:	21 f0       	breq	.+8      	; 0x9cc <__stack+0xcd>
     9c4:	21 e0       	ldi	r18, 0x01	; 1
     9c6:	30 e0       	ldi	r19, 0x00	; 0
     9c8:	40 e0       	ldi	r20, 0x00	; 0
     9ca:	50 e0       	ldi	r21, 0x00	; 0
     9cc:	79 01       	movw	r14, r18
     9ce:	8a 01       	movw	r16, r20
     9d0:	e6 28       	or	r14, r6
     9d2:	f7 28       	or	r15, r7
     9d4:	08 29       	or	r16, r8
     9d6:	19 29       	or	r17, r9
     9d8:	3c c0       	rjmp	.+120    	; 0xa52 <__stack+0x153>
     9da:	23 2b       	or	r18, r19
     9dc:	d1 f1       	breq	.+116    	; 0xa52 <__stack+0x153>
     9de:	26 0e       	add	r2, r22
     9e0:	37 1e       	adc	r3, r23
     9e2:	35 01       	movw	r6, r10
     9e4:	46 01       	movw	r8, r12
     9e6:	06 2e       	mov	r0, r22
     9e8:	04 c0       	rjmp	.+8      	; 0x9f2 <__stack+0xf3>
     9ea:	96 94       	lsr	r9
     9ec:	87 94       	ror	r8
     9ee:	77 94       	ror	r7
     9f0:	67 94       	ror	r6
     9f2:	0a 94       	dec	r0
     9f4:	d2 f7       	brpl	.-12     	; 0x9ea <__stack+0xeb>
     9f6:	21 e0       	ldi	r18, 0x01	; 1
     9f8:	30 e0       	ldi	r19, 0x00	; 0
     9fa:	40 e0       	ldi	r20, 0x00	; 0
     9fc:	50 e0       	ldi	r21, 0x00	; 0
     9fe:	04 c0       	rjmp	.+8      	; 0xa08 <__stack+0x109>
     a00:	22 0f       	add	r18, r18
     a02:	33 1f       	adc	r19, r19
     a04:	44 1f       	adc	r20, r20
     a06:	55 1f       	adc	r21, r21
     a08:	6a 95       	dec	r22
     a0a:	d2 f7       	brpl	.-12     	; 0xa00 <__stack+0x101>
     a0c:	21 50       	subi	r18, 0x01	; 1
     a0e:	30 40       	sbci	r19, 0x00	; 0
     a10:	40 40       	sbci	r20, 0x00	; 0
     a12:	50 40       	sbci	r21, 0x00	; 0
     a14:	2a 21       	and	r18, r10
     a16:	3b 21       	and	r19, r11
     a18:	4c 21       	and	r20, r12
     a1a:	5d 21       	and	r21, r13
     a1c:	21 15       	cp	r18, r1
     a1e:	31 05       	cpc	r19, r1
     a20:	41 05       	cpc	r20, r1
     a22:	51 05       	cpc	r21, r1
     a24:	21 f0       	breq	.+8      	; 0xa2e <__stack+0x12f>
     a26:	21 e0       	ldi	r18, 0x01	; 1
     a28:	30 e0       	ldi	r19, 0x00	; 0
     a2a:	40 e0       	ldi	r20, 0x00	; 0
     a2c:	50 e0       	ldi	r21, 0x00	; 0
     a2e:	59 01       	movw	r10, r18
     a30:	6a 01       	movw	r12, r20
     a32:	a6 28       	or	r10, r6
     a34:	b7 28       	or	r11, r7
     a36:	c8 28       	or	r12, r8
     a38:	d9 28       	or	r13, r9
     a3a:	0b c0       	rjmp	.+22     	; 0xa52 <__stack+0x153>
     a3c:	82 15       	cp	r24, r2
     a3e:	93 05       	cpc	r25, r3
     a40:	2c f0       	brlt	.+10     	; 0xa4c <__stack+0x14d>
     a42:	1c 01       	movw	r2, r24
     a44:	aa 24       	eor	r10, r10
     a46:	bb 24       	eor	r11, r11
     a48:	65 01       	movw	r12, r10
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__stack+0x153>
     a4c:	ee 24       	eor	r14, r14
     a4e:	ff 24       	eor	r15, r15
     a50:	87 01       	movw	r16, r14
     a52:	11 96       	adiw	r26, 0x01	; 1
     a54:	9c 91       	ld	r25, X
     a56:	d2 01       	movw	r26, r4
     a58:	11 96       	adiw	r26, 0x01	; 1
     a5a:	8c 91       	ld	r24, X
     a5c:	98 17       	cp	r25, r24
     a5e:	09 f4       	brne	.+2      	; 0xa62 <__stack+0x163>
     a60:	45 c0       	rjmp	.+138    	; 0xaec <__stack+0x1ed>
     a62:	99 23       	and	r25, r25
     a64:	39 f0       	breq	.+14     	; 0xa74 <__stack+0x175>
     a66:	a8 01       	movw	r20, r16
     a68:	97 01       	movw	r18, r14
     a6a:	2a 19       	sub	r18, r10
     a6c:	3b 09       	sbc	r19, r11
     a6e:	4c 09       	sbc	r20, r12
     a70:	5d 09       	sbc	r21, r13
     a72:	06 c0       	rjmp	.+12     	; 0xa80 <__stack+0x181>
     a74:	a6 01       	movw	r20, r12
     a76:	95 01       	movw	r18, r10
     a78:	2e 19       	sub	r18, r14
     a7a:	3f 09       	sbc	r19, r15
     a7c:	40 0b       	sbc	r20, r16
     a7e:	51 0b       	sbc	r21, r17
     a80:	57 fd       	sbrc	r21, 7
     a82:	08 c0       	rjmp	.+16     	; 0xa94 <__stack+0x195>
     a84:	11 82       	std	Z+1, r1	; 0x01
     a86:	33 82       	std	Z+3, r3	; 0x03
     a88:	22 82       	std	Z+2, r2	; 0x02
     a8a:	24 83       	std	Z+4, r18	; 0x04
     a8c:	35 83       	std	Z+5, r19	; 0x05
     a8e:	46 83       	std	Z+6, r20	; 0x06
     a90:	57 83       	std	Z+7, r21	; 0x07
     a92:	1d c0       	rjmp	.+58     	; 0xace <__stack+0x1cf>
     a94:	81 e0       	ldi	r24, 0x01	; 1
     a96:	81 83       	std	Z+1, r24	; 0x01
     a98:	33 82       	std	Z+3, r3	; 0x03
     a9a:	22 82       	std	Z+2, r2	; 0x02
     a9c:	88 27       	eor	r24, r24
     a9e:	99 27       	eor	r25, r25
     aa0:	dc 01       	movw	r26, r24
     aa2:	82 1b       	sub	r24, r18
     aa4:	93 0b       	sbc	r25, r19
     aa6:	a4 0b       	sbc	r26, r20
     aa8:	b5 0b       	sbc	r27, r21
     aaa:	84 83       	std	Z+4, r24	; 0x04
     aac:	95 83       	std	Z+5, r25	; 0x05
     aae:	a6 83       	std	Z+6, r26	; 0x06
     ab0:	b7 83       	std	Z+7, r27	; 0x07
     ab2:	0d c0       	rjmp	.+26     	; 0xace <__stack+0x1cf>
     ab4:	22 0f       	add	r18, r18
     ab6:	33 1f       	adc	r19, r19
     ab8:	44 1f       	adc	r20, r20
     aba:	55 1f       	adc	r21, r21
     abc:	24 83       	std	Z+4, r18	; 0x04
     abe:	35 83       	std	Z+5, r19	; 0x05
     ac0:	46 83       	std	Z+6, r20	; 0x06
     ac2:	57 83       	std	Z+7, r21	; 0x07
     ac4:	82 81       	ldd	r24, Z+2	; 0x02
     ac6:	93 81       	ldd	r25, Z+3	; 0x03
     ac8:	01 97       	sbiw	r24, 0x01	; 1
     aca:	93 83       	std	Z+3, r25	; 0x03
     acc:	82 83       	std	Z+2, r24	; 0x02
     ace:	24 81       	ldd	r18, Z+4	; 0x04
     ad0:	35 81       	ldd	r19, Z+5	; 0x05
     ad2:	46 81       	ldd	r20, Z+6	; 0x06
     ad4:	57 81       	ldd	r21, Z+7	; 0x07
     ad6:	da 01       	movw	r26, r20
     ad8:	c9 01       	movw	r24, r18
     ada:	01 97       	sbiw	r24, 0x01	; 1
     adc:	a1 09       	sbc	r26, r1
     ade:	b1 09       	sbc	r27, r1
     ae0:	8f 5f       	subi	r24, 0xFF	; 255
     ae2:	9f 4f       	sbci	r25, 0xFF	; 255
     ae4:	af 4f       	sbci	r26, 0xFF	; 255
     ae6:	bf 43       	sbci	r27, 0x3F	; 63
     ae8:	28 f3       	brcs	.-54     	; 0xab4 <__stack+0x1b5>
     aea:	0b c0       	rjmp	.+22     	; 0xb02 <__stack+0x203>
     aec:	91 83       	std	Z+1, r25	; 0x01
     aee:	33 82       	std	Z+3, r3	; 0x03
     af0:	22 82       	std	Z+2, r2	; 0x02
     af2:	ea 0c       	add	r14, r10
     af4:	fb 1c       	adc	r15, r11
     af6:	0c 1d       	adc	r16, r12
     af8:	1d 1d       	adc	r17, r13
     afa:	e4 82       	std	Z+4, r14	; 0x04
     afc:	f5 82       	std	Z+5, r15	; 0x05
     afe:	06 83       	std	Z+6, r16	; 0x06
     b00:	17 83       	std	Z+7, r17	; 0x07
     b02:	83 e0       	ldi	r24, 0x03	; 3
     b04:	80 83       	st	Z, r24
     b06:	24 81       	ldd	r18, Z+4	; 0x04
     b08:	35 81       	ldd	r19, Z+5	; 0x05
     b0a:	46 81       	ldd	r20, Z+6	; 0x06
     b0c:	57 81       	ldd	r21, Z+7	; 0x07
     b0e:	57 ff       	sbrs	r21, 7
     b10:	1a c0       	rjmp	.+52     	; 0xb46 <__stack+0x247>
     b12:	c9 01       	movw	r24, r18
     b14:	aa 27       	eor	r26, r26
     b16:	97 fd       	sbrc	r25, 7
     b18:	a0 95       	com	r26
     b1a:	ba 2f       	mov	r27, r26
     b1c:	81 70       	andi	r24, 0x01	; 1
     b1e:	90 70       	andi	r25, 0x00	; 0
     b20:	a0 70       	andi	r26, 0x00	; 0
     b22:	b0 70       	andi	r27, 0x00	; 0
     b24:	56 95       	lsr	r21
     b26:	47 95       	ror	r20
     b28:	37 95       	ror	r19
     b2a:	27 95       	ror	r18
     b2c:	82 2b       	or	r24, r18
     b2e:	93 2b       	or	r25, r19
     b30:	a4 2b       	or	r26, r20
     b32:	b5 2b       	or	r27, r21
     b34:	84 83       	std	Z+4, r24	; 0x04
     b36:	95 83       	std	Z+5, r25	; 0x05
     b38:	a6 83       	std	Z+6, r26	; 0x06
     b3a:	b7 83       	std	Z+7, r27	; 0x07
     b3c:	82 81       	ldd	r24, Z+2	; 0x02
     b3e:	93 81       	ldd	r25, Z+3	; 0x03
     b40:	01 96       	adiw	r24, 0x01	; 1
     b42:	93 83       	std	Z+3, r25	; 0x03
     b44:	82 83       	std	Z+2, r24	; 0x02
     b46:	df 01       	movw	r26, r30
     b48:	01 c0       	rjmp	.+2      	; 0xb4c <__stack+0x24d>
     b4a:	d2 01       	movw	r26, r4
     b4c:	cd 01       	movw	r24, r26
     b4e:	cd b7       	in	r28, 0x3d	; 61
     b50:	de b7       	in	r29, 0x3e	; 62
     b52:	e2 e1       	ldi	r30, 0x12	; 18
     b54:	0c 94 03 0b 	jmp	0x1606	; 0x1606 <__epilogue_restores__>

00000b58 <__subsf3>:
     b58:	a0 e2       	ldi	r26, 0x20	; 32
     b5a:	b0 e0       	ldi	r27, 0x00	; 0
     b5c:	e2 eb       	ldi	r30, 0xB2	; 178
     b5e:	f5 e0       	ldi	r31, 0x05	; 5
     b60:	0c 94 f3 0a 	jmp	0x15e6	; 0x15e6 <__prologue_saves__+0x18>
     b64:	69 83       	std	Y+1, r22	; 0x01
     b66:	7a 83       	std	Y+2, r23	; 0x02
     b68:	8b 83       	std	Y+3, r24	; 0x03
     b6a:	9c 83       	std	Y+4, r25	; 0x04
     b6c:	2d 83       	std	Y+5, r18	; 0x05
     b6e:	3e 83       	std	Y+6, r19	; 0x06
     b70:	4f 83       	std	Y+7, r20	; 0x07
     b72:	58 87       	std	Y+8, r21	; 0x08
     b74:	e9 e0       	ldi	r30, 0x09	; 9
     b76:	ee 2e       	mov	r14, r30
     b78:	f1 2c       	mov	r15, r1
     b7a:	ec 0e       	add	r14, r28
     b7c:	fd 1e       	adc	r15, r29
     b7e:	ce 01       	movw	r24, r28
     b80:	01 96       	adiw	r24, 0x01	; 1
     b82:	b7 01       	movw	r22, r14
     b84:	0e 94 16 0a 	call	0x142c	; 0x142c <__unpack_f>
     b88:	8e 01       	movw	r16, r28
     b8a:	0f 5e       	subi	r16, 0xEF	; 239
     b8c:	1f 4f       	sbci	r17, 0xFF	; 255
     b8e:	ce 01       	movw	r24, r28
     b90:	05 96       	adiw	r24, 0x05	; 5
     b92:	b8 01       	movw	r22, r16
     b94:	0e 94 16 0a 	call	0x142c	; 0x142c <__unpack_f>
     b98:	8a 89       	ldd	r24, Y+18	; 0x12
     b9a:	91 e0       	ldi	r25, 0x01	; 1
     b9c:	89 27       	eor	r24, r25
     b9e:	8a 8b       	std	Y+18, r24	; 0x12
     ba0:	c7 01       	movw	r24, r14
     ba2:	b8 01       	movw	r22, r16
     ba4:	ae 01       	movw	r20, r28
     ba6:	47 5e       	subi	r20, 0xE7	; 231
     ba8:	5f 4f       	sbci	r21, 0xFF	; 255
     baa:	0e 94 60 04 	call	0x8c0	; 0x8c0 <_fpadd_parts>
     bae:	0e 94 41 09 	call	0x1282	; 0x1282 <__pack_f>
     bb2:	a0 96       	adiw	r28, 0x20	; 32
     bb4:	e6 e0       	ldi	r30, 0x06	; 6
     bb6:	0c 94 0f 0b 	jmp	0x161e	; 0x161e <__epilogue_restores__+0x18>

00000bba <__addsf3>:
     bba:	a0 e2       	ldi	r26, 0x20	; 32
     bbc:	b0 e0       	ldi	r27, 0x00	; 0
     bbe:	e3 ee       	ldi	r30, 0xE3	; 227
     bc0:	f5 e0       	ldi	r31, 0x05	; 5
     bc2:	0c 94 f3 0a 	jmp	0x15e6	; 0x15e6 <__prologue_saves__+0x18>
     bc6:	69 83       	std	Y+1, r22	; 0x01
     bc8:	7a 83       	std	Y+2, r23	; 0x02
     bca:	8b 83       	std	Y+3, r24	; 0x03
     bcc:	9c 83       	std	Y+4, r25	; 0x04
     bce:	2d 83       	std	Y+5, r18	; 0x05
     bd0:	3e 83       	std	Y+6, r19	; 0x06
     bd2:	4f 83       	std	Y+7, r20	; 0x07
     bd4:	58 87       	std	Y+8, r21	; 0x08
     bd6:	f9 e0       	ldi	r31, 0x09	; 9
     bd8:	ef 2e       	mov	r14, r31
     bda:	f1 2c       	mov	r15, r1
     bdc:	ec 0e       	add	r14, r28
     bde:	fd 1e       	adc	r15, r29
     be0:	ce 01       	movw	r24, r28
     be2:	01 96       	adiw	r24, 0x01	; 1
     be4:	b7 01       	movw	r22, r14
     be6:	0e 94 16 0a 	call	0x142c	; 0x142c <__unpack_f>
     bea:	8e 01       	movw	r16, r28
     bec:	0f 5e       	subi	r16, 0xEF	; 239
     bee:	1f 4f       	sbci	r17, 0xFF	; 255
     bf0:	ce 01       	movw	r24, r28
     bf2:	05 96       	adiw	r24, 0x05	; 5
     bf4:	b8 01       	movw	r22, r16
     bf6:	0e 94 16 0a 	call	0x142c	; 0x142c <__unpack_f>
     bfa:	c7 01       	movw	r24, r14
     bfc:	b8 01       	movw	r22, r16
     bfe:	ae 01       	movw	r20, r28
     c00:	47 5e       	subi	r20, 0xE7	; 231
     c02:	5f 4f       	sbci	r21, 0xFF	; 255
     c04:	0e 94 60 04 	call	0x8c0	; 0x8c0 <_fpadd_parts>
     c08:	0e 94 41 09 	call	0x1282	; 0x1282 <__pack_f>
     c0c:	a0 96       	adiw	r28, 0x20	; 32
     c0e:	e6 e0       	ldi	r30, 0x06	; 6
     c10:	0c 94 0f 0b 	jmp	0x161e	; 0x161e <__epilogue_restores__+0x18>

00000c14 <__mulsf3>:
     c14:	a0 e2       	ldi	r26, 0x20	; 32
     c16:	b0 e0       	ldi	r27, 0x00	; 0
     c18:	e0 e1       	ldi	r30, 0x10	; 16
     c1a:	f6 e0       	ldi	r31, 0x06	; 6
     c1c:	0c 94 e7 0a 	jmp	0x15ce	; 0x15ce <__prologue_saves__>
     c20:	69 83       	std	Y+1, r22	; 0x01
     c22:	7a 83       	std	Y+2, r23	; 0x02
     c24:	8b 83       	std	Y+3, r24	; 0x03
     c26:	9c 83       	std	Y+4, r25	; 0x04
     c28:	2d 83       	std	Y+5, r18	; 0x05
     c2a:	3e 83       	std	Y+6, r19	; 0x06
     c2c:	4f 83       	std	Y+7, r20	; 0x07
     c2e:	58 87       	std	Y+8, r21	; 0x08
     c30:	ce 01       	movw	r24, r28
     c32:	01 96       	adiw	r24, 0x01	; 1
     c34:	be 01       	movw	r22, r28
     c36:	67 5f       	subi	r22, 0xF7	; 247
     c38:	7f 4f       	sbci	r23, 0xFF	; 255
     c3a:	0e 94 16 0a 	call	0x142c	; 0x142c <__unpack_f>
     c3e:	ce 01       	movw	r24, r28
     c40:	05 96       	adiw	r24, 0x05	; 5
     c42:	be 01       	movw	r22, r28
     c44:	6f 5e       	subi	r22, 0xEF	; 239
     c46:	7f 4f       	sbci	r23, 0xFF	; 255
     c48:	0e 94 16 0a 	call	0x142c	; 0x142c <__unpack_f>
     c4c:	99 85       	ldd	r25, Y+9	; 0x09
     c4e:	92 30       	cpi	r25, 0x02	; 2
     c50:	88 f0       	brcs	.+34     	; 0xc74 <__mulsf3+0x60>
     c52:	89 89       	ldd	r24, Y+17	; 0x11
     c54:	82 30       	cpi	r24, 0x02	; 2
     c56:	c8 f0       	brcs	.+50     	; 0xc8a <__mulsf3+0x76>
     c58:	94 30       	cpi	r25, 0x04	; 4
     c5a:	19 f4       	brne	.+6      	; 0xc62 <__mulsf3+0x4e>
     c5c:	82 30       	cpi	r24, 0x02	; 2
     c5e:	51 f4       	brne	.+20     	; 0xc74 <__mulsf3+0x60>
     c60:	04 c0       	rjmp	.+8      	; 0xc6a <__mulsf3+0x56>
     c62:	84 30       	cpi	r24, 0x04	; 4
     c64:	29 f4       	brne	.+10     	; 0xc70 <__mulsf3+0x5c>
     c66:	92 30       	cpi	r25, 0x02	; 2
     c68:	81 f4       	brne	.+32     	; 0xc8a <__mulsf3+0x76>
     c6a:	80 e0       	ldi	r24, 0x00	; 0
     c6c:	91 e0       	ldi	r25, 0x01	; 1
     c6e:	c6 c0       	rjmp	.+396    	; 0xdfc <__mulsf3+0x1e8>
     c70:	92 30       	cpi	r25, 0x02	; 2
     c72:	49 f4       	brne	.+18     	; 0xc86 <__mulsf3+0x72>
     c74:	20 e0       	ldi	r18, 0x00	; 0
     c76:	9a 85       	ldd	r25, Y+10	; 0x0a
     c78:	8a 89       	ldd	r24, Y+18	; 0x12
     c7a:	98 13       	cpse	r25, r24
     c7c:	21 e0       	ldi	r18, 0x01	; 1
     c7e:	2a 87       	std	Y+10, r18	; 0x0a
     c80:	ce 01       	movw	r24, r28
     c82:	09 96       	adiw	r24, 0x09	; 9
     c84:	bb c0       	rjmp	.+374    	; 0xdfc <__mulsf3+0x1e8>
     c86:	82 30       	cpi	r24, 0x02	; 2
     c88:	49 f4       	brne	.+18     	; 0xc9c <__mulsf3+0x88>
     c8a:	20 e0       	ldi	r18, 0x00	; 0
     c8c:	9a 85       	ldd	r25, Y+10	; 0x0a
     c8e:	8a 89       	ldd	r24, Y+18	; 0x12
     c90:	98 13       	cpse	r25, r24
     c92:	21 e0       	ldi	r18, 0x01	; 1
     c94:	2a 8b       	std	Y+18, r18	; 0x12
     c96:	ce 01       	movw	r24, r28
     c98:	41 96       	adiw	r24, 0x11	; 17
     c9a:	b0 c0       	rjmp	.+352    	; 0xdfc <__mulsf3+0x1e8>
     c9c:	2d 84       	ldd	r2, Y+13	; 0x0d
     c9e:	3e 84       	ldd	r3, Y+14	; 0x0e
     ca0:	4f 84       	ldd	r4, Y+15	; 0x0f
     ca2:	58 88       	ldd	r5, Y+16	; 0x10
     ca4:	6d 88       	ldd	r6, Y+21	; 0x15
     ca6:	7e 88       	ldd	r7, Y+22	; 0x16
     ca8:	8f 88       	ldd	r8, Y+23	; 0x17
     caa:	98 8c       	ldd	r9, Y+24	; 0x18
     cac:	ee 24       	eor	r14, r14
     cae:	ff 24       	eor	r15, r15
     cb0:	87 01       	movw	r16, r14
     cb2:	aa 24       	eor	r10, r10
     cb4:	bb 24       	eor	r11, r11
     cb6:	65 01       	movw	r12, r10
     cb8:	40 e0       	ldi	r20, 0x00	; 0
     cba:	50 e0       	ldi	r21, 0x00	; 0
     cbc:	60 e0       	ldi	r22, 0x00	; 0
     cbe:	70 e0       	ldi	r23, 0x00	; 0
     cc0:	e0 e0       	ldi	r30, 0x00	; 0
     cc2:	f0 e0       	ldi	r31, 0x00	; 0
     cc4:	c1 01       	movw	r24, r2
     cc6:	81 70       	andi	r24, 0x01	; 1
     cc8:	90 70       	andi	r25, 0x00	; 0
     cca:	89 2b       	or	r24, r25
     ccc:	e9 f0       	breq	.+58     	; 0xd08 <__mulsf3+0xf4>
     cce:	e6 0c       	add	r14, r6
     cd0:	f7 1c       	adc	r15, r7
     cd2:	08 1d       	adc	r16, r8
     cd4:	19 1d       	adc	r17, r9
     cd6:	9a 01       	movw	r18, r20
     cd8:	ab 01       	movw	r20, r22
     cda:	2a 0d       	add	r18, r10
     cdc:	3b 1d       	adc	r19, r11
     cde:	4c 1d       	adc	r20, r12
     ce0:	5d 1d       	adc	r21, r13
     ce2:	80 e0       	ldi	r24, 0x00	; 0
     ce4:	90 e0       	ldi	r25, 0x00	; 0
     ce6:	a0 e0       	ldi	r26, 0x00	; 0
     ce8:	b0 e0       	ldi	r27, 0x00	; 0
     cea:	e6 14       	cp	r14, r6
     cec:	f7 04       	cpc	r15, r7
     cee:	08 05       	cpc	r16, r8
     cf0:	19 05       	cpc	r17, r9
     cf2:	20 f4       	brcc	.+8      	; 0xcfc <__mulsf3+0xe8>
     cf4:	81 e0       	ldi	r24, 0x01	; 1
     cf6:	90 e0       	ldi	r25, 0x00	; 0
     cf8:	a0 e0       	ldi	r26, 0x00	; 0
     cfa:	b0 e0       	ldi	r27, 0x00	; 0
     cfc:	ba 01       	movw	r22, r20
     cfe:	a9 01       	movw	r20, r18
     d00:	48 0f       	add	r20, r24
     d02:	59 1f       	adc	r21, r25
     d04:	6a 1f       	adc	r22, r26
     d06:	7b 1f       	adc	r23, r27
     d08:	aa 0c       	add	r10, r10
     d0a:	bb 1c       	adc	r11, r11
     d0c:	cc 1c       	adc	r12, r12
     d0e:	dd 1c       	adc	r13, r13
     d10:	97 fe       	sbrs	r9, 7
     d12:	08 c0       	rjmp	.+16     	; 0xd24 <__mulsf3+0x110>
     d14:	81 e0       	ldi	r24, 0x01	; 1
     d16:	90 e0       	ldi	r25, 0x00	; 0
     d18:	a0 e0       	ldi	r26, 0x00	; 0
     d1a:	b0 e0       	ldi	r27, 0x00	; 0
     d1c:	a8 2a       	or	r10, r24
     d1e:	b9 2a       	or	r11, r25
     d20:	ca 2a       	or	r12, r26
     d22:	db 2a       	or	r13, r27
     d24:	31 96       	adiw	r30, 0x01	; 1
     d26:	e0 32       	cpi	r30, 0x20	; 32
     d28:	f1 05       	cpc	r31, r1
     d2a:	49 f0       	breq	.+18     	; 0xd3e <__mulsf3+0x12a>
     d2c:	66 0c       	add	r6, r6
     d2e:	77 1c       	adc	r7, r7
     d30:	88 1c       	adc	r8, r8
     d32:	99 1c       	adc	r9, r9
     d34:	56 94       	lsr	r5
     d36:	47 94       	ror	r4
     d38:	37 94       	ror	r3
     d3a:	27 94       	ror	r2
     d3c:	c3 cf       	rjmp	.-122    	; 0xcc4 <__mulsf3+0xb0>
     d3e:	fa 85       	ldd	r31, Y+10	; 0x0a
     d40:	ea 89       	ldd	r30, Y+18	; 0x12
     d42:	2b 89       	ldd	r18, Y+19	; 0x13
     d44:	3c 89       	ldd	r19, Y+20	; 0x14
     d46:	8b 85       	ldd	r24, Y+11	; 0x0b
     d48:	9c 85       	ldd	r25, Y+12	; 0x0c
     d4a:	28 0f       	add	r18, r24
     d4c:	39 1f       	adc	r19, r25
     d4e:	2e 5f       	subi	r18, 0xFE	; 254
     d50:	3f 4f       	sbci	r19, 0xFF	; 255
     d52:	17 c0       	rjmp	.+46     	; 0xd82 <__mulsf3+0x16e>
     d54:	ca 01       	movw	r24, r20
     d56:	81 70       	andi	r24, 0x01	; 1
     d58:	90 70       	andi	r25, 0x00	; 0
     d5a:	89 2b       	or	r24, r25
     d5c:	61 f0       	breq	.+24     	; 0xd76 <__mulsf3+0x162>
     d5e:	16 95       	lsr	r17
     d60:	07 95       	ror	r16
     d62:	f7 94       	ror	r15
     d64:	e7 94       	ror	r14
     d66:	80 e0       	ldi	r24, 0x00	; 0
     d68:	90 e0       	ldi	r25, 0x00	; 0
     d6a:	a0 e0       	ldi	r26, 0x00	; 0
     d6c:	b0 e8       	ldi	r27, 0x80	; 128
     d6e:	e8 2a       	or	r14, r24
     d70:	f9 2a       	or	r15, r25
     d72:	0a 2b       	or	r16, r26
     d74:	1b 2b       	or	r17, r27
     d76:	76 95       	lsr	r23
     d78:	67 95       	ror	r22
     d7a:	57 95       	ror	r21
     d7c:	47 95       	ror	r20
     d7e:	2f 5f       	subi	r18, 0xFF	; 255
     d80:	3f 4f       	sbci	r19, 0xFF	; 255
     d82:	77 fd       	sbrc	r23, 7
     d84:	e7 cf       	rjmp	.-50     	; 0xd54 <__mulsf3+0x140>
     d86:	0c c0       	rjmp	.+24     	; 0xda0 <__mulsf3+0x18c>
     d88:	44 0f       	add	r20, r20
     d8a:	55 1f       	adc	r21, r21
     d8c:	66 1f       	adc	r22, r22
     d8e:	77 1f       	adc	r23, r23
     d90:	17 fd       	sbrc	r17, 7
     d92:	41 60       	ori	r20, 0x01	; 1
     d94:	ee 0c       	add	r14, r14
     d96:	ff 1c       	adc	r15, r15
     d98:	00 1f       	adc	r16, r16
     d9a:	11 1f       	adc	r17, r17
     d9c:	21 50       	subi	r18, 0x01	; 1
     d9e:	30 40       	sbci	r19, 0x00	; 0
     da0:	40 30       	cpi	r20, 0x00	; 0
     da2:	90 e0       	ldi	r25, 0x00	; 0
     da4:	59 07       	cpc	r21, r25
     da6:	90 e0       	ldi	r25, 0x00	; 0
     da8:	69 07       	cpc	r22, r25
     daa:	90 e4       	ldi	r25, 0x40	; 64
     dac:	79 07       	cpc	r23, r25
     dae:	60 f3       	brcs	.-40     	; 0xd88 <__mulsf3+0x174>
     db0:	2b 8f       	std	Y+27, r18	; 0x1b
     db2:	3c 8f       	std	Y+28, r19	; 0x1c
     db4:	db 01       	movw	r26, r22
     db6:	ca 01       	movw	r24, r20
     db8:	8f 77       	andi	r24, 0x7F	; 127
     dba:	90 70       	andi	r25, 0x00	; 0
     dbc:	a0 70       	andi	r26, 0x00	; 0
     dbe:	b0 70       	andi	r27, 0x00	; 0
     dc0:	80 34       	cpi	r24, 0x40	; 64
     dc2:	91 05       	cpc	r25, r1
     dc4:	a1 05       	cpc	r26, r1
     dc6:	b1 05       	cpc	r27, r1
     dc8:	61 f4       	brne	.+24     	; 0xde2 <__mulsf3+0x1ce>
     dca:	47 fd       	sbrc	r20, 7
     dcc:	0a c0       	rjmp	.+20     	; 0xde2 <__mulsf3+0x1ce>
     dce:	e1 14       	cp	r14, r1
     dd0:	f1 04       	cpc	r15, r1
     dd2:	01 05       	cpc	r16, r1
     dd4:	11 05       	cpc	r17, r1
     dd6:	29 f0       	breq	.+10     	; 0xde2 <__mulsf3+0x1ce>
     dd8:	40 5c       	subi	r20, 0xC0	; 192
     dda:	5f 4f       	sbci	r21, 0xFF	; 255
     ddc:	6f 4f       	sbci	r22, 0xFF	; 255
     dde:	7f 4f       	sbci	r23, 0xFF	; 255
     de0:	40 78       	andi	r20, 0x80	; 128
     de2:	1a 8e       	std	Y+26, r1	; 0x1a
     de4:	fe 17       	cp	r31, r30
     de6:	11 f0       	breq	.+4      	; 0xdec <__mulsf3+0x1d8>
     de8:	81 e0       	ldi	r24, 0x01	; 1
     dea:	8a 8f       	std	Y+26, r24	; 0x1a
     dec:	4d 8f       	std	Y+29, r20	; 0x1d
     dee:	5e 8f       	std	Y+30, r21	; 0x1e
     df0:	6f 8f       	std	Y+31, r22	; 0x1f
     df2:	78 a3       	std	Y+32, r23	; 0x20
     df4:	83 e0       	ldi	r24, 0x03	; 3
     df6:	89 8f       	std	Y+25, r24	; 0x19
     df8:	ce 01       	movw	r24, r28
     dfa:	49 96       	adiw	r24, 0x19	; 25
     dfc:	0e 94 41 09 	call	0x1282	; 0x1282 <__pack_f>
     e00:	a0 96       	adiw	r28, 0x20	; 32
     e02:	e2 e1       	ldi	r30, 0x12	; 18
     e04:	0c 94 03 0b 	jmp	0x1606	; 0x1606 <__epilogue_restores__>

00000e08 <__divsf3>:
     e08:	a8 e1       	ldi	r26, 0x18	; 24
     e0a:	b0 e0       	ldi	r27, 0x00	; 0
     e0c:	ea e0       	ldi	r30, 0x0A	; 10
     e0e:	f7 e0       	ldi	r31, 0x07	; 7
     e10:	0c 94 ef 0a 	jmp	0x15de	; 0x15de <__prologue_saves__+0x10>
     e14:	69 83       	std	Y+1, r22	; 0x01
     e16:	7a 83       	std	Y+2, r23	; 0x02
     e18:	8b 83       	std	Y+3, r24	; 0x03
     e1a:	9c 83       	std	Y+4, r25	; 0x04
     e1c:	2d 83       	std	Y+5, r18	; 0x05
     e1e:	3e 83       	std	Y+6, r19	; 0x06
     e20:	4f 83       	std	Y+7, r20	; 0x07
     e22:	58 87       	std	Y+8, r21	; 0x08
     e24:	b9 e0       	ldi	r27, 0x09	; 9
     e26:	eb 2e       	mov	r14, r27
     e28:	f1 2c       	mov	r15, r1
     e2a:	ec 0e       	add	r14, r28
     e2c:	fd 1e       	adc	r15, r29
     e2e:	ce 01       	movw	r24, r28
     e30:	01 96       	adiw	r24, 0x01	; 1
     e32:	b7 01       	movw	r22, r14
     e34:	0e 94 16 0a 	call	0x142c	; 0x142c <__unpack_f>
     e38:	8e 01       	movw	r16, r28
     e3a:	0f 5e       	subi	r16, 0xEF	; 239
     e3c:	1f 4f       	sbci	r17, 0xFF	; 255
     e3e:	ce 01       	movw	r24, r28
     e40:	05 96       	adiw	r24, 0x05	; 5
     e42:	b8 01       	movw	r22, r16
     e44:	0e 94 16 0a 	call	0x142c	; 0x142c <__unpack_f>
     e48:	29 85       	ldd	r18, Y+9	; 0x09
     e4a:	22 30       	cpi	r18, 0x02	; 2
     e4c:	08 f4       	brcc	.+2      	; 0xe50 <__divsf3+0x48>
     e4e:	7e c0       	rjmp	.+252    	; 0xf4c <__divsf3+0x144>
     e50:	39 89       	ldd	r19, Y+17	; 0x11
     e52:	32 30       	cpi	r19, 0x02	; 2
     e54:	10 f4       	brcc	.+4      	; 0xe5a <__divsf3+0x52>
     e56:	b8 01       	movw	r22, r16
     e58:	7c c0       	rjmp	.+248    	; 0xf52 <__divsf3+0x14a>
     e5a:	8a 85       	ldd	r24, Y+10	; 0x0a
     e5c:	9a 89       	ldd	r25, Y+18	; 0x12
     e5e:	89 27       	eor	r24, r25
     e60:	8a 87       	std	Y+10, r24	; 0x0a
     e62:	24 30       	cpi	r18, 0x04	; 4
     e64:	11 f0       	breq	.+4      	; 0xe6a <__divsf3+0x62>
     e66:	22 30       	cpi	r18, 0x02	; 2
     e68:	31 f4       	brne	.+12     	; 0xe76 <__divsf3+0x6e>
     e6a:	23 17       	cp	r18, r19
     e6c:	09 f0       	breq	.+2      	; 0xe70 <__divsf3+0x68>
     e6e:	6e c0       	rjmp	.+220    	; 0xf4c <__divsf3+0x144>
     e70:	60 e0       	ldi	r22, 0x00	; 0
     e72:	71 e0       	ldi	r23, 0x01	; 1
     e74:	6e c0       	rjmp	.+220    	; 0xf52 <__divsf3+0x14a>
     e76:	34 30       	cpi	r19, 0x04	; 4
     e78:	39 f4       	brne	.+14     	; 0xe88 <__divsf3+0x80>
     e7a:	1d 86       	std	Y+13, r1	; 0x0d
     e7c:	1e 86       	std	Y+14, r1	; 0x0e
     e7e:	1f 86       	std	Y+15, r1	; 0x0f
     e80:	18 8a       	std	Y+16, r1	; 0x10
     e82:	1c 86       	std	Y+12, r1	; 0x0c
     e84:	1b 86       	std	Y+11, r1	; 0x0b
     e86:	04 c0       	rjmp	.+8      	; 0xe90 <__divsf3+0x88>
     e88:	32 30       	cpi	r19, 0x02	; 2
     e8a:	21 f4       	brne	.+8      	; 0xe94 <__divsf3+0x8c>
     e8c:	84 e0       	ldi	r24, 0x04	; 4
     e8e:	89 87       	std	Y+9, r24	; 0x09
     e90:	b7 01       	movw	r22, r14
     e92:	5f c0       	rjmp	.+190    	; 0xf52 <__divsf3+0x14a>
     e94:	2b 85       	ldd	r18, Y+11	; 0x0b
     e96:	3c 85       	ldd	r19, Y+12	; 0x0c
     e98:	8b 89       	ldd	r24, Y+19	; 0x13
     e9a:	9c 89       	ldd	r25, Y+20	; 0x14
     e9c:	28 1b       	sub	r18, r24
     e9e:	39 0b       	sbc	r19, r25
     ea0:	3c 87       	std	Y+12, r19	; 0x0c
     ea2:	2b 87       	std	Y+11, r18	; 0x0b
     ea4:	ed 84       	ldd	r14, Y+13	; 0x0d
     ea6:	fe 84       	ldd	r15, Y+14	; 0x0e
     ea8:	0f 85       	ldd	r16, Y+15	; 0x0f
     eaa:	18 89       	ldd	r17, Y+16	; 0x10
     eac:	ad 88       	ldd	r10, Y+21	; 0x15
     eae:	be 88       	ldd	r11, Y+22	; 0x16
     eb0:	cf 88       	ldd	r12, Y+23	; 0x17
     eb2:	d8 8c       	ldd	r13, Y+24	; 0x18
     eb4:	ea 14       	cp	r14, r10
     eb6:	fb 04       	cpc	r15, r11
     eb8:	0c 05       	cpc	r16, r12
     eba:	1d 05       	cpc	r17, r13
     ebc:	40 f4       	brcc	.+16     	; 0xece <__divsf3+0xc6>
     ebe:	ee 0c       	add	r14, r14
     ec0:	ff 1c       	adc	r15, r15
     ec2:	00 1f       	adc	r16, r16
     ec4:	11 1f       	adc	r17, r17
     ec6:	21 50       	subi	r18, 0x01	; 1
     ec8:	30 40       	sbci	r19, 0x00	; 0
     eca:	3c 87       	std	Y+12, r19	; 0x0c
     ecc:	2b 87       	std	Y+11, r18	; 0x0b
     ece:	20 e0       	ldi	r18, 0x00	; 0
     ed0:	30 e0       	ldi	r19, 0x00	; 0
     ed2:	40 e0       	ldi	r20, 0x00	; 0
     ed4:	50 e0       	ldi	r21, 0x00	; 0
     ed6:	80 e0       	ldi	r24, 0x00	; 0
     ed8:	90 e0       	ldi	r25, 0x00	; 0
     eda:	a0 e0       	ldi	r26, 0x00	; 0
     edc:	b0 e4       	ldi	r27, 0x40	; 64
     ede:	60 e0       	ldi	r22, 0x00	; 0
     ee0:	70 e0       	ldi	r23, 0x00	; 0
     ee2:	ea 14       	cp	r14, r10
     ee4:	fb 04       	cpc	r15, r11
     ee6:	0c 05       	cpc	r16, r12
     ee8:	1d 05       	cpc	r17, r13
     eea:	40 f0       	brcs	.+16     	; 0xefc <__divsf3+0xf4>
     eec:	28 2b       	or	r18, r24
     eee:	39 2b       	or	r19, r25
     ef0:	4a 2b       	or	r20, r26
     ef2:	5b 2b       	or	r21, r27
     ef4:	ea 18       	sub	r14, r10
     ef6:	fb 08       	sbc	r15, r11
     ef8:	0c 09       	sbc	r16, r12
     efa:	1d 09       	sbc	r17, r13
     efc:	b6 95       	lsr	r27
     efe:	a7 95       	ror	r26
     f00:	97 95       	ror	r25
     f02:	87 95       	ror	r24
     f04:	ee 0c       	add	r14, r14
     f06:	ff 1c       	adc	r15, r15
     f08:	00 1f       	adc	r16, r16
     f0a:	11 1f       	adc	r17, r17
     f0c:	6f 5f       	subi	r22, 0xFF	; 255
     f0e:	7f 4f       	sbci	r23, 0xFF	; 255
     f10:	6f 31       	cpi	r22, 0x1F	; 31
     f12:	71 05       	cpc	r23, r1
     f14:	31 f7       	brne	.-52     	; 0xee2 <__divsf3+0xda>
     f16:	da 01       	movw	r26, r20
     f18:	c9 01       	movw	r24, r18
     f1a:	8f 77       	andi	r24, 0x7F	; 127
     f1c:	90 70       	andi	r25, 0x00	; 0
     f1e:	a0 70       	andi	r26, 0x00	; 0
     f20:	b0 70       	andi	r27, 0x00	; 0
     f22:	80 34       	cpi	r24, 0x40	; 64
     f24:	91 05       	cpc	r25, r1
     f26:	a1 05       	cpc	r26, r1
     f28:	b1 05       	cpc	r27, r1
     f2a:	61 f4       	brne	.+24     	; 0xf44 <__divsf3+0x13c>
     f2c:	27 fd       	sbrc	r18, 7
     f2e:	0a c0       	rjmp	.+20     	; 0xf44 <__divsf3+0x13c>
     f30:	e1 14       	cp	r14, r1
     f32:	f1 04       	cpc	r15, r1
     f34:	01 05       	cpc	r16, r1
     f36:	11 05       	cpc	r17, r1
     f38:	29 f0       	breq	.+10     	; 0xf44 <__divsf3+0x13c>
     f3a:	20 5c       	subi	r18, 0xC0	; 192
     f3c:	3f 4f       	sbci	r19, 0xFF	; 255
     f3e:	4f 4f       	sbci	r20, 0xFF	; 255
     f40:	5f 4f       	sbci	r21, 0xFF	; 255
     f42:	20 78       	andi	r18, 0x80	; 128
     f44:	2d 87       	std	Y+13, r18	; 0x0d
     f46:	3e 87       	std	Y+14, r19	; 0x0e
     f48:	4f 87       	std	Y+15, r20	; 0x0f
     f4a:	58 8b       	std	Y+16, r21	; 0x10
     f4c:	be 01       	movw	r22, r28
     f4e:	67 5f       	subi	r22, 0xF7	; 247
     f50:	7f 4f       	sbci	r23, 0xFF	; 255
     f52:	cb 01       	movw	r24, r22
     f54:	0e 94 41 09 	call	0x1282	; 0x1282 <__pack_f>
     f58:	68 96       	adiw	r28, 0x18	; 24
     f5a:	ea e0       	ldi	r30, 0x0A	; 10
     f5c:	0c 94 0b 0b 	jmp	0x1616	; 0x1616 <__epilogue_restores__+0x10>

00000f60 <__gtsf2>:
     f60:	a8 e1       	ldi	r26, 0x18	; 24
     f62:	b0 e0       	ldi	r27, 0x00	; 0
     f64:	e6 eb       	ldi	r30, 0xB6	; 182
     f66:	f7 e0       	ldi	r31, 0x07	; 7
     f68:	0c 94 f3 0a 	jmp	0x15e6	; 0x15e6 <__prologue_saves__+0x18>
     f6c:	69 83       	std	Y+1, r22	; 0x01
     f6e:	7a 83       	std	Y+2, r23	; 0x02
     f70:	8b 83       	std	Y+3, r24	; 0x03
     f72:	9c 83       	std	Y+4, r25	; 0x04
     f74:	2d 83       	std	Y+5, r18	; 0x05
     f76:	3e 83       	std	Y+6, r19	; 0x06
     f78:	4f 83       	std	Y+7, r20	; 0x07
     f7a:	58 87       	std	Y+8, r21	; 0x08
     f7c:	89 e0       	ldi	r24, 0x09	; 9
     f7e:	e8 2e       	mov	r14, r24
     f80:	f1 2c       	mov	r15, r1
     f82:	ec 0e       	add	r14, r28
     f84:	fd 1e       	adc	r15, r29
     f86:	ce 01       	movw	r24, r28
     f88:	01 96       	adiw	r24, 0x01	; 1
     f8a:	b7 01       	movw	r22, r14
     f8c:	0e 94 16 0a 	call	0x142c	; 0x142c <__unpack_f>
     f90:	8e 01       	movw	r16, r28
     f92:	0f 5e       	subi	r16, 0xEF	; 239
     f94:	1f 4f       	sbci	r17, 0xFF	; 255
     f96:	ce 01       	movw	r24, r28
     f98:	05 96       	adiw	r24, 0x05	; 5
     f9a:	b8 01       	movw	r22, r16
     f9c:	0e 94 16 0a 	call	0x142c	; 0x142c <__unpack_f>
     fa0:	89 85       	ldd	r24, Y+9	; 0x09
     fa2:	82 30       	cpi	r24, 0x02	; 2
     fa4:	40 f0       	brcs	.+16     	; 0xfb6 <__gtsf2+0x56>
     fa6:	89 89       	ldd	r24, Y+17	; 0x11
     fa8:	82 30       	cpi	r24, 0x02	; 2
     faa:	28 f0       	brcs	.+10     	; 0xfb6 <__gtsf2+0x56>
     fac:	c7 01       	movw	r24, r14
     fae:	b8 01       	movw	r22, r16
     fb0:	0e 94 8e 0a 	call	0x151c	; 0x151c <__fpcmp_parts_f>
     fb4:	01 c0       	rjmp	.+2      	; 0xfb8 <__gtsf2+0x58>
     fb6:	8f ef       	ldi	r24, 0xFF	; 255
     fb8:	68 96       	adiw	r28, 0x18	; 24
     fba:	e6 e0       	ldi	r30, 0x06	; 6
     fbc:	0c 94 0f 0b 	jmp	0x161e	; 0x161e <__epilogue_restores__+0x18>

00000fc0 <__gesf2>:
     fc0:	a8 e1       	ldi	r26, 0x18	; 24
     fc2:	b0 e0       	ldi	r27, 0x00	; 0
     fc4:	e6 ee       	ldi	r30, 0xE6	; 230
     fc6:	f7 e0       	ldi	r31, 0x07	; 7
     fc8:	0c 94 f3 0a 	jmp	0x15e6	; 0x15e6 <__prologue_saves__+0x18>
     fcc:	69 83       	std	Y+1, r22	; 0x01
     fce:	7a 83       	std	Y+2, r23	; 0x02
     fd0:	8b 83       	std	Y+3, r24	; 0x03
     fd2:	9c 83       	std	Y+4, r25	; 0x04
     fd4:	2d 83       	std	Y+5, r18	; 0x05
     fd6:	3e 83       	std	Y+6, r19	; 0x06
     fd8:	4f 83       	std	Y+7, r20	; 0x07
     fda:	58 87       	std	Y+8, r21	; 0x08
     fdc:	89 e0       	ldi	r24, 0x09	; 9
     fde:	e8 2e       	mov	r14, r24
     fe0:	f1 2c       	mov	r15, r1
     fe2:	ec 0e       	add	r14, r28
     fe4:	fd 1e       	adc	r15, r29
     fe6:	ce 01       	movw	r24, r28
     fe8:	01 96       	adiw	r24, 0x01	; 1
     fea:	b7 01       	movw	r22, r14
     fec:	0e 94 16 0a 	call	0x142c	; 0x142c <__unpack_f>
     ff0:	8e 01       	movw	r16, r28
     ff2:	0f 5e       	subi	r16, 0xEF	; 239
     ff4:	1f 4f       	sbci	r17, 0xFF	; 255
     ff6:	ce 01       	movw	r24, r28
     ff8:	05 96       	adiw	r24, 0x05	; 5
     ffa:	b8 01       	movw	r22, r16
     ffc:	0e 94 16 0a 	call	0x142c	; 0x142c <__unpack_f>
    1000:	89 85       	ldd	r24, Y+9	; 0x09
    1002:	82 30       	cpi	r24, 0x02	; 2
    1004:	40 f0       	brcs	.+16     	; 0x1016 <__gesf2+0x56>
    1006:	89 89       	ldd	r24, Y+17	; 0x11
    1008:	82 30       	cpi	r24, 0x02	; 2
    100a:	28 f0       	brcs	.+10     	; 0x1016 <__gesf2+0x56>
    100c:	c7 01       	movw	r24, r14
    100e:	b8 01       	movw	r22, r16
    1010:	0e 94 8e 0a 	call	0x151c	; 0x151c <__fpcmp_parts_f>
    1014:	01 c0       	rjmp	.+2      	; 0x1018 <__gesf2+0x58>
    1016:	8f ef       	ldi	r24, 0xFF	; 255
    1018:	68 96       	adiw	r28, 0x18	; 24
    101a:	e6 e0       	ldi	r30, 0x06	; 6
    101c:	0c 94 0f 0b 	jmp	0x161e	; 0x161e <__epilogue_restores__+0x18>

00001020 <__ltsf2>:
    1020:	a8 e1       	ldi	r26, 0x18	; 24
    1022:	b0 e0       	ldi	r27, 0x00	; 0
    1024:	e6 e1       	ldi	r30, 0x16	; 22
    1026:	f8 e0       	ldi	r31, 0x08	; 8
    1028:	0c 94 f3 0a 	jmp	0x15e6	; 0x15e6 <__prologue_saves__+0x18>
    102c:	69 83       	std	Y+1, r22	; 0x01
    102e:	7a 83       	std	Y+2, r23	; 0x02
    1030:	8b 83       	std	Y+3, r24	; 0x03
    1032:	9c 83       	std	Y+4, r25	; 0x04
    1034:	2d 83       	std	Y+5, r18	; 0x05
    1036:	3e 83       	std	Y+6, r19	; 0x06
    1038:	4f 83       	std	Y+7, r20	; 0x07
    103a:	58 87       	std	Y+8, r21	; 0x08
    103c:	89 e0       	ldi	r24, 0x09	; 9
    103e:	e8 2e       	mov	r14, r24
    1040:	f1 2c       	mov	r15, r1
    1042:	ec 0e       	add	r14, r28
    1044:	fd 1e       	adc	r15, r29
    1046:	ce 01       	movw	r24, r28
    1048:	01 96       	adiw	r24, 0x01	; 1
    104a:	b7 01       	movw	r22, r14
    104c:	0e 94 16 0a 	call	0x142c	; 0x142c <__unpack_f>
    1050:	8e 01       	movw	r16, r28
    1052:	0f 5e       	subi	r16, 0xEF	; 239
    1054:	1f 4f       	sbci	r17, 0xFF	; 255
    1056:	ce 01       	movw	r24, r28
    1058:	05 96       	adiw	r24, 0x05	; 5
    105a:	b8 01       	movw	r22, r16
    105c:	0e 94 16 0a 	call	0x142c	; 0x142c <__unpack_f>
    1060:	89 85       	ldd	r24, Y+9	; 0x09
    1062:	82 30       	cpi	r24, 0x02	; 2
    1064:	40 f0       	brcs	.+16     	; 0x1076 <__ltsf2+0x56>
    1066:	89 89       	ldd	r24, Y+17	; 0x11
    1068:	82 30       	cpi	r24, 0x02	; 2
    106a:	28 f0       	brcs	.+10     	; 0x1076 <__ltsf2+0x56>
    106c:	c7 01       	movw	r24, r14
    106e:	b8 01       	movw	r22, r16
    1070:	0e 94 8e 0a 	call	0x151c	; 0x151c <__fpcmp_parts_f>
    1074:	01 c0       	rjmp	.+2      	; 0x1078 <__ltsf2+0x58>
    1076:	81 e0       	ldi	r24, 0x01	; 1
    1078:	68 96       	adiw	r28, 0x18	; 24
    107a:	e6 e0       	ldi	r30, 0x06	; 6
    107c:	0c 94 0f 0b 	jmp	0x161e	; 0x161e <__epilogue_restores__+0x18>

00001080 <__floatsisf>:
    1080:	a8 e0       	ldi	r26, 0x08	; 8
    1082:	b0 e0       	ldi	r27, 0x00	; 0
    1084:	e6 e4       	ldi	r30, 0x46	; 70
    1086:	f8 e0       	ldi	r31, 0x08	; 8
    1088:	0c 94 f0 0a 	jmp	0x15e0	; 0x15e0 <__prologue_saves__+0x12>
    108c:	9b 01       	movw	r18, r22
    108e:	ac 01       	movw	r20, r24
    1090:	83 e0       	ldi	r24, 0x03	; 3
    1092:	89 83       	std	Y+1, r24	; 0x01
    1094:	da 01       	movw	r26, r20
    1096:	c9 01       	movw	r24, r18
    1098:	88 27       	eor	r24, r24
    109a:	b7 fd       	sbrc	r27, 7
    109c:	83 95       	inc	r24
    109e:	99 27       	eor	r25, r25
    10a0:	aa 27       	eor	r26, r26
    10a2:	bb 27       	eor	r27, r27
    10a4:	b8 2e       	mov	r11, r24
    10a6:	21 15       	cp	r18, r1
    10a8:	31 05       	cpc	r19, r1
    10aa:	41 05       	cpc	r20, r1
    10ac:	51 05       	cpc	r21, r1
    10ae:	19 f4       	brne	.+6      	; 0x10b6 <__floatsisf+0x36>
    10b0:	82 e0       	ldi	r24, 0x02	; 2
    10b2:	89 83       	std	Y+1, r24	; 0x01
    10b4:	3a c0       	rjmp	.+116    	; 0x112a <__floatsisf+0xaa>
    10b6:	88 23       	and	r24, r24
    10b8:	a9 f0       	breq	.+42     	; 0x10e4 <__floatsisf+0x64>
    10ba:	20 30       	cpi	r18, 0x00	; 0
    10bc:	80 e0       	ldi	r24, 0x00	; 0
    10be:	38 07       	cpc	r19, r24
    10c0:	80 e0       	ldi	r24, 0x00	; 0
    10c2:	48 07       	cpc	r20, r24
    10c4:	80 e8       	ldi	r24, 0x80	; 128
    10c6:	58 07       	cpc	r21, r24
    10c8:	29 f4       	brne	.+10     	; 0x10d4 <__floatsisf+0x54>
    10ca:	60 e0       	ldi	r22, 0x00	; 0
    10cc:	70 e0       	ldi	r23, 0x00	; 0
    10ce:	80 e0       	ldi	r24, 0x00	; 0
    10d0:	9f ec       	ldi	r25, 0xCF	; 207
    10d2:	30 c0       	rjmp	.+96     	; 0x1134 <__floatsisf+0xb4>
    10d4:	ee 24       	eor	r14, r14
    10d6:	ff 24       	eor	r15, r15
    10d8:	87 01       	movw	r16, r14
    10da:	e2 1a       	sub	r14, r18
    10dc:	f3 0a       	sbc	r15, r19
    10de:	04 0b       	sbc	r16, r20
    10e0:	15 0b       	sbc	r17, r21
    10e2:	02 c0       	rjmp	.+4      	; 0x10e8 <__floatsisf+0x68>
    10e4:	79 01       	movw	r14, r18
    10e6:	8a 01       	movw	r16, r20
    10e8:	8e e1       	ldi	r24, 0x1E	; 30
    10ea:	c8 2e       	mov	r12, r24
    10ec:	d1 2c       	mov	r13, r1
    10ee:	dc 82       	std	Y+4, r13	; 0x04
    10f0:	cb 82       	std	Y+3, r12	; 0x03
    10f2:	ed 82       	std	Y+5, r14	; 0x05
    10f4:	fe 82       	std	Y+6, r15	; 0x06
    10f6:	0f 83       	std	Y+7, r16	; 0x07
    10f8:	18 87       	std	Y+8, r17	; 0x08
    10fa:	c8 01       	movw	r24, r16
    10fc:	b7 01       	movw	r22, r14
    10fe:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <__clzsi2>
    1102:	01 97       	sbiw	r24, 0x01	; 1
    1104:	18 16       	cp	r1, r24
    1106:	19 06       	cpc	r1, r25
    1108:	84 f4       	brge	.+32     	; 0x112a <__floatsisf+0xaa>
    110a:	08 2e       	mov	r0, r24
    110c:	04 c0       	rjmp	.+8      	; 0x1116 <__floatsisf+0x96>
    110e:	ee 0c       	add	r14, r14
    1110:	ff 1c       	adc	r15, r15
    1112:	00 1f       	adc	r16, r16
    1114:	11 1f       	adc	r17, r17
    1116:	0a 94       	dec	r0
    1118:	d2 f7       	brpl	.-12     	; 0x110e <__floatsisf+0x8e>
    111a:	ed 82       	std	Y+5, r14	; 0x05
    111c:	fe 82       	std	Y+6, r15	; 0x06
    111e:	0f 83       	std	Y+7, r16	; 0x07
    1120:	18 87       	std	Y+8, r17	; 0x08
    1122:	c8 1a       	sub	r12, r24
    1124:	d9 0a       	sbc	r13, r25
    1126:	dc 82       	std	Y+4, r13	; 0x04
    1128:	cb 82       	std	Y+3, r12	; 0x03
    112a:	ba 82       	std	Y+2, r11	; 0x02
    112c:	ce 01       	movw	r24, r28
    112e:	01 96       	adiw	r24, 0x01	; 1
    1130:	0e 94 41 09 	call	0x1282	; 0x1282 <__pack_f>
    1134:	28 96       	adiw	r28, 0x08	; 8
    1136:	e9 e0       	ldi	r30, 0x09	; 9
    1138:	0c 94 0c 0b 	jmp	0x1618	; 0x1618 <__epilogue_restores__+0x12>

0000113c <__fixsfsi>:
    113c:	ac e0       	ldi	r26, 0x0C	; 12
    113e:	b0 e0       	ldi	r27, 0x00	; 0
    1140:	e4 ea       	ldi	r30, 0xA4	; 164
    1142:	f8 e0       	ldi	r31, 0x08	; 8
    1144:	0c 94 f7 0a 	jmp	0x15ee	; 0x15ee <__prologue_saves__+0x20>
    1148:	69 83       	std	Y+1, r22	; 0x01
    114a:	7a 83       	std	Y+2, r23	; 0x02
    114c:	8b 83       	std	Y+3, r24	; 0x03
    114e:	9c 83       	std	Y+4, r25	; 0x04
    1150:	ce 01       	movw	r24, r28
    1152:	01 96       	adiw	r24, 0x01	; 1
    1154:	be 01       	movw	r22, r28
    1156:	6b 5f       	subi	r22, 0xFB	; 251
    1158:	7f 4f       	sbci	r23, 0xFF	; 255
    115a:	0e 94 16 0a 	call	0x142c	; 0x142c <__unpack_f>
    115e:	8d 81       	ldd	r24, Y+5	; 0x05
    1160:	82 30       	cpi	r24, 0x02	; 2
    1162:	61 f1       	breq	.+88     	; 0x11bc <__fixsfsi+0x80>
    1164:	82 30       	cpi	r24, 0x02	; 2
    1166:	50 f1       	brcs	.+84     	; 0x11bc <__fixsfsi+0x80>
    1168:	84 30       	cpi	r24, 0x04	; 4
    116a:	21 f4       	brne	.+8      	; 0x1174 <__fixsfsi+0x38>
    116c:	8e 81       	ldd	r24, Y+6	; 0x06
    116e:	88 23       	and	r24, r24
    1170:	51 f1       	breq	.+84     	; 0x11c6 <__fixsfsi+0x8a>
    1172:	2e c0       	rjmp	.+92     	; 0x11d0 <__fixsfsi+0x94>
    1174:	2f 81       	ldd	r18, Y+7	; 0x07
    1176:	38 85       	ldd	r19, Y+8	; 0x08
    1178:	37 fd       	sbrc	r19, 7
    117a:	20 c0       	rjmp	.+64     	; 0x11bc <__fixsfsi+0x80>
    117c:	6e 81       	ldd	r22, Y+6	; 0x06
    117e:	2f 31       	cpi	r18, 0x1F	; 31
    1180:	31 05       	cpc	r19, r1
    1182:	1c f0       	brlt	.+6      	; 0x118a <__fixsfsi+0x4e>
    1184:	66 23       	and	r22, r22
    1186:	f9 f0       	breq	.+62     	; 0x11c6 <__fixsfsi+0x8a>
    1188:	23 c0       	rjmp	.+70     	; 0x11d0 <__fixsfsi+0x94>
    118a:	8e e1       	ldi	r24, 0x1E	; 30
    118c:	90 e0       	ldi	r25, 0x00	; 0
    118e:	82 1b       	sub	r24, r18
    1190:	93 0b       	sbc	r25, r19
    1192:	29 85       	ldd	r18, Y+9	; 0x09
    1194:	3a 85       	ldd	r19, Y+10	; 0x0a
    1196:	4b 85       	ldd	r20, Y+11	; 0x0b
    1198:	5c 85       	ldd	r21, Y+12	; 0x0c
    119a:	04 c0       	rjmp	.+8      	; 0x11a4 <__fixsfsi+0x68>
    119c:	56 95       	lsr	r21
    119e:	47 95       	ror	r20
    11a0:	37 95       	ror	r19
    11a2:	27 95       	ror	r18
    11a4:	8a 95       	dec	r24
    11a6:	d2 f7       	brpl	.-12     	; 0x119c <__fixsfsi+0x60>
    11a8:	66 23       	and	r22, r22
    11aa:	b1 f0       	breq	.+44     	; 0x11d8 <__fixsfsi+0x9c>
    11ac:	50 95       	com	r21
    11ae:	40 95       	com	r20
    11b0:	30 95       	com	r19
    11b2:	21 95       	neg	r18
    11b4:	3f 4f       	sbci	r19, 0xFF	; 255
    11b6:	4f 4f       	sbci	r20, 0xFF	; 255
    11b8:	5f 4f       	sbci	r21, 0xFF	; 255
    11ba:	0e c0       	rjmp	.+28     	; 0x11d8 <__fixsfsi+0x9c>
    11bc:	20 e0       	ldi	r18, 0x00	; 0
    11be:	30 e0       	ldi	r19, 0x00	; 0
    11c0:	40 e0       	ldi	r20, 0x00	; 0
    11c2:	50 e0       	ldi	r21, 0x00	; 0
    11c4:	09 c0       	rjmp	.+18     	; 0x11d8 <__fixsfsi+0x9c>
    11c6:	2f ef       	ldi	r18, 0xFF	; 255
    11c8:	3f ef       	ldi	r19, 0xFF	; 255
    11ca:	4f ef       	ldi	r20, 0xFF	; 255
    11cc:	5f e7       	ldi	r21, 0x7F	; 127
    11ce:	04 c0       	rjmp	.+8      	; 0x11d8 <__fixsfsi+0x9c>
    11d0:	20 e0       	ldi	r18, 0x00	; 0
    11d2:	30 e0       	ldi	r19, 0x00	; 0
    11d4:	40 e0       	ldi	r20, 0x00	; 0
    11d6:	50 e8       	ldi	r21, 0x80	; 128
    11d8:	b9 01       	movw	r22, r18
    11da:	ca 01       	movw	r24, r20
    11dc:	2c 96       	adiw	r28, 0x0c	; 12
    11de:	e2 e0       	ldi	r30, 0x02	; 2
    11e0:	0c 94 13 0b 	jmp	0x1626	; 0x1626 <__epilogue_restores__+0x20>

000011e4 <__clzsi2>:
    11e4:	ef 92       	push	r14
    11e6:	ff 92       	push	r15
    11e8:	0f 93       	push	r16
    11ea:	1f 93       	push	r17
    11ec:	7b 01       	movw	r14, r22
    11ee:	8c 01       	movw	r16, r24
    11f0:	80 e0       	ldi	r24, 0x00	; 0
    11f2:	e8 16       	cp	r14, r24
    11f4:	80 e0       	ldi	r24, 0x00	; 0
    11f6:	f8 06       	cpc	r15, r24
    11f8:	81 e0       	ldi	r24, 0x01	; 1
    11fa:	08 07       	cpc	r16, r24
    11fc:	80 e0       	ldi	r24, 0x00	; 0
    11fe:	18 07       	cpc	r17, r24
    1200:	88 f4       	brcc	.+34     	; 0x1224 <__clzsi2+0x40>
    1202:	8f ef       	ldi	r24, 0xFF	; 255
    1204:	e8 16       	cp	r14, r24
    1206:	f1 04       	cpc	r15, r1
    1208:	01 05       	cpc	r16, r1
    120a:	11 05       	cpc	r17, r1
    120c:	31 f0       	breq	.+12     	; 0x121a <__clzsi2+0x36>
    120e:	28 f0       	brcs	.+10     	; 0x121a <__clzsi2+0x36>
    1210:	88 e0       	ldi	r24, 0x08	; 8
    1212:	90 e0       	ldi	r25, 0x00	; 0
    1214:	a0 e0       	ldi	r26, 0x00	; 0
    1216:	b0 e0       	ldi	r27, 0x00	; 0
    1218:	17 c0       	rjmp	.+46     	; 0x1248 <__clzsi2+0x64>
    121a:	80 e0       	ldi	r24, 0x00	; 0
    121c:	90 e0       	ldi	r25, 0x00	; 0
    121e:	a0 e0       	ldi	r26, 0x00	; 0
    1220:	b0 e0       	ldi	r27, 0x00	; 0
    1222:	12 c0       	rjmp	.+36     	; 0x1248 <__clzsi2+0x64>
    1224:	80 e0       	ldi	r24, 0x00	; 0
    1226:	e8 16       	cp	r14, r24
    1228:	80 e0       	ldi	r24, 0x00	; 0
    122a:	f8 06       	cpc	r15, r24
    122c:	80 e0       	ldi	r24, 0x00	; 0
    122e:	08 07       	cpc	r16, r24
    1230:	81 e0       	ldi	r24, 0x01	; 1
    1232:	18 07       	cpc	r17, r24
    1234:	28 f0       	brcs	.+10     	; 0x1240 <__clzsi2+0x5c>
    1236:	88 e1       	ldi	r24, 0x18	; 24
    1238:	90 e0       	ldi	r25, 0x00	; 0
    123a:	a0 e0       	ldi	r26, 0x00	; 0
    123c:	b0 e0       	ldi	r27, 0x00	; 0
    123e:	04 c0       	rjmp	.+8      	; 0x1248 <__clzsi2+0x64>
    1240:	80 e1       	ldi	r24, 0x10	; 16
    1242:	90 e0       	ldi	r25, 0x00	; 0
    1244:	a0 e0       	ldi	r26, 0x00	; 0
    1246:	b0 e0       	ldi	r27, 0x00	; 0
    1248:	20 e2       	ldi	r18, 0x20	; 32
    124a:	30 e0       	ldi	r19, 0x00	; 0
    124c:	40 e0       	ldi	r20, 0x00	; 0
    124e:	50 e0       	ldi	r21, 0x00	; 0
    1250:	28 1b       	sub	r18, r24
    1252:	39 0b       	sbc	r19, r25
    1254:	4a 0b       	sbc	r20, r26
    1256:	5b 0b       	sbc	r21, r27
    1258:	04 c0       	rjmp	.+8      	; 0x1262 <__clzsi2+0x7e>
    125a:	16 95       	lsr	r17
    125c:	07 95       	ror	r16
    125e:	f7 94       	ror	r15
    1260:	e7 94       	ror	r14
    1262:	8a 95       	dec	r24
    1264:	d2 f7       	brpl	.-12     	; 0x125a <__clzsi2+0x76>
    1266:	f7 01       	movw	r30, r14
    1268:	e8 5f       	subi	r30, 0xF8	; 248
    126a:	fe 4f       	sbci	r31, 0xFE	; 254
    126c:	80 81       	ld	r24, Z
    126e:	28 1b       	sub	r18, r24
    1270:	31 09       	sbc	r19, r1
    1272:	41 09       	sbc	r20, r1
    1274:	51 09       	sbc	r21, r1
    1276:	c9 01       	movw	r24, r18
    1278:	1f 91       	pop	r17
    127a:	0f 91       	pop	r16
    127c:	ff 90       	pop	r15
    127e:	ef 90       	pop	r14
    1280:	08 95       	ret

00001282 <__pack_f>:
    1282:	df 92       	push	r13
    1284:	ef 92       	push	r14
    1286:	ff 92       	push	r15
    1288:	0f 93       	push	r16
    128a:	1f 93       	push	r17
    128c:	fc 01       	movw	r30, r24
    128e:	e4 80       	ldd	r14, Z+4	; 0x04
    1290:	f5 80       	ldd	r15, Z+5	; 0x05
    1292:	06 81       	ldd	r16, Z+6	; 0x06
    1294:	17 81       	ldd	r17, Z+7	; 0x07
    1296:	d1 80       	ldd	r13, Z+1	; 0x01
    1298:	80 81       	ld	r24, Z
    129a:	82 30       	cpi	r24, 0x02	; 2
    129c:	48 f4       	brcc	.+18     	; 0x12b0 <__pack_f+0x2e>
    129e:	80 e0       	ldi	r24, 0x00	; 0
    12a0:	90 e0       	ldi	r25, 0x00	; 0
    12a2:	a0 e1       	ldi	r26, 0x10	; 16
    12a4:	b0 e0       	ldi	r27, 0x00	; 0
    12a6:	e8 2a       	or	r14, r24
    12a8:	f9 2a       	or	r15, r25
    12aa:	0a 2b       	or	r16, r26
    12ac:	1b 2b       	or	r17, r27
    12ae:	a5 c0       	rjmp	.+330    	; 0x13fa <__pack_f+0x178>
    12b0:	84 30       	cpi	r24, 0x04	; 4
    12b2:	09 f4       	brne	.+2      	; 0x12b6 <__pack_f+0x34>
    12b4:	9f c0       	rjmp	.+318    	; 0x13f4 <__pack_f+0x172>
    12b6:	82 30       	cpi	r24, 0x02	; 2
    12b8:	21 f4       	brne	.+8      	; 0x12c2 <__pack_f+0x40>
    12ba:	ee 24       	eor	r14, r14
    12bc:	ff 24       	eor	r15, r15
    12be:	87 01       	movw	r16, r14
    12c0:	05 c0       	rjmp	.+10     	; 0x12cc <__pack_f+0x4a>
    12c2:	e1 14       	cp	r14, r1
    12c4:	f1 04       	cpc	r15, r1
    12c6:	01 05       	cpc	r16, r1
    12c8:	11 05       	cpc	r17, r1
    12ca:	19 f4       	brne	.+6      	; 0x12d2 <__pack_f+0x50>
    12cc:	e0 e0       	ldi	r30, 0x00	; 0
    12ce:	f0 e0       	ldi	r31, 0x00	; 0
    12d0:	96 c0       	rjmp	.+300    	; 0x13fe <__pack_f+0x17c>
    12d2:	62 81       	ldd	r22, Z+2	; 0x02
    12d4:	73 81       	ldd	r23, Z+3	; 0x03
    12d6:	9f ef       	ldi	r25, 0xFF	; 255
    12d8:	62 38       	cpi	r22, 0x82	; 130
    12da:	79 07       	cpc	r23, r25
    12dc:	0c f0       	brlt	.+2      	; 0x12e0 <__pack_f+0x5e>
    12de:	5b c0       	rjmp	.+182    	; 0x1396 <__pack_f+0x114>
    12e0:	22 e8       	ldi	r18, 0x82	; 130
    12e2:	3f ef       	ldi	r19, 0xFF	; 255
    12e4:	26 1b       	sub	r18, r22
    12e6:	37 0b       	sbc	r19, r23
    12e8:	2a 31       	cpi	r18, 0x1A	; 26
    12ea:	31 05       	cpc	r19, r1
    12ec:	2c f0       	brlt	.+10     	; 0x12f8 <__pack_f+0x76>
    12ee:	20 e0       	ldi	r18, 0x00	; 0
    12f0:	30 e0       	ldi	r19, 0x00	; 0
    12f2:	40 e0       	ldi	r20, 0x00	; 0
    12f4:	50 e0       	ldi	r21, 0x00	; 0
    12f6:	2a c0       	rjmp	.+84     	; 0x134c <__pack_f+0xca>
    12f8:	b8 01       	movw	r22, r16
    12fa:	a7 01       	movw	r20, r14
    12fc:	02 2e       	mov	r0, r18
    12fe:	04 c0       	rjmp	.+8      	; 0x1308 <__pack_f+0x86>
    1300:	76 95       	lsr	r23
    1302:	67 95       	ror	r22
    1304:	57 95       	ror	r21
    1306:	47 95       	ror	r20
    1308:	0a 94       	dec	r0
    130a:	d2 f7       	brpl	.-12     	; 0x1300 <__pack_f+0x7e>
    130c:	81 e0       	ldi	r24, 0x01	; 1
    130e:	90 e0       	ldi	r25, 0x00	; 0
    1310:	a0 e0       	ldi	r26, 0x00	; 0
    1312:	b0 e0       	ldi	r27, 0x00	; 0
    1314:	04 c0       	rjmp	.+8      	; 0x131e <__pack_f+0x9c>
    1316:	88 0f       	add	r24, r24
    1318:	99 1f       	adc	r25, r25
    131a:	aa 1f       	adc	r26, r26
    131c:	bb 1f       	adc	r27, r27
    131e:	2a 95       	dec	r18
    1320:	d2 f7       	brpl	.-12     	; 0x1316 <__pack_f+0x94>
    1322:	01 97       	sbiw	r24, 0x01	; 1
    1324:	a1 09       	sbc	r26, r1
    1326:	b1 09       	sbc	r27, r1
    1328:	8e 21       	and	r24, r14
    132a:	9f 21       	and	r25, r15
    132c:	a0 23       	and	r26, r16
    132e:	b1 23       	and	r27, r17
    1330:	00 97       	sbiw	r24, 0x00	; 0
    1332:	a1 05       	cpc	r26, r1
    1334:	b1 05       	cpc	r27, r1
    1336:	21 f0       	breq	.+8      	; 0x1340 <__pack_f+0xbe>
    1338:	81 e0       	ldi	r24, 0x01	; 1
    133a:	90 e0       	ldi	r25, 0x00	; 0
    133c:	a0 e0       	ldi	r26, 0x00	; 0
    133e:	b0 e0       	ldi	r27, 0x00	; 0
    1340:	9a 01       	movw	r18, r20
    1342:	ab 01       	movw	r20, r22
    1344:	28 2b       	or	r18, r24
    1346:	39 2b       	or	r19, r25
    1348:	4a 2b       	or	r20, r26
    134a:	5b 2b       	or	r21, r27
    134c:	da 01       	movw	r26, r20
    134e:	c9 01       	movw	r24, r18
    1350:	8f 77       	andi	r24, 0x7F	; 127
    1352:	90 70       	andi	r25, 0x00	; 0
    1354:	a0 70       	andi	r26, 0x00	; 0
    1356:	b0 70       	andi	r27, 0x00	; 0
    1358:	80 34       	cpi	r24, 0x40	; 64
    135a:	91 05       	cpc	r25, r1
    135c:	a1 05       	cpc	r26, r1
    135e:	b1 05       	cpc	r27, r1
    1360:	39 f4       	brne	.+14     	; 0x1370 <__pack_f+0xee>
    1362:	27 ff       	sbrs	r18, 7
    1364:	09 c0       	rjmp	.+18     	; 0x1378 <__pack_f+0xf6>
    1366:	20 5c       	subi	r18, 0xC0	; 192
    1368:	3f 4f       	sbci	r19, 0xFF	; 255
    136a:	4f 4f       	sbci	r20, 0xFF	; 255
    136c:	5f 4f       	sbci	r21, 0xFF	; 255
    136e:	04 c0       	rjmp	.+8      	; 0x1378 <__pack_f+0xf6>
    1370:	21 5c       	subi	r18, 0xC1	; 193
    1372:	3f 4f       	sbci	r19, 0xFF	; 255
    1374:	4f 4f       	sbci	r20, 0xFF	; 255
    1376:	5f 4f       	sbci	r21, 0xFF	; 255
    1378:	e0 e0       	ldi	r30, 0x00	; 0
    137a:	f0 e0       	ldi	r31, 0x00	; 0
    137c:	20 30       	cpi	r18, 0x00	; 0
    137e:	a0 e0       	ldi	r26, 0x00	; 0
    1380:	3a 07       	cpc	r19, r26
    1382:	a0 e0       	ldi	r26, 0x00	; 0
    1384:	4a 07       	cpc	r20, r26
    1386:	a0 e4       	ldi	r26, 0x40	; 64
    1388:	5a 07       	cpc	r21, r26
    138a:	10 f0       	brcs	.+4      	; 0x1390 <__pack_f+0x10e>
    138c:	e1 e0       	ldi	r30, 0x01	; 1
    138e:	f0 e0       	ldi	r31, 0x00	; 0
    1390:	79 01       	movw	r14, r18
    1392:	8a 01       	movw	r16, r20
    1394:	27 c0       	rjmp	.+78     	; 0x13e4 <__pack_f+0x162>
    1396:	60 38       	cpi	r22, 0x80	; 128
    1398:	71 05       	cpc	r23, r1
    139a:	64 f5       	brge	.+88     	; 0x13f4 <__pack_f+0x172>
    139c:	fb 01       	movw	r30, r22
    139e:	e1 58       	subi	r30, 0x81	; 129
    13a0:	ff 4f       	sbci	r31, 0xFF	; 255
    13a2:	d8 01       	movw	r26, r16
    13a4:	c7 01       	movw	r24, r14
    13a6:	8f 77       	andi	r24, 0x7F	; 127
    13a8:	90 70       	andi	r25, 0x00	; 0
    13aa:	a0 70       	andi	r26, 0x00	; 0
    13ac:	b0 70       	andi	r27, 0x00	; 0
    13ae:	80 34       	cpi	r24, 0x40	; 64
    13b0:	91 05       	cpc	r25, r1
    13b2:	a1 05       	cpc	r26, r1
    13b4:	b1 05       	cpc	r27, r1
    13b6:	39 f4       	brne	.+14     	; 0x13c6 <__pack_f+0x144>
    13b8:	e7 fe       	sbrs	r14, 7
    13ba:	0d c0       	rjmp	.+26     	; 0x13d6 <__pack_f+0x154>
    13bc:	80 e4       	ldi	r24, 0x40	; 64
    13be:	90 e0       	ldi	r25, 0x00	; 0
    13c0:	a0 e0       	ldi	r26, 0x00	; 0
    13c2:	b0 e0       	ldi	r27, 0x00	; 0
    13c4:	04 c0       	rjmp	.+8      	; 0x13ce <__pack_f+0x14c>
    13c6:	8f e3       	ldi	r24, 0x3F	; 63
    13c8:	90 e0       	ldi	r25, 0x00	; 0
    13ca:	a0 e0       	ldi	r26, 0x00	; 0
    13cc:	b0 e0       	ldi	r27, 0x00	; 0
    13ce:	e8 0e       	add	r14, r24
    13d0:	f9 1e       	adc	r15, r25
    13d2:	0a 1f       	adc	r16, r26
    13d4:	1b 1f       	adc	r17, r27
    13d6:	17 ff       	sbrs	r17, 7
    13d8:	05 c0       	rjmp	.+10     	; 0x13e4 <__pack_f+0x162>
    13da:	16 95       	lsr	r17
    13dc:	07 95       	ror	r16
    13de:	f7 94       	ror	r15
    13e0:	e7 94       	ror	r14
    13e2:	31 96       	adiw	r30, 0x01	; 1
    13e4:	87 e0       	ldi	r24, 0x07	; 7
    13e6:	16 95       	lsr	r17
    13e8:	07 95       	ror	r16
    13ea:	f7 94       	ror	r15
    13ec:	e7 94       	ror	r14
    13ee:	8a 95       	dec	r24
    13f0:	d1 f7       	brne	.-12     	; 0x13e6 <__pack_f+0x164>
    13f2:	05 c0       	rjmp	.+10     	; 0x13fe <__pack_f+0x17c>
    13f4:	ee 24       	eor	r14, r14
    13f6:	ff 24       	eor	r15, r15
    13f8:	87 01       	movw	r16, r14
    13fa:	ef ef       	ldi	r30, 0xFF	; 255
    13fc:	f0 e0       	ldi	r31, 0x00	; 0
    13fe:	6e 2f       	mov	r22, r30
    1400:	67 95       	ror	r22
    1402:	66 27       	eor	r22, r22
    1404:	67 95       	ror	r22
    1406:	90 2f       	mov	r25, r16
    1408:	9f 77       	andi	r25, 0x7F	; 127
    140a:	d7 94       	ror	r13
    140c:	dd 24       	eor	r13, r13
    140e:	d7 94       	ror	r13
    1410:	8e 2f       	mov	r24, r30
    1412:	86 95       	lsr	r24
    1414:	49 2f       	mov	r20, r25
    1416:	46 2b       	or	r20, r22
    1418:	58 2f       	mov	r21, r24
    141a:	5d 29       	or	r21, r13
    141c:	b7 01       	movw	r22, r14
    141e:	ca 01       	movw	r24, r20
    1420:	1f 91       	pop	r17
    1422:	0f 91       	pop	r16
    1424:	ff 90       	pop	r15
    1426:	ef 90       	pop	r14
    1428:	df 90       	pop	r13
    142a:	08 95       	ret

0000142c <__unpack_f>:
    142c:	fc 01       	movw	r30, r24
    142e:	db 01       	movw	r26, r22
    1430:	40 81       	ld	r20, Z
    1432:	51 81       	ldd	r21, Z+1	; 0x01
    1434:	22 81       	ldd	r18, Z+2	; 0x02
    1436:	62 2f       	mov	r22, r18
    1438:	6f 77       	andi	r22, 0x7F	; 127
    143a:	70 e0       	ldi	r23, 0x00	; 0
    143c:	22 1f       	adc	r18, r18
    143e:	22 27       	eor	r18, r18
    1440:	22 1f       	adc	r18, r18
    1442:	93 81       	ldd	r25, Z+3	; 0x03
    1444:	89 2f       	mov	r24, r25
    1446:	88 0f       	add	r24, r24
    1448:	82 2b       	or	r24, r18
    144a:	28 2f       	mov	r18, r24
    144c:	30 e0       	ldi	r19, 0x00	; 0
    144e:	99 1f       	adc	r25, r25
    1450:	99 27       	eor	r25, r25
    1452:	99 1f       	adc	r25, r25
    1454:	11 96       	adiw	r26, 0x01	; 1
    1456:	9c 93       	st	X, r25
    1458:	11 97       	sbiw	r26, 0x01	; 1
    145a:	21 15       	cp	r18, r1
    145c:	31 05       	cpc	r19, r1
    145e:	a9 f5       	brne	.+106    	; 0x14ca <__unpack_f+0x9e>
    1460:	41 15       	cp	r20, r1
    1462:	51 05       	cpc	r21, r1
    1464:	61 05       	cpc	r22, r1
    1466:	71 05       	cpc	r23, r1
    1468:	11 f4       	brne	.+4      	; 0x146e <__unpack_f+0x42>
    146a:	82 e0       	ldi	r24, 0x02	; 2
    146c:	37 c0       	rjmp	.+110    	; 0x14dc <__unpack_f+0xb0>
    146e:	82 e8       	ldi	r24, 0x82	; 130
    1470:	9f ef       	ldi	r25, 0xFF	; 255
    1472:	13 96       	adiw	r26, 0x03	; 3
    1474:	9c 93       	st	X, r25
    1476:	8e 93       	st	-X, r24
    1478:	12 97       	sbiw	r26, 0x02	; 2
    147a:	9a 01       	movw	r18, r20
    147c:	ab 01       	movw	r20, r22
    147e:	67 e0       	ldi	r22, 0x07	; 7
    1480:	22 0f       	add	r18, r18
    1482:	33 1f       	adc	r19, r19
    1484:	44 1f       	adc	r20, r20
    1486:	55 1f       	adc	r21, r21
    1488:	6a 95       	dec	r22
    148a:	d1 f7       	brne	.-12     	; 0x1480 <__unpack_f+0x54>
    148c:	83 e0       	ldi	r24, 0x03	; 3
    148e:	8c 93       	st	X, r24
    1490:	0d c0       	rjmp	.+26     	; 0x14ac <__unpack_f+0x80>
    1492:	22 0f       	add	r18, r18
    1494:	33 1f       	adc	r19, r19
    1496:	44 1f       	adc	r20, r20
    1498:	55 1f       	adc	r21, r21
    149a:	12 96       	adiw	r26, 0x02	; 2
    149c:	8d 91       	ld	r24, X+
    149e:	9c 91       	ld	r25, X
    14a0:	13 97       	sbiw	r26, 0x03	; 3
    14a2:	01 97       	sbiw	r24, 0x01	; 1
    14a4:	13 96       	adiw	r26, 0x03	; 3
    14a6:	9c 93       	st	X, r25
    14a8:	8e 93       	st	-X, r24
    14aa:	12 97       	sbiw	r26, 0x02	; 2
    14ac:	20 30       	cpi	r18, 0x00	; 0
    14ae:	80 e0       	ldi	r24, 0x00	; 0
    14b0:	38 07       	cpc	r19, r24
    14b2:	80 e0       	ldi	r24, 0x00	; 0
    14b4:	48 07       	cpc	r20, r24
    14b6:	80 e4       	ldi	r24, 0x40	; 64
    14b8:	58 07       	cpc	r21, r24
    14ba:	58 f3       	brcs	.-42     	; 0x1492 <__unpack_f+0x66>
    14bc:	14 96       	adiw	r26, 0x04	; 4
    14be:	2d 93       	st	X+, r18
    14c0:	3d 93       	st	X+, r19
    14c2:	4d 93       	st	X+, r20
    14c4:	5c 93       	st	X, r21
    14c6:	17 97       	sbiw	r26, 0x07	; 7
    14c8:	08 95       	ret
    14ca:	2f 3f       	cpi	r18, 0xFF	; 255
    14cc:	31 05       	cpc	r19, r1
    14ce:	79 f4       	brne	.+30     	; 0x14ee <__unpack_f+0xc2>
    14d0:	41 15       	cp	r20, r1
    14d2:	51 05       	cpc	r21, r1
    14d4:	61 05       	cpc	r22, r1
    14d6:	71 05       	cpc	r23, r1
    14d8:	19 f4       	brne	.+6      	; 0x14e0 <__unpack_f+0xb4>
    14da:	84 e0       	ldi	r24, 0x04	; 4
    14dc:	8c 93       	st	X, r24
    14de:	08 95       	ret
    14e0:	64 ff       	sbrs	r22, 4
    14e2:	03 c0       	rjmp	.+6      	; 0x14ea <__unpack_f+0xbe>
    14e4:	81 e0       	ldi	r24, 0x01	; 1
    14e6:	8c 93       	st	X, r24
    14e8:	12 c0       	rjmp	.+36     	; 0x150e <__unpack_f+0xe2>
    14ea:	1c 92       	st	X, r1
    14ec:	10 c0       	rjmp	.+32     	; 0x150e <__unpack_f+0xe2>
    14ee:	2f 57       	subi	r18, 0x7F	; 127
    14f0:	30 40       	sbci	r19, 0x00	; 0
    14f2:	13 96       	adiw	r26, 0x03	; 3
    14f4:	3c 93       	st	X, r19
    14f6:	2e 93       	st	-X, r18
    14f8:	12 97       	sbiw	r26, 0x02	; 2
    14fa:	83 e0       	ldi	r24, 0x03	; 3
    14fc:	8c 93       	st	X, r24
    14fe:	87 e0       	ldi	r24, 0x07	; 7
    1500:	44 0f       	add	r20, r20
    1502:	55 1f       	adc	r21, r21
    1504:	66 1f       	adc	r22, r22
    1506:	77 1f       	adc	r23, r23
    1508:	8a 95       	dec	r24
    150a:	d1 f7       	brne	.-12     	; 0x1500 <__unpack_f+0xd4>
    150c:	70 64       	ori	r23, 0x40	; 64
    150e:	14 96       	adiw	r26, 0x04	; 4
    1510:	4d 93       	st	X+, r20
    1512:	5d 93       	st	X+, r21
    1514:	6d 93       	st	X+, r22
    1516:	7c 93       	st	X, r23
    1518:	17 97       	sbiw	r26, 0x07	; 7
    151a:	08 95       	ret

0000151c <__fpcmp_parts_f>:
    151c:	1f 93       	push	r17
    151e:	dc 01       	movw	r26, r24
    1520:	fb 01       	movw	r30, r22
    1522:	9c 91       	ld	r25, X
    1524:	92 30       	cpi	r25, 0x02	; 2
    1526:	08 f4       	brcc	.+2      	; 0x152a <__fpcmp_parts_f+0xe>
    1528:	47 c0       	rjmp	.+142    	; 0x15b8 <__fpcmp_parts_f+0x9c>
    152a:	80 81       	ld	r24, Z
    152c:	82 30       	cpi	r24, 0x02	; 2
    152e:	08 f4       	brcc	.+2      	; 0x1532 <__fpcmp_parts_f+0x16>
    1530:	43 c0       	rjmp	.+134    	; 0x15b8 <__fpcmp_parts_f+0x9c>
    1532:	94 30       	cpi	r25, 0x04	; 4
    1534:	51 f4       	brne	.+20     	; 0x154a <__fpcmp_parts_f+0x2e>
    1536:	11 96       	adiw	r26, 0x01	; 1
    1538:	1c 91       	ld	r17, X
    153a:	84 30       	cpi	r24, 0x04	; 4
    153c:	99 f5       	brne	.+102    	; 0x15a4 <__fpcmp_parts_f+0x88>
    153e:	81 81       	ldd	r24, Z+1	; 0x01
    1540:	68 2f       	mov	r22, r24
    1542:	70 e0       	ldi	r23, 0x00	; 0
    1544:	61 1b       	sub	r22, r17
    1546:	71 09       	sbc	r23, r1
    1548:	3f c0       	rjmp	.+126    	; 0x15c8 <__fpcmp_parts_f+0xac>
    154a:	84 30       	cpi	r24, 0x04	; 4
    154c:	21 f0       	breq	.+8      	; 0x1556 <__fpcmp_parts_f+0x3a>
    154e:	92 30       	cpi	r25, 0x02	; 2
    1550:	31 f4       	brne	.+12     	; 0x155e <__fpcmp_parts_f+0x42>
    1552:	82 30       	cpi	r24, 0x02	; 2
    1554:	b9 f1       	breq	.+110    	; 0x15c4 <__fpcmp_parts_f+0xa8>
    1556:	81 81       	ldd	r24, Z+1	; 0x01
    1558:	88 23       	and	r24, r24
    155a:	89 f1       	breq	.+98     	; 0x15be <__fpcmp_parts_f+0xa2>
    155c:	2d c0       	rjmp	.+90     	; 0x15b8 <__fpcmp_parts_f+0x9c>
    155e:	11 96       	adiw	r26, 0x01	; 1
    1560:	1c 91       	ld	r17, X
    1562:	11 97       	sbiw	r26, 0x01	; 1
    1564:	82 30       	cpi	r24, 0x02	; 2
    1566:	f1 f0       	breq	.+60     	; 0x15a4 <__fpcmp_parts_f+0x88>
    1568:	81 81       	ldd	r24, Z+1	; 0x01
    156a:	18 17       	cp	r17, r24
    156c:	d9 f4       	brne	.+54     	; 0x15a4 <__fpcmp_parts_f+0x88>
    156e:	12 96       	adiw	r26, 0x02	; 2
    1570:	2d 91       	ld	r18, X+
    1572:	3c 91       	ld	r19, X
    1574:	13 97       	sbiw	r26, 0x03	; 3
    1576:	82 81       	ldd	r24, Z+2	; 0x02
    1578:	93 81       	ldd	r25, Z+3	; 0x03
    157a:	82 17       	cp	r24, r18
    157c:	93 07       	cpc	r25, r19
    157e:	94 f0       	brlt	.+36     	; 0x15a4 <__fpcmp_parts_f+0x88>
    1580:	28 17       	cp	r18, r24
    1582:	39 07       	cpc	r19, r25
    1584:	bc f0       	brlt	.+46     	; 0x15b4 <__fpcmp_parts_f+0x98>
    1586:	14 96       	adiw	r26, 0x04	; 4
    1588:	8d 91       	ld	r24, X+
    158a:	9d 91       	ld	r25, X+
    158c:	0d 90       	ld	r0, X+
    158e:	bc 91       	ld	r27, X
    1590:	a0 2d       	mov	r26, r0
    1592:	24 81       	ldd	r18, Z+4	; 0x04
    1594:	35 81       	ldd	r19, Z+5	; 0x05
    1596:	46 81       	ldd	r20, Z+6	; 0x06
    1598:	57 81       	ldd	r21, Z+7	; 0x07
    159a:	28 17       	cp	r18, r24
    159c:	39 07       	cpc	r19, r25
    159e:	4a 07       	cpc	r20, r26
    15a0:	5b 07       	cpc	r21, r27
    15a2:	18 f4       	brcc	.+6      	; 0x15aa <__fpcmp_parts_f+0x8e>
    15a4:	11 23       	and	r17, r17
    15a6:	41 f0       	breq	.+16     	; 0x15b8 <__fpcmp_parts_f+0x9c>
    15a8:	0a c0       	rjmp	.+20     	; 0x15be <__fpcmp_parts_f+0xa2>
    15aa:	82 17       	cp	r24, r18
    15ac:	93 07       	cpc	r25, r19
    15ae:	a4 07       	cpc	r26, r20
    15b0:	b5 07       	cpc	r27, r21
    15b2:	40 f4       	brcc	.+16     	; 0x15c4 <__fpcmp_parts_f+0xa8>
    15b4:	11 23       	and	r17, r17
    15b6:	19 f0       	breq	.+6      	; 0x15be <__fpcmp_parts_f+0xa2>
    15b8:	61 e0       	ldi	r22, 0x01	; 1
    15ba:	70 e0       	ldi	r23, 0x00	; 0
    15bc:	05 c0       	rjmp	.+10     	; 0x15c8 <__fpcmp_parts_f+0xac>
    15be:	6f ef       	ldi	r22, 0xFF	; 255
    15c0:	7f ef       	ldi	r23, 0xFF	; 255
    15c2:	02 c0       	rjmp	.+4      	; 0x15c8 <__fpcmp_parts_f+0xac>
    15c4:	60 e0       	ldi	r22, 0x00	; 0
    15c6:	70 e0       	ldi	r23, 0x00	; 0
    15c8:	cb 01       	movw	r24, r22
    15ca:	1f 91       	pop	r17
    15cc:	08 95       	ret

000015ce <__prologue_saves__>:
    15ce:	2f 92       	push	r2
    15d0:	3f 92       	push	r3
    15d2:	4f 92       	push	r4
    15d4:	5f 92       	push	r5
    15d6:	6f 92       	push	r6
    15d8:	7f 92       	push	r7
    15da:	8f 92       	push	r8
    15dc:	9f 92       	push	r9
    15de:	af 92       	push	r10
    15e0:	bf 92       	push	r11
    15e2:	cf 92       	push	r12
    15e4:	df 92       	push	r13
    15e6:	ef 92       	push	r14
    15e8:	ff 92       	push	r15
    15ea:	0f 93       	push	r16
    15ec:	1f 93       	push	r17
    15ee:	cf 93       	push	r28
    15f0:	df 93       	push	r29
    15f2:	cd b7       	in	r28, 0x3d	; 61
    15f4:	de b7       	in	r29, 0x3e	; 62
    15f6:	ca 1b       	sub	r28, r26
    15f8:	db 0b       	sbc	r29, r27
    15fa:	0f b6       	in	r0, 0x3f	; 63
    15fc:	f8 94       	cli
    15fe:	de bf       	out	0x3e, r29	; 62
    1600:	0f be       	out	0x3f, r0	; 63
    1602:	cd bf       	out	0x3d, r28	; 61
    1604:	09 94       	ijmp

00001606 <__epilogue_restores__>:
    1606:	2a 88       	ldd	r2, Y+18	; 0x12
    1608:	39 88       	ldd	r3, Y+17	; 0x11
    160a:	48 88       	ldd	r4, Y+16	; 0x10
    160c:	5f 84       	ldd	r5, Y+15	; 0x0f
    160e:	6e 84       	ldd	r6, Y+14	; 0x0e
    1610:	7d 84       	ldd	r7, Y+13	; 0x0d
    1612:	8c 84       	ldd	r8, Y+12	; 0x0c
    1614:	9b 84       	ldd	r9, Y+11	; 0x0b
    1616:	aa 84       	ldd	r10, Y+10	; 0x0a
    1618:	b9 84       	ldd	r11, Y+9	; 0x09
    161a:	c8 84       	ldd	r12, Y+8	; 0x08
    161c:	df 80       	ldd	r13, Y+7	; 0x07
    161e:	ee 80       	ldd	r14, Y+6	; 0x06
    1620:	fd 80       	ldd	r15, Y+5	; 0x05
    1622:	0c 81       	ldd	r16, Y+4	; 0x04
    1624:	1b 81       	ldd	r17, Y+3	; 0x03
    1626:	aa 81       	ldd	r26, Y+2	; 0x02
    1628:	b9 81       	ldd	r27, Y+1	; 0x01
    162a:	ce 0f       	add	r28, r30
    162c:	d1 1d       	adc	r29, r1
    162e:	0f b6       	in	r0, 0x3f	; 63
    1630:	f8 94       	cli
    1632:	de bf       	out	0x3e, r29	; 62
    1634:	0f be       	out	0x3f, r0	; 63
    1636:	cd bf       	out	0x3d, r28	; 61
    1638:	ed 01       	movw	r28, r26
    163a:	08 95       	ret

0000163c <_exit>:
    163c:	f8 94       	cli

0000163e <__stop_program>:
    163e:	ff cf       	rjmp	.-2      	; 0x163e <__stop_program>
