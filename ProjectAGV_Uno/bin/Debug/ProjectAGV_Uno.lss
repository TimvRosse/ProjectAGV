
bin\Debug\ProjectAGV_Uno.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000108  00800100  00001466  000014fa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001466  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .fuse         00000003  00820000  00820000  00001602  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .debug_aranges 000001c0  00000000  00000000  00001605  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000024b  00000000  00000000  000017c5  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000027ba  00000000  00000000  00001a10  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000014ee  00000000  00000000  000041ca  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000015e5  00000000  00000000  000056b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000210  00000000  00000000  00006ca0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003dd  00000000  00000000  00006eb0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000009ce  00000000  00000000  0000728d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  00007c5b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
       8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
       c:	0c 94 80 01 	jmp	0x300	; 0x300 <__vector_3>
      10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	12 e0       	ldi	r17, 0x02	; 2
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e6 e6       	ldi	r30, 0x66	; 102
      7c:	f4 e1       	ldi	r31, 0x14	; 20
      7e:	02 c0       	rjmp	.+4      	; 0x84 <.do_copy_data_start>

00000080 <.do_copy_data_loop>:
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0

00000084 <.do_copy_data_start>:
      84:	a8 30       	cpi	r26, 0x08	; 8
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <.do_copy_data_loop>
      8a:	0e 94 40 03 	call	0x680	; 0x680 <main>
      8e:	0c 94 31 0a 	jmp	0x1462	; 0x1462 <_exit>

00000092 <__bad_interrupt>:
      92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <init>:
#define buzzerPin PD6
#define IrSen1 PB0 //rechter
#define IrSen2 PB1 // linker

void init(void)
{
      96:	df 93       	push	r29
      98:	cf 93       	push	r28
      9a:	cd b7       	in	r28, 0x3d	; 61
      9c:	de b7       	in	r29, 0x3e	; 62
    //DDR Reg:
    DDRC |= _BV(motorPin);
      9e:	a7 e2       	ldi	r26, 0x27	; 39
      a0:	b0 e0       	ldi	r27, 0x00	; 0
      a2:	e7 e2       	ldi	r30, 0x27	; 39
      a4:	f0 e0       	ldi	r31, 0x00	; 0
      a6:	80 81       	ld	r24, Z
      a8:	80 61       	ori	r24, 0x10	; 16
      aa:	8c 93       	st	X, r24
    DDRC |= _BV(bochtPin);
      ac:	a7 e2       	ldi	r26, 0x27	; 39
      ae:	b0 e0       	ldi	r27, 0x00	; 0
      b0:	e7 e2       	ldi	r30, 0x27	; 39
      b2:	f0 e0       	ldi	r31, 0x00	; 0
      b4:	80 81       	ld	r24, Z
      b6:	80 62       	ori	r24, 0x20	; 32
      b8:	8c 93       	st	X, r24
    DDRD |= _BV(buzzerPin);
      ba:	aa e2       	ldi	r26, 0x2A	; 42
      bc:	b0 e0       	ldi	r27, 0x00	; 0
      be:	ea e2       	ldi	r30, 0x2A	; 42
      c0:	f0 e0       	ldi	r31, 0x00	; 0
      c2:	80 81       	ld	r24, Z
      c4:	80 64       	ori	r24, 0x40	; 64
      c6:	8c 93       	st	X, r24

    //init pins:
    PORTC |= _BV(motorPin);
      c8:	a8 e2       	ldi	r26, 0x28	; 40
      ca:	b0 e0       	ldi	r27, 0x00	; 0
      cc:	e8 e2       	ldi	r30, 0x28	; 40
      ce:	f0 e0       	ldi	r31, 0x00	; 0
      d0:	80 81       	ld	r24, Z
      d2:	80 61       	ori	r24, 0x10	; 16
      d4:	8c 93       	st	X, r24
    PORTB |= _BV(IrSen1);
      d6:	a5 e2       	ldi	r26, 0x25	; 37
      d8:	b0 e0       	ldi	r27, 0x00	; 0
      da:	e5 e2       	ldi	r30, 0x25	; 37
      dc:	f0 e0       	ldi	r31, 0x00	; 0
      de:	80 81       	ld	r24, Z
      e0:	81 60       	ori	r24, 0x01	; 1
      e2:	8c 93       	st	X, r24
    PORTB |= _BV(IrSen2);
      e4:	a5 e2       	ldi	r26, 0x25	; 37
      e6:	b0 e0       	ldi	r27, 0x00	; 0
      e8:	e5 e2       	ldi	r30, 0x25	; 37
      ea:	f0 e0       	ldi	r31, 0x00	; 0
      ec:	80 81       	ld	r24, Z
      ee:	82 60       	ori	r24, 0x02	; 2
      f0:	8c 93       	st	X, r24

    //init PCINT
    PCICR |= (1 << PCIE0);
      f2:	a8 e6       	ldi	r26, 0x68	; 104
      f4:	b0 e0       	ldi	r27, 0x00	; 0
      f6:	e8 e6       	ldi	r30, 0x68	; 104
      f8:	f0 e0       	ldi	r31, 0x00	; 0
      fa:	80 81       	ld	r24, Z
      fc:	81 60       	ori	r24, 0x01	; 1
      fe:	8c 93       	st	X, r24
    PCMSK0 |= ((1 << IrSen1) | (1 << IrSen2));
     100:	ab e6       	ldi	r26, 0x6B	; 107
     102:	b0 e0       	ldi	r27, 0x00	; 0
     104:	eb e6       	ldi	r30, 0x6B	; 107
     106:	f0 e0       	ldi	r31, 0x00	; 0
     108:	80 81       	ld	r24, Z
     10a:	83 60       	ori	r24, 0x03	; 3
     10c:	8c 93       	st	X, r24

    //init interrupt
    sei();
     10e:	78 94       	sei
}
     110:	cf 91       	pop	r28
     112:	df 91       	pop	r29
     114:	08 95       	ret

00000116 <buzzer>:

void buzzer(int freq, int aantal)
{
     116:	df 93       	push	r29
     118:	cf 93       	push	r28
     11a:	cd b7       	in	r28, 0x3d	; 61
     11c:	de b7       	in	r29, 0x3e	; 62
     11e:	6e 97       	sbiw	r28, 0x1e	; 30
     120:	0f b6       	in	r0, 0x3f	; 63
     122:	f8 94       	cli
     124:	de bf       	out	0x3e, r29	; 62
     126:	0f be       	out	0x3f, r0	; 63
     128:	cd bf       	out	0x3d, r28	; 61
     12a:	9c 8f       	std	Y+28, r25	; 0x1c
     12c:	8b 8f       	std	Y+27, r24	; 0x1b
     12e:	7e 8f       	std	Y+30, r23	; 0x1e
     130:	6d 8f       	std	Y+29, r22	; 0x1d
    for(int i = 0; i < aantal; i++)
     132:	1a 8e       	std	Y+26, r1	; 0x1a
     134:	19 8e       	std	Y+25, r1	; 0x19
     136:	d3 c0       	rjmp	.+422    	; 0x2de <buzzer+0x1c8>
    {
        PORTD ^= _BV(buzzerPin);
     138:	ab e2       	ldi	r26, 0x2B	; 43
     13a:	b0 e0       	ldi	r27, 0x00	; 0
     13c:	eb e2       	ldi	r30, 0x2B	; 43
     13e:	f0 e0       	ldi	r31, 0x00	; 0
     140:	90 81       	ld	r25, Z
     142:	80 e4       	ldi	r24, 0x40	; 64
     144:	89 27       	eor	r24, r25
     146:	8c 93       	st	X, r24
        _delay_us(freq);
     148:	8b 8d       	ldd	r24, Y+27	; 0x1b
     14a:	9c 8d       	ldd	r25, Y+28	; 0x1c
     14c:	aa 27       	eor	r26, r26
     14e:	97 fd       	sbrc	r25, 7
     150:	a0 95       	com	r26
     152:	ba 2f       	mov	r27, r26
     154:	bc 01       	movw	r22, r24
     156:	cd 01       	movw	r24, r26
     158:	0e 94 53 07 	call	0xea6	; 0xea6 <__floatsisf>
     15c:	dc 01       	movw	r26, r24
     15e:	cb 01       	movw	r24, r22
     160:	8d 8b       	std	Y+21, r24	; 0x15
     162:	9e 8b       	std	Y+22, r25	; 0x16
     164:	af 8b       	std	Y+23, r26	; 0x17
     166:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     168:	6d 89       	ldd	r22, Y+21	; 0x15
     16a:	7e 89       	ldd	r23, Y+22	; 0x16
     16c:	8f 89       	ldd	r24, Y+23	; 0x17
     16e:	98 8d       	ldd	r25, Y+24	; 0x18
     170:	2b ea       	ldi	r18, 0xAB	; 171
     172:	3a ea       	ldi	r19, 0xAA	; 170
     174:	4a ea       	ldi	r20, 0xAA	; 170
     176:	50 e4       	ldi	r21, 0x40	; 64
     178:	0e 94 1d 05 	call	0xa3a	; 0xa3a <__mulsf3>
     17c:	dc 01       	movw	r26, r24
     17e:	cb 01       	movw	r24, r22
     180:	89 8b       	std	Y+17, r24	; 0x11
     182:	9a 8b       	std	Y+18, r25	; 0x12
     184:	ab 8b       	std	Y+19, r26	; 0x13
     186:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
     188:	69 89       	ldd	r22, Y+17	; 0x11
     18a:	7a 89       	ldd	r23, Y+18	; 0x12
     18c:	8b 89       	ldd	r24, Y+19	; 0x13
     18e:	9c 89       	ldd	r25, Y+20	; 0x14
     190:	20 e0       	ldi	r18, 0x00	; 0
     192:	30 e0       	ldi	r19, 0x00	; 0
     194:	40 e8       	ldi	r20, 0x80	; 128
     196:	5f e3       	ldi	r21, 0x3F	; 63
     198:	0e 94 23 07 	call	0xe46	; 0xe46 <__ltsf2>
     19c:	88 23       	and	r24, r24
     19e:	1c f4       	brge	.+6      	; 0x1a6 <buzzer+0x90>
		__ticks = 1;
     1a0:	81 e0       	ldi	r24, 0x01	; 1
     1a2:	88 8b       	std	Y+16, r24	; 0x10
     1a4:	91 c0       	rjmp	.+290    	; 0x2c8 <buzzer+0x1b2>
	else if (__tmp > 255)
     1a6:	69 89       	ldd	r22, Y+17	; 0x11
     1a8:	7a 89       	ldd	r23, Y+18	; 0x12
     1aa:	8b 89       	ldd	r24, Y+19	; 0x13
     1ac:	9c 89       	ldd	r25, Y+20	; 0x14
     1ae:	20 e0       	ldi	r18, 0x00	; 0
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	4f e7       	ldi	r20, 0x7F	; 127
     1b4:	53 e4       	ldi	r21, 0x43	; 67
     1b6:	0e 94 c3 06 	call	0xd86	; 0xd86 <__gtsf2>
     1ba:	18 16       	cp	r1, r24
     1bc:	0c f0       	brlt	.+2      	; 0x1c0 <buzzer+0xaa>
     1be:	7b c0       	rjmp	.+246    	; 0x2b6 <buzzer+0x1a0>
	{
		_delay_ms(__us / 1000.0);
     1c0:	6d 89       	ldd	r22, Y+21	; 0x15
     1c2:	7e 89       	ldd	r23, Y+22	; 0x16
     1c4:	8f 89       	ldd	r24, Y+23	; 0x17
     1c6:	98 8d       	ldd	r25, Y+24	; 0x18
     1c8:	20 e0       	ldi	r18, 0x00	; 0
     1ca:	30 e0       	ldi	r19, 0x00	; 0
     1cc:	4a e7       	ldi	r20, 0x7A	; 122
     1ce:	54 e4       	ldi	r21, 0x44	; 68
     1d0:	0e 94 17 06 	call	0xc2e	; 0xc2e <__divsf3>
     1d4:	dc 01       	movw	r26, r24
     1d6:	cb 01       	movw	r24, r22
     1d8:	8c 87       	std	Y+12, r24	; 0x0c
     1da:	9d 87       	std	Y+13, r25	; 0x0d
     1dc:	ae 87       	std	Y+14, r26	; 0x0e
     1de:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     1e0:	6c 85       	ldd	r22, Y+12	; 0x0c
     1e2:	7d 85       	ldd	r23, Y+13	; 0x0d
     1e4:	8e 85       	ldd	r24, Y+14	; 0x0e
     1e6:	9f 85       	ldd	r25, Y+15	; 0x0f
     1e8:	20 e0       	ldi	r18, 0x00	; 0
     1ea:	30 e0       	ldi	r19, 0x00	; 0
     1ec:	4a e7       	ldi	r20, 0x7A	; 122
     1ee:	55 e4       	ldi	r21, 0x45	; 69
     1f0:	0e 94 1d 05 	call	0xa3a	; 0xa3a <__mulsf3>
     1f4:	dc 01       	movw	r26, r24
     1f6:	cb 01       	movw	r24, r22
     1f8:	88 87       	std	Y+8, r24	; 0x08
     1fa:	99 87       	std	Y+9, r25	; 0x09
     1fc:	aa 87       	std	Y+10, r26	; 0x0a
     1fe:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
     200:	68 85       	ldd	r22, Y+8	; 0x08
     202:	79 85       	ldd	r23, Y+9	; 0x09
     204:	8a 85       	ldd	r24, Y+10	; 0x0a
     206:	9b 85       	ldd	r25, Y+11	; 0x0b
     208:	20 e0       	ldi	r18, 0x00	; 0
     20a:	30 e0       	ldi	r19, 0x00	; 0
     20c:	40 e8       	ldi	r20, 0x80	; 128
     20e:	5f e3       	ldi	r21, 0x3F	; 63
     210:	0e 94 23 07 	call	0xe46	; 0xe46 <__ltsf2>
     214:	88 23       	and	r24, r24
     216:	2c f4       	brge	.+10     	; 0x222 <buzzer+0x10c>
		__ticks = 1;
     218:	81 e0       	ldi	r24, 0x01	; 1
     21a:	90 e0       	ldi	r25, 0x00	; 0
     21c:	9f 83       	std	Y+7, r25	; 0x07
     21e:	8e 83       	std	Y+6, r24	; 0x06
     220:	3f c0       	rjmp	.+126    	; 0x2a0 <buzzer+0x18a>
	else if (__tmp > 65535)
     222:	68 85       	ldd	r22, Y+8	; 0x08
     224:	79 85       	ldd	r23, Y+9	; 0x09
     226:	8a 85       	ldd	r24, Y+10	; 0x0a
     228:	9b 85       	ldd	r25, Y+11	; 0x0b
     22a:	20 e0       	ldi	r18, 0x00	; 0
     22c:	3f ef       	ldi	r19, 0xFF	; 255
     22e:	4f e7       	ldi	r20, 0x7F	; 127
     230:	57 e4       	ldi	r21, 0x47	; 71
     232:	0e 94 c3 06 	call	0xd86	; 0xd86 <__gtsf2>
     236:	18 16       	cp	r1, r24
     238:	4c f5       	brge	.+82     	; 0x28c <buzzer+0x176>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     23a:	6c 85       	ldd	r22, Y+12	; 0x0c
     23c:	7d 85       	ldd	r23, Y+13	; 0x0d
     23e:	8e 85       	ldd	r24, Y+14	; 0x0e
     240:	9f 85       	ldd	r25, Y+15	; 0x0f
     242:	20 e0       	ldi	r18, 0x00	; 0
     244:	30 e0       	ldi	r19, 0x00	; 0
     246:	40 e2       	ldi	r20, 0x20	; 32
     248:	51 e4       	ldi	r21, 0x41	; 65
     24a:	0e 94 1d 05 	call	0xa3a	; 0xa3a <__mulsf3>
     24e:	dc 01       	movw	r26, r24
     250:	cb 01       	movw	r24, r22
     252:	bc 01       	movw	r22, r24
     254:	cd 01       	movw	r24, r26
     256:	0e 94 47 03 	call	0x68e	; 0x68e <__fixunssfsi>
     25a:	dc 01       	movw	r26, r24
     25c:	cb 01       	movw	r24, r22
     25e:	9f 83       	std	Y+7, r25	; 0x07
     260:	8e 83       	std	Y+6, r24	; 0x06
     262:	0f c0       	rjmp	.+30     	; 0x282 <buzzer+0x16c>
     264:	80 e9       	ldi	r24, 0x90	; 144
     266:	91 e0       	ldi	r25, 0x01	; 1
     268:	9d 83       	std	Y+5, r25	; 0x05
     26a:	8c 83       	std	Y+4, r24	; 0x04
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     26c:	8c 81       	ldd	r24, Y+4	; 0x04
     26e:	9d 81       	ldd	r25, Y+5	; 0x05
     270:	01 97       	sbiw	r24, 0x01	; 1
     272:	f1 f7       	brne	.-4      	; 0x270 <buzzer+0x15a>
     274:	9d 83       	std	Y+5, r25	; 0x05
     276:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     278:	8e 81       	ldd	r24, Y+6	; 0x06
     27a:	9f 81       	ldd	r25, Y+7	; 0x07
     27c:	01 97       	sbiw	r24, 0x01	; 1
     27e:	9f 83       	std	Y+7, r25	; 0x07
     280:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     282:	8e 81       	ldd	r24, Y+6	; 0x06
     284:	9f 81       	ldd	r25, Y+7	; 0x07
     286:	00 97       	sbiw	r24, 0x00	; 0
     288:	69 f7       	brne	.-38     	; 0x264 <buzzer+0x14e>
     28a:	24 c0       	rjmp	.+72     	; 0x2d4 <buzzer+0x1be>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     28c:	68 85       	ldd	r22, Y+8	; 0x08
     28e:	79 85       	ldd	r23, Y+9	; 0x09
     290:	8a 85       	ldd	r24, Y+10	; 0x0a
     292:	9b 85       	ldd	r25, Y+11	; 0x0b
     294:	0e 94 47 03 	call	0x68e	; 0x68e <__fixunssfsi>
     298:	dc 01       	movw	r26, r24
     29a:	cb 01       	movw	r24, r22
     29c:	9f 83       	std	Y+7, r25	; 0x07
     29e:	8e 83       	std	Y+6, r24	; 0x06
     2a0:	8e 81       	ldd	r24, Y+6	; 0x06
     2a2:	9f 81       	ldd	r25, Y+7	; 0x07
     2a4:	9b 83       	std	Y+3, r25	; 0x03
     2a6:	8a 83       	std	Y+2, r24	; 0x02
     2a8:	8a 81       	ldd	r24, Y+2	; 0x02
     2aa:	9b 81       	ldd	r25, Y+3	; 0x03
     2ac:	01 97       	sbiw	r24, 0x01	; 1
     2ae:	f1 f7       	brne	.-4      	; 0x2ac <buzzer+0x196>
     2b0:	9b 83       	std	Y+3, r25	; 0x03
     2b2:	8a 83       	std	Y+2, r24	; 0x02
     2b4:	0f c0       	rjmp	.+30     	; 0x2d4 <buzzer+0x1be>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     2b6:	69 89       	ldd	r22, Y+17	; 0x11
     2b8:	7a 89       	ldd	r23, Y+18	; 0x12
     2ba:	8b 89       	ldd	r24, Y+19	; 0x13
     2bc:	9c 89       	ldd	r25, Y+20	; 0x14
     2be:	0e 94 47 03 	call	0x68e	; 0x68e <__fixunssfsi>
     2c2:	dc 01       	movw	r26, r24
     2c4:	cb 01       	movw	r24, r22
     2c6:	88 8b       	std	Y+16, r24	; 0x10
     2c8:	88 89       	ldd	r24, Y+16	; 0x10
     2ca:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     2cc:	89 81       	ldd	r24, Y+1	; 0x01
     2ce:	8a 95       	dec	r24
     2d0:	f1 f7       	brne	.-4      	; 0x2ce <buzzer+0x1b8>
     2d2:	89 83       	std	Y+1, r24	; 0x01
    sei();
}

void buzzer(int freq, int aantal)
{
    for(int i = 0; i < aantal; i++)
     2d4:	89 8d       	ldd	r24, Y+25	; 0x19
     2d6:	9a 8d       	ldd	r25, Y+26	; 0x1a
     2d8:	01 96       	adiw	r24, 0x01	; 1
     2da:	9a 8f       	std	Y+26, r25	; 0x1a
     2dc:	89 8f       	std	Y+25, r24	; 0x19
     2de:	29 8d       	ldd	r18, Y+25	; 0x19
     2e0:	3a 8d       	ldd	r19, Y+26	; 0x1a
     2e2:	8d 8d       	ldd	r24, Y+29	; 0x1d
     2e4:	9e 8d       	ldd	r25, Y+30	; 0x1e
     2e6:	28 17       	cp	r18, r24
     2e8:	39 07       	cpc	r19, r25
     2ea:	0c f4       	brge	.+2      	; 0x2ee <buzzer+0x1d8>
     2ec:	25 cf       	rjmp	.-438    	; 0x138 <buzzer+0x22>
    {
        PORTD ^= _BV(buzzerPin);
        _delay_us(freq);

    }
}
     2ee:	6e 96       	adiw	r28, 0x1e	; 30
     2f0:	0f b6       	in	r0, 0x3f	; 63
     2f2:	f8 94       	cli
     2f4:	de bf       	out	0x3e, r29	; 62
     2f6:	0f be       	out	0x3f, r0	; 63
     2f8:	cd bf       	out	0x3d, r28	; 61
     2fa:	cf 91       	pop	r28
     2fc:	df 91       	pop	r29
     2fe:	08 95       	ret

00000300 <__vector_3>:

ISR(PCINT0_vect)
{
     300:	1f 92       	push	r1
     302:	0f 92       	push	r0
     304:	0f b6       	in	r0, 0x3f	; 63
     306:	0f 92       	push	r0
     308:	11 24       	eor	r1, r1
     30a:	2f 93       	push	r18
     30c:	3f 93       	push	r19
     30e:	4f 93       	push	r20
     310:	5f 93       	push	r21
     312:	6f 93       	push	r22
     314:	7f 93       	push	r23
     316:	8f 93       	push	r24
     318:	9f 93       	push	r25
     31a:	af 93       	push	r26
     31c:	bf 93       	push	r27
     31e:	ef 93       	push	r30
     320:	ff 93       	push	r31
     322:	df 93       	push	r29
     324:	cf 93       	push	r28
     326:	cd b7       	in	r28, 0x3d	; 61
     328:	de b7       	in	r29, 0x3e	; 62
     32a:	aa 97       	sbiw	r28, 0x2a	; 42
     32c:	de bf       	out	0x3e, r29	; 62
     32e:	cd bf       	out	0x3d, r28	; 61
     330:	80 e0       	ldi	r24, 0x00	; 0
     332:	90 e0       	ldi	r25, 0x00	; 0
     334:	a8 ec       	ldi	r26, 0xC8	; 200
     336:	b1 e4       	ldi	r27, 0x41	; 65
     338:	8f a3       	std	Y+39, r24	; 0x27
     33a:	98 a7       	std	Y+40, r25	; 0x28
     33c:	a9 a7       	std	Y+41, r26	; 0x29
     33e:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     340:	6f a1       	ldd	r22, Y+39	; 0x27
     342:	78 a5       	ldd	r23, Y+40	; 0x28
     344:	89 a5       	ldd	r24, Y+41	; 0x29
     346:	9a a5       	ldd	r25, Y+42	; 0x2a
     348:	20 e0       	ldi	r18, 0x00	; 0
     34a:	30 e0       	ldi	r19, 0x00	; 0
     34c:	4a e7       	ldi	r20, 0x7A	; 122
     34e:	55 e4       	ldi	r21, 0x45	; 69
     350:	0e 94 1d 05 	call	0xa3a	; 0xa3a <__mulsf3>
     354:	dc 01       	movw	r26, r24
     356:	cb 01       	movw	r24, r22
     358:	8b a3       	std	Y+35, r24	; 0x23
     35a:	9c a3       	std	Y+36, r25	; 0x24
     35c:	ad a3       	std	Y+37, r26	; 0x25
     35e:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     360:	6b a1       	ldd	r22, Y+35	; 0x23
     362:	7c a1       	ldd	r23, Y+36	; 0x24
     364:	8d a1       	ldd	r24, Y+37	; 0x25
     366:	9e a1       	ldd	r25, Y+38	; 0x26
     368:	20 e0       	ldi	r18, 0x00	; 0
     36a:	30 e0       	ldi	r19, 0x00	; 0
     36c:	40 e8       	ldi	r20, 0x80	; 128
     36e:	5f e3       	ldi	r21, 0x3F	; 63
     370:	0e 94 23 07 	call	0xe46	; 0xe46 <__ltsf2>
     374:	88 23       	and	r24, r24
     376:	2c f4       	brge	.+10     	; 0x382 <__vector_3+0x82>
		__ticks = 1;
     378:	81 e0       	ldi	r24, 0x01	; 1
     37a:	90 e0       	ldi	r25, 0x00	; 0
     37c:	9a a3       	std	Y+34, r25	; 0x22
     37e:	89 a3       	std	Y+33, r24	; 0x21
     380:	3f c0       	rjmp	.+126    	; 0x400 <__vector_3+0x100>
	else if (__tmp > 65535)
     382:	6b a1       	ldd	r22, Y+35	; 0x23
     384:	7c a1       	ldd	r23, Y+36	; 0x24
     386:	8d a1       	ldd	r24, Y+37	; 0x25
     388:	9e a1       	ldd	r25, Y+38	; 0x26
     38a:	20 e0       	ldi	r18, 0x00	; 0
     38c:	3f ef       	ldi	r19, 0xFF	; 255
     38e:	4f e7       	ldi	r20, 0x7F	; 127
     390:	57 e4       	ldi	r21, 0x47	; 71
     392:	0e 94 c3 06 	call	0xd86	; 0xd86 <__gtsf2>
     396:	18 16       	cp	r1, r24
     398:	4c f5       	brge	.+82     	; 0x3ec <__vector_3+0xec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     39a:	6f a1       	ldd	r22, Y+39	; 0x27
     39c:	78 a5       	ldd	r23, Y+40	; 0x28
     39e:	89 a5       	ldd	r24, Y+41	; 0x29
     3a0:	9a a5       	ldd	r25, Y+42	; 0x2a
     3a2:	20 e0       	ldi	r18, 0x00	; 0
     3a4:	30 e0       	ldi	r19, 0x00	; 0
     3a6:	40 e2       	ldi	r20, 0x20	; 32
     3a8:	51 e4       	ldi	r21, 0x41	; 65
     3aa:	0e 94 1d 05 	call	0xa3a	; 0xa3a <__mulsf3>
     3ae:	dc 01       	movw	r26, r24
     3b0:	cb 01       	movw	r24, r22
     3b2:	bc 01       	movw	r22, r24
     3b4:	cd 01       	movw	r24, r26
     3b6:	0e 94 47 03 	call	0x68e	; 0x68e <__fixunssfsi>
     3ba:	dc 01       	movw	r26, r24
     3bc:	cb 01       	movw	r24, r22
     3be:	9a a3       	std	Y+34, r25	; 0x22
     3c0:	89 a3       	std	Y+33, r24	; 0x21
     3c2:	0f c0       	rjmp	.+30     	; 0x3e2 <__vector_3+0xe2>
     3c4:	80 e9       	ldi	r24, 0x90	; 144
     3c6:	91 e0       	ldi	r25, 0x01	; 1
     3c8:	98 a3       	std	Y+32, r25	; 0x20
     3ca:	8f 8f       	std	Y+31, r24	; 0x1f
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     3cc:	8f 8d       	ldd	r24, Y+31	; 0x1f
     3ce:	98 a1       	ldd	r25, Y+32	; 0x20
     3d0:	01 97       	sbiw	r24, 0x01	; 1
     3d2:	f1 f7       	brne	.-4      	; 0x3d0 <__vector_3+0xd0>
     3d4:	98 a3       	std	Y+32, r25	; 0x20
     3d6:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     3d8:	89 a1       	ldd	r24, Y+33	; 0x21
     3da:	9a a1       	ldd	r25, Y+34	; 0x22
     3dc:	01 97       	sbiw	r24, 0x01	; 1
     3de:	9a a3       	std	Y+34, r25	; 0x22
     3e0:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     3e2:	89 a1       	ldd	r24, Y+33	; 0x21
     3e4:	9a a1       	ldd	r25, Y+34	; 0x22
     3e6:	00 97       	sbiw	r24, 0x00	; 0
     3e8:	69 f7       	brne	.-38     	; 0x3c4 <__vector_3+0xc4>
     3ea:	14 c0       	rjmp	.+40     	; 0x414 <__vector_3+0x114>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     3ec:	6b a1       	ldd	r22, Y+35	; 0x23
     3ee:	7c a1       	ldd	r23, Y+36	; 0x24
     3f0:	8d a1       	ldd	r24, Y+37	; 0x25
     3f2:	9e a1       	ldd	r25, Y+38	; 0x26
     3f4:	0e 94 47 03 	call	0x68e	; 0x68e <__fixunssfsi>
     3f8:	dc 01       	movw	r26, r24
     3fa:	cb 01       	movw	r24, r22
     3fc:	9a a3       	std	Y+34, r25	; 0x22
     3fe:	89 a3       	std	Y+33, r24	; 0x21
     400:	89 a1       	ldd	r24, Y+33	; 0x21
     402:	9a a1       	ldd	r25, Y+34	; 0x22
     404:	9e 8f       	std	Y+30, r25	; 0x1e
     406:	8d 8f       	std	Y+29, r24	; 0x1d
     408:	8d 8d       	ldd	r24, Y+29	; 0x1d
     40a:	9e 8d       	ldd	r25, Y+30	; 0x1e
     40c:	01 97       	sbiw	r24, 0x01	; 1
     40e:	f1 f7       	brne	.-4      	; 0x40c <__vector_3+0x10c>
     410:	9e 8f       	std	Y+30, r25	; 0x1e
     412:	8d 8f       	std	Y+29, r24	; 0x1d
    _delay_ms(25);
    if(bit_is_clear(PINB, IrSen1))
     414:	e3 e2       	ldi	r30, 0x23	; 35
     416:	f0 e0       	ldi	r31, 0x00	; 0
     418:	80 81       	ld	r24, Z
     41a:	88 2f       	mov	r24, r24
     41c:	90 e0       	ldi	r25, 0x00	; 0
     41e:	81 70       	andi	r24, 0x01	; 1
     420:	90 70       	andi	r25, 0x00	; 0
     422:	00 97       	sbiw	r24, 0x00	; 0
     424:	09 f0       	breq	.+2      	; 0x428 <__vector_3+0x128>
     426:	86 c0       	rjmp	.+268    	; 0x534 <__vector_3+0x234>
    {
        PORTC |= _BV(motorPin);
     428:	a8 e2       	ldi	r26, 0x28	; 40
     42a:	b0 e0       	ldi	r27, 0x00	; 0
     42c:	e8 e2       	ldi	r30, 0x28	; 40
     42e:	f0 e0       	ldi	r31, 0x00	; 0
     430:	80 81       	ld	r24, Z
     432:	80 61       	ori	r24, 0x10	; 16
     434:	8c 93       	st	X, r24
        buzzer(350, 1000);
     436:	8e e5       	ldi	r24, 0x5E	; 94
     438:	91 e0       	ldi	r25, 0x01	; 1
     43a:	68 ee       	ldi	r22, 0xE8	; 232
     43c:	73 e0       	ldi	r23, 0x03	; 3
     43e:	0e 94 8b 00 	call	0x116	; 0x116 <buzzer>
     442:	80 e0       	ldi	r24, 0x00	; 0
     444:	90 e0       	ldi	r25, 0x00	; 0
     446:	aa ef       	ldi	r26, 0xFA	; 250
     448:	b3 e4       	ldi	r27, 0x43	; 67
     44a:	89 8f       	std	Y+25, r24	; 0x19
     44c:	9a 8f       	std	Y+26, r25	; 0x1a
     44e:	ab 8f       	std	Y+27, r26	; 0x1b
     450:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     452:	69 8d       	ldd	r22, Y+25	; 0x19
     454:	7a 8d       	ldd	r23, Y+26	; 0x1a
     456:	8b 8d       	ldd	r24, Y+27	; 0x1b
     458:	9c 8d       	ldd	r25, Y+28	; 0x1c
     45a:	20 e0       	ldi	r18, 0x00	; 0
     45c:	30 e0       	ldi	r19, 0x00	; 0
     45e:	4a e7       	ldi	r20, 0x7A	; 122
     460:	55 e4       	ldi	r21, 0x45	; 69
     462:	0e 94 1d 05 	call	0xa3a	; 0xa3a <__mulsf3>
     466:	dc 01       	movw	r26, r24
     468:	cb 01       	movw	r24, r22
     46a:	8d 8b       	std	Y+21, r24	; 0x15
     46c:	9e 8b       	std	Y+22, r25	; 0x16
     46e:	af 8b       	std	Y+23, r26	; 0x17
     470:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     472:	6d 89       	ldd	r22, Y+21	; 0x15
     474:	7e 89       	ldd	r23, Y+22	; 0x16
     476:	8f 89       	ldd	r24, Y+23	; 0x17
     478:	98 8d       	ldd	r25, Y+24	; 0x18
     47a:	20 e0       	ldi	r18, 0x00	; 0
     47c:	30 e0       	ldi	r19, 0x00	; 0
     47e:	40 e8       	ldi	r20, 0x80	; 128
     480:	5f e3       	ldi	r21, 0x3F	; 63
     482:	0e 94 23 07 	call	0xe46	; 0xe46 <__ltsf2>
     486:	88 23       	and	r24, r24
     488:	2c f4       	brge	.+10     	; 0x494 <__vector_3+0x194>
		__ticks = 1;
     48a:	81 e0       	ldi	r24, 0x01	; 1
     48c:	90 e0       	ldi	r25, 0x00	; 0
     48e:	9c 8b       	std	Y+20, r25	; 0x14
     490:	8b 8b       	std	Y+19, r24	; 0x13
     492:	3f c0       	rjmp	.+126    	; 0x512 <__vector_3+0x212>
	else if (__tmp > 65535)
     494:	6d 89       	ldd	r22, Y+21	; 0x15
     496:	7e 89       	ldd	r23, Y+22	; 0x16
     498:	8f 89       	ldd	r24, Y+23	; 0x17
     49a:	98 8d       	ldd	r25, Y+24	; 0x18
     49c:	20 e0       	ldi	r18, 0x00	; 0
     49e:	3f ef       	ldi	r19, 0xFF	; 255
     4a0:	4f e7       	ldi	r20, 0x7F	; 127
     4a2:	57 e4       	ldi	r21, 0x47	; 71
     4a4:	0e 94 c3 06 	call	0xd86	; 0xd86 <__gtsf2>
     4a8:	18 16       	cp	r1, r24
     4aa:	4c f5       	brge	.+82     	; 0x4fe <__vector_3+0x1fe>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     4ac:	69 8d       	ldd	r22, Y+25	; 0x19
     4ae:	7a 8d       	ldd	r23, Y+26	; 0x1a
     4b0:	8b 8d       	ldd	r24, Y+27	; 0x1b
     4b2:	9c 8d       	ldd	r25, Y+28	; 0x1c
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	30 e0       	ldi	r19, 0x00	; 0
     4b8:	40 e2       	ldi	r20, 0x20	; 32
     4ba:	51 e4       	ldi	r21, 0x41	; 65
     4bc:	0e 94 1d 05 	call	0xa3a	; 0xa3a <__mulsf3>
     4c0:	dc 01       	movw	r26, r24
     4c2:	cb 01       	movw	r24, r22
     4c4:	bc 01       	movw	r22, r24
     4c6:	cd 01       	movw	r24, r26
     4c8:	0e 94 47 03 	call	0x68e	; 0x68e <__fixunssfsi>
     4cc:	dc 01       	movw	r26, r24
     4ce:	cb 01       	movw	r24, r22
     4d0:	9c 8b       	std	Y+20, r25	; 0x14
     4d2:	8b 8b       	std	Y+19, r24	; 0x13
     4d4:	0f c0       	rjmp	.+30     	; 0x4f4 <__vector_3+0x1f4>
     4d6:	80 e9       	ldi	r24, 0x90	; 144
     4d8:	91 e0       	ldi	r25, 0x01	; 1
     4da:	9a 8b       	std	Y+18, r25	; 0x12
     4dc:	89 8b       	std	Y+17, r24	; 0x11
     4de:	89 89       	ldd	r24, Y+17	; 0x11
     4e0:	9a 89       	ldd	r25, Y+18	; 0x12
     4e2:	01 97       	sbiw	r24, 0x01	; 1
     4e4:	f1 f7       	brne	.-4      	; 0x4e2 <__vector_3+0x1e2>
     4e6:	9a 8b       	std	Y+18, r25	; 0x12
     4e8:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     4ea:	8b 89       	ldd	r24, Y+19	; 0x13
     4ec:	9c 89       	ldd	r25, Y+20	; 0x14
     4ee:	01 97       	sbiw	r24, 0x01	; 1
     4f0:	9c 8b       	std	Y+20, r25	; 0x14
     4f2:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     4f4:	8b 89       	ldd	r24, Y+19	; 0x13
     4f6:	9c 89       	ldd	r25, Y+20	; 0x14
     4f8:	00 97       	sbiw	r24, 0x00	; 0
     4fa:	69 f7       	brne	.-38     	; 0x4d6 <__vector_3+0x1d6>
     4fc:	14 c0       	rjmp	.+40     	; 0x526 <__vector_3+0x226>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     4fe:	6d 89       	ldd	r22, Y+21	; 0x15
     500:	7e 89       	ldd	r23, Y+22	; 0x16
     502:	8f 89       	ldd	r24, Y+23	; 0x17
     504:	98 8d       	ldd	r25, Y+24	; 0x18
     506:	0e 94 47 03 	call	0x68e	; 0x68e <__fixunssfsi>
     50a:	dc 01       	movw	r26, r24
     50c:	cb 01       	movw	r24, r22
     50e:	9c 8b       	std	Y+20, r25	; 0x14
     510:	8b 8b       	std	Y+19, r24	; 0x13
     512:	8b 89       	ldd	r24, Y+19	; 0x13
     514:	9c 89       	ldd	r25, Y+20	; 0x14
     516:	98 8b       	std	Y+16, r25	; 0x10
     518:	8f 87       	std	Y+15, r24	; 0x0f
     51a:	8f 85       	ldd	r24, Y+15	; 0x0f
     51c:	98 89       	ldd	r25, Y+16	; 0x10
     51e:	01 97       	sbiw	r24, 0x01	; 1
     520:	f1 f7       	brne	.-4      	; 0x51e <__vector_3+0x21e>
     522:	98 8b       	std	Y+16, r25	; 0x10
     524:	8f 87       	std	Y+15, r24	; 0x0f
        _delay_ms(500);
        PORTC &= ~_BV(motorPin);
     526:	a8 e2       	ldi	r26, 0x28	; 40
     528:	b0 e0       	ldi	r27, 0x00	; 0
     52a:	e8 e2       	ldi	r30, 0x28	; 40
     52c:	f0 e0       	ldi	r31, 0x00	; 0
     52e:	80 81       	ld	r24, Z
     530:	8f 7e       	andi	r24, 0xEF	; 239
     532:	8c 93       	st	X, r24
    }
    if(bit_is_clear(PINB, IrSen2))
     534:	e3 e2       	ldi	r30, 0x23	; 35
     536:	f0 e0       	ldi	r31, 0x00	; 0
     538:	80 81       	ld	r24, Z
     53a:	88 2f       	mov	r24, r24
     53c:	90 e0       	ldi	r25, 0x00	; 0
     53e:	82 70       	andi	r24, 0x02	; 2
     540:	90 70       	andi	r25, 0x00	; 0
     542:	00 97       	sbiw	r24, 0x00	; 0
     544:	09 f0       	breq	.+2      	; 0x548 <__vector_3+0x248>
     546:	86 c0       	rjmp	.+268    	; 0x654 <__vector_3+0x354>
    {
        PORTC |= _BV(motorPin);
     548:	a8 e2       	ldi	r26, 0x28	; 40
     54a:	b0 e0       	ldi	r27, 0x00	; 0
     54c:	e8 e2       	ldi	r30, 0x28	; 40
     54e:	f0 e0       	ldi	r31, 0x00	; 0
     550:	80 81       	ld	r24, Z
     552:	80 61       	ori	r24, 0x10	; 16
     554:	8c 93       	st	X, r24
        buzzer(350, 1000);
     556:	8e e5       	ldi	r24, 0x5E	; 94
     558:	91 e0       	ldi	r25, 0x01	; 1
     55a:	68 ee       	ldi	r22, 0xE8	; 232
     55c:	73 e0       	ldi	r23, 0x03	; 3
     55e:	0e 94 8b 00 	call	0x116	; 0x116 <buzzer>
     562:	80 e0       	ldi	r24, 0x00	; 0
     564:	90 e0       	ldi	r25, 0x00	; 0
     566:	aa ef       	ldi	r26, 0xFA	; 250
     568:	b3 e4       	ldi	r27, 0x43	; 67
     56a:	8b 87       	std	Y+11, r24	; 0x0b
     56c:	9c 87       	std	Y+12, r25	; 0x0c
     56e:	ad 87       	std	Y+13, r26	; 0x0d
     570:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     572:	6b 85       	ldd	r22, Y+11	; 0x0b
     574:	7c 85       	ldd	r23, Y+12	; 0x0c
     576:	8d 85       	ldd	r24, Y+13	; 0x0d
     578:	9e 85       	ldd	r25, Y+14	; 0x0e
     57a:	20 e0       	ldi	r18, 0x00	; 0
     57c:	30 e0       	ldi	r19, 0x00	; 0
     57e:	4a e7       	ldi	r20, 0x7A	; 122
     580:	55 e4       	ldi	r21, 0x45	; 69
     582:	0e 94 1d 05 	call	0xa3a	; 0xa3a <__mulsf3>
     586:	dc 01       	movw	r26, r24
     588:	cb 01       	movw	r24, r22
     58a:	8f 83       	std	Y+7, r24	; 0x07
     58c:	98 87       	std	Y+8, r25	; 0x08
     58e:	a9 87       	std	Y+9, r26	; 0x09
     590:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     592:	6f 81       	ldd	r22, Y+7	; 0x07
     594:	78 85       	ldd	r23, Y+8	; 0x08
     596:	89 85       	ldd	r24, Y+9	; 0x09
     598:	9a 85       	ldd	r25, Y+10	; 0x0a
     59a:	20 e0       	ldi	r18, 0x00	; 0
     59c:	30 e0       	ldi	r19, 0x00	; 0
     59e:	40 e8       	ldi	r20, 0x80	; 128
     5a0:	5f e3       	ldi	r21, 0x3F	; 63
     5a2:	0e 94 23 07 	call	0xe46	; 0xe46 <__ltsf2>
     5a6:	88 23       	and	r24, r24
     5a8:	2c f4       	brge	.+10     	; 0x5b4 <__vector_3+0x2b4>
		__ticks = 1;
     5aa:	81 e0       	ldi	r24, 0x01	; 1
     5ac:	90 e0       	ldi	r25, 0x00	; 0
     5ae:	9e 83       	std	Y+6, r25	; 0x06
     5b0:	8d 83       	std	Y+5, r24	; 0x05
     5b2:	3f c0       	rjmp	.+126    	; 0x632 <__vector_3+0x332>
	else if (__tmp > 65535)
     5b4:	6f 81       	ldd	r22, Y+7	; 0x07
     5b6:	78 85       	ldd	r23, Y+8	; 0x08
     5b8:	89 85       	ldd	r24, Y+9	; 0x09
     5ba:	9a 85       	ldd	r25, Y+10	; 0x0a
     5bc:	20 e0       	ldi	r18, 0x00	; 0
     5be:	3f ef       	ldi	r19, 0xFF	; 255
     5c0:	4f e7       	ldi	r20, 0x7F	; 127
     5c2:	57 e4       	ldi	r21, 0x47	; 71
     5c4:	0e 94 c3 06 	call	0xd86	; 0xd86 <__gtsf2>
     5c8:	18 16       	cp	r1, r24
     5ca:	4c f5       	brge	.+82     	; 0x61e <__vector_3+0x31e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     5cc:	6b 85       	ldd	r22, Y+11	; 0x0b
     5ce:	7c 85       	ldd	r23, Y+12	; 0x0c
     5d0:	8d 85       	ldd	r24, Y+13	; 0x0d
     5d2:	9e 85       	ldd	r25, Y+14	; 0x0e
     5d4:	20 e0       	ldi	r18, 0x00	; 0
     5d6:	30 e0       	ldi	r19, 0x00	; 0
     5d8:	40 e2       	ldi	r20, 0x20	; 32
     5da:	51 e4       	ldi	r21, 0x41	; 65
     5dc:	0e 94 1d 05 	call	0xa3a	; 0xa3a <__mulsf3>
     5e0:	dc 01       	movw	r26, r24
     5e2:	cb 01       	movw	r24, r22
     5e4:	bc 01       	movw	r22, r24
     5e6:	cd 01       	movw	r24, r26
     5e8:	0e 94 47 03 	call	0x68e	; 0x68e <__fixunssfsi>
     5ec:	dc 01       	movw	r26, r24
     5ee:	cb 01       	movw	r24, r22
     5f0:	9e 83       	std	Y+6, r25	; 0x06
     5f2:	8d 83       	std	Y+5, r24	; 0x05
     5f4:	0f c0       	rjmp	.+30     	; 0x614 <__vector_3+0x314>
     5f6:	80 e9       	ldi	r24, 0x90	; 144
     5f8:	91 e0       	ldi	r25, 0x01	; 1
     5fa:	9c 83       	std	Y+4, r25	; 0x04
     5fc:	8b 83       	std	Y+3, r24	; 0x03
     5fe:	8b 81       	ldd	r24, Y+3	; 0x03
     600:	9c 81       	ldd	r25, Y+4	; 0x04
     602:	01 97       	sbiw	r24, 0x01	; 1
     604:	f1 f7       	brne	.-4      	; 0x602 <__vector_3+0x302>
     606:	9c 83       	std	Y+4, r25	; 0x04
     608:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     60a:	8d 81       	ldd	r24, Y+5	; 0x05
     60c:	9e 81       	ldd	r25, Y+6	; 0x06
     60e:	01 97       	sbiw	r24, 0x01	; 1
     610:	9e 83       	std	Y+6, r25	; 0x06
     612:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     614:	8d 81       	ldd	r24, Y+5	; 0x05
     616:	9e 81       	ldd	r25, Y+6	; 0x06
     618:	00 97       	sbiw	r24, 0x00	; 0
     61a:	69 f7       	brne	.-38     	; 0x5f6 <__vector_3+0x2f6>
     61c:	14 c0       	rjmp	.+40     	; 0x646 <__vector_3+0x346>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     61e:	6f 81       	ldd	r22, Y+7	; 0x07
     620:	78 85       	ldd	r23, Y+8	; 0x08
     622:	89 85       	ldd	r24, Y+9	; 0x09
     624:	9a 85       	ldd	r25, Y+10	; 0x0a
     626:	0e 94 47 03 	call	0x68e	; 0x68e <__fixunssfsi>
     62a:	dc 01       	movw	r26, r24
     62c:	cb 01       	movw	r24, r22
     62e:	9e 83       	std	Y+6, r25	; 0x06
     630:	8d 83       	std	Y+5, r24	; 0x05
     632:	8d 81       	ldd	r24, Y+5	; 0x05
     634:	9e 81       	ldd	r25, Y+6	; 0x06
     636:	9a 83       	std	Y+2, r25	; 0x02
     638:	89 83       	std	Y+1, r24	; 0x01
     63a:	89 81       	ldd	r24, Y+1	; 0x01
     63c:	9a 81       	ldd	r25, Y+2	; 0x02
     63e:	01 97       	sbiw	r24, 0x01	; 1
     640:	f1 f7       	brne	.-4      	; 0x63e <__vector_3+0x33e>
     642:	9a 83       	std	Y+2, r25	; 0x02
     644:	89 83       	std	Y+1, r24	; 0x01
        _delay_ms(500);
        PORTC &= ~_BV(motorPin);
     646:	a8 e2       	ldi	r26, 0x28	; 40
     648:	b0 e0       	ldi	r27, 0x00	; 0
     64a:	e8 e2       	ldi	r30, 0x28	; 40
     64c:	f0 e0       	ldi	r31, 0x00	; 0
     64e:	80 81       	ld	r24, Z
     650:	8f 7e       	andi	r24, 0xEF	; 239
     652:	8c 93       	st	X, r24
    }
}
     654:	aa 96       	adiw	r28, 0x2a	; 42
     656:	de bf       	out	0x3e, r29	; 62
     658:	cd bf       	out	0x3d, r28	; 61
     65a:	cf 91       	pop	r28
     65c:	df 91       	pop	r29
     65e:	ff 91       	pop	r31
     660:	ef 91       	pop	r30
     662:	bf 91       	pop	r27
     664:	af 91       	pop	r26
     666:	9f 91       	pop	r25
     668:	8f 91       	pop	r24
     66a:	7f 91       	pop	r23
     66c:	6f 91       	pop	r22
     66e:	5f 91       	pop	r21
     670:	4f 91       	pop	r20
     672:	3f 91       	pop	r19
     674:	2f 91       	pop	r18
     676:	0f 90       	pop	r0
     678:	0f be       	out	0x3f, r0	; 63
     67a:	0f 90       	pop	r0
     67c:	1f 90       	pop	r1
     67e:	18 95       	reti

00000680 <main>:

int main(void)
{
     680:	df 93       	push	r29
     682:	cf 93       	push	r28
     684:	cd b7       	in	r28, 0x3d	; 61
     686:	de b7       	in	r29, 0x3e	; 62
    init();
     688:	0e 94 4b 00 	call	0x96	; 0x96 <init>
     68c:	ff cf       	rjmp	.-2      	; 0x68c <main+0xc>

0000068e <__fixunssfsi>:
     68e:	ef 92       	push	r14
     690:	ff 92       	push	r15
     692:	0f 93       	push	r16
     694:	1f 93       	push	r17
     696:	7b 01       	movw	r14, r22
     698:	8c 01       	movw	r16, r24
     69a:	20 e0       	ldi	r18, 0x00	; 0
     69c:	30 e0       	ldi	r19, 0x00	; 0
     69e:	40 e0       	ldi	r20, 0x00	; 0
     6a0:	5f e4       	ldi	r21, 0x4F	; 79
     6a2:	0e 94 f3 06 	call	0xde6	; 0xde6 <__gesf2>
     6a6:	88 23       	and	r24, r24
     6a8:	8c f0       	brlt	.+34     	; 0x6cc <__fixunssfsi+0x3e>
     6aa:	c8 01       	movw	r24, r16
     6ac:	b7 01       	movw	r22, r14
     6ae:	20 e0       	ldi	r18, 0x00	; 0
     6b0:	30 e0       	ldi	r19, 0x00	; 0
     6b2:	40 e0       	ldi	r20, 0x00	; 0
     6b4:	5f e4       	ldi	r21, 0x4F	; 79
     6b6:	0e 94 bf 04 	call	0x97e	; 0x97e <__subsf3>
     6ba:	0e 94 b1 07 	call	0xf62	; 0xf62 <__fixsfsi>
     6be:	9b 01       	movw	r18, r22
     6c0:	ac 01       	movw	r20, r24
     6c2:	20 50       	subi	r18, 0x00	; 0
     6c4:	30 40       	sbci	r19, 0x00	; 0
     6c6:	40 40       	sbci	r20, 0x00	; 0
     6c8:	50 48       	sbci	r21, 0x80	; 128
     6ca:	06 c0       	rjmp	.+12     	; 0x6d8 <__fixunssfsi+0x4a>
     6cc:	c8 01       	movw	r24, r16
     6ce:	b7 01       	movw	r22, r14
     6d0:	0e 94 b1 07 	call	0xf62	; 0xf62 <__fixsfsi>
     6d4:	9b 01       	movw	r18, r22
     6d6:	ac 01       	movw	r20, r24
     6d8:	b9 01       	movw	r22, r18
     6da:	ca 01       	movw	r24, r20
     6dc:	1f 91       	pop	r17
     6de:	0f 91       	pop	r16
     6e0:	ff 90       	pop	r15
     6e2:	ef 90       	pop	r14
     6e4:	08 95       	ret

000006e6 <_fpadd_parts>:
     6e6:	a0 e0       	ldi	r26, 0x00	; 0
     6e8:	b0 e0       	ldi	r27, 0x00	; 0
     6ea:	e9 e7       	ldi	r30, 0x79	; 121
     6ec:	f3 e0       	ldi	r31, 0x03	; 3
     6ee:	0c 94 fa 09 	jmp	0x13f4	; 0x13f4 <__prologue_saves__>
     6f2:	dc 01       	movw	r26, r24
     6f4:	2b 01       	movw	r4, r22
     6f6:	fa 01       	movw	r30, r20
     6f8:	9c 91       	ld	r25, X
     6fa:	92 30       	cpi	r25, 0x02	; 2
     6fc:	08 f4       	brcc	.+2      	; 0x700 <_fpadd_parts+0x1a>
     6fe:	39 c1       	rjmp	.+626    	; 0x972 <__stack+0x73>
     700:	eb 01       	movw	r28, r22
     702:	88 81       	ld	r24, Y
     704:	82 30       	cpi	r24, 0x02	; 2
     706:	08 f4       	brcc	.+2      	; 0x70a <_fpadd_parts+0x24>
     708:	33 c1       	rjmp	.+614    	; 0x970 <__stack+0x71>
     70a:	94 30       	cpi	r25, 0x04	; 4
     70c:	69 f4       	brne	.+26     	; 0x728 <_fpadd_parts+0x42>
     70e:	84 30       	cpi	r24, 0x04	; 4
     710:	09 f0       	breq	.+2      	; 0x714 <_fpadd_parts+0x2e>
     712:	2f c1       	rjmp	.+606    	; 0x972 <__stack+0x73>
     714:	11 96       	adiw	r26, 0x01	; 1
     716:	9c 91       	ld	r25, X
     718:	11 97       	sbiw	r26, 0x01	; 1
     71a:	89 81       	ldd	r24, Y+1	; 0x01
     71c:	98 17       	cp	r25, r24
     71e:	09 f4       	brne	.+2      	; 0x722 <_fpadd_parts+0x3c>
     720:	28 c1       	rjmp	.+592    	; 0x972 <__stack+0x73>
     722:	a0 e0       	ldi	r26, 0x00	; 0
     724:	b1 e0       	ldi	r27, 0x01	; 1
     726:	25 c1       	rjmp	.+586    	; 0x972 <__stack+0x73>
     728:	84 30       	cpi	r24, 0x04	; 4
     72a:	09 f4       	brne	.+2      	; 0x72e <_fpadd_parts+0x48>
     72c:	21 c1       	rjmp	.+578    	; 0x970 <__stack+0x71>
     72e:	82 30       	cpi	r24, 0x02	; 2
     730:	a9 f4       	brne	.+42     	; 0x75c <_fpadd_parts+0x76>
     732:	92 30       	cpi	r25, 0x02	; 2
     734:	09 f0       	breq	.+2      	; 0x738 <_fpadd_parts+0x52>
     736:	1d c1       	rjmp	.+570    	; 0x972 <__stack+0x73>
     738:	9a 01       	movw	r18, r20
     73a:	ad 01       	movw	r20, r26
     73c:	88 e0       	ldi	r24, 0x08	; 8
     73e:	ea 01       	movw	r28, r20
     740:	09 90       	ld	r0, Y+
     742:	ae 01       	movw	r20, r28
     744:	e9 01       	movw	r28, r18
     746:	09 92       	st	Y+, r0
     748:	9e 01       	movw	r18, r28
     74a:	81 50       	subi	r24, 0x01	; 1
     74c:	c1 f7       	brne	.-16     	; 0x73e <_fpadd_parts+0x58>
     74e:	e2 01       	movw	r28, r4
     750:	89 81       	ldd	r24, Y+1	; 0x01
     752:	11 96       	adiw	r26, 0x01	; 1
     754:	9c 91       	ld	r25, X
     756:	89 23       	and	r24, r25
     758:	81 83       	std	Z+1, r24	; 0x01
     75a:	08 c1       	rjmp	.+528    	; 0x96c <__stack+0x6d>
     75c:	92 30       	cpi	r25, 0x02	; 2
     75e:	09 f4       	brne	.+2      	; 0x762 <_fpadd_parts+0x7c>
     760:	07 c1       	rjmp	.+526    	; 0x970 <__stack+0x71>
     762:	12 96       	adiw	r26, 0x02	; 2
     764:	2d 90       	ld	r2, X+
     766:	3c 90       	ld	r3, X
     768:	13 97       	sbiw	r26, 0x03	; 3
     76a:	eb 01       	movw	r28, r22
     76c:	8a 81       	ldd	r24, Y+2	; 0x02
     76e:	9b 81       	ldd	r25, Y+3	; 0x03
     770:	14 96       	adiw	r26, 0x04	; 4
     772:	ad 90       	ld	r10, X+
     774:	bd 90       	ld	r11, X+
     776:	cd 90       	ld	r12, X+
     778:	dc 90       	ld	r13, X
     77a:	17 97       	sbiw	r26, 0x07	; 7
     77c:	ec 80       	ldd	r14, Y+4	; 0x04
     77e:	fd 80       	ldd	r15, Y+5	; 0x05
     780:	0e 81       	ldd	r16, Y+6	; 0x06
     782:	1f 81       	ldd	r17, Y+7	; 0x07
     784:	91 01       	movw	r18, r2
     786:	28 1b       	sub	r18, r24
     788:	39 0b       	sbc	r19, r25
     78a:	b9 01       	movw	r22, r18
     78c:	37 ff       	sbrs	r19, 7
     78e:	04 c0       	rjmp	.+8      	; 0x798 <_fpadd_parts+0xb2>
     790:	66 27       	eor	r22, r22
     792:	77 27       	eor	r23, r23
     794:	62 1b       	sub	r22, r18
     796:	73 0b       	sbc	r23, r19
     798:	60 32       	cpi	r22, 0x20	; 32
     79a:	71 05       	cpc	r23, r1
     79c:	0c f0       	brlt	.+2      	; 0x7a0 <_fpadd_parts+0xba>
     79e:	61 c0       	rjmp	.+194    	; 0x862 <_fpadd_parts+0x17c>
     7a0:	12 16       	cp	r1, r18
     7a2:	13 06       	cpc	r1, r19
     7a4:	6c f5       	brge	.+90     	; 0x800 <_fpadd_parts+0x11a>
     7a6:	37 01       	movw	r6, r14
     7a8:	48 01       	movw	r8, r16
     7aa:	06 2e       	mov	r0, r22
     7ac:	04 c0       	rjmp	.+8      	; 0x7b6 <_fpadd_parts+0xd0>
     7ae:	96 94       	lsr	r9
     7b0:	87 94       	ror	r8
     7b2:	77 94       	ror	r7
     7b4:	67 94       	ror	r6
     7b6:	0a 94       	dec	r0
     7b8:	d2 f7       	brpl	.-12     	; 0x7ae <_fpadd_parts+0xc8>
     7ba:	21 e0       	ldi	r18, 0x01	; 1
     7bc:	30 e0       	ldi	r19, 0x00	; 0
     7be:	40 e0       	ldi	r20, 0x00	; 0
     7c0:	50 e0       	ldi	r21, 0x00	; 0
     7c2:	04 c0       	rjmp	.+8      	; 0x7cc <_fpadd_parts+0xe6>
     7c4:	22 0f       	add	r18, r18
     7c6:	33 1f       	adc	r19, r19
     7c8:	44 1f       	adc	r20, r20
     7ca:	55 1f       	adc	r21, r21
     7cc:	6a 95       	dec	r22
     7ce:	d2 f7       	brpl	.-12     	; 0x7c4 <_fpadd_parts+0xde>
     7d0:	21 50       	subi	r18, 0x01	; 1
     7d2:	30 40       	sbci	r19, 0x00	; 0
     7d4:	40 40       	sbci	r20, 0x00	; 0
     7d6:	50 40       	sbci	r21, 0x00	; 0
     7d8:	2e 21       	and	r18, r14
     7da:	3f 21       	and	r19, r15
     7dc:	40 23       	and	r20, r16
     7de:	51 23       	and	r21, r17
     7e0:	21 15       	cp	r18, r1
     7e2:	31 05       	cpc	r19, r1
     7e4:	41 05       	cpc	r20, r1
     7e6:	51 05       	cpc	r21, r1
     7e8:	21 f0       	breq	.+8      	; 0x7f2 <_fpadd_parts+0x10c>
     7ea:	21 e0       	ldi	r18, 0x01	; 1
     7ec:	30 e0       	ldi	r19, 0x00	; 0
     7ee:	40 e0       	ldi	r20, 0x00	; 0
     7f0:	50 e0       	ldi	r21, 0x00	; 0
     7f2:	79 01       	movw	r14, r18
     7f4:	8a 01       	movw	r16, r20
     7f6:	e6 28       	or	r14, r6
     7f8:	f7 28       	or	r15, r7
     7fa:	08 29       	or	r16, r8
     7fc:	19 29       	or	r17, r9
     7fe:	3c c0       	rjmp	.+120    	; 0x878 <_fpadd_parts+0x192>
     800:	23 2b       	or	r18, r19
     802:	d1 f1       	breq	.+116    	; 0x878 <_fpadd_parts+0x192>
     804:	26 0e       	add	r2, r22
     806:	37 1e       	adc	r3, r23
     808:	35 01       	movw	r6, r10
     80a:	46 01       	movw	r8, r12
     80c:	06 2e       	mov	r0, r22
     80e:	04 c0       	rjmp	.+8      	; 0x818 <_fpadd_parts+0x132>
     810:	96 94       	lsr	r9
     812:	87 94       	ror	r8
     814:	77 94       	ror	r7
     816:	67 94       	ror	r6
     818:	0a 94       	dec	r0
     81a:	d2 f7       	brpl	.-12     	; 0x810 <_fpadd_parts+0x12a>
     81c:	21 e0       	ldi	r18, 0x01	; 1
     81e:	30 e0       	ldi	r19, 0x00	; 0
     820:	40 e0       	ldi	r20, 0x00	; 0
     822:	50 e0       	ldi	r21, 0x00	; 0
     824:	04 c0       	rjmp	.+8      	; 0x82e <_fpadd_parts+0x148>
     826:	22 0f       	add	r18, r18
     828:	33 1f       	adc	r19, r19
     82a:	44 1f       	adc	r20, r20
     82c:	55 1f       	adc	r21, r21
     82e:	6a 95       	dec	r22
     830:	d2 f7       	brpl	.-12     	; 0x826 <_fpadd_parts+0x140>
     832:	21 50       	subi	r18, 0x01	; 1
     834:	30 40       	sbci	r19, 0x00	; 0
     836:	40 40       	sbci	r20, 0x00	; 0
     838:	50 40       	sbci	r21, 0x00	; 0
     83a:	2a 21       	and	r18, r10
     83c:	3b 21       	and	r19, r11
     83e:	4c 21       	and	r20, r12
     840:	5d 21       	and	r21, r13
     842:	21 15       	cp	r18, r1
     844:	31 05       	cpc	r19, r1
     846:	41 05       	cpc	r20, r1
     848:	51 05       	cpc	r21, r1
     84a:	21 f0       	breq	.+8      	; 0x854 <_fpadd_parts+0x16e>
     84c:	21 e0       	ldi	r18, 0x01	; 1
     84e:	30 e0       	ldi	r19, 0x00	; 0
     850:	40 e0       	ldi	r20, 0x00	; 0
     852:	50 e0       	ldi	r21, 0x00	; 0
     854:	59 01       	movw	r10, r18
     856:	6a 01       	movw	r12, r20
     858:	a6 28       	or	r10, r6
     85a:	b7 28       	or	r11, r7
     85c:	c8 28       	or	r12, r8
     85e:	d9 28       	or	r13, r9
     860:	0b c0       	rjmp	.+22     	; 0x878 <_fpadd_parts+0x192>
     862:	82 15       	cp	r24, r2
     864:	93 05       	cpc	r25, r3
     866:	2c f0       	brlt	.+10     	; 0x872 <_fpadd_parts+0x18c>
     868:	1c 01       	movw	r2, r24
     86a:	aa 24       	eor	r10, r10
     86c:	bb 24       	eor	r11, r11
     86e:	65 01       	movw	r12, r10
     870:	03 c0       	rjmp	.+6      	; 0x878 <_fpadd_parts+0x192>
     872:	ee 24       	eor	r14, r14
     874:	ff 24       	eor	r15, r15
     876:	87 01       	movw	r16, r14
     878:	11 96       	adiw	r26, 0x01	; 1
     87a:	9c 91       	ld	r25, X
     87c:	d2 01       	movw	r26, r4
     87e:	11 96       	adiw	r26, 0x01	; 1
     880:	8c 91       	ld	r24, X
     882:	98 17       	cp	r25, r24
     884:	09 f4       	brne	.+2      	; 0x888 <_fpadd_parts+0x1a2>
     886:	45 c0       	rjmp	.+138    	; 0x912 <__stack+0x13>
     888:	99 23       	and	r25, r25
     88a:	39 f0       	breq	.+14     	; 0x89a <_fpadd_parts+0x1b4>
     88c:	a8 01       	movw	r20, r16
     88e:	97 01       	movw	r18, r14
     890:	2a 19       	sub	r18, r10
     892:	3b 09       	sbc	r19, r11
     894:	4c 09       	sbc	r20, r12
     896:	5d 09       	sbc	r21, r13
     898:	06 c0       	rjmp	.+12     	; 0x8a6 <_fpadd_parts+0x1c0>
     89a:	a6 01       	movw	r20, r12
     89c:	95 01       	movw	r18, r10
     89e:	2e 19       	sub	r18, r14
     8a0:	3f 09       	sbc	r19, r15
     8a2:	40 0b       	sbc	r20, r16
     8a4:	51 0b       	sbc	r21, r17
     8a6:	57 fd       	sbrc	r21, 7
     8a8:	08 c0       	rjmp	.+16     	; 0x8ba <_fpadd_parts+0x1d4>
     8aa:	11 82       	std	Z+1, r1	; 0x01
     8ac:	33 82       	std	Z+3, r3	; 0x03
     8ae:	22 82       	std	Z+2, r2	; 0x02
     8b0:	24 83       	std	Z+4, r18	; 0x04
     8b2:	35 83       	std	Z+5, r19	; 0x05
     8b4:	46 83       	std	Z+6, r20	; 0x06
     8b6:	57 83       	std	Z+7, r21	; 0x07
     8b8:	1d c0       	rjmp	.+58     	; 0x8f4 <_fpadd_parts+0x20e>
     8ba:	81 e0       	ldi	r24, 0x01	; 1
     8bc:	81 83       	std	Z+1, r24	; 0x01
     8be:	33 82       	std	Z+3, r3	; 0x03
     8c0:	22 82       	std	Z+2, r2	; 0x02
     8c2:	88 27       	eor	r24, r24
     8c4:	99 27       	eor	r25, r25
     8c6:	dc 01       	movw	r26, r24
     8c8:	82 1b       	sub	r24, r18
     8ca:	93 0b       	sbc	r25, r19
     8cc:	a4 0b       	sbc	r26, r20
     8ce:	b5 0b       	sbc	r27, r21
     8d0:	84 83       	std	Z+4, r24	; 0x04
     8d2:	95 83       	std	Z+5, r25	; 0x05
     8d4:	a6 83       	std	Z+6, r26	; 0x06
     8d6:	b7 83       	std	Z+7, r27	; 0x07
     8d8:	0d c0       	rjmp	.+26     	; 0x8f4 <_fpadd_parts+0x20e>
     8da:	22 0f       	add	r18, r18
     8dc:	33 1f       	adc	r19, r19
     8de:	44 1f       	adc	r20, r20
     8e0:	55 1f       	adc	r21, r21
     8e2:	24 83       	std	Z+4, r18	; 0x04
     8e4:	35 83       	std	Z+5, r19	; 0x05
     8e6:	46 83       	std	Z+6, r20	; 0x06
     8e8:	57 83       	std	Z+7, r21	; 0x07
     8ea:	82 81       	ldd	r24, Z+2	; 0x02
     8ec:	93 81       	ldd	r25, Z+3	; 0x03
     8ee:	01 97       	sbiw	r24, 0x01	; 1
     8f0:	93 83       	std	Z+3, r25	; 0x03
     8f2:	82 83       	std	Z+2, r24	; 0x02
     8f4:	24 81       	ldd	r18, Z+4	; 0x04
     8f6:	35 81       	ldd	r19, Z+5	; 0x05
     8f8:	46 81       	ldd	r20, Z+6	; 0x06
     8fa:	57 81       	ldd	r21, Z+7	; 0x07
     8fc:	da 01       	movw	r26, r20
     8fe:	c9 01       	movw	r24, r18
     900:	01 97       	sbiw	r24, 0x01	; 1
     902:	a1 09       	sbc	r26, r1
     904:	b1 09       	sbc	r27, r1
     906:	8f 5f       	subi	r24, 0xFF	; 255
     908:	9f 4f       	sbci	r25, 0xFF	; 255
     90a:	af 4f       	sbci	r26, 0xFF	; 255
     90c:	bf 43       	sbci	r27, 0x3F	; 63
     90e:	28 f3       	brcs	.-54     	; 0x8da <_fpadd_parts+0x1f4>
     910:	0b c0       	rjmp	.+22     	; 0x928 <__stack+0x29>
     912:	91 83       	std	Z+1, r25	; 0x01
     914:	33 82       	std	Z+3, r3	; 0x03
     916:	22 82       	std	Z+2, r2	; 0x02
     918:	ea 0c       	add	r14, r10
     91a:	fb 1c       	adc	r15, r11
     91c:	0c 1d       	adc	r16, r12
     91e:	1d 1d       	adc	r17, r13
     920:	e4 82       	std	Z+4, r14	; 0x04
     922:	f5 82       	std	Z+5, r15	; 0x05
     924:	06 83       	std	Z+6, r16	; 0x06
     926:	17 83       	std	Z+7, r17	; 0x07
     928:	83 e0       	ldi	r24, 0x03	; 3
     92a:	80 83       	st	Z, r24
     92c:	24 81       	ldd	r18, Z+4	; 0x04
     92e:	35 81       	ldd	r19, Z+5	; 0x05
     930:	46 81       	ldd	r20, Z+6	; 0x06
     932:	57 81       	ldd	r21, Z+7	; 0x07
     934:	57 ff       	sbrs	r21, 7
     936:	1a c0       	rjmp	.+52     	; 0x96c <__stack+0x6d>
     938:	c9 01       	movw	r24, r18
     93a:	aa 27       	eor	r26, r26
     93c:	97 fd       	sbrc	r25, 7
     93e:	a0 95       	com	r26
     940:	ba 2f       	mov	r27, r26
     942:	81 70       	andi	r24, 0x01	; 1
     944:	90 70       	andi	r25, 0x00	; 0
     946:	a0 70       	andi	r26, 0x00	; 0
     948:	b0 70       	andi	r27, 0x00	; 0
     94a:	56 95       	lsr	r21
     94c:	47 95       	ror	r20
     94e:	37 95       	ror	r19
     950:	27 95       	ror	r18
     952:	82 2b       	or	r24, r18
     954:	93 2b       	or	r25, r19
     956:	a4 2b       	or	r26, r20
     958:	b5 2b       	or	r27, r21
     95a:	84 83       	std	Z+4, r24	; 0x04
     95c:	95 83       	std	Z+5, r25	; 0x05
     95e:	a6 83       	std	Z+6, r26	; 0x06
     960:	b7 83       	std	Z+7, r27	; 0x07
     962:	82 81       	ldd	r24, Z+2	; 0x02
     964:	93 81       	ldd	r25, Z+3	; 0x03
     966:	01 96       	adiw	r24, 0x01	; 1
     968:	93 83       	std	Z+3, r25	; 0x03
     96a:	82 83       	std	Z+2, r24	; 0x02
     96c:	df 01       	movw	r26, r30
     96e:	01 c0       	rjmp	.+2      	; 0x972 <__stack+0x73>
     970:	d2 01       	movw	r26, r4
     972:	cd 01       	movw	r24, r26
     974:	cd b7       	in	r28, 0x3d	; 61
     976:	de b7       	in	r29, 0x3e	; 62
     978:	e2 e1       	ldi	r30, 0x12	; 18
     97a:	0c 94 16 0a 	jmp	0x142c	; 0x142c <__epilogue_restores__>

0000097e <__subsf3>:
     97e:	a0 e2       	ldi	r26, 0x20	; 32
     980:	b0 e0       	ldi	r27, 0x00	; 0
     982:	e5 ec       	ldi	r30, 0xC5	; 197
     984:	f4 e0       	ldi	r31, 0x04	; 4
     986:	0c 94 06 0a 	jmp	0x140c	; 0x140c <__prologue_saves__+0x18>
     98a:	69 83       	std	Y+1, r22	; 0x01
     98c:	7a 83       	std	Y+2, r23	; 0x02
     98e:	8b 83       	std	Y+3, r24	; 0x03
     990:	9c 83       	std	Y+4, r25	; 0x04
     992:	2d 83       	std	Y+5, r18	; 0x05
     994:	3e 83       	std	Y+6, r19	; 0x06
     996:	4f 83       	std	Y+7, r20	; 0x07
     998:	58 87       	std	Y+8, r21	; 0x08
     99a:	e9 e0       	ldi	r30, 0x09	; 9
     99c:	ee 2e       	mov	r14, r30
     99e:	f1 2c       	mov	r15, r1
     9a0:	ec 0e       	add	r14, r28
     9a2:	fd 1e       	adc	r15, r29
     9a4:	ce 01       	movw	r24, r28
     9a6:	01 96       	adiw	r24, 0x01	; 1
     9a8:	b7 01       	movw	r22, r14
     9aa:	0e 94 29 09 	call	0x1252	; 0x1252 <__unpack_f>
     9ae:	8e 01       	movw	r16, r28
     9b0:	0f 5e       	subi	r16, 0xEF	; 239
     9b2:	1f 4f       	sbci	r17, 0xFF	; 255
     9b4:	ce 01       	movw	r24, r28
     9b6:	05 96       	adiw	r24, 0x05	; 5
     9b8:	b8 01       	movw	r22, r16
     9ba:	0e 94 29 09 	call	0x1252	; 0x1252 <__unpack_f>
     9be:	8a 89       	ldd	r24, Y+18	; 0x12
     9c0:	91 e0       	ldi	r25, 0x01	; 1
     9c2:	89 27       	eor	r24, r25
     9c4:	8a 8b       	std	Y+18, r24	; 0x12
     9c6:	c7 01       	movw	r24, r14
     9c8:	b8 01       	movw	r22, r16
     9ca:	ae 01       	movw	r20, r28
     9cc:	47 5e       	subi	r20, 0xE7	; 231
     9ce:	5f 4f       	sbci	r21, 0xFF	; 255
     9d0:	0e 94 73 03 	call	0x6e6	; 0x6e6 <_fpadd_parts>
     9d4:	0e 94 54 08 	call	0x10a8	; 0x10a8 <__pack_f>
     9d8:	a0 96       	adiw	r28, 0x20	; 32
     9da:	e6 e0       	ldi	r30, 0x06	; 6
     9dc:	0c 94 22 0a 	jmp	0x1444	; 0x1444 <__epilogue_restores__+0x18>

000009e0 <__addsf3>:
     9e0:	a0 e2       	ldi	r26, 0x20	; 32
     9e2:	b0 e0       	ldi	r27, 0x00	; 0
     9e4:	e6 ef       	ldi	r30, 0xF6	; 246
     9e6:	f4 e0       	ldi	r31, 0x04	; 4
     9e8:	0c 94 06 0a 	jmp	0x140c	; 0x140c <__prologue_saves__+0x18>
     9ec:	69 83       	std	Y+1, r22	; 0x01
     9ee:	7a 83       	std	Y+2, r23	; 0x02
     9f0:	8b 83       	std	Y+3, r24	; 0x03
     9f2:	9c 83       	std	Y+4, r25	; 0x04
     9f4:	2d 83       	std	Y+5, r18	; 0x05
     9f6:	3e 83       	std	Y+6, r19	; 0x06
     9f8:	4f 83       	std	Y+7, r20	; 0x07
     9fa:	58 87       	std	Y+8, r21	; 0x08
     9fc:	f9 e0       	ldi	r31, 0x09	; 9
     9fe:	ef 2e       	mov	r14, r31
     a00:	f1 2c       	mov	r15, r1
     a02:	ec 0e       	add	r14, r28
     a04:	fd 1e       	adc	r15, r29
     a06:	ce 01       	movw	r24, r28
     a08:	01 96       	adiw	r24, 0x01	; 1
     a0a:	b7 01       	movw	r22, r14
     a0c:	0e 94 29 09 	call	0x1252	; 0x1252 <__unpack_f>
     a10:	8e 01       	movw	r16, r28
     a12:	0f 5e       	subi	r16, 0xEF	; 239
     a14:	1f 4f       	sbci	r17, 0xFF	; 255
     a16:	ce 01       	movw	r24, r28
     a18:	05 96       	adiw	r24, 0x05	; 5
     a1a:	b8 01       	movw	r22, r16
     a1c:	0e 94 29 09 	call	0x1252	; 0x1252 <__unpack_f>
     a20:	c7 01       	movw	r24, r14
     a22:	b8 01       	movw	r22, r16
     a24:	ae 01       	movw	r20, r28
     a26:	47 5e       	subi	r20, 0xE7	; 231
     a28:	5f 4f       	sbci	r21, 0xFF	; 255
     a2a:	0e 94 73 03 	call	0x6e6	; 0x6e6 <_fpadd_parts>
     a2e:	0e 94 54 08 	call	0x10a8	; 0x10a8 <__pack_f>
     a32:	a0 96       	adiw	r28, 0x20	; 32
     a34:	e6 e0       	ldi	r30, 0x06	; 6
     a36:	0c 94 22 0a 	jmp	0x1444	; 0x1444 <__epilogue_restores__+0x18>

00000a3a <__mulsf3>:
     a3a:	a0 e2       	ldi	r26, 0x20	; 32
     a3c:	b0 e0       	ldi	r27, 0x00	; 0
     a3e:	e3 e2       	ldi	r30, 0x23	; 35
     a40:	f5 e0       	ldi	r31, 0x05	; 5
     a42:	0c 94 fa 09 	jmp	0x13f4	; 0x13f4 <__prologue_saves__>
     a46:	69 83       	std	Y+1, r22	; 0x01
     a48:	7a 83       	std	Y+2, r23	; 0x02
     a4a:	8b 83       	std	Y+3, r24	; 0x03
     a4c:	9c 83       	std	Y+4, r25	; 0x04
     a4e:	2d 83       	std	Y+5, r18	; 0x05
     a50:	3e 83       	std	Y+6, r19	; 0x06
     a52:	4f 83       	std	Y+7, r20	; 0x07
     a54:	58 87       	std	Y+8, r21	; 0x08
     a56:	ce 01       	movw	r24, r28
     a58:	01 96       	adiw	r24, 0x01	; 1
     a5a:	be 01       	movw	r22, r28
     a5c:	67 5f       	subi	r22, 0xF7	; 247
     a5e:	7f 4f       	sbci	r23, 0xFF	; 255
     a60:	0e 94 29 09 	call	0x1252	; 0x1252 <__unpack_f>
     a64:	ce 01       	movw	r24, r28
     a66:	05 96       	adiw	r24, 0x05	; 5
     a68:	be 01       	movw	r22, r28
     a6a:	6f 5e       	subi	r22, 0xEF	; 239
     a6c:	7f 4f       	sbci	r23, 0xFF	; 255
     a6e:	0e 94 29 09 	call	0x1252	; 0x1252 <__unpack_f>
     a72:	99 85       	ldd	r25, Y+9	; 0x09
     a74:	92 30       	cpi	r25, 0x02	; 2
     a76:	88 f0       	brcs	.+34     	; 0xa9a <__mulsf3+0x60>
     a78:	89 89       	ldd	r24, Y+17	; 0x11
     a7a:	82 30       	cpi	r24, 0x02	; 2
     a7c:	c8 f0       	brcs	.+50     	; 0xab0 <__mulsf3+0x76>
     a7e:	94 30       	cpi	r25, 0x04	; 4
     a80:	19 f4       	brne	.+6      	; 0xa88 <__mulsf3+0x4e>
     a82:	82 30       	cpi	r24, 0x02	; 2
     a84:	51 f4       	brne	.+20     	; 0xa9a <__mulsf3+0x60>
     a86:	04 c0       	rjmp	.+8      	; 0xa90 <__mulsf3+0x56>
     a88:	84 30       	cpi	r24, 0x04	; 4
     a8a:	29 f4       	brne	.+10     	; 0xa96 <__mulsf3+0x5c>
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	81 f4       	brne	.+32     	; 0xab0 <__mulsf3+0x76>
     a90:	80 e0       	ldi	r24, 0x00	; 0
     a92:	91 e0       	ldi	r25, 0x01	; 1
     a94:	c6 c0       	rjmp	.+396    	; 0xc22 <__mulsf3+0x1e8>
     a96:	92 30       	cpi	r25, 0x02	; 2
     a98:	49 f4       	brne	.+18     	; 0xaac <__mulsf3+0x72>
     a9a:	20 e0       	ldi	r18, 0x00	; 0
     a9c:	9a 85       	ldd	r25, Y+10	; 0x0a
     a9e:	8a 89       	ldd	r24, Y+18	; 0x12
     aa0:	98 13       	cpse	r25, r24
     aa2:	21 e0       	ldi	r18, 0x01	; 1
     aa4:	2a 87       	std	Y+10, r18	; 0x0a
     aa6:	ce 01       	movw	r24, r28
     aa8:	09 96       	adiw	r24, 0x09	; 9
     aaa:	bb c0       	rjmp	.+374    	; 0xc22 <__mulsf3+0x1e8>
     aac:	82 30       	cpi	r24, 0x02	; 2
     aae:	49 f4       	brne	.+18     	; 0xac2 <__mulsf3+0x88>
     ab0:	20 e0       	ldi	r18, 0x00	; 0
     ab2:	9a 85       	ldd	r25, Y+10	; 0x0a
     ab4:	8a 89       	ldd	r24, Y+18	; 0x12
     ab6:	98 13       	cpse	r25, r24
     ab8:	21 e0       	ldi	r18, 0x01	; 1
     aba:	2a 8b       	std	Y+18, r18	; 0x12
     abc:	ce 01       	movw	r24, r28
     abe:	41 96       	adiw	r24, 0x11	; 17
     ac0:	b0 c0       	rjmp	.+352    	; 0xc22 <__mulsf3+0x1e8>
     ac2:	2d 84       	ldd	r2, Y+13	; 0x0d
     ac4:	3e 84       	ldd	r3, Y+14	; 0x0e
     ac6:	4f 84       	ldd	r4, Y+15	; 0x0f
     ac8:	58 88       	ldd	r5, Y+16	; 0x10
     aca:	6d 88       	ldd	r6, Y+21	; 0x15
     acc:	7e 88       	ldd	r7, Y+22	; 0x16
     ace:	8f 88       	ldd	r8, Y+23	; 0x17
     ad0:	98 8c       	ldd	r9, Y+24	; 0x18
     ad2:	ee 24       	eor	r14, r14
     ad4:	ff 24       	eor	r15, r15
     ad6:	87 01       	movw	r16, r14
     ad8:	aa 24       	eor	r10, r10
     ada:	bb 24       	eor	r11, r11
     adc:	65 01       	movw	r12, r10
     ade:	40 e0       	ldi	r20, 0x00	; 0
     ae0:	50 e0       	ldi	r21, 0x00	; 0
     ae2:	60 e0       	ldi	r22, 0x00	; 0
     ae4:	70 e0       	ldi	r23, 0x00	; 0
     ae6:	e0 e0       	ldi	r30, 0x00	; 0
     ae8:	f0 e0       	ldi	r31, 0x00	; 0
     aea:	c1 01       	movw	r24, r2
     aec:	81 70       	andi	r24, 0x01	; 1
     aee:	90 70       	andi	r25, 0x00	; 0
     af0:	89 2b       	or	r24, r25
     af2:	e9 f0       	breq	.+58     	; 0xb2e <__mulsf3+0xf4>
     af4:	e6 0c       	add	r14, r6
     af6:	f7 1c       	adc	r15, r7
     af8:	08 1d       	adc	r16, r8
     afa:	19 1d       	adc	r17, r9
     afc:	9a 01       	movw	r18, r20
     afe:	ab 01       	movw	r20, r22
     b00:	2a 0d       	add	r18, r10
     b02:	3b 1d       	adc	r19, r11
     b04:	4c 1d       	adc	r20, r12
     b06:	5d 1d       	adc	r21, r13
     b08:	80 e0       	ldi	r24, 0x00	; 0
     b0a:	90 e0       	ldi	r25, 0x00	; 0
     b0c:	a0 e0       	ldi	r26, 0x00	; 0
     b0e:	b0 e0       	ldi	r27, 0x00	; 0
     b10:	e6 14       	cp	r14, r6
     b12:	f7 04       	cpc	r15, r7
     b14:	08 05       	cpc	r16, r8
     b16:	19 05       	cpc	r17, r9
     b18:	20 f4       	brcc	.+8      	; 0xb22 <__mulsf3+0xe8>
     b1a:	81 e0       	ldi	r24, 0x01	; 1
     b1c:	90 e0       	ldi	r25, 0x00	; 0
     b1e:	a0 e0       	ldi	r26, 0x00	; 0
     b20:	b0 e0       	ldi	r27, 0x00	; 0
     b22:	ba 01       	movw	r22, r20
     b24:	a9 01       	movw	r20, r18
     b26:	48 0f       	add	r20, r24
     b28:	59 1f       	adc	r21, r25
     b2a:	6a 1f       	adc	r22, r26
     b2c:	7b 1f       	adc	r23, r27
     b2e:	aa 0c       	add	r10, r10
     b30:	bb 1c       	adc	r11, r11
     b32:	cc 1c       	adc	r12, r12
     b34:	dd 1c       	adc	r13, r13
     b36:	97 fe       	sbrs	r9, 7
     b38:	08 c0       	rjmp	.+16     	; 0xb4a <__mulsf3+0x110>
     b3a:	81 e0       	ldi	r24, 0x01	; 1
     b3c:	90 e0       	ldi	r25, 0x00	; 0
     b3e:	a0 e0       	ldi	r26, 0x00	; 0
     b40:	b0 e0       	ldi	r27, 0x00	; 0
     b42:	a8 2a       	or	r10, r24
     b44:	b9 2a       	or	r11, r25
     b46:	ca 2a       	or	r12, r26
     b48:	db 2a       	or	r13, r27
     b4a:	31 96       	adiw	r30, 0x01	; 1
     b4c:	e0 32       	cpi	r30, 0x20	; 32
     b4e:	f1 05       	cpc	r31, r1
     b50:	49 f0       	breq	.+18     	; 0xb64 <__mulsf3+0x12a>
     b52:	66 0c       	add	r6, r6
     b54:	77 1c       	adc	r7, r7
     b56:	88 1c       	adc	r8, r8
     b58:	99 1c       	adc	r9, r9
     b5a:	56 94       	lsr	r5
     b5c:	47 94       	ror	r4
     b5e:	37 94       	ror	r3
     b60:	27 94       	ror	r2
     b62:	c3 cf       	rjmp	.-122    	; 0xaea <__mulsf3+0xb0>
     b64:	fa 85       	ldd	r31, Y+10	; 0x0a
     b66:	ea 89       	ldd	r30, Y+18	; 0x12
     b68:	2b 89       	ldd	r18, Y+19	; 0x13
     b6a:	3c 89       	ldd	r19, Y+20	; 0x14
     b6c:	8b 85       	ldd	r24, Y+11	; 0x0b
     b6e:	9c 85       	ldd	r25, Y+12	; 0x0c
     b70:	28 0f       	add	r18, r24
     b72:	39 1f       	adc	r19, r25
     b74:	2e 5f       	subi	r18, 0xFE	; 254
     b76:	3f 4f       	sbci	r19, 0xFF	; 255
     b78:	17 c0       	rjmp	.+46     	; 0xba8 <__mulsf3+0x16e>
     b7a:	ca 01       	movw	r24, r20
     b7c:	81 70       	andi	r24, 0x01	; 1
     b7e:	90 70       	andi	r25, 0x00	; 0
     b80:	89 2b       	or	r24, r25
     b82:	61 f0       	breq	.+24     	; 0xb9c <__mulsf3+0x162>
     b84:	16 95       	lsr	r17
     b86:	07 95       	ror	r16
     b88:	f7 94       	ror	r15
     b8a:	e7 94       	ror	r14
     b8c:	80 e0       	ldi	r24, 0x00	; 0
     b8e:	90 e0       	ldi	r25, 0x00	; 0
     b90:	a0 e0       	ldi	r26, 0x00	; 0
     b92:	b0 e8       	ldi	r27, 0x80	; 128
     b94:	e8 2a       	or	r14, r24
     b96:	f9 2a       	or	r15, r25
     b98:	0a 2b       	or	r16, r26
     b9a:	1b 2b       	or	r17, r27
     b9c:	76 95       	lsr	r23
     b9e:	67 95       	ror	r22
     ba0:	57 95       	ror	r21
     ba2:	47 95       	ror	r20
     ba4:	2f 5f       	subi	r18, 0xFF	; 255
     ba6:	3f 4f       	sbci	r19, 0xFF	; 255
     ba8:	77 fd       	sbrc	r23, 7
     baa:	e7 cf       	rjmp	.-50     	; 0xb7a <__mulsf3+0x140>
     bac:	0c c0       	rjmp	.+24     	; 0xbc6 <__mulsf3+0x18c>
     bae:	44 0f       	add	r20, r20
     bb0:	55 1f       	adc	r21, r21
     bb2:	66 1f       	adc	r22, r22
     bb4:	77 1f       	adc	r23, r23
     bb6:	17 fd       	sbrc	r17, 7
     bb8:	41 60       	ori	r20, 0x01	; 1
     bba:	ee 0c       	add	r14, r14
     bbc:	ff 1c       	adc	r15, r15
     bbe:	00 1f       	adc	r16, r16
     bc0:	11 1f       	adc	r17, r17
     bc2:	21 50       	subi	r18, 0x01	; 1
     bc4:	30 40       	sbci	r19, 0x00	; 0
     bc6:	40 30       	cpi	r20, 0x00	; 0
     bc8:	90 e0       	ldi	r25, 0x00	; 0
     bca:	59 07       	cpc	r21, r25
     bcc:	90 e0       	ldi	r25, 0x00	; 0
     bce:	69 07       	cpc	r22, r25
     bd0:	90 e4       	ldi	r25, 0x40	; 64
     bd2:	79 07       	cpc	r23, r25
     bd4:	60 f3       	brcs	.-40     	; 0xbae <__mulsf3+0x174>
     bd6:	2b 8f       	std	Y+27, r18	; 0x1b
     bd8:	3c 8f       	std	Y+28, r19	; 0x1c
     bda:	db 01       	movw	r26, r22
     bdc:	ca 01       	movw	r24, r20
     bde:	8f 77       	andi	r24, 0x7F	; 127
     be0:	90 70       	andi	r25, 0x00	; 0
     be2:	a0 70       	andi	r26, 0x00	; 0
     be4:	b0 70       	andi	r27, 0x00	; 0
     be6:	80 34       	cpi	r24, 0x40	; 64
     be8:	91 05       	cpc	r25, r1
     bea:	a1 05       	cpc	r26, r1
     bec:	b1 05       	cpc	r27, r1
     bee:	61 f4       	brne	.+24     	; 0xc08 <__mulsf3+0x1ce>
     bf0:	47 fd       	sbrc	r20, 7
     bf2:	0a c0       	rjmp	.+20     	; 0xc08 <__mulsf3+0x1ce>
     bf4:	e1 14       	cp	r14, r1
     bf6:	f1 04       	cpc	r15, r1
     bf8:	01 05       	cpc	r16, r1
     bfa:	11 05       	cpc	r17, r1
     bfc:	29 f0       	breq	.+10     	; 0xc08 <__mulsf3+0x1ce>
     bfe:	40 5c       	subi	r20, 0xC0	; 192
     c00:	5f 4f       	sbci	r21, 0xFF	; 255
     c02:	6f 4f       	sbci	r22, 0xFF	; 255
     c04:	7f 4f       	sbci	r23, 0xFF	; 255
     c06:	40 78       	andi	r20, 0x80	; 128
     c08:	1a 8e       	std	Y+26, r1	; 0x1a
     c0a:	fe 17       	cp	r31, r30
     c0c:	11 f0       	breq	.+4      	; 0xc12 <__mulsf3+0x1d8>
     c0e:	81 e0       	ldi	r24, 0x01	; 1
     c10:	8a 8f       	std	Y+26, r24	; 0x1a
     c12:	4d 8f       	std	Y+29, r20	; 0x1d
     c14:	5e 8f       	std	Y+30, r21	; 0x1e
     c16:	6f 8f       	std	Y+31, r22	; 0x1f
     c18:	78 a3       	std	Y+32, r23	; 0x20
     c1a:	83 e0       	ldi	r24, 0x03	; 3
     c1c:	89 8f       	std	Y+25, r24	; 0x19
     c1e:	ce 01       	movw	r24, r28
     c20:	49 96       	adiw	r24, 0x19	; 25
     c22:	0e 94 54 08 	call	0x10a8	; 0x10a8 <__pack_f>
     c26:	a0 96       	adiw	r28, 0x20	; 32
     c28:	e2 e1       	ldi	r30, 0x12	; 18
     c2a:	0c 94 16 0a 	jmp	0x142c	; 0x142c <__epilogue_restores__>

00000c2e <__divsf3>:
     c2e:	a8 e1       	ldi	r26, 0x18	; 24
     c30:	b0 e0       	ldi	r27, 0x00	; 0
     c32:	ed e1       	ldi	r30, 0x1D	; 29
     c34:	f6 e0       	ldi	r31, 0x06	; 6
     c36:	0c 94 02 0a 	jmp	0x1404	; 0x1404 <__prologue_saves__+0x10>
     c3a:	69 83       	std	Y+1, r22	; 0x01
     c3c:	7a 83       	std	Y+2, r23	; 0x02
     c3e:	8b 83       	std	Y+3, r24	; 0x03
     c40:	9c 83       	std	Y+4, r25	; 0x04
     c42:	2d 83       	std	Y+5, r18	; 0x05
     c44:	3e 83       	std	Y+6, r19	; 0x06
     c46:	4f 83       	std	Y+7, r20	; 0x07
     c48:	58 87       	std	Y+8, r21	; 0x08
     c4a:	b9 e0       	ldi	r27, 0x09	; 9
     c4c:	eb 2e       	mov	r14, r27
     c4e:	f1 2c       	mov	r15, r1
     c50:	ec 0e       	add	r14, r28
     c52:	fd 1e       	adc	r15, r29
     c54:	ce 01       	movw	r24, r28
     c56:	01 96       	adiw	r24, 0x01	; 1
     c58:	b7 01       	movw	r22, r14
     c5a:	0e 94 29 09 	call	0x1252	; 0x1252 <__unpack_f>
     c5e:	8e 01       	movw	r16, r28
     c60:	0f 5e       	subi	r16, 0xEF	; 239
     c62:	1f 4f       	sbci	r17, 0xFF	; 255
     c64:	ce 01       	movw	r24, r28
     c66:	05 96       	adiw	r24, 0x05	; 5
     c68:	b8 01       	movw	r22, r16
     c6a:	0e 94 29 09 	call	0x1252	; 0x1252 <__unpack_f>
     c6e:	29 85       	ldd	r18, Y+9	; 0x09
     c70:	22 30       	cpi	r18, 0x02	; 2
     c72:	08 f4       	brcc	.+2      	; 0xc76 <__divsf3+0x48>
     c74:	7e c0       	rjmp	.+252    	; 0xd72 <__divsf3+0x144>
     c76:	39 89       	ldd	r19, Y+17	; 0x11
     c78:	32 30       	cpi	r19, 0x02	; 2
     c7a:	10 f4       	brcc	.+4      	; 0xc80 <__divsf3+0x52>
     c7c:	b8 01       	movw	r22, r16
     c7e:	7c c0       	rjmp	.+248    	; 0xd78 <__divsf3+0x14a>
     c80:	8a 85       	ldd	r24, Y+10	; 0x0a
     c82:	9a 89       	ldd	r25, Y+18	; 0x12
     c84:	89 27       	eor	r24, r25
     c86:	8a 87       	std	Y+10, r24	; 0x0a
     c88:	24 30       	cpi	r18, 0x04	; 4
     c8a:	11 f0       	breq	.+4      	; 0xc90 <__divsf3+0x62>
     c8c:	22 30       	cpi	r18, 0x02	; 2
     c8e:	31 f4       	brne	.+12     	; 0xc9c <__divsf3+0x6e>
     c90:	23 17       	cp	r18, r19
     c92:	09 f0       	breq	.+2      	; 0xc96 <__divsf3+0x68>
     c94:	6e c0       	rjmp	.+220    	; 0xd72 <__divsf3+0x144>
     c96:	60 e0       	ldi	r22, 0x00	; 0
     c98:	71 e0       	ldi	r23, 0x01	; 1
     c9a:	6e c0       	rjmp	.+220    	; 0xd78 <__divsf3+0x14a>
     c9c:	34 30       	cpi	r19, 0x04	; 4
     c9e:	39 f4       	brne	.+14     	; 0xcae <__divsf3+0x80>
     ca0:	1d 86       	std	Y+13, r1	; 0x0d
     ca2:	1e 86       	std	Y+14, r1	; 0x0e
     ca4:	1f 86       	std	Y+15, r1	; 0x0f
     ca6:	18 8a       	std	Y+16, r1	; 0x10
     ca8:	1c 86       	std	Y+12, r1	; 0x0c
     caa:	1b 86       	std	Y+11, r1	; 0x0b
     cac:	04 c0       	rjmp	.+8      	; 0xcb6 <__divsf3+0x88>
     cae:	32 30       	cpi	r19, 0x02	; 2
     cb0:	21 f4       	brne	.+8      	; 0xcba <__divsf3+0x8c>
     cb2:	84 e0       	ldi	r24, 0x04	; 4
     cb4:	89 87       	std	Y+9, r24	; 0x09
     cb6:	b7 01       	movw	r22, r14
     cb8:	5f c0       	rjmp	.+190    	; 0xd78 <__divsf3+0x14a>
     cba:	2b 85       	ldd	r18, Y+11	; 0x0b
     cbc:	3c 85       	ldd	r19, Y+12	; 0x0c
     cbe:	8b 89       	ldd	r24, Y+19	; 0x13
     cc0:	9c 89       	ldd	r25, Y+20	; 0x14
     cc2:	28 1b       	sub	r18, r24
     cc4:	39 0b       	sbc	r19, r25
     cc6:	3c 87       	std	Y+12, r19	; 0x0c
     cc8:	2b 87       	std	Y+11, r18	; 0x0b
     cca:	ed 84       	ldd	r14, Y+13	; 0x0d
     ccc:	fe 84       	ldd	r15, Y+14	; 0x0e
     cce:	0f 85       	ldd	r16, Y+15	; 0x0f
     cd0:	18 89       	ldd	r17, Y+16	; 0x10
     cd2:	ad 88       	ldd	r10, Y+21	; 0x15
     cd4:	be 88       	ldd	r11, Y+22	; 0x16
     cd6:	cf 88       	ldd	r12, Y+23	; 0x17
     cd8:	d8 8c       	ldd	r13, Y+24	; 0x18
     cda:	ea 14       	cp	r14, r10
     cdc:	fb 04       	cpc	r15, r11
     cde:	0c 05       	cpc	r16, r12
     ce0:	1d 05       	cpc	r17, r13
     ce2:	40 f4       	brcc	.+16     	; 0xcf4 <__divsf3+0xc6>
     ce4:	ee 0c       	add	r14, r14
     ce6:	ff 1c       	adc	r15, r15
     ce8:	00 1f       	adc	r16, r16
     cea:	11 1f       	adc	r17, r17
     cec:	21 50       	subi	r18, 0x01	; 1
     cee:	30 40       	sbci	r19, 0x00	; 0
     cf0:	3c 87       	std	Y+12, r19	; 0x0c
     cf2:	2b 87       	std	Y+11, r18	; 0x0b
     cf4:	20 e0       	ldi	r18, 0x00	; 0
     cf6:	30 e0       	ldi	r19, 0x00	; 0
     cf8:	40 e0       	ldi	r20, 0x00	; 0
     cfa:	50 e0       	ldi	r21, 0x00	; 0
     cfc:	80 e0       	ldi	r24, 0x00	; 0
     cfe:	90 e0       	ldi	r25, 0x00	; 0
     d00:	a0 e0       	ldi	r26, 0x00	; 0
     d02:	b0 e4       	ldi	r27, 0x40	; 64
     d04:	60 e0       	ldi	r22, 0x00	; 0
     d06:	70 e0       	ldi	r23, 0x00	; 0
     d08:	ea 14       	cp	r14, r10
     d0a:	fb 04       	cpc	r15, r11
     d0c:	0c 05       	cpc	r16, r12
     d0e:	1d 05       	cpc	r17, r13
     d10:	40 f0       	brcs	.+16     	; 0xd22 <__divsf3+0xf4>
     d12:	28 2b       	or	r18, r24
     d14:	39 2b       	or	r19, r25
     d16:	4a 2b       	or	r20, r26
     d18:	5b 2b       	or	r21, r27
     d1a:	ea 18       	sub	r14, r10
     d1c:	fb 08       	sbc	r15, r11
     d1e:	0c 09       	sbc	r16, r12
     d20:	1d 09       	sbc	r17, r13
     d22:	b6 95       	lsr	r27
     d24:	a7 95       	ror	r26
     d26:	97 95       	ror	r25
     d28:	87 95       	ror	r24
     d2a:	ee 0c       	add	r14, r14
     d2c:	ff 1c       	adc	r15, r15
     d2e:	00 1f       	adc	r16, r16
     d30:	11 1f       	adc	r17, r17
     d32:	6f 5f       	subi	r22, 0xFF	; 255
     d34:	7f 4f       	sbci	r23, 0xFF	; 255
     d36:	6f 31       	cpi	r22, 0x1F	; 31
     d38:	71 05       	cpc	r23, r1
     d3a:	31 f7       	brne	.-52     	; 0xd08 <__divsf3+0xda>
     d3c:	da 01       	movw	r26, r20
     d3e:	c9 01       	movw	r24, r18
     d40:	8f 77       	andi	r24, 0x7F	; 127
     d42:	90 70       	andi	r25, 0x00	; 0
     d44:	a0 70       	andi	r26, 0x00	; 0
     d46:	b0 70       	andi	r27, 0x00	; 0
     d48:	80 34       	cpi	r24, 0x40	; 64
     d4a:	91 05       	cpc	r25, r1
     d4c:	a1 05       	cpc	r26, r1
     d4e:	b1 05       	cpc	r27, r1
     d50:	61 f4       	brne	.+24     	; 0xd6a <__divsf3+0x13c>
     d52:	27 fd       	sbrc	r18, 7
     d54:	0a c0       	rjmp	.+20     	; 0xd6a <__divsf3+0x13c>
     d56:	e1 14       	cp	r14, r1
     d58:	f1 04       	cpc	r15, r1
     d5a:	01 05       	cpc	r16, r1
     d5c:	11 05       	cpc	r17, r1
     d5e:	29 f0       	breq	.+10     	; 0xd6a <__divsf3+0x13c>
     d60:	20 5c       	subi	r18, 0xC0	; 192
     d62:	3f 4f       	sbci	r19, 0xFF	; 255
     d64:	4f 4f       	sbci	r20, 0xFF	; 255
     d66:	5f 4f       	sbci	r21, 0xFF	; 255
     d68:	20 78       	andi	r18, 0x80	; 128
     d6a:	2d 87       	std	Y+13, r18	; 0x0d
     d6c:	3e 87       	std	Y+14, r19	; 0x0e
     d6e:	4f 87       	std	Y+15, r20	; 0x0f
     d70:	58 8b       	std	Y+16, r21	; 0x10
     d72:	be 01       	movw	r22, r28
     d74:	67 5f       	subi	r22, 0xF7	; 247
     d76:	7f 4f       	sbci	r23, 0xFF	; 255
     d78:	cb 01       	movw	r24, r22
     d7a:	0e 94 54 08 	call	0x10a8	; 0x10a8 <__pack_f>
     d7e:	68 96       	adiw	r28, 0x18	; 24
     d80:	ea e0       	ldi	r30, 0x0A	; 10
     d82:	0c 94 1e 0a 	jmp	0x143c	; 0x143c <__epilogue_restores__+0x10>

00000d86 <__gtsf2>:
     d86:	a8 e1       	ldi	r26, 0x18	; 24
     d88:	b0 e0       	ldi	r27, 0x00	; 0
     d8a:	e9 ec       	ldi	r30, 0xC9	; 201
     d8c:	f6 e0       	ldi	r31, 0x06	; 6
     d8e:	0c 94 06 0a 	jmp	0x140c	; 0x140c <__prologue_saves__+0x18>
     d92:	69 83       	std	Y+1, r22	; 0x01
     d94:	7a 83       	std	Y+2, r23	; 0x02
     d96:	8b 83       	std	Y+3, r24	; 0x03
     d98:	9c 83       	std	Y+4, r25	; 0x04
     d9a:	2d 83       	std	Y+5, r18	; 0x05
     d9c:	3e 83       	std	Y+6, r19	; 0x06
     d9e:	4f 83       	std	Y+7, r20	; 0x07
     da0:	58 87       	std	Y+8, r21	; 0x08
     da2:	89 e0       	ldi	r24, 0x09	; 9
     da4:	e8 2e       	mov	r14, r24
     da6:	f1 2c       	mov	r15, r1
     da8:	ec 0e       	add	r14, r28
     daa:	fd 1e       	adc	r15, r29
     dac:	ce 01       	movw	r24, r28
     dae:	01 96       	adiw	r24, 0x01	; 1
     db0:	b7 01       	movw	r22, r14
     db2:	0e 94 29 09 	call	0x1252	; 0x1252 <__unpack_f>
     db6:	8e 01       	movw	r16, r28
     db8:	0f 5e       	subi	r16, 0xEF	; 239
     dba:	1f 4f       	sbci	r17, 0xFF	; 255
     dbc:	ce 01       	movw	r24, r28
     dbe:	05 96       	adiw	r24, 0x05	; 5
     dc0:	b8 01       	movw	r22, r16
     dc2:	0e 94 29 09 	call	0x1252	; 0x1252 <__unpack_f>
     dc6:	89 85       	ldd	r24, Y+9	; 0x09
     dc8:	82 30       	cpi	r24, 0x02	; 2
     dca:	40 f0       	brcs	.+16     	; 0xddc <__gtsf2+0x56>
     dcc:	89 89       	ldd	r24, Y+17	; 0x11
     dce:	82 30       	cpi	r24, 0x02	; 2
     dd0:	28 f0       	brcs	.+10     	; 0xddc <__gtsf2+0x56>
     dd2:	c7 01       	movw	r24, r14
     dd4:	b8 01       	movw	r22, r16
     dd6:	0e 94 a1 09 	call	0x1342	; 0x1342 <__fpcmp_parts_f>
     dda:	01 c0       	rjmp	.+2      	; 0xdde <__gtsf2+0x58>
     ddc:	8f ef       	ldi	r24, 0xFF	; 255
     dde:	68 96       	adiw	r28, 0x18	; 24
     de0:	e6 e0       	ldi	r30, 0x06	; 6
     de2:	0c 94 22 0a 	jmp	0x1444	; 0x1444 <__epilogue_restores__+0x18>

00000de6 <__gesf2>:
     de6:	a8 e1       	ldi	r26, 0x18	; 24
     de8:	b0 e0       	ldi	r27, 0x00	; 0
     dea:	e9 ef       	ldi	r30, 0xF9	; 249
     dec:	f6 e0       	ldi	r31, 0x06	; 6
     dee:	0c 94 06 0a 	jmp	0x140c	; 0x140c <__prologue_saves__+0x18>
     df2:	69 83       	std	Y+1, r22	; 0x01
     df4:	7a 83       	std	Y+2, r23	; 0x02
     df6:	8b 83       	std	Y+3, r24	; 0x03
     df8:	9c 83       	std	Y+4, r25	; 0x04
     dfa:	2d 83       	std	Y+5, r18	; 0x05
     dfc:	3e 83       	std	Y+6, r19	; 0x06
     dfe:	4f 83       	std	Y+7, r20	; 0x07
     e00:	58 87       	std	Y+8, r21	; 0x08
     e02:	89 e0       	ldi	r24, 0x09	; 9
     e04:	e8 2e       	mov	r14, r24
     e06:	f1 2c       	mov	r15, r1
     e08:	ec 0e       	add	r14, r28
     e0a:	fd 1e       	adc	r15, r29
     e0c:	ce 01       	movw	r24, r28
     e0e:	01 96       	adiw	r24, 0x01	; 1
     e10:	b7 01       	movw	r22, r14
     e12:	0e 94 29 09 	call	0x1252	; 0x1252 <__unpack_f>
     e16:	8e 01       	movw	r16, r28
     e18:	0f 5e       	subi	r16, 0xEF	; 239
     e1a:	1f 4f       	sbci	r17, 0xFF	; 255
     e1c:	ce 01       	movw	r24, r28
     e1e:	05 96       	adiw	r24, 0x05	; 5
     e20:	b8 01       	movw	r22, r16
     e22:	0e 94 29 09 	call	0x1252	; 0x1252 <__unpack_f>
     e26:	89 85       	ldd	r24, Y+9	; 0x09
     e28:	82 30       	cpi	r24, 0x02	; 2
     e2a:	40 f0       	brcs	.+16     	; 0xe3c <__gesf2+0x56>
     e2c:	89 89       	ldd	r24, Y+17	; 0x11
     e2e:	82 30       	cpi	r24, 0x02	; 2
     e30:	28 f0       	brcs	.+10     	; 0xe3c <__gesf2+0x56>
     e32:	c7 01       	movw	r24, r14
     e34:	b8 01       	movw	r22, r16
     e36:	0e 94 a1 09 	call	0x1342	; 0x1342 <__fpcmp_parts_f>
     e3a:	01 c0       	rjmp	.+2      	; 0xe3e <__gesf2+0x58>
     e3c:	8f ef       	ldi	r24, 0xFF	; 255
     e3e:	68 96       	adiw	r28, 0x18	; 24
     e40:	e6 e0       	ldi	r30, 0x06	; 6
     e42:	0c 94 22 0a 	jmp	0x1444	; 0x1444 <__epilogue_restores__+0x18>

00000e46 <__ltsf2>:
     e46:	a8 e1       	ldi	r26, 0x18	; 24
     e48:	b0 e0       	ldi	r27, 0x00	; 0
     e4a:	e9 e2       	ldi	r30, 0x29	; 41
     e4c:	f7 e0       	ldi	r31, 0x07	; 7
     e4e:	0c 94 06 0a 	jmp	0x140c	; 0x140c <__prologue_saves__+0x18>
     e52:	69 83       	std	Y+1, r22	; 0x01
     e54:	7a 83       	std	Y+2, r23	; 0x02
     e56:	8b 83       	std	Y+3, r24	; 0x03
     e58:	9c 83       	std	Y+4, r25	; 0x04
     e5a:	2d 83       	std	Y+5, r18	; 0x05
     e5c:	3e 83       	std	Y+6, r19	; 0x06
     e5e:	4f 83       	std	Y+7, r20	; 0x07
     e60:	58 87       	std	Y+8, r21	; 0x08
     e62:	89 e0       	ldi	r24, 0x09	; 9
     e64:	e8 2e       	mov	r14, r24
     e66:	f1 2c       	mov	r15, r1
     e68:	ec 0e       	add	r14, r28
     e6a:	fd 1e       	adc	r15, r29
     e6c:	ce 01       	movw	r24, r28
     e6e:	01 96       	adiw	r24, 0x01	; 1
     e70:	b7 01       	movw	r22, r14
     e72:	0e 94 29 09 	call	0x1252	; 0x1252 <__unpack_f>
     e76:	8e 01       	movw	r16, r28
     e78:	0f 5e       	subi	r16, 0xEF	; 239
     e7a:	1f 4f       	sbci	r17, 0xFF	; 255
     e7c:	ce 01       	movw	r24, r28
     e7e:	05 96       	adiw	r24, 0x05	; 5
     e80:	b8 01       	movw	r22, r16
     e82:	0e 94 29 09 	call	0x1252	; 0x1252 <__unpack_f>
     e86:	89 85       	ldd	r24, Y+9	; 0x09
     e88:	82 30       	cpi	r24, 0x02	; 2
     e8a:	40 f0       	brcs	.+16     	; 0xe9c <__ltsf2+0x56>
     e8c:	89 89       	ldd	r24, Y+17	; 0x11
     e8e:	82 30       	cpi	r24, 0x02	; 2
     e90:	28 f0       	brcs	.+10     	; 0xe9c <__ltsf2+0x56>
     e92:	c7 01       	movw	r24, r14
     e94:	b8 01       	movw	r22, r16
     e96:	0e 94 a1 09 	call	0x1342	; 0x1342 <__fpcmp_parts_f>
     e9a:	01 c0       	rjmp	.+2      	; 0xe9e <__ltsf2+0x58>
     e9c:	81 e0       	ldi	r24, 0x01	; 1
     e9e:	68 96       	adiw	r28, 0x18	; 24
     ea0:	e6 e0       	ldi	r30, 0x06	; 6
     ea2:	0c 94 22 0a 	jmp	0x1444	; 0x1444 <__epilogue_restores__+0x18>

00000ea6 <__floatsisf>:
     ea6:	a8 e0       	ldi	r26, 0x08	; 8
     ea8:	b0 e0       	ldi	r27, 0x00	; 0
     eaa:	e9 e5       	ldi	r30, 0x59	; 89
     eac:	f7 e0       	ldi	r31, 0x07	; 7
     eae:	0c 94 03 0a 	jmp	0x1406	; 0x1406 <__prologue_saves__+0x12>
     eb2:	9b 01       	movw	r18, r22
     eb4:	ac 01       	movw	r20, r24
     eb6:	83 e0       	ldi	r24, 0x03	; 3
     eb8:	89 83       	std	Y+1, r24	; 0x01
     eba:	da 01       	movw	r26, r20
     ebc:	c9 01       	movw	r24, r18
     ebe:	88 27       	eor	r24, r24
     ec0:	b7 fd       	sbrc	r27, 7
     ec2:	83 95       	inc	r24
     ec4:	99 27       	eor	r25, r25
     ec6:	aa 27       	eor	r26, r26
     ec8:	bb 27       	eor	r27, r27
     eca:	b8 2e       	mov	r11, r24
     ecc:	21 15       	cp	r18, r1
     ece:	31 05       	cpc	r19, r1
     ed0:	41 05       	cpc	r20, r1
     ed2:	51 05       	cpc	r21, r1
     ed4:	19 f4       	brne	.+6      	; 0xedc <__floatsisf+0x36>
     ed6:	82 e0       	ldi	r24, 0x02	; 2
     ed8:	89 83       	std	Y+1, r24	; 0x01
     eda:	3a c0       	rjmp	.+116    	; 0xf50 <__floatsisf+0xaa>
     edc:	88 23       	and	r24, r24
     ede:	a9 f0       	breq	.+42     	; 0xf0a <__floatsisf+0x64>
     ee0:	20 30       	cpi	r18, 0x00	; 0
     ee2:	80 e0       	ldi	r24, 0x00	; 0
     ee4:	38 07       	cpc	r19, r24
     ee6:	80 e0       	ldi	r24, 0x00	; 0
     ee8:	48 07       	cpc	r20, r24
     eea:	80 e8       	ldi	r24, 0x80	; 128
     eec:	58 07       	cpc	r21, r24
     eee:	29 f4       	brne	.+10     	; 0xefa <__floatsisf+0x54>
     ef0:	60 e0       	ldi	r22, 0x00	; 0
     ef2:	70 e0       	ldi	r23, 0x00	; 0
     ef4:	80 e0       	ldi	r24, 0x00	; 0
     ef6:	9f ec       	ldi	r25, 0xCF	; 207
     ef8:	30 c0       	rjmp	.+96     	; 0xf5a <__floatsisf+0xb4>
     efa:	ee 24       	eor	r14, r14
     efc:	ff 24       	eor	r15, r15
     efe:	87 01       	movw	r16, r14
     f00:	e2 1a       	sub	r14, r18
     f02:	f3 0a       	sbc	r15, r19
     f04:	04 0b       	sbc	r16, r20
     f06:	15 0b       	sbc	r17, r21
     f08:	02 c0       	rjmp	.+4      	; 0xf0e <__floatsisf+0x68>
     f0a:	79 01       	movw	r14, r18
     f0c:	8a 01       	movw	r16, r20
     f0e:	8e e1       	ldi	r24, 0x1E	; 30
     f10:	c8 2e       	mov	r12, r24
     f12:	d1 2c       	mov	r13, r1
     f14:	dc 82       	std	Y+4, r13	; 0x04
     f16:	cb 82       	std	Y+3, r12	; 0x03
     f18:	ed 82       	std	Y+5, r14	; 0x05
     f1a:	fe 82       	std	Y+6, r15	; 0x06
     f1c:	0f 83       	std	Y+7, r16	; 0x07
     f1e:	18 87       	std	Y+8, r17	; 0x08
     f20:	c8 01       	movw	r24, r16
     f22:	b7 01       	movw	r22, r14
     f24:	0e 94 05 08 	call	0x100a	; 0x100a <__clzsi2>
     f28:	01 97       	sbiw	r24, 0x01	; 1
     f2a:	18 16       	cp	r1, r24
     f2c:	19 06       	cpc	r1, r25
     f2e:	84 f4       	brge	.+32     	; 0xf50 <__floatsisf+0xaa>
     f30:	08 2e       	mov	r0, r24
     f32:	04 c0       	rjmp	.+8      	; 0xf3c <__floatsisf+0x96>
     f34:	ee 0c       	add	r14, r14
     f36:	ff 1c       	adc	r15, r15
     f38:	00 1f       	adc	r16, r16
     f3a:	11 1f       	adc	r17, r17
     f3c:	0a 94       	dec	r0
     f3e:	d2 f7       	brpl	.-12     	; 0xf34 <__floatsisf+0x8e>
     f40:	ed 82       	std	Y+5, r14	; 0x05
     f42:	fe 82       	std	Y+6, r15	; 0x06
     f44:	0f 83       	std	Y+7, r16	; 0x07
     f46:	18 87       	std	Y+8, r17	; 0x08
     f48:	c8 1a       	sub	r12, r24
     f4a:	d9 0a       	sbc	r13, r25
     f4c:	dc 82       	std	Y+4, r13	; 0x04
     f4e:	cb 82       	std	Y+3, r12	; 0x03
     f50:	ba 82       	std	Y+2, r11	; 0x02
     f52:	ce 01       	movw	r24, r28
     f54:	01 96       	adiw	r24, 0x01	; 1
     f56:	0e 94 54 08 	call	0x10a8	; 0x10a8 <__pack_f>
     f5a:	28 96       	adiw	r28, 0x08	; 8
     f5c:	e9 e0       	ldi	r30, 0x09	; 9
     f5e:	0c 94 1f 0a 	jmp	0x143e	; 0x143e <__epilogue_restores__+0x12>

00000f62 <__fixsfsi>:
     f62:	ac e0       	ldi	r26, 0x0C	; 12
     f64:	b0 e0       	ldi	r27, 0x00	; 0
     f66:	e7 eb       	ldi	r30, 0xB7	; 183
     f68:	f7 e0       	ldi	r31, 0x07	; 7
     f6a:	0c 94 0a 0a 	jmp	0x1414	; 0x1414 <__prologue_saves__+0x20>
     f6e:	69 83       	std	Y+1, r22	; 0x01
     f70:	7a 83       	std	Y+2, r23	; 0x02
     f72:	8b 83       	std	Y+3, r24	; 0x03
     f74:	9c 83       	std	Y+4, r25	; 0x04
     f76:	ce 01       	movw	r24, r28
     f78:	01 96       	adiw	r24, 0x01	; 1
     f7a:	be 01       	movw	r22, r28
     f7c:	6b 5f       	subi	r22, 0xFB	; 251
     f7e:	7f 4f       	sbci	r23, 0xFF	; 255
     f80:	0e 94 29 09 	call	0x1252	; 0x1252 <__unpack_f>
     f84:	8d 81       	ldd	r24, Y+5	; 0x05
     f86:	82 30       	cpi	r24, 0x02	; 2
     f88:	61 f1       	breq	.+88     	; 0xfe2 <__fixsfsi+0x80>
     f8a:	82 30       	cpi	r24, 0x02	; 2
     f8c:	50 f1       	brcs	.+84     	; 0xfe2 <__fixsfsi+0x80>
     f8e:	84 30       	cpi	r24, 0x04	; 4
     f90:	21 f4       	brne	.+8      	; 0xf9a <__fixsfsi+0x38>
     f92:	8e 81       	ldd	r24, Y+6	; 0x06
     f94:	88 23       	and	r24, r24
     f96:	51 f1       	breq	.+84     	; 0xfec <__fixsfsi+0x8a>
     f98:	2e c0       	rjmp	.+92     	; 0xff6 <__fixsfsi+0x94>
     f9a:	2f 81       	ldd	r18, Y+7	; 0x07
     f9c:	38 85       	ldd	r19, Y+8	; 0x08
     f9e:	37 fd       	sbrc	r19, 7
     fa0:	20 c0       	rjmp	.+64     	; 0xfe2 <__fixsfsi+0x80>
     fa2:	6e 81       	ldd	r22, Y+6	; 0x06
     fa4:	2f 31       	cpi	r18, 0x1F	; 31
     fa6:	31 05       	cpc	r19, r1
     fa8:	1c f0       	brlt	.+6      	; 0xfb0 <__fixsfsi+0x4e>
     faa:	66 23       	and	r22, r22
     fac:	f9 f0       	breq	.+62     	; 0xfec <__fixsfsi+0x8a>
     fae:	23 c0       	rjmp	.+70     	; 0xff6 <__fixsfsi+0x94>
     fb0:	8e e1       	ldi	r24, 0x1E	; 30
     fb2:	90 e0       	ldi	r25, 0x00	; 0
     fb4:	82 1b       	sub	r24, r18
     fb6:	93 0b       	sbc	r25, r19
     fb8:	29 85       	ldd	r18, Y+9	; 0x09
     fba:	3a 85       	ldd	r19, Y+10	; 0x0a
     fbc:	4b 85       	ldd	r20, Y+11	; 0x0b
     fbe:	5c 85       	ldd	r21, Y+12	; 0x0c
     fc0:	04 c0       	rjmp	.+8      	; 0xfca <__fixsfsi+0x68>
     fc2:	56 95       	lsr	r21
     fc4:	47 95       	ror	r20
     fc6:	37 95       	ror	r19
     fc8:	27 95       	ror	r18
     fca:	8a 95       	dec	r24
     fcc:	d2 f7       	brpl	.-12     	; 0xfc2 <__fixsfsi+0x60>
     fce:	66 23       	and	r22, r22
     fd0:	b1 f0       	breq	.+44     	; 0xffe <__fixsfsi+0x9c>
     fd2:	50 95       	com	r21
     fd4:	40 95       	com	r20
     fd6:	30 95       	com	r19
     fd8:	21 95       	neg	r18
     fda:	3f 4f       	sbci	r19, 0xFF	; 255
     fdc:	4f 4f       	sbci	r20, 0xFF	; 255
     fde:	5f 4f       	sbci	r21, 0xFF	; 255
     fe0:	0e c0       	rjmp	.+28     	; 0xffe <__fixsfsi+0x9c>
     fe2:	20 e0       	ldi	r18, 0x00	; 0
     fe4:	30 e0       	ldi	r19, 0x00	; 0
     fe6:	40 e0       	ldi	r20, 0x00	; 0
     fe8:	50 e0       	ldi	r21, 0x00	; 0
     fea:	09 c0       	rjmp	.+18     	; 0xffe <__fixsfsi+0x9c>
     fec:	2f ef       	ldi	r18, 0xFF	; 255
     fee:	3f ef       	ldi	r19, 0xFF	; 255
     ff0:	4f ef       	ldi	r20, 0xFF	; 255
     ff2:	5f e7       	ldi	r21, 0x7F	; 127
     ff4:	04 c0       	rjmp	.+8      	; 0xffe <__fixsfsi+0x9c>
     ff6:	20 e0       	ldi	r18, 0x00	; 0
     ff8:	30 e0       	ldi	r19, 0x00	; 0
     ffa:	40 e0       	ldi	r20, 0x00	; 0
     ffc:	50 e8       	ldi	r21, 0x80	; 128
     ffe:	b9 01       	movw	r22, r18
    1000:	ca 01       	movw	r24, r20
    1002:	2c 96       	adiw	r28, 0x0c	; 12
    1004:	e2 e0       	ldi	r30, 0x02	; 2
    1006:	0c 94 26 0a 	jmp	0x144c	; 0x144c <__epilogue_restores__+0x20>

0000100a <__clzsi2>:
    100a:	ef 92       	push	r14
    100c:	ff 92       	push	r15
    100e:	0f 93       	push	r16
    1010:	1f 93       	push	r17
    1012:	7b 01       	movw	r14, r22
    1014:	8c 01       	movw	r16, r24
    1016:	80 e0       	ldi	r24, 0x00	; 0
    1018:	e8 16       	cp	r14, r24
    101a:	80 e0       	ldi	r24, 0x00	; 0
    101c:	f8 06       	cpc	r15, r24
    101e:	81 e0       	ldi	r24, 0x01	; 1
    1020:	08 07       	cpc	r16, r24
    1022:	80 e0       	ldi	r24, 0x00	; 0
    1024:	18 07       	cpc	r17, r24
    1026:	88 f4       	brcc	.+34     	; 0x104a <__clzsi2+0x40>
    1028:	8f ef       	ldi	r24, 0xFF	; 255
    102a:	e8 16       	cp	r14, r24
    102c:	f1 04       	cpc	r15, r1
    102e:	01 05       	cpc	r16, r1
    1030:	11 05       	cpc	r17, r1
    1032:	31 f0       	breq	.+12     	; 0x1040 <__clzsi2+0x36>
    1034:	28 f0       	brcs	.+10     	; 0x1040 <__clzsi2+0x36>
    1036:	88 e0       	ldi	r24, 0x08	; 8
    1038:	90 e0       	ldi	r25, 0x00	; 0
    103a:	a0 e0       	ldi	r26, 0x00	; 0
    103c:	b0 e0       	ldi	r27, 0x00	; 0
    103e:	17 c0       	rjmp	.+46     	; 0x106e <__clzsi2+0x64>
    1040:	80 e0       	ldi	r24, 0x00	; 0
    1042:	90 e0       	ldi	r25, 0x00	; 0
    1044:	a0 e0       	ldi	r26, 0x00	; 0
    1046:	b0 e0       	ldi	r27, 0x00	; 0
    1048:	12 c0       	rjmp	.+36     	; 0x106e <__clzsi2+0x64>
    104a:	80 e0       	ldi	r24, 0x00	; 0
    104c:	e8 16       	cp	r14, r24
    104e:	80 e0       	ldi	r24, 0x00	; 0
    1050:	f8 06       	cpc	r15, r24
    1052:	80 e0       	ldi	r24, 0x00	; 0
    1054:	08 07       	cpc	r16, r24
    1056:	81 e0       	ldi	r24, 0x01	; 1
    1058:	18 07       	cpc	r17, r24
    105a:	28 f0       	brcs	.+10     	; 0x1066 <__clzsi2+0x5c>
    105c:	88 e1       	ldi	r24, 0x18	; 24
    105e:	90 e0       	ldi	r25, 0x00	; 0
    1060:	a0 e0       	ldi	r26, 0x00	; 0
    1062:	b0 e0       	ldi	r27, 0x00	; 0
    1064:	04 c0       	rjmp	.+8      	; 0x106e <__clzsi2+0x64>
    1066:	80 e1       	ldi	r24, 0x10	; 16
    1068:	90 e0       	ldi	r25, 0x00	; 0
    106a:	a0 e0       	ldi	r26, 0x00	; 0
    106c:	b0 e0       	ldi	r27, 0x00	; 0
    106e:	20 e2       	ldi	r18, 0x20	; 32
    1070:	30 e0       	ldi	r19, 0x00	; 0
    1072:	40 e0       	ldi	r20, 0x00	; 0
    1074:	50 e0       	ldi	r21, 0x00	; 0
    1076:	28 1b       	sub	r18, r24
    1078:	39 0b       	sbc	r19, r25
    107a:	4a 0b       	sbc	r20, r26
    107c:	5b 0b       	sbc	r21, r27
    107e:	04 c0       	rjmp	.+8      	; 0x1088 <__clzsi2+0x7e>
    1080:	16 95       	lsr	r17
    1082:	07 95       	ror	r16
    1084:	f7 94       	ror	r15
    1086:	e7 94       	ror	r14
    1088:	8a 95       	dec	r24
    108a:	d2 f7       	brpl	.-12     	; 0x1080 <__clzsi2+0x76>
    108c:	f7 01       	movw	r30, r14
    108e:	e8 5f       	subi	r30, 0xF8	; 248
    1090:	fe 4f       	sbci	r31, 0xFE	; 254
    1092:	80 81       	ld	r24, Z
    1094:	28 1b       	sub	r18, r24
    1096:	31 09       	sbc	r19, r1
    1098:	41 09       	sbc	r20, r1
    109a:	51 09       	sbc	r21, r1
    109c:	c9 01       	movw	r24, r18
    109e:	1f 91       	pop	r17
    10a0:	0f 91       	pop	r16
    10a2:	ff 90       	pop	r15
    10a4:	ef 90       	pop	r14
    10a6:	08 95       	ret

000010a8 <__pack_f>:
    10a8:	df 92       	push	r13
    10aa:	ef 92       	push	r14
    10ac:	ff 92       	push	r15
    10ae:	0f 93       	push	r16
    10b0:	1f 93       	push	r17
    10b2:	fc 01       	movw	r30, r24
    10b4:	e4 80       	ldd	r14, Z+4	; 0x04
    10b6:	f5 80       	ldd	r15, Z+5	; 0x05
    10b8:	06 81       	ldd	r16, Z+6	; 0x06
    10ba:	17 81       	ldd	r17, Z+7	; 0x07
    10bc:	d1 80       	ldd	r13, Z+1	; 0x01
    10be:	80 81       	ld	r24, Z
    10c0:	82 30       	cpi	r24, 0x02	; 2
    10c2:	48 f4       	brcc	.+18     	; 0x10d6 <__pack_f+0x2e>
    10c4:	80 e0       	ldi	r24, 0x00	; 0
    10c6:	90 e0       	ldi	r25, 0x00	; 0
    10c8:	a0 e1       	ldi	r26, 0x10	; 16
    10ca:	b0 e0       	ldi	r27, 0x00	; 0
    10cc:	e8 2a       	or	r14, r24
    10ce:	f9 2a       	or	r15, r25
    10d0:	0a 2b       	or	r16, r26
    10d2:	1b 2b       	or	r17, r27
    10d4:	a5 c0       	rjmp	.+330    	; 0x1220 <__pack_f+0x178>
    10d6:	84 30       	cpi	r24, 0x04	; 4
    10d8:	09 f4       	brne	.+2      	; 0x10dc <__pack_f+0x34>
    10da:	9f c0       	rjmp	.+318    	; 0x121a <__pack_f+0x172>
    10dc:	82 30       	cpi	r24, 0x02	; 2
    10de:	21 f4       	brne	.+8      	; 0x10e8 <__pack_f+0x40>
    10e0:	ee 24       	eor	r14, r14
    10e2:	ff 24       	eor	r15, r15
    10e4:	87 01       	movw	r16, r14
    10e6:	05 c0       	rjmp	.+10     	; 0x10f2 <__pack_f+0x4a>
    10e8:	e1 14       	cp	r14, r1
    10ea:	f1 04       	cpc	r15, r1
    10ec:	01 05       	cpc	r16, r1
    10ee:	11 05       	cpc	r17, r1
    10f0:	19 f4       	brne	.+6      	; 0x10f8 <__pack_f+0x50>
    10f2:	e0 e0       	ldi	r30, 0x00	; 0
    10f4:	f0 e0       	ldi	r31, 0x00	; 0
    10f6:	96 c0       	rjmp	.+300    	; 0x1224 <__pack_f+0x17c>
    10f8:	62 81       	ldd	r22, Z+2	; 0x02
    10fa:	73 81       	ldd	r23, Z+3	; 0x03
    10fc:	9f ef       	ldi	r25, 0xFF	; 255
    10fe:	62 38       	cpi	r22, 0x82	; 130
    1100:	79 07       	cpc	r23, r25
    1102:	0c f0       	brlt	.+2      	; 0x1106 <__pack_f+0x5e>
    1104:	5b c0       	rjmp	.+182    	; 0x11bc <__pack_f+0x114>
    1106:	22 e8       	ldi	r18, 0x82	; 130
    1108:	3f ef       	ldi	r19, 0xFF	; 255
    110a:	26 1b       	sub	r18, r22
    110c:	37 0b       	sbc	r19, r23
    110e:	2a 31       	cpi	r18, 0x1A	; 26
    1110:	31 05       	cpc	r19, r1
    1112:	2c f0       	brlt	.+10     	; 0x111e <__pack_f+0x76>
    1114:	20 e0       	ldi	r18, 0x00	; 0
    1116:	30 e0       	ldi	r19, 0x00	; 0
    1118:	40 e0       	ldi	r20, 0x00	; 0
    111a:	50 e0       	ldi	r21, 0x00	; 0
    111c:	2a c0       	rjmp	.+84     	; 0x1172 <__pack_f+0xca>
    111e:	b8 01       	movw	r22, r16
    1120:	a7 01       	movw	r20, r14
    1122:	02 2e       	mov	r0, r18
    1124:	04 c0       	rjmp	.+8      	; 0x112e <__pack_f+0x86>
    1126:	76 95       	lsr	r23
    1128:	67 95       	ror	r22
    112a:	57 95       	ror	r21
    112c:	47 95       	ror	r20
    112e:	0a 94       	dec	r0
    1130:	d2 f7       	brpl	.-12     	; 0x1126 <__pack_f+0x7e>
    1132:	81 e0       	ldi	r24, 0x01	; 1
    1134:	90 e0       	ldi	r25, 0x00	; 0
    1136:	a0 e0       	ldi	r26, 0x00	; 0
    1138:	b0 e0       	ldi	r27, 0x00	; 0
    113a:	04 c0       	rjmp	.+8      	; 0x1144 <__pack_f+0x9c>
    113c:	88 0f       	add	r24, r24
    113e:	99 1f       	adc	r25, r25
    1140:	aa 1f       	adc	r26, r26
    1142:	bb 1f       	adc	r27, r27
    1144:	2a 95       	dec	r18
    1146:	d2 f7       	brpl	.-12     	; 0x113c <__pack_f+0x94>
    1148:	01 97       	sbiw	r24, 0x01	; 1
    114a:	a1 09       	sbc	r26, r1
    114c:	b1 09       	sbc	r27, r1
    114e:	8e 21       	and	r24, r14
    1150:	9f 21       	and	r25, r15
    1152:	a0 23       	and	r26, r16
    1154:	b1 23       	and	r27, r17
    1156:	00 97       	sbiw	r24, 0x00	; 0
    1158:	a1 05       	cpc	r26, r1
    115a:	b1 05       	cpc	r27, r1
    115c:	21 f0       	breq	.+8      	; 0x1166 <__pack_f+0xbe>
    115e:	81 e0       	ldi	r24, 0x01	; 1
    1160:	90 e0       	ldi	r25, 0x00	; 0
    1162:	a0 e0       	ldi	r26, 0x00	; 0
    1164:	b0 e0       	ldi	r27, 0x00	; 0
    1166:	9a 01       	movw	r18, r20
    1168:	ab 01       	movw	r20, r22
    116a:	28 2b       	or	r18, r24
    116c:	39 2b       	or	r19, r25
    116e:	4a 2b       	or	r20, r26
    1170:	5b 2b       	or	r21, r27
    1172:	da 01       	movw	r26, r20
    1174:	c9 01       	movw	r24, r18
    1176:	8f 77       	andi	r24, 0x7F	; 127
    1178:	90 70       	andi	r25, 0x00	; 0
    117a:	a0 70       	andi	r26, 0x00	; 0
    117c:	b0 70       	andi	r27, 0x00	; 0
    117e:	80 34       	cpi	r24, 0x40	; 64
    1180:	91 05       	cpc	r25, r1
    1182:	a1 05       	cpc	r26, r1
    1184:	b1 05       	cpc	r27, r1
    1186:	39 f4       	brne	.+14     	; 0x1196 <__pack_f+0xee>
    1188:	27 ff       	sbrs	r18, 7
    118a:	09 c0       	rjmp	.+18     	; 0x119e <__pack_f+0xf6>
    118c:	20 5c       	subi	r18, 0xC0	; 192
    118e:	3f 4f       	sbci	r19, 0xFF	; 255
    1190:	4f 4f       	sbci	r20, 0xFF	; 255
    1192:	5f 4f       	sbci	r21, 0xFF	; 255
    1194:	04 c0       	rjmp	.+8      	; 0x119e <__pack_f+0xf6>
    1196:	21 5c       	subi	r18, 0xC1	; 193
    1198:	3f 4f       	sbci	r19, 0xFF	; 255
    119a:	4f 4f       	sbci	r20, 0xFF	; 255
    119c:	5f 4f       	sbci	r21, 0xFF	; 255
    119e:	e0 e0       	ldi	r30, 0x00	; 0
    11a0:	f0 e0       	ldi	r31, 0x00	; 0
    11a2:	20 30       	cpi	r18, 0x00	; 0
    11a4:	a0 e0       	ldi	r26, 0x00	; 0
    11a6:	3a 07       	cpc	r19, r26
    11a8:	a0 e0       	ldi	r26, 0x00	; 0
    11aa:	4a 07       	cpc	r20, r26
    11ac:	a0 e4       	ldi	r26, 0x40	; 64
    11ae:	5a 07       	cpc	r21, r26
    11b0:	10 f0       	brcs	.+4      	; 0x11b6 <__pack_f+0x10e>
    11b2:	e1 e0       	ldi	r30, 0x01	; 1
    11b4:	f0 e0       	ldi	r31, 0x00	; 0
    11b6:	79 01       	movw	r14, r18
    11b8:	8a 01       	movw	r16, r20
    11ba:	27 c0       	rjmp	.+78     	; 0x120a <__pack_f+0x162>
    11bc:	60 38       	cpi	r22, 0x80	; 128
    11be:	71 05       	cpc	r23, r1
    11c0:	64 f5       	brge	.+88     	; 0x121a <__pack_f+0x172>
    11c2:	fb 01       	movw	r30, r22
    11c4:	e1 58       	subi	r30, 0x81	; 129
    11c6:	ff 4f       	sbci	r31, 0xFF	; 255
    11c8:	d8 01       	movw	r26, r16
    11ca:	c7 01       	movw	r24, r14
    11cc:	8f 77       	andi	r24, 0x7F	; 127
    11ce:	90 70       	andi	r25, 0x00	; 0
    11d0:	a0 70       	andi	r26, 0x00	; 0
    11d2:	b0 70       	andi	r27, 0x00	; 0
    11d4:	80 34       	cpi	r24, 0x40	; 64
    11d6:	91 05       	cpc	r25, r1
    11d8:	a1 05       	cpc	r26, r1
    11da:	b1 05       	cpc	r27, r1
    11dc:	39 f4       	brne	.+14     	; 0x11ec <__pack_f+0x144>
    11de:	e7 fe       	sbrs	r14, 7
    11e0:	0d c0       	rjmp	.+26     	; 0x11fc <__pack_f+0x154>
    11e2:	80 e4       	ldi	r24, 0x40	; 64
    11e4:	90 e0       	ldi	r25, 0x00	; 0
    11e6:	a0 e0       	ldi	r26, 0x00	; 0
    11e8:	b0 e0       	ldi	r27, 0x00	; 0
    11ea:	04 c0       	rjmp	.+8      	; 0x11f4 <__pack_f+0x14c>
    11ec:	8f e3       	ldi	r24, 0x3F	; 63
    11ee:	90 e0       	ldi	r25, 0x00	; 0
    11f0:	a0 e0       	ldi	r26, 0x00	; 0
    11f2:	b0 e0       	ldi	r27, 0x00	; 0
    11f4:	e8 0e       	add	r14, r24
    11f6:	f9 1e       	adc	r15, r25
    11f8:	0a 1f       	adc	r16, r26
    11fa:	1b 1f       	adc	r17, r27
    11fc:	17 ff       	sbrs	r17, 7
    11fe:	05 c0       	rjmp	.+10     	; 0x120a <__pack_f+0x162>
    1200:	16 95       	lsr	r17
    1202:	07 95       	ror	r16
    1204:	f7 94       	ror	r15
    1206:	e7 94       	ror	r14
    1208:	31 96       	adiw	r30, 0x01	; 1
    120a:	87 e0       	ldi	r24, 0x07	; 7
    120c:	16 95       	lsr	r17
    120e:	07 95       	ror	r16
    1210:	f7 94       	ror	r15
    1212:	e7 94       	ror	r14
    1214:	8a 95       	dec	r24
    1216:	d1 f7       	brne	.-12     	; 0x120c <__pack_f+0x164>
    1218:	05 c0       	rjmp	.+10     	; 0x1224 <__pack_f+0x17c>
    121a:	ee 24       	eor	r14, r14
    121c:	ff 24       	eor	r15, r15
    121e:	87 01       	movw	r16, r14
    1220:	ef ef       	ldi	r30, 0xFF	; 255
    1222:	f0 e0       	ldi	r31, 0x00	; 0
    1224:	6e 2f       	mov	r22, r30
    1226:	67 95       	ror	r22
    1228:	66 27       	eor	r22, r22
    122a:	67 95       	ror	r22
    122c:	90 2f       	mov	r25, r16
    122e:	9f 77       	andi	r25, 0x7F	; 127
    1230:	d7 94       	ror	r13
    1232:	dd 24       	eor	r13, r13
    1234:	d7 94       	ror	r13
    1236:	8e 2f       	mov	r24, r30
    1238:	86 95       	lsr	r24
    123a:	49 2f       	mov	r20, r25
    123c:	46 2b       	or	r20, r22
    123e:	58 2f       	mov	r21, r24
    1240:	5d 29       	or	r21, r13
    1242:	b7 01       	movw	r22, r14
    1244:	ca 01       	movw	r24, r20
    1246:	1f 91       	pop	r17
    1248:	0f 91       	pop	r16
    124a:	ff 90       	pop	r15
    124c:	ef 90       	pop	r14
    124e:	df 90       	pop	r13
    1250:	08 95       	ret

00001252 <__unpack_f>:
    1252:	fc 01       	movw	r30, r24
    1254:	db 01       	movw	r26, r22
    1256:	40 81       	ld	r20, Z
    1258:	51 81       	ldd	r21, Z+1	; 0x01
    125a:	22 81       	ldd	r18, Z+2	; 0x02
    125c:	62 2f       	mov	r22, r18
    125e:	6f 77       	andi	r22, 0x7F	; 127
    1260:	70 e0       	ldi	r23, 0x00	; 0
    1262:	22 1f       	adc	r18, r18
    1264:	22 27       	eor	r18, r18
    1266:	22 1f       	adc	r18, r18
    1268:	93 81       	ldd	r25, Z+3	; 0x03
    126a:	89 2f       	mov	r24, r25
    126c:	88 0f       	add	r24, r24
    126e:	82 2b       	or	r24, r18
    1270:	28 2f       	mov	r18, r24
    1272:	30 e0       	ldi	r19, 0x00	; 0
    1274:	99 1f       	adc	r25, r25
    1276:	99 27       	eor	r25, r25
    1278:	99 1f       	adc	r25, r25
    127a:	11 96       	adiw	r26, 0x01	; 1
    127c:	9c 93       	st	X, r25
    127e:	11 97       	sbiw	r26, 0x01	; 1
    1280:	21 15       	cp	r18, r1
    1282:	31 05       	cpc	r19, r1
    1284:	a9 f5       	brne	.+106    	; 0x12f0 <__unpack_f+0x9e>
    1286:	41 15       	cp	r20, r1
    1288:	51 05       	cpc	r21, r1
    128a:	61 05       	cpc	r22, r1
    128c:	71 05       	cpc	r23, r1
    128e:	11 f4       	brne	.+4      	; 0x1294 <__unpack_f+0x42>
    1290:	82 e0       	ldi	r24, 0x02	; 2
    1292:	37 c0       	rjmp	.+110    	; 0x1302 <__unpack_f+0xb0>
    1294:	82 e8       	ldi	r24, 0x82	; 130
    1296:	9f ef       	ldi	r25, 0xFF	; 255
    1298:	13 96       	adiw	r26, 0x03	; 3
    129a:	9c 93       	st	X, r25
    129c:	8e 93       	st	-X, r24
    129e:	12 97       	sbiw	r26, 0x02	; 2
    12a0:	9a 01       	movw	r18, r20
    12a2:	ab 01       	movw	r20, r22
    12a4:	67 e0       	ldi	r22, 0x07	; 7
    12a6:	22 0f       	add	r18, r18
    12a8:	33 1f       	adc	r19, r19
    12aa:	44 1f       	adc	r20, r20
    12ac:	55 1f       	adc	r21, r21
    12ae:	6a 95       	dec	r22
    12b0:	d1 f7       	brne	.-12     	; 0x12a6 <__unpack_f+0x54>
    12b2:	83 e0       	ldi	r24, 0x03	; 3
    12b4:	8c 93       	st	X, r24
    12b6:	0d c0       	rjmp	.+26     	; 0x12d2 <__unpack_f+0x80>
    12b8:	22 0f       	add	r18, r18
    12ba:	33 1f       	adc	r19, r19
    12bc:	44 1f       	adc	r20, r20
    12be:	55 1f       	adc	r21, r21
    12c0:	12 96       	adiw	r26, 0x02	; 2
    12c2:	8d 91       	ld	r24, X+
    12c4:	9c 91       	ld	r25, X
    12c6:	13 97       	sbiw	r26, 0x03	; 3
    12c8:	01 97       	sbiw	r24, 0x01	; 1
    12ca:	13 96       	adiw	r26, 0x03	; 3
    12cc:	9c 93       	st	X, r25
    12ce:	8e 93       	st	-X, r24
    12d0:	12 97       	sbiw	r26, 0x02	; 2
    12d2:	20 30       	cpi	r18, 0x00	; 0
    12d4:	80 e0       	ldi	r24, 0x00	; 0
    12d6:	38 07       	cpc	r19, r24
    12d8:	80 e0       	ldi	r24, 0x00	; 0
    12da:	48 07       	cpc	r20, r24
    12dc:	80 e4       	ldi	r24, 0x40	; 64
    12de:	58 07       	cpc	r21, r24
    12e0:	58 f3       	brcs	.-42     	; 0x12b8 <__unpack_f+0x66>
    12e2:	14 96       	adiw	r26, 0x04	; 4
    12e4:	2d 93       	st	X+, r18
    12e6:	3d 93       	st	X+, r19
    12e8:	4d 93       	st	X+, r20
    12ea:	5c 93       	st	X, r21
    12ec:	17 97       	sbiw	r26, 0x07	; 7
    12ee:	08 95       	ret
    12f0:	2f 3f       	cpi	r18, 0xFF	; 255
    12f2:	31 05       	cpc	r19, r1
    12f4:	79 f4       	brne	.+30     	; 0x1314 <__unpack_f+0xc2>
    12f6:	41 15       	cp	r20, r1
    12f8:	51 05       	cpc	r21, r1
    12fa:	61 05       	cpc	r22, r1
    12fc:	71 05       	cpc	r23, r1
    12fe:	19 f4       	brne	.+6      	; 0x1306 <__unpack_f+0xb4>
    1300:	84 e0       	ldi	r24, 0x04	; 4
    1302:	8c 93       	st	X, r24
    1304:	08 95       	ret
    1306:	64 ff       	sbrs	r22, 4
    1308:	03 c0       	rjmp	.+6      	; 0x1310 <__unpack_f+0xbe>
    130a:	81 e0       	ldi	r24, 0x01	; 1
    130c:	8c 93       	st	X, r24
    130e:	12 c0       	rjmp	.+36     	; 0x1334 <__unpack_f+0xe2>
    1310:	1c 92       	st	X, r1
    1312:	10 c0       	rjmp	.+32     	; 0x1334 <__unpack_f+0xe2>
    1314:	2f 57       	subi	r18, 0x7F	; 127
    1316:	30 40       	sbci	r19, 0x00	; 0
    1318:	13 96       	adiw	r26, 0x03	; 3
    131a:	3c 93       	st	X, r19
    131c:	2e 93       	st	-X, r18
    131e:	12 97       	sbiw	r26, 0x02	; 2
    1320:	83 e0       	ldi	r24, 0x03	; 3
    1322:	8c 93       	st	X, r24
    1324:	87 e0       	ldi	r24, 0x07	; 7
    1326:	44 0f       	add	r20, r20
    1328:	55 1f       	adc	r21, r21
    132a:	66 1f       	adc	r22, r22
    132c:	77 1f       	adc	r23, r23
    132e:	8a 95       	dec	r24
    1330:	d1 f7       	brne	.-12     	; 0x1326 <__unpack_f+0xd4>
    1332:	70 64       	ori	r23, 0x40	; 64
    1334:	14 96       	adiw	r26, 0x04	; 4
    1336:	4d 93       	st	X+, r20
    1338:	5d 93       	st	X+, r21
    133a:	6d 93       	st	X+, r22
    133c:	7c 93       	st	X, r23
    133e:	17 97       	sbiw	r26, 0x07	; 7
    1340:	08 95       	ret

00001342 <__fpcmp_parts_f>:
    1342:	1f 93       	push	r17
    1344:	dc 01       	movw	r26, r24
    1346:	fb 01       	movw	r30, r22
    1348:	9c 91       	ld	r25, X
    134a:	92 30       	cpi	r25, 0x02	; 2
    134c:	08 f4       	brcc	.+2      	; 0x1350 <__fpcmp_parts_f+0xe>
    134e:	47 c0       	rjmp	.+142    	; 0x13de <__fpcmp_parts_f+0x9c>
    1350:	80 81       	ld	r24, Z
    1352:	82 30       	cpi	r24, 0x02	; 2
    1354:	08 f4       	brcc	.+2      	; 0x1358 <__fpcmp_parts_f+0x16>
    1356:	43 c0       	rjmp	.+134    	; 0x13de <__fpcmp_parts_f+0x9c>
    1358:	94 30       	cpi	r25, 0x04	; 4
    135a:	51 f4       	brne	.+20     	; 0x1370 <__fpcmp_parts_f+0x2e>
    135c:	11 96       	adiw	r26, 0x01	; 1
    135e:	1c 91       	ld	r17, X
    1360:	84 30       	cpi	r24, 0x04	; 4
    1362:	99 f5       	brne	.+102    	; 0x13ca <__fpcmp_parts_f+0x88>
    1364:	81 81       	ldd	r24, Z+1	; 0x01
    1366:	68 2f       	mov	r22, r24
    1368:	70 e0       	ldi	r23, 0x00	; 0
    136a:	61 1b       	sub	r22, r17
    136c:	71 09       	sbc	r23, r1
    136e:	3f c0       	rjmp	.+126    	; 0x13ee <__fpcmp_parts_f+0xac>
    1370:	84 30       	cpi	r24, 0x04	; 4
    1372:	21 f0       	breq	.+8      	; 0x137c <__fpcmp_parts_f+0x3a>
    1374:	92 30       	cpi	r25, 0x02	; 2
    1376:	31 f4       	brne	.+12     	; 0x1384 <__fpcmp_parts_f+0x42>
    1378:	82 30       	cpi	r24, 0x02	; 2
    137a:	b9 f1       	breq	.+110    	; 0x13ea <__fpcmp_parts_f+0xa8>
    137c:	81 81       	ldd	r24, Z+1	; 0x01
    137e:	88 23       	and	r24, r24
    1380:	89 f1       	breq	.+98     	; 0x13e4 <__fpcmp_parts_f+0xa2>
    1382:	2d c0       	rjmp	.+90     	; 0x13de <__fpcmp_parts_f+0x9c>
    1384:	11 96       	adiw	r26, 0x01	; 1
    1386:	1c 91       	ld	r17, X
    1388:	11 97       	sbiw	r26, 0x01	; 1
    138a:	82 30       	cpi	r24, 0x02	; 2
    138c:	f1 f0       	breq	.+60     	; 0x13ca <__fpcmp_parts_f+0x88>
    138e:	81 81       	ldd	r24, Z+1	; 0x01
    1390:	18 17       	cp	r17, r24
    1392:	d9 f4       	brne	.+54     	; 0x13ca <__fpcmp_parts_f+0x88>
    1394:	12 96       	adiw	r26, 0x02	; 2
    1396:	2d 91       	ld	r18, X+
    1398:	3c 91       	ld	r19, X
    139a:	13 97       	sbiw	r26, 0x03	; 3
    139c:	82 81       	ldd	r24, Z+2	; 0x02
    139e:	93 81       	ldd	r25, Z+3	; 0x03
    13a0:	82 17       	cp	r24, r18
    13a2:	93 07       	cpc	r25, r19
    13a4:	94 f0       	brlt	.+36     	; 0x13ca <__fpcmp_parts_f+0x88>
    13a6:	28 17       	cp	r18, r24
    13a8:	39 07       	cpc	r19, r25
    13aa:	bc f0       	brlt	.+46     	; 0x13da <__fpcmp_parts_f+0x98>
    13ac:	14 96       	adiw	r26, 0x04	; 4
    13ae:	8d 91       	ld	r24, X+
    13b0:	9d 91       	ld	r25, X+
    13b2:	0d 90       	ld	r0, X+
    13b4:	bc 91       	ld	r27, X
    13b6:	a0 2d       	mov	r26, r0
    13b8:	24 81       	ldd	r18, Z+4	; 0x04
    13ba:	35 81       	ldd	r19, Z+5	; 0x05
    13bc:	46 81       	ldd	r20, Z+6	; 0x06
    13be:	57 81       	ldd	r21, Z+7	; 0x07
    13c0:	28 17       	cp	r18, r24
    13c2:	39 07       	cpc	r19, r25
    13c4:	4a 07       	cpc	r20, r26
    13c6:	5b 07       	cpc	r21, r27
    13c8:	18 f4       	brcc	.+6      	; 0x13d0 <__fpcmp_parts_f+0x8e>
    13ca:	11 23       	and	r17, r17
    13cc:	41 f0       	breq	.+16     	; 0x13de <__fpcmp_parts_f+0x9c>
    13ce:	0a c0       	rjmp	.+20     	; 0x13e4 <__fpcmp_parts_f+0xa2>
    13d0:	82 17       	cp	r24, r18
    13d2:	93 07       	cpc	r25, r19
    13d4:	a4 07       	cpc	r26, r20
    13d6:	b5 07       	cpc	r27, r21
    13d8:	40 f4       	brcc	.+16     	; 0x13ea <__fpcmp_parts_f+0xa8>
    13da:	11 23       	and	r17, r17
    13dc:	19 f0       	breq	.+6      	; 0x13e4 <__fpcmp_parts_f+0xa2>
    13de:	61 e0       	ldi	r22, 0x01	; 1
    13e0:	70 e0       	ldi	r23, 0x00	; 0
    13e2:	05 c0       	rjmp	.+10     	; 0x13ee <__fpcmp_parts_f+0xac>
    13e4:	6f ef       	ldi	r22, 0xFF	; 255
    13e6:	7f ef       	ldi	r23, 0xFF	; 255
    13e8:	02 c0       	rjmp	.+4      	; 0x13ee <__fpcmp_parts_f+0xac>
    13ea:	60 e0       	ldi	r22, 0x00	; 0
    13ec:	70 e0       	ldi	r23, 0x00	; 0
    13ee:	cb 01       	movw	r24, r22
    13f0:	1f 91       	pop	r17
    13f2:	08 95       	ret

000013f4 <__prologue_saves__>:
    13f4:	2f 92       	push	r2
    13f6:	3f 92       	push	r3
    13f8:	4f 92       	push	r4
    13fa:	5f 92       	push	r5
    13fc:	6f 92       	push	r6
    13fe:	7f 92       	push	r7
    1400:	8f 92       	push	r8
    1402:	9f 92       	push	r9
    1404:	af 92       	push	r10
    1406:	bf 92       	push	r11
    1408:	cf 92       	push	r12
    140a:	df 92       	push	r13
    140c:	ef 92       	push	r14
    140e:	ff 92       	push	r15
    1410:	0f 93       	push	r16
    1412:	1f 93       	push	r17
    1414:	cf 93       	push	r28
    1416:	df 93       	push	r29
    1418:	cd b7       	in	r28, 0x3d	; 61
    141a:	de b7       	in	r29, 0x3e	; 62
    141c:	ca 1b       	sub	r28, r26
    141e:	db 0b       	sbc	r29, r27
    1420:	0f b6       	in	r0, 0x3f	; 63
    1422:	f8 94       	cli
    1424:	de bf       	out	0x3e, r29	; 62
    1426:	0f be       	out	0x3f, r0	; 63
    1428:	cd bf       	out	0x3d, r28	; 61
    142a:	09 94       	ijmp

0000142c <__epilogue_restores__>:
    142c:	2a 88       	ldd	r2, Y+18	; 0x12
    142e:	39 88       	ldd	r3, Y+17	; 0x11
    1430:	48 88       	ldd	r4, Y+16	; 0x10
    1432:	5f 84       	ldd	r5, Y+15	; 0x0f
    1434:	6e 84       	ldd	r6, Y+14	; 0x0e
    1436:	7d 84       	ldd	r7, Y+13	; 0x0d
    1438:	8c 84       	ldd	r8, Y+12	; 0x0c
    143a:	9b 84       	ldd	r9, Y+11	; 0x0b
    143c:	aa 84       	ldd	r10, Y+10	; 0x0a
    143e:	b9 84       	ldd	r11, Y+9	; 0x09
    1440:	c8 84       	ldd	r12, Y+8	; 0x08
    1442:	df 80       	ldd	r13, Y+7	; 0x07
    1444:	ee 80       	ldd	r14, Y+6	; 0x06
    1446:	fd 80       	ldd	r15, Y+5	; 0x05
    1448:	0c 81       	ldd	r16, Y+4	; 0x04
    144a:	1b 81       	ldd	r17, Y+3	; 0x03
    144c:	aa 81       	ldd	r26, Y+2	; 0x02
    144e:	b9 81       	ldd	r27, Y+1	; 0x01
    1450:	ce 0f       	add	r28, r30
    1452:	d1 1d       	adc	r29, r1
    1454:	0f b6       	in	r0, 0x3f	; 63
    1456:	f8 94       	cli
    1458:	de bf       	out	0x3e, r29	; 62
    145a:	0f be       	out	0x3f, r0	; 63
    145c:	cd bf       	out	0x3d, r28	; 61
    145e:	ed 01       	movw	r28, r26
    1460:	08 95       	ret

00001462 <_exit>:
    1462:	f8 94       	cli

00001464 <__stop_program>:
    1464:	ff cf       	rjmp	.-2      	; 0x1464 <__stop_program>
