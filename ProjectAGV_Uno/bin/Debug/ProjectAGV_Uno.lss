
bin\Debug\ProjectAGV_Uno.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000108  00800100  00001f5e  00002012  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001f5e  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  00800208  00800208  0000211a  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  0000211a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .debug_aranges 000001c0  00000000  00000000  0000211d  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000002a9  00000000  00000000  000022dd  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002abf  00000000  00000000  00002586  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001517  00000000  00000000  00005045  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001a55  00000000  00000000  0000655c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000240  00000000  00000000  00007fb4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000436  00000000  00000000  000081f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009ce  00000000  00000000  0000862a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00008ff8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 a3 01 	jmp	0x346	; 0x346 <__vector_3>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 73 03 	jmp	0x6e6	; 0x6e6 <__vector_13>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 9e 03 	jmp	0x73c	; 0x73c <__vector_16>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
      74:	12 e0       	ldi	r17, 0x02	; 2
      76:	a8 e0       	ldi	r26, 0x08	; 8
      78:	b2 e0       	ldi	r27, 0x02	; 2
      7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
      7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
      7e:	a0 31       	cpi	r26, 0x10	; 16
      80:	b1 07       	cpc	r27, r17
      82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>

00000084 <__do_copy_data>:
      84:	12 e0       	ldi	r17, 0x02	; 2
      86:	a0 e0       	ldi	r26, 0x00	; 0
      88:	b1 e0       	ldi	r27, 0x01	; 1
      8a:	ee e5       	ldi	r30, 0x5E	; 94
      8c:	ff e1       	ldi	r31, 0x1F	; 31
      8e:	02 c0       	rjmp	.+4      	; 0x94 <.do_copy_data_start>

00000090 <.do_copy_data_loop>:
      90:	05 90       	lpm	r0, Z+
      92:	0d 92       	st	X+, r0

00000094 <.do_copy_data_start>:
      94:	a8 30       	cpi	r26, 0x08	; 8
      96:	b1 07       	cpc	r27, r17
      98:	d9 f7       	brne	.-10     	; 0x90 <.do_copy_data_loop>
      9a:	0e 94 2b 05 	call	0xa56	; 0xa56 <main>
      9e:	0c 94 ad 0f 	jmp	0x1f5a	; 0x1f5a <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <init>:
long int timer;
volatile int lengteklokje = 0;


void init(void)
{
      a6:	df 93       	push	r29
      a8:	cf 93       	push	r28
      aa:	cd b7       	in	r28, 0x3d	; 61
      ac:	de b7       	in	r29, 0x3e	; 62
    //DDR Reg:
    DDRC |= _BV(motorPin);
      ae:	a7 e2       	ldi	r26, 0x27	; 39
      b0:	b0 e0       	ldi	r27, 0x00	; 0
      b2:	e7 e2       	ldi	r30, 0x27	; 39
      b4:	f0 e0       	ldi	r31, 0x00	; 0
      b6:	80 81       	ld	r24, Z
      b8:	88 60       	ori	r24, 0x08	; 8
      ba:	8c 93       	st	X, r24
    DDRC |= _BV(bochtPin);
      bc:	a7 e2       	ldi	r26, 0x27	; 39
      be:	b0 e0       	ldi	r27, 0x00	; 0
      c0:	e7 e2       	ldi	r30, 0x27	; 39
      c2:	f0 e0       	ldi	r31, 0x00	; 0
      c4:	80 81       	ld	r24, Z
      c6:	84 60       	ori	r24, 0x04	; 4
      c8:	8c 93       	st	X, r24
    DDRC |= _BV(bochtPinL);
      ca:	a7 e2       	ldi	r26, 0x27	; 39
      cc:	b0 e0       	ldi	r27, 0x00	; 0
      ce:	e7 e2       	ldi	r30, 0x27	; 39
      d0:	f0 e0       	ldi	r31, 0x00	; 0
      d2:	80 81       	ld	r24, Z
      d4:	82 60       	ori	r24, 0x02	; 2
      d6:	8c 93       	st	X, r24
    DDRD |= _BV(buzzerPin);
      d8:	aa e2       	ldi	r26, 0x2A	; 42
      da:	b0 e0       	ldi	r27, 0x00	; 0
      dc:	ea e2       	ldi	r30, 0x2A	; 42
      de:	f0 e0       	ldi	r31, 0x00	; 0
      e0:	80 81       	ld	r24, Z
      e2:	82 60       	ori	r24, 0x02	; 2
      e4:	8c 93       	st	X, r24
    DDRD |= (1<<trig);
      e6:	aa e2       	ldi	r26, 0x2A	; 42
      e8:	b0 e0       	ldi	r27, 0x00	; 0
      ea:	ea e2       	ldi	r30, 0x2A	; 42
      ec:	f0 e0       	ldi	r31, 0x00	; 0
      ee:	80 81       	ld	r24, Z
      f0:	81 60       	ori	r24, 0x01	; 1
      f2:	8c 93       	st	X, r24

    //init pins:
    PORTB |= _BV(IrSen1);
      f4:	a5 e2       	ldi	r26, 0x25	; 37
      f6:	b0 e0       	ldi	r27, 0x00	; 0
      f8:	e5 e2       	ldi	r30, 0x25	; 37
      fa:	f0 e0       	ldi	r31, 0x00	; 0
      fc:	80 81       	ld	r24, Z
      fe:	82 60       	ori	r24, 0x02	; 2
     100:	8c 93       	st	X, r24
    PORTB |= _BV(IrSen2);
     102:	a5 e2       	ldi	r26, 0x25	; 37
     104:	b0 e0       	ldi	r27, 0x00	; 0
     106:	e5 e2       	ldi	r30, 0x25	; 37
     108:	f0 e0       	ldi	r31, 0x00	; 0
     10a:	80 81       	ld	r24, Z
     10c:	84 60       	ori	r24, 0x04	; 4
     10e:	8c 93       	st	X, r24


    //init PCINT
    PCICR |= (1 << PCIE0);
     110:	a8 e6       	ldi	r26, 0x68	; 104
     112:	b0 e0       	ldi	r27, 0x00	; 0
     114:	e8 e6       	ldi	r30, 0x68	; 104
     116:	f0 e0       	ldi	r31, 0x00	; 0
     118:	80 81       	ld	r24, Z
     11a:	81 60       	ori	r24, 0x01	; 1
     11c:	8c 93       	st	X, r24
    PCMSK0 |= ((1 << IrSen1) | (1 << IrSen2));
     11e:	ab e6       	ldi	r26, 0x6B	; 107
     120:	b0 e0       	ldi	r27, 0x00	; 0
     122:	eb e6       	ldi	r30, 0x6B	; 107
     124:	f0 e0       	ldi	r31, 0x00	; 0
     126:	80 81       	ld	r24, Z
     128:	86 60       	ori	r24, 0x06	; 6
     12a:	8c 93       	st	X, r24

    //timer1 init
    TIMSK1 |= TOIE1;
     12c:	af e6       	ldi	r26, 0x6F	; 111
     12e:	b0 e0       	ldi	r27, 0x00	; 0
     130:	ef e6       	ldi	r30, 0x6F	; 111
     132:	f0 e0       	ldi	r31, 0x00	; 0
     134:	80 81       	ld	r24, Z
     136:	8c 93       	st	X, r24
    TCCR1A = 0;
     138:	e0 e8       	ldi	r30, 0x80	; 128
     13a:	f0 e0       	ldi	r31, 0x00	; 0
     13c:	10 82       	st	Z, r1

    //timer0 init
    TCCR0A = 0;
     13e:	e4 e4       	ldi	r30, 0x44	; 68
     140:	f0 e0       	ldi	r31, 0x00	; 0
     142:	10 82       	st	Z, r1
    TCCR0B = (1 << CS00) | (0 << CS01) | (1 << CS02); //~61Hz
     144:	e5 e4       	ldi	r30, 0x45	; 69
     146:	f0 e0       	ldi	r31, 0x00	; 0
     148:	85 e0       	ldi	r24, 0x05	; 5
     14a:	80 83       	st	Z, r24
    TIMSK0 = (1 << TOIE0);
     14c:	ee e6       	ldi	r30, 0x6E	; 110
     14e:	f0 e0       	ldi	r31, 0x00	; 0
     150:	81 e0       	ldi	r24, 0x01	; 1
     152:	80 83       	st	Z, r24

    //init interrupt
    sei();
     154:	78 94       	sei
}
     156:	cf 91       	pop	r28
     158:	df 91       	pop	r29
     15a:	08 95       	ret

0000015c <buzzer>:

void buzzer(int freq, int aantal)
{
     15c:	df 93       	push	r29
     15e:	cf 93       	push	r28
     160:	cd b7       	in	r28, 0x3d	; 61
     162:	de b7       	in	r29, 0x3e	; 62
     164:	6e 97       	sbiw	r28, 0x1e	; 30
     166:	0f b6       	in	r0, 0x3f	; 63
     168:	f8 94       	cli
     16a:	de bf       	out	0x3e, r29	; 62
     16c:	0f be       	out	0x3f, r0	; 63
     16e:	cd bf       	out	0x3d, r28	; 61
     170:	9c 8f       	std	Y+28, r25	; 0x1c
     172:	8b 8f       	std	Y+27, r24	; 0x1b
     174:	7e 8f       	std	Y+30, r23	; 0x1e
     176:	6d 8f       	std	Y+29, r22	; 0x1d
    for(int i = 0; i < aantal; i++)
     178:	1a 8e       	std	Y+26, r1	; 0x1a
     17a:	19 8e       	std	Y+25, r1	; 0x19
     17c:	d3 c0       	rjmp	.+422    	; 0x324 <buzzer+0x1c8>
    {
        PORTD ^= _BV(buzzerPin);
     17e:	ab e2       	ldi	r26, 0x2B	; 43
     180:	b0 e0       	ldi	r27, 0x00	; 0
     182:	eb e2       	ldi	r30, 0x2B	; 43
     184:	f0 e0       	ldi	r31, 0x00	; 0
     186:	90 81       	ld	r25, Z
     188:	82 e0       	ldi	r24, 0x02	; 2
     18a:	89 27       	eor	r24, r25
     18c:	8c 93       	st	X, r24
        _delay_us(freq);
     18e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     190:	9c 8d       	ldd	r25, Y+28	; 0x1c
     192:	aa 27       	eor	r26, r26
     194:	97 fd       	sbrc	r25, 7
     196:	a0 95       	com	r26
     198:	ba 2f       	mov	r27, r26
     19a:	bc 01       	movw	r22, r24
     19c:	cd 01       	movw	r24, r26
     19e:	0e 94 b0 0c 	call	0x1960	; 0x1960 <__floatsisf>
     1a2:	dc 01       	movw	r26, r24
     1a4:	cb 01       	movw	r24, r22
     1a6:	8d 8b       	std	Y+21, r24	; 0x15
     1a8:	9e 8b       	std	Y+22, r25	; 0x16
     1aa:	af 8b       	std	Y+23, r26	; 0x17
     1ac:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     1ae:	6d 89       	ldd	r22, Y+21	; 0x15
     1b0:	7e 89       	ldd	r23, Y+22	; 0x16
     1b2:	8f 89       	ldd	r24, Y+23	; 0x17
     1b4:	98 8d       	ldd	r25, Y+24	; 0x18
     1b6:	2b ea       	ldi	r18, 0xAB	; 171
     1b8:	3a ea       	ldi	r19, 0xAA	; 170
     1ba:	4a ea       	ldi	r20, 0xAA	; 170
     1bc:	50 e4       	ldi	r21, 0x40	; 64
     1be:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <__mulsf3>
     1c2:	dc 01       	movw	r26, r24
     1c4:	cb 01       	movw	r24, r22
     1c6:	89 8b       	std	Y+17, r24	; 0x11
     1c8:	9a 8b       	std	Y+18, r25	; 0x12
     1ca:	ab 8b       	std	Y+19, r26	; 0x13
     1cc:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
     1ce:	69 89       	ldd	r22, Y+17	; 0x11
     1d0:	7a 89       	ldd	r23, Y+18	; 0x12
     1d2:	8b 89       	ldd	r24, Y+19	; 0x13
     1d4:	9c 89       	ldd	r25, Y+20	; 0x14
     1d6:	20 e0       	ldi	r18, 0x00	; 0
     1d8:	30 e0       	ldi	r19, 0x00	; 0
     1da:	40 e8       	ldi	r20, 0x80	; 128
     1dc:	5f e3       	ldi	r21, 0x3F	; 63
     1de:	0e 94 80 0c 	call	0x1900	; 0x1900 <__ltsf2>
     1e2:	88 23       	and	r24, r24
     1e4:	1c f4       	brge	.+6      	; 0x1ec <buzzer+0x90>
		__ticks = 1;
     1e6:	81 e0       	ldi	r24, 0x01	; 1
     1e8:	88 8b       	std	Y+16, r24	; 0x10
     1ea:	91 c0       	rjmp	.+290    	; 0x30e <buzzer+0x1b2>
	else if (__tmp > 255)
     1ec:	69 89       	ldd	r22, Y+17	; 0x11
     1ee:	7a 89       	ldd	r23, Y+18	; 0x12
     1f0:	8b 89       	ldd	r24, Y+19	; 0x13
     1f2:	9c 89       	ldd	r25, Y+20	; 0x14
     1f4:	20 e0       	ldi	r18, 0x00	; 0
     1f6:	30 e0       	ldi	r19, 0x00	; 0
     1f8:	4f e7       	ldi	r20, 0x7F	; 127
     1fa:	53 e4       	ldi	r21, 0x43	; 67
     1fc:	0e 94 20 0c 	call	0x1840	; 0x1840 <__gtsf2>
     200:	18 16       	cp	r1, r24
     202:	0c f0       	brlt	.+2      	; 0x206 <buzzer+0xaa>
     204:	7b c0       	rjmp	.+246    	; 0x2fc <buzzer+0x1a0>
	{
		_delay_ms(__us / 1000.0);
     206:	6d 89       	ldd	r22, Y+21	; 0x15
     208:	7e 89       	ldd	r23, Y+22	; 0x16
     20a:	8f 89       	ldd	r24, Y+23	; 0x17
     20c:	98 8d       	ldd	r25, Y+24	; 0x18
     20e:	20 e0       	ldi	r18, 0x00	; 0
     210:	30 e0       	ldi	r19, 0x00	; 0
     212:	4a e7       	ldi	r20, 0x7A	; 122
     214:	54 e4       	ldi	r21, 0x44	; 68
     216:	0e 94 74 0b 	call	0x16e8	; 0x16e8 <__divsf3>
     21a:	dc 01       	movw	r26, r24
     21c:	cb 01       	movw	r24, r22
     21e:	8c 87       	std	Y+12, r24	; 0x0c
     220:	9d 87       	std	Y+13, r25	; 0x0d
     222:	ae 87       	std	Y+14, r26	; 0x0e
     224:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     226:	6c 85       	ldd	r22, Y+12	; 0x0c
     228:	7d 85       	ldd	r23, Y+13	; 0x0d
     22a:	8e 85       	ldd	r24, Y+14	; 0x0e
     22c:	9f 85       	ldd	r25, Y+15	; 0x0f
     22e:	20 e0       	ldi	r18, 0x00	; 0
     230:	30 e0       	ldi	r19, 0x00	; 0
     232:	4a e7       	ldi	r20, 0x7A	; 122
     234:	55 e4       	ldi	r21, 0x45	; 69
     236:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <__mulsf3>
     23a:	dc 01       	movw	r26, r24
     23c:	cb 01       	movw	r24, r22
     23e:	88 87       	std	Y+8, r24	; 0x08
     240:	99 87       	std	Y+9, r25	; 0x09
     242:	aa 87       	std	Y+10, r26	; 0x0a
     244:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
     246:	68 85       	ldd	r22, Y+8	; 0x08
     248:	79 85       	ldd	r23, Y+9	; 0x09
     24a:	8a 85       	ldd	r24, Y+10	; 0x0a
     24c:	9b 85       	ldd	r25, Y+11	; 0x0b
     24e:	20 e0       	ldi	r18, 0x00	; 0
     250:	30 e0       	ldi	r19, 0x00	; 0
     252:	40 e8       	ldi	r20, 0x80	; 128
     254:	5f e3       	ldi	r21, 0x3F	; 63
     256:	0e 94 80 0c 	call	0x1900	; 0x1900 <__ltsf2>
     25a:	88 23       	and	r24, r24
     25c:	2c f4       	brge	.+10     	; 0x268 <buzzer+0x10c>
		__ticks = 1;
     25e:	81 e0       	ldi	r24, 0x01	; 1
     260:	90 e0       	ldi	r25, 0x00	; 0
     262:	9f 83       	std	Y+7, r25	; 0x07
     264:	8e 83       	std	Y+6, r24	; 0x06
     266:	3f c0       	rjmp	.+126    	; 0x2e6 <buzzer+0x18a>
	else if (__tmp > 65535)
     268:	68 85       	ldd	r22, Y+8	; 0x08
     26a:	79 85       	ldd	r23, Y+9	; 0x09
     26c:	8a 85       	ldd	r24, Y+10	; 0x0a
     26e:	9b 85       	ldd	r25, Y+11	; 0x0b
     270:	20 e0       	ldi	r18, 0x00	; 0
     272:	3f ef       	ldi	r19, 0xFF	; 255
     274:	4f e7       	ldi	r20, 0x7F	; 127
     276:	57 e4       	ldi	r21, 0x47	; 71
     278:	0e 94 20 0c 	call	0x1840	; 0x1840 <__gtsf2>
     27c:	18 16       	cp	r1, r24
     27e:	4c f5       	brge	.+82     	; 0x2d2 <buzzer+0x176>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     280:	6c 85       	ldd	r22, Y+12	; 0x0c
     282:	7d 85       	ldd	r23, Y+13	; 0x0d
     284:	8e 85       	ldd	r24, Y+14	; 0x0e
     286:	9f 85       	ldd	r25, Y+15	; 0x0f
     288:	20 e0       	ldi	r18, 0x00	; 0
     28a:	30 e0       	ldi	r19, 0x00	; 0
     28c:	40 e2       	ldi	r20, 0x20	; 32
     28e:	51 e4       	ldi	r21, 0x41	; 65
     290:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <__mulsf3>
     294:	dc 01       	movw	r26, r24
     296:	cb 01       	movw	r24, r22
     298:	bc 01       	movw	r22, r24
     29a:	cd 01       	movw	r24, r26
     29c:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixunssfsi>
     2a0:	dc 01       	movw	r26, r24
     2a2:	cb 01       	movw	r24, r22
     2a4:	9f 83       	std	Y+7, r25	; 0x07
     2a6:	8e 83       	std	Y+6, r24	; 0x06
     2a8:	0f c0       	rjmp	.+30     	; 0x2c8 <buzzer+0x16c>
     2aa:	80 e9       	ldi	r24, 0x90	; 144
     2ac:	91 e0       	ldi	r25, 0x01	; 1
     2ae:	9d 83       	std	Y+5, r25	; 0x05
     2b0:	8c 83       	std	Y+4, r24	; 0x04
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     2b2:	8c 81       	ldd	r24, Y+4	; 0x04
     2b4:	9d 81       	ldd	r25, Y+5	; 0x05
     2b6:	01 97       	sbiw	r24, 0x01	; 1
     2b8:	f1 f7       	brne	.-4      	; 0x2b6 <buzzer+0x15a>
     2ba:	9d 83       	std	Y+5, r25	; 0x05
     2bc:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     2be:	8e 81       	ldd	r24, Y+6	; 0x06
     2c0:	9f 81       	ldd	r25, Y+7	; 0x07
     2c2:	01 97       	sbiw	r24, 0x01	; 1
     2c4:	9f 83       	std	Y+7, r25	; 0x07
     2c6:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     2c8:	8e 81       	ldd	r24, Y+6	; 0x06
     2ca:	9f 81       	ldd	r25, Y+7	; 0x07
     2cc:	00 97       	sbiw	r24, 0x00	; 0
     2ce:	69 f7       	brne	.-38     	; 0x2aa <buzzer+0x14e>
     2d0:	24 c0       	rjmp	.+72     	; 0x31a <buzzer+0x1be>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     2d2:	68 85       	ldd	r22, Y+8	; 0x08
     2d4:	79 85       	ldd	r23, Y+9	; 0x09
     2d6:	8a 85       	ldd	r24, Y+10	; 0x0a
     2d8:	9b 85       	ldd	r25, Y+11	; 0x0b
     2da:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixunssfsi>
     2de:	dc 01       	movw	r26, r24
     2e0:	cb 01       	movw	r24, r22
     2e2:	9f 83       	std	Y+7, r25	; 0x07
     2e4:	8e 83       	std	Y+6, r24	; 0x06
     2e6:	8e 81       	ldd	r24, Y+6	; 0x06
     2e8:	9f 81       	ldd	r25, Y+7	; 0x07
     2ea:	9b 83       	std	Y+3, r25	; 0x03
     2ec:	8a 83       	std	Y+2, r24	; 0x02
     2ee:	8a 81       	ldd	r24, Y+2	; 0x02
     2f0:	9b 81       	ldd	r25, Y+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	f1 f7       	brne	.-4      	; 0x2f2 <buzzer+0x196>
     2f6:	9b 83       	std	Y+3, r25	; 0x03
     2f8:	8a 83       	std	Y+2, r24	; 0x02
     2fa:	0f c0       	rjmp	.+30     	; 0x31a <buzzer+0x1be>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     2fc:	69 89       	ldd	r22, Y+17	; 0x11
     2fe:	7a 89       	ldd	r23, Y+18	; 0x12
     300:	8b 89       	ldd	r24, Y+19	; 0x13
     302:	9c 89       	ldd	r25, Y+20	; 0x14
     304:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixunssfsi>
     308:	dc 01       	movw	r26, r24
     30a:	cb 01       	movw	r24, r22
     30c:	88 8b       	std	Y+16, r24	; 0x10
     30e:	88 89       	ldd	r24, Y+16	; 0x10
     310:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     312:	89 81       	ldd	r24, Y+1	; 0x01
     314:	8a 95       	dec	r24
     316:	f1 f7       	brne	.-4      	; 0x314 <buzzer+0x1b8>
     318:	89 83       	std	Y+1, r24	; 0x01
    sei();
}

void buzzer(int freq, int aantal)
{
    for(int i = 0; i < aantal; i++)
     31a:	89 8d       	ldd	r24, Y+25	; 0x19
     31c:	9a 8d       	ldd	r25, Y+26	; 0x1a
     31e:	01 96       	adiw	r24, 0x01	; 1
     320:	9a 8f       	std	Y+26, r25	; 0x1a
     322:	89 8f       	std	Y+25, r24	; 0x19
     324:	29 8d       	ldd	r18, Y+25	; 0x19
     326:	3a 8d       	ldd	r19, Y+26	; 0x1a
     328:	8d 8d       	ldd	r24, Y+29	; 0x1d
     32a:	9e 8d       	ldd	r25, Y+30	; 0x1e
     32c:	28 17       	cp	r18, r24
     32e:	39 07       	cpc	r19, r25
     330:	0c f4       	brge	.+2      	; 0x334 <buzzer+0x1d8>
     332:	25 cf       	rjmp	.-438    	; 0x17e <buzzer+0x22>
    {
        PORTD ^= _BV(buzzerPin);
        _delay_us(freq);

    }
}
     334:	6e 96       	adiw	r28, 0x1e	; 30
     336:	0f b6       	in	r0, 0x3f	; 63
     338:	f8 94       	cli
     33a:	de bf       	out	0x3e, r29	; 62
     33c:	0f be       	out	0x3f, r0	; 63
     33e:	cd bf       	out	0x3d, r28	; 61
     340:	cf 91       	pop	r28
     342:	df 91       	pop	r29
     344:	08 95       	ret

00000346 <__vector_3>:

ISR(PCINT0_vect) //IR sensoren interrupt
{
     346:	1f 92       	push	r1
     348:	0f 92       	push	r0
     34a:	0f b6       	in	r0, 0x3f	; 63
     34c:	0f 92       	push	r0
     34e:	11 24       	eor	r1, r1
     350:	2f 93       	push	r18
     352:	3f 93       	push	r19
     354:	4f 93       	push	r20
     356:	5f 93       	push	r21
     358:	6f 93       	push	r22
     35a:	7f 93       	push	r23
     35c:	8f 93       	push	r24
     35e:	9f 93       	push	r25
     360:	af 93       	push	r26
     362:	bf 93       	push	r27
     364:	ef 93       	push	r30
     366:	ff 93       	push	r31
     368:	df 93       	push	r29
     36a:	cf 93       	push	r28
     36c:	cd b7       	in	r28, 0x3d	; 61
     36e:	de b7       	in	r29, 0x3e	; 62
     370:	aa 97       	sbiw	r28, 0x2a	; 42
     372:	de bf       	out	0x3e, r29	; 62
     374:	cd bf       	out	0x3d, r28	; 61
     376:	80 e0       	ldi	r24, 0x00	; 0
     378:	90 e0       	ldi	r25, 0x00	; 0
     37a:	a8 ec       	ldi	r26, 0xC8	; 200
     37c:	b1 e4       	ldi	r27, 0x41	; 65
     37e:	8f a3       	std	Y+39, r24	; 0x27
     380:	98 a7       	std	Y+40, r25	; 0x28
     382:	a9 a7       	std	Y+41, r26	; 0x29
     384:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     386:	6f a1       	ldd	r22, Y+39	; 0x27
     388:	78 a5       	ldd	r23, Y+40	; 0x28
     38a:	89 a5       	ldd	r24, Y+41	; 0x29
     38c:	9a a5       	ldd	r25, Y+42	; 0x2a
     38e:	20 e0       	ldi	r18, 0x00	; 0
     390:	30 e0       	ldi	r19, 0x00	; 0
     392:	4a e7       	ldi	r20, 0x7A	; 122
     394:	55 e4       	ldi	r21, 0x45	; 69
     396:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <__mulsf3>
     39a:	dc 01       	movw	r26, r24
     39c:	cb 01       	movw	r24, r22
     39e:	8b a3       	std	Y+35, r24	; 0x23
     3a0:	9c a3       	std	Y+36, r25	; 0x24
     3a2:	ad a3       	std	Y+37, r26	; 0x25
     3a4:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     3a6:	6b a1       	ldd	r22, Y+35	; 0x23
     3a8:	7c a1       	ldd	r23, Y+36	; 0x24
     3aa:	8d a1       	ldd	r24, Y+37	; 0x25
     3ac:	9e a1       	ldd	r25, Y+38	; 0x26
     3ae:	20 e0       	ldi	r18, 0x00	; 0
     3b0:	30 e0       	ldi	r19, 0x00	; 0
     3b2:	40 e8       	ldi	r20, 0x80	; 128
     3b4:	5f e3       	ldi	r21, 0x3F	; 63
     3b6:	0e 94 80 0c 	call	0x1900	; 0x1900 <__ltsf2>
     3ba:	88 23       	and	r24, r24
     3bc:	2c f4       	brge	.+10     	; 0x3c8 <__vector_3+0x82>
		__ticks = 1;
     3be:	81 e0       	ldi	r24, 0x01	; 1
     3c0:	90 e0       	ldi	r25, 0x00	; 0
     3c2:	9a a3       	std	Y+34, r25	; 0x22
     3c4:	89 a3       	std	Y+33, r24	; 0x21
     3c6:	3f c0       	rjmp	.+126    	; 0x446 <__vector_3+0x100>
	else if (__tmp > 65535)
     3c8:	6b a1       	ldd	r22, Y+35	; 0x23
     3ca:	7c a1       	ldd	r23, Y+36	; 0x24
     3cc:	8d a1       	ldd	r24, Y+37	; 0x25
     3ce:	9e a1       	ldd	r25, Y+38	; 0x26
     3d0:	20 e0       	ldi	r18, 0x00	; 0
     3d2:	3f ef       	ldi	r19, 0xFF	; 255
     3d4:	4f e7       	ldi	r20, 0x7F	; 127
     3d6:	57 e4       	ldi	r21, 0x47	; 71
     3d8:	0e 94 20 0c 	call	0x1840	; 0x1840 <__gtsf2>
     3dc:	18 16       	cp	r1, r24
     3de:	4c f5       	brge	.+82     	; 0x432 <__vector_3+0xec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     3e0:	6f a1       	ldd	r22, Y+39	; 0x27
     3e2:	78 a5       	ldd	r23, Y+40	; 0x28
     3e4:	89 a5       	ldd	r24, Y+41	; 0x29
     3e6:	9a a5       	ldd	r25, Y+42	; 0x2a
     3e8:	20 e0       	ldi	r18, 0x00	; 0
     3ea:	30 e0       	ldi	r19, 0x00	; 0
     3ec:	40 e2       	ldi	r20, 0x20	; 32
     3ee:	51 e4       	ldi	r21, 0x41	; 65
     3f0:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <__mulsf3>
     3f4:	dc 01       	movw	r26, r24
     3f6:	cb 01       	movw	r24, r22
     3f8:	bc 01       	movw	r22, r24
     3fa:	cd 01       	movw	r24, r26
     3fc:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixunssfsi>
     400:	dc 01       	movw	r26, r24
     402:	cb 01       	movw	r24, r22
     404:	9a a3       	std	Y+34, r25	; 0x22
     406:	89 a3       	std	Y+33, r24	; 0x21
     408:	0f c0       	rjmp	.+30     	; 0x428 <__vector_3+0xe2>
     40a:	80 e9       	ldi	r24, 0x90	; 144
     40c:	91 e0       	ldi	r25, 0x01	; 1
     40e:	98 a3       	std	Y+32, r25	; 0x20
     410:	8f 8f       	std	Y+31, r24	; 0x1f
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     412:	8f 8d       	ldd	r24, Y+31	; 0x1f
     414:	98 a1       	ldd	r25, Y+32	; 0x20
     416:	01 97       	sbiw	r24, 0x01	; 1
     418:	f1 f7       	brne	.-4      	; 0x416 <__vector_3+0xd0>
     41a:	98 a3       	std	Y+32, r25	; 0x20
     41c:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     41e:	89 a1       	ldd	r24, Y+33	; 0x21
     420:	9a a1       	ldd	r25, Y+34	; 0x22
     422:	01 97       	sbiw	r24, 0x01	; 1
     424:	9a a3       	std	Y+34, r25	; 0x22
     426:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     428:	89 a1       	ldd	r24, Y+33	; 0x21
     42a:	9a a1       	ldd	r25, Y+34	; 0x22
     42c:	00 97       	sbiw	r24, 0x00	; 0
     42e:	69 f7       	brne	.-38     	; 0x40a <__vector_3+0xc4>
     430:	14 c0       	rjmp	.+40     	; 0x45a <__vector_3+0x114>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     432:	6b a1       	ldd	r22, Y+35	; 0x23
     434:	7c a1       	ldd	r23, Y+36	; 0x24
     436:	8d a1       	ldd	r24, Y+37	; 0x25
     438:	9e a1       	ldd	r25, Y+38	; 0x26
     43a:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixunssfsi>
     43e:	dc 01       	movw	r26, r24
     440:	cb 01       	movw	r24, r22
     442:	9a a3       	std	Y+34, r25	; 0x22
     444:	89 a3       	std	Y+33, r24	; 0x21
     446:	89 a1       	ldd	r24, Y+33	; 0x21
     448:	9a a1       	ldd	r25, Y+34	; 0x22
     44a:	9e 8f       	std	Y+30, r25	; 0x1e
     44c:	8d 8f       	std	Y+29, r24	; 0x1d
     44e:	8d 8d       	ldd	r24, Y+29	; 0x1d
     450:	9e 8d       	ldd	r25, Y+30	; 0x1e
     452:	01 97       	sbiw	r24, 0x01	; 1
     454:	f1 f7       	brne	.-4      	; 0x452 <__vector_3+0x10c>
     456:	9e 8f       	std	Y+30, r25	; 0x1e
     458:	8d 8f       	std	Y+29, r24	; 0x1d
    _delay_ms(25);
    if(bit_is_clear(PINB, IrSen1))
     45a:	e3 e2       	ldi	r30, 0x23	; 35
     45c:	f0 e0       	ldi	r31, 0x00	; 0
     45e:	80 81       	ld	r24, Z
     460:	88 2f       	mov	r24, r24
     462:	90 e0       	ldi	r25, 0x00	; 0
     464:	82 70       	andi	r24, 0x02	; 2
     466:	90 70       	andi	r25, 0x00	; 0
     468:	00 97       	sbiw	r24, 0x00	; 0
     46a:	09 f0       	breq	.+2      	; 0x46e <__vector_3+0x128>
     46c:	8e c0       	rjmp	.+284    	; 0x58a <__vector_3+0x244>
    {
        if(aanwaarde != 1)
     46e:	80 91 08 02 	lds	r24, 0x0208
     472:	90 91 09 02 	lds	r25, 0x0209
     476:	81 30       	cpi	r24, 0x01	; 1
     478:	91 05       	cpc	r25, r1
     47a:	09 f4       	brne	.+2      	; 0x47e <__vector_3+0x138>
     47c:	86 c0       	rjmp	.+268    	; 0x58a <__vector_3+0x244>
        {
            PORTC &= ~_BV(motorPin);
     47e:	a8 e2       	ldi	r26, 0x28	; 40
     480:	b0 e0       	ldi	r27, 0x00	; 0
     482:	e8 e2       	ldi	r30, 0x28	; 40
     484:	f0 e0       	ldi	r31, 0x00	; 0
     486:	80 81       	ld	r24, Z
     488:	87 7f       	andi	r24, 0xF7	; 247
     48a:	8c 93       	st	X, r24
            buzzer(350, 1000);
     48c:	8e e5       	ldi	r24, 0x5E	; 94
     48e:	91 e0       	ldi	r25, 0x01	; 1
     490:	68 ee       	ldi	r22, 0xE8	; 232
     492:	73 e0       	ldi	r23, 0x03	; 3
     494:	0e 94 ae 00 	call	0x15c	; 0x15c <buzzer>
     498:	80 e0       	ldi	r24, 0x00	; 0
     49a:	90 e0       	ldi	r25, 0x00	; 0
     49c:	aa ef       	ldi	r26, 0xFA	; 250
     49e:	b3 e4       	ldi	r27, 0x43	; 67
     4a0:	89 8f       	std	Y+25, r24	; 0x19
     4a2:	9a 8f       	std	Y+26, r25	; 0x1a
     4a4:	ab 8f       	std	Y+27, r26	; 0x1b
     4a6:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     4a8:	69 8d       	ldd	r22, Y+25	; 0x19
     4aa:	7a 8d       	ldd	r23, Y+26	; 0x1a
     4ac:	8b 8d       	ldd	r24, Y+27	; 0x1b
     4ae:	9c 8d       	ldd	r25, Y+28	; 0x1c
     4b0:	20 e0       	ldi	r18, 0x00	; 0
     4b2:	30 e0       	ldi	r19, 0x00	; 0
     4b4:	4a e7       	ldi	r20, 0x7A	; 122
     4b6:	55 e4       	ldi	r21, 0x45	; 69
     4b8:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <__mulsf3>
     4bc:	dc 01       	movw	r26, r24
     4be:	cb 01       	movw	r24, r22
     4c0:	8d 8b       	std	Y+21, r24	; 0x15
     4c2:	9e 8b       	std	Y+22, r25	; 0x16
     4c4:	af 8b       	std	Y+23, r26	; 0x17
     4c6:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     4c8:	6d 89       	ldd	r22, Y+21	; 0x15
     4ca:	7e 89       	ldd	r23, Y+22	; 0x16
     4cc:	8f 89       	ldd	r24, Y+23	; 0x17
     4ce:	98 8d       	ldd	r25, Y+24	; 0x18
     4d0:	20 e0       	ldi	r18, 0x00	; 0
     4d2:	30 e0       	ldi	r19, 0x00	; 0
     4d4:	40 e8       	ldi	r20, 0x80	; 128
     4d6:	5f e3       	ldi	r21, 0x3F	; 63
     4d8:	0e 94 80 0c 	call	0x1900	; 0x1900 <__ltsf2>
     4dc:	88 23       	and	r24, r24
     4de:	2c f4       	brge	.+10     	; 0x4ea <__vector_3+0x1a4>
		__ticks = 1;
     4e0:	81 e0       	ldi	r24, 0x01	; 1
     4e2:	90 e0       	ldi	r25, 0x00	; 0
     4e4:	9c 8b       	std	Y+20, r25	; 0x14
     4e6:	8b 8b       	std	Y+19, r24	; 0x13
     4e8:	3f c0       	rjmp	.+126    	; 0x568 <__vector_3+0x222>
	else if (__tmp > 65535)
     4ea:	6d 89       	ldd	r22, Y+21	; 0x15
     4ec:	7e 89       	ldd	r23, Y+22	; 0x16
     4ee:	8f 89       	ldd	r24, Y+23	; 0x17
     4f0:	98 8d       	ldd	r25, Y+24	; 0x18
     4f2:	20 e0       	ldi	r18, 0x00	; 0
     4f4:	3f ef       	ldi	r19, 0xFF	; 255
     4f6:	4f e7       	ldi	r20, 0x7F	; 127
     4f8:	57 e4       	ldi	r21, 0x47	; 71
     4fa:	0e 94 20 0c 	call	0x1840	; 0x1840 <__gtsf2>
     4fe:	18 16       	cp	r1, r24
     500:	4c f5       	brge	.+82     	; 0x554 <__vector_3+0x20e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     502:	69 8d       	ldd	r22, Y+25	; 0x19
     504:	7a 8d       	ldd	r23, Y+26	; 0x1a
     506:	8b 8d       	ldd	r24, Y+27	; 0x1b
     508:	9c 8d       	ldd	r25, Y+28	; 0x1c
     50a:	20 e0       	ldi	r18, 0x00	; 0
     50c:	30 e0       	ldi	r19, 0x00	; 0
     50e:	40 e2       	ldi	r20, 0x20	; 32
     510:	51 e4       	ldi	r21, 0x41	; 65
     512:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <__mulsf3>
     516:	dc 01       	movw	r26, r24
     518:	cb 01       	movw	r24, r22
     51a:	bc 01       	movw	r22, r24
     51c:	cd 01       	movw	r24, r26
     51e:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixunssfsi>
     522:	dc 01       	movw	r26, r24
     524:	cb 01       	movw	r24, r22
     526:	9c 8b       	std	Y+20, r25	; 0x14
     528:	8b 8b       	std	Y+19, r24	; 0x13
     52a:	0f c0       	rjmp	.+30     	; 0x54a <__vector_3+0x204>
     52c:	80 e9       	ldi	r24, 0x90	; 144
     52e:	91 e0       	ldi	r25, 0x01	; 1
     530:	9a 8b       	std	Y+18, r25	; 0x12
     532:	89 8b       	std	Y+17, r24	; 0x11
     534:	89 89       	ldd	r24, Y+17	; 0x11
     536:	9a 89       	ldd	r25, Y+18	; 0x12
     538:	01 97       	sbiw	r24, 0x01	; 1
     53a:	f1 f7       	brne	.-4      	; 0x538 <__vector_3+0x1f2>
     53c:	9a 8b       	std	Y+18, r25	; 0x12
     53e:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     540:	8b 89       	ldd	r24, Y+19	; 0x13
     542:	9c 89       	ldd	r25, Y+20	; 0x14
     544:	01 97       	sbiw	r24, 0x01	; 1
     546:	9c 8b       	std	Y+20, r25	; 0x14
     548:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     54a:	8b 89       	ldd	r24, Y+19	; 0x13
     54c:	9c 89       	ldd	r25, Y+20	; 0x14
     54e:	00 97       	sbiw	r24, 0x00	; 0
     550:	69 f7       	brne	.-38     	; 0x52c <__vector_3+0x1e6>
     552:	14 c0       	rjmp	.+40     	; 0x57c <__vector_3+0x236>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     554:	6d 89       	ldd	r22, Y+21	; 0x15
     556:	7e 89       	ldd	r23, Y+22	; 0x16
     558:	8f 89       	ldd	r24, Y+23	; 0x17
     55a:	98 8d       	ldd	r25, Y+24	; 0x18
     55c:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixunssfsi>
     560:	dc 01       	movw	r26, r24
     562:	cb 01       	movw	r24, r22
     564:	9c 8b       	std	Y+20, r25	; 0x14
     566:	8b 8b       	std	Y+19, r24	; 0x13
     568:	8b 89       	ldd	r24, Y+19	; 0x13
     56a:	9c 89       	ldd	r25, Y+20	; 0x14
     56c:	98 8b       	std	Y+16, r25	; 0x10
     56e:	8f 87       	std	Y+15, r24	; 0x0f
     570:	8f 85       	ldd	r24, Y+15	; 0x0f
     572:	98 89       	ldd	r25, Y+16	; 0x10
     574:	01 97       	sbiw	r24, 0x01	; 1
     576:	f1 f7       	brne	.-4      	; 0x574 <__vector_3+0x22e>
     578:	98 8b       	std	Y+16, r25	; 0x10
     57a:	8f 87       	std	Y+15, r24	; 0x0f
            _delay_ms(500);
            PORTC |= _BV(motorPin);
     57c:	a8 e2       	ldi	r26, 0x28	; 40
     57e:	b0 e0       	ldi	r27, 0x00	; 0
     580:	e8 e2       	ldi	r30, 0x28	; 40
     582:	f0 e0       	ldi	r31, 0x00	; 0
     584:	80 81       	ld	r24, Z
     586:	88 60       	ori	r24, 0x08	; 8
     588:	8c 93       	st	X, r24
        }

    }
    if(bit_is_clear(PINB, IrSen2))
     58a:	e3 e2       	ldi	r30, 0x23	; 35
     58c:	f0 e0       	ldi	r31, 0x00	; 0
     58e:	80 81       	ld	r24, Z
     590:	88 2f       	mov	r24, r24
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	84 70       	andi	r24, 0x04	; 4
     596:	90 70       	andi	r25, 0x00	; 0
     598:	00 97       	sbiw	r24, 0x00	; 0
     59a:	09 f0       	breq	.+2      	; 0x59e <__vector_3+0x258>
     59c:	8e c0       	rjmp	.+284    	; 0x6ba <__vector_3+0x374>
    {
        if(aanwaarde != 2)
     59e:	80 91 08 02 	lds	r24, 0x0208
     5a2:	90 91 09 02 	lds	r25, 0x0209
     5a6:	82 30       	cpi	r24, 0x02	; 2
     5a8:	91 05       	cpc	r25, r1
     5aa:	09 f4       	brne	.+2      	; 0x5ae <__vector_3+0x268>
     5ac:	86 c0       	rjmp	.+268    	; 0x6ba <__vector_3+0x374>
        {
            PORTC &= ~_BV(motorPin);
     5ae:	a8 e2       	ldi	r26, 0x28	; 40
     5b0:	b0 e0       	ldi	r27, 0x00	; 0
     5b2:	e8 e2       	ldi	r30, 0x28	; 40
     5b4:	f0 e0       	ldi	r31, 0x00	; 0
     5b6:	80 81       	ld	r24, Z
     5b8:	87 7f       	andi	r24, 0xF7	; 247
     5ba:	8c 93       	st	X, r24
            buzzer(350, 1000);
     5bc:	8e e5       	ldi	r24, 0x5E	; 94
     5be:	91 e0       	ldi	r25, 0x01	; 1
     5c0:	68 ee       	ldi	r22, 0xE8	; 232
     5c2:	73 e0       	ldi	r23, 0x03	; 3
     5c4:	0e 94 ae 00 	call	0x15c	; 0x15c <buzzer>
     5c8:	80 e0       	ldi	r24, 0x00	; 0
     5ca:	90 e0       	ldi	r25, 0x00	; 0
     5cc:	aa ef       	ldi	r26, 0xFA	; 250
     5ce:	b3 e4       	ldi	r27, 0x43	; 67
     5d0:	8b 87       	std	Y+11, r24	; 0x0b
     5d2:	9c 87       	std	Y+12, r25	; 0x0c
     5d4:	ad 87       	std	Y+13, r26	; 0x0d
     5d6:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     5d8:	6b 85       	ldd	r22, Y+11	; 0x0b
     5da:	7c 85       	ldd	r23, Y+12	; 0x0c
     5dc:	8d 85       	ldd	r24, Y+13	; 0x0d
     5de:	9e 85       	ldd	r25, Y+14	; 0x0e
     5e0:	20 e0       	ldi	r18, 0x00	; 0
     5e2:	30 e0       	ldi	r19, 0x00	; 0
     5e4:	4a e7       	ldi	r20, 0x7A	; 122
     5e6:	55 e4       	ldi	r21, 0x45	; 69
     5e8:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <__mulsf3>
     5ec:	dc 01       	movw	r26, r24
     5ee:	cb 01       	movw	r24, r22
     5f0:	8f 83       	std	Y+7, r24	; 0x07
     5f2:	98 87       	std	Y+8, r25	; 0x08
     5f4:	a9 87       	std	Y+9, r26	; 0x09
     5f6:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     5f8:	6f 81       	ldd	r22, Y+7	; 0x07
     5fa:	78 85       	ldd	r23, Y+8	; 0x08
     5fc:	89 85       	ldd	r24, Y+9	; 0x09
     5fe:	9a 85       	ldd	r25, Y+10	; 0x0a
     600:	20 e0       	ldi	r18, 0x00	; 0
     602:	30 e0       	ldi	r19, 0x00	; 0
     604:	40 e8       	ldi	r20, 0x80	; 128
     606:	5f e3       	ldi	r21, 0x3F	; 63
     608:	0e 94 80 0c 	call	0x1900	; 0x1900 <__ltsf2>
     60c:	88 23       	and	r24, r24
     60e:	2c f4       	brge	.+10     	; 0x61a <__vector_3+0x2d4>
		__ticks = 1;
     610:	81 e0       	ldi	r24, 0x01	; 1
     612:	90 e0       	ldi	r25, 0x00	; 0
     614:	9e 83       	std	Y+6, r25	; 0x06
     616:	8d 83       	std	Y+5, r24	; 0x05
     618:	3f c0       	rjmp	.+126    	; 0x698 <__vector_3+0x352>
	else if (__tmp > 65535)
     61a:	6f 81       	ldd	r22, Y+7	; 0x07
     61c:	78 85       	ldd	r23, Y+8	; 0x08
     61e:	89 85       	ldd	r24, Y+9	; 0x09
     620:	9a 85       	ldd	r25, Y+10	; 0x0a
     622:	20 e0       	ldi	r18, 0x00	; 0
     624:	3f ef       	ldi	r19, 0xFF	; 255
     626:	4f e7       	ldi	r20, 0x7F	; 127
     628:	57 e4       	ldi	r21, 0x47	; 71
     62a:	0e 94 20 0c 	call	0x1840	; 0x1840 <__gtsf2>
     62e:	18 16       	cp	r1, r24
     630:	4c f5       	brge	.+82     	; 0x684 <__vector_3+0x33e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     632:	6b 85       	ldd	r22, Y+11	; 0x0b
     634:	7c 85       	ldd	r23, Y+12	; 0x0c
     636:	8d 85       	ldd	r24, Y+13	; 0x0d
     638:	9e 85       	ldd	r25, Y+14	; 0x0e
     63a:	20 e0       	ldi	r18, 0x00	; 0
     63c:	30 e0       	ldi	r19, 0x00	; 0
     63e:	40 e2       	ldi	r20, 0x20	; 32
     640:	51 e4       	ldi	r21, 0x41	; 65
     642:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <__mulsf3>
     646:	dc 01       	movw	r26, r24
     648:	cb 01       	movw	r24, r22
     64a:	bc 01       	movw	r22, r24
     64c:	cd 01       	movw	r24, r26
     64e:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixunssfsi>
     652:	dc 01       	movw	r26, r24
     654:	cb 01       	movw	r24, r22
     656:	9e 83       	std	Y+6, r25	; 0x06
     658:	8d 83       	std	Y+5, r24	; 0x05
     65a:	0f c0       	rjmp	.+30     	; 0x67a <__vector_3+0x334>
     65c:	80 e9       	ldi	r24, 0x90	; 144
     65e:	91 e0       	ldi	r25, 0x01	; 1
     660:	9c 83       	std	Y+4, r25	; 0x04
     662:	8b 83       	std	Y+3, r24	; 0x03
     664:	8b 81       	ldd	r24, Y+3	; 0x03
     666:	9c 81       	ldd	r25, Y+4	; 0x04
     668:	01 97       	sbiw	r24, 0x01	; 1
     66a:	f1 f7       	brne	.-4      	; 0x668 <__vector_3+0x322>
     66c:	9c 83       	std	Y+4, r25	; 0x04
     66e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     670:	8d 81       	ldd	r24, Y+5	; 0x05
     672:	9e 81       	ldd	r25, Y+6	; 0x06
     674:	01 97       	sbiw	r24, 0x01	; 1
     676:	9e 83       	std	Y+6, r25	; 0x06
     678:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     67a:	8d 81       	ldd	r24, Y+5	; 0x05
     67c:	9e 81       	ldd	r25, Y+6	; 0x06
     67e:	00 97       	sbiw	r24, 0x00	; 0
     680:	69 f7       	brne	.-38     	; 0x65c <__vector_3+0x316>
     682:	14 c0       	rjmp	.+40     	; 0x6ac <__vector_3+0x366>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     684:	6f 81       	ldd	r22, Y+7	; 0x07
     686:	78 85       	ldd	r23, Y+8	; 0x08
     688:	89 85       	ldd	r24, Y+9	; 0x09
     68a:	9a 85       	ldd	r25, Y+10	; 0x0a
     68c:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixunssfsi>
     690:	dc 01       	movw	r26, r24
     692:	cb 01       	movw	r24, r22
     694:	9e 83       	std	Y+6, r25	; 0x06
     696:	8d 83       	std	Y+5, r24	; 0x05
     698:	8d 81       	ldd	r24, Y+5	; 0x05
     69a:	9e 81       	ldd	r25, Y+6	; 0x06
     69c:	9a 83       	std	Y+2, r25	; 0x02
     69e:	89 83       	std	Y+1, r24	; 0x01
     6a0:	89 81       	ldd	r24, Y+1	; 0x01
     6a2:	9a 81       	ldd	r25, Y+2	; 0x02
     6a4:	01 97       	sbiw	r24, 0x01	; 1
     6a6:	f1 f7       	brne	.-4      	; 0x6a4 <__vector_3+0x35e>
     6a8:	9a 83       	std	Y+2, r25	; 0x02
     6aa:	89 83       	std	Y+1, r24	; 0x01
            _delay_ms(500);
            PORTC |= _BV(motorPin);
     6ac:	a8 e2       	ldi	r26, 0x28	; 40
     6ae:	b0 e0       	ldi	r27, 0x00	; 0
     6b0:	e8 e2       	ldi	r30, 0x28	; 40
     6b2:	f0 e0       	ldi	r31, 0x00	; 0
     6b4:	80 81       	ld	r24, Z
     6b6:	88 60       	ori	r24, 0x08	; 8
     6b8:	8c 93       	st	X, r24
        }

    }
}
     6ba:	aa 96       	adiw	r28, 0x2a	; 42
     6bc:	de bf       	out	0x3e, r29	; 62
     6be:	cd bf       	out	0x3d, r28	; 61
     6c0:	cf 91       	pop	r28
     6c2:	df 91       	pop	r29
     6c4:	ff 91       	pop	r31
     6c6:	ef 91       	pop	r30
     6c8:	bf 91       	pop	r27
     6ca:	af 91       	pop	r26
     6cc:	9f 91       	pop	r25
     6ce:	8f 91       	pop	r24
     6d0:	7f 91       	pop	r23
     6d2:	6f 91       	pop	r22
     6d4:	5f 91       	pop	r21
     6d6:	4f 91       	pop	r20
     6d8:	3f 91       	pop	r19
     6da:	2f 91       	pop	r18
     6dc:	0f 90       	pop	r0
     6de:	0f be       	out	0x3f, r0	; 63
     6e0:	0f 90       	pop	r0
     6e2:	1f 90       	pop	r1
     6e4:	18 95       	reti

000006e6 <__vector_13>:

ISR(TIMER1_OVF_vect) //timer1 overflow interrupt
{
     6e6:	1f 92       	push	r1
     6e8:	0f 92       	push	r0
     6ea:	0f b6       	in	r0, 0x3f	; 63
     6ec:	0f 92       	push	r0
     6ee:	11 24       	eor	r1, r1
     6f0:	8f 93       	push	r24
     6f2:	9f 93       	push	r25
     6f4:	af 93       	push	r26
     6f6:	bf 93       	push	r27
     6f8:	df 93       	push	r29
     6fa:	cf 93       	push	r28
     6fc:	cd b7       	in	r28, 0x3d	; 61
     6fe:	de b7       	in	r29, 0x3e	; 62
    timer++;
     700:	80 91 0c 02 	lds	r24, 0x020C
     704:	90 91 0d 02 	lds	r25, 0x020D
     708:	a0 91 0e 02 	lds	r26, 0x020E
     70c:	b0 91 0f 02 	lds	r27, 0x020F
     710:	01 96       	adiw	r24, 0x01	; 1
     712:	a1 1d       	adc	r26, r1
     714:	b1 1d       	adc	r27, r1
     716:	80 93 0c 02 	sts	0x020C, r24
     71a:	90 93 0d 02 	sts	0x020D, r25
     71e:	a0 93 0e 02 	sts	0x020E, r26
     722:	b0 93 0f 02 	sts	0x020F, r27
}
     726:	cf 91       	pop	r28
     728:	df 91       	pop	r29
     72a:	bf 91       	pop	r27
     72c:	af 91       	pop	r26
     72e:	9f 91       	pop	r25
     730:	8f 91       	pop	r24
     732:	0f 90       	pop	r0
     734:	0f be       	out	0x3f, r0	; 63
     736:	0f 90       	pop	r0
     738:	1f 90       	pop	r1
     73a:	18 95       	reti

0000073c <__vector_16>:

ISR(TIMER0_OVF_vect)
{
     73c:	1f 92       	push	r1
     73e:	0f 92       	push	r0
     740:	0f b6       	in	r0, 0x3f	; 63
     742:	0f 92       	push	r0
     744:	11 24       	eor	r1, r1
     746:	8f 93       	push	r24
     748:	9f 93       	push	r25
     74a:	ef 93       	push	r30
     74c:	ff 93       	push	r31
     74e:	df 93       	push	r29
     750:	cf 93       	push	r28
     752:	cd b7       	in	r28, 0x3d	; 61
     754:	de b7       	in	r29, 0x3e	; 62
    lengteklokje++;
     756:	80 91 0a 02 	lds	r24, 0x020A
     75a:	90 91 0b 02 	lds	r25, 0x020B
     75e:	01 96       	adiw	r24, 0x01	; 1
     760:	90 93 0b 02 	sts	0x020B, r25
     764:	80 93 0a 02 	sts	0x020A, r24
    //TCNT0 = 0;
    TIFR0 = (1<<TOV0);
     768:	e5 e3       	ldi	r30, 0x35	; 53
     76a:	f0 e0       	ldi	r31, 0x00	; 0
     76c:	81 e0       	ldi	r24, 0x01	; 1
     76e:	80 83       	st	Z, r24
}
     770:	cf 91       	pop	r28
     772:	df 91       	pop	r29
     774:	ff 91       	pop	r31
     776:	ef 91       	pop	r30
     778:	9f 91       	pop	r25
     77a:	8f 91       	pop	r24
     77c:	0f 90       	pop	r0
     77e:	0f be       	out	0x3f, r0	; 63
     780:	0f 90       	pop	r0
     782:	1f 90       	pop	r1
     784:	18 95       	reti

00000786 <ultrasoneAfstand>:



int ultrasoneAfstand(void)
{
     786:	ef 92       	push	r14
     788:	ff 92       	push	r15
     78a:	0f 93       	push	r16
     78c:	1f 93       	push	r17
     78e:	df 93       	push	r29
     790:	cf 93       	push	r28
     792:	cd b7       	in	r28, 0x3d	; 61
     794:	de b7       	in	r29, 0x3e	; 62
     796:	a0 97       	sbiw	r28, 0x20	; 32
     798:	0f b6       	in	r0, 0x3f	; 63
     79a:	f8 94       	cli
     79c:	de bf       	out	0x3e, r29	; 62
     79e:	0f be       	out	0x3f, r0	; 63
     7a0:	cd bf       	out	0x3d, r28	; 61

    long count;
	double distance;

    PORTD |= (1<<trig);
     7a2:	ab e2       	ldi	r26, 0x2B	; 43
     7a4:	b0 e0       	ldi	r27, 0x00	; 0
     7a6:	eb e2       	ldi	r30, 0x2B	; 43
     7a8:	f0 e0       	ldi	r31, 0x00	; 0
     7aa:	80 81       	ld	r24, Z
     7ac:	81 60       	ori	r24, 0x01	; 1
     7ae:	8c 93       	st	X, r24
     7b0:	80 e0       	ldi	r24, 0x00	; 0
     7b2:	90 e0       	ldi	r25, 0x00	; 0
     7b4:	a0 e2       	ldi	r26, 0x20	; 32
     7b6:	b1 e4       	ldi	r27, 0x41	; 65
     7b8:	8d 8b       	std	Y+21, r24	; 0x15
     7ba:	9e 8b       	std	Y+22, r25	; 0x16
     7bc:	af 8b       	std	Y+23, r26	; 0x17
     7be:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     7c0:	6d 89       	ldd	r22, Y+21	; 0x15
     7c2:	7e 89       	ldd	r23, Y+22	; 0x16
     7c4:	8f 89       	ldd	r24, Y+23	; 0x17
     7c6:	98 8d       	ldd	r25, Y+24	; 0x18
     7c8:	2b ea       	ldi	r18, 0xAB	; 171
     7ca:	3a ea       	ldi	r19, 0xAA	; 170
     7cc:	4a ea       	ldi	r20, 0xAA	; 170
     7ce:	50 e4       	ldi	r21, 0x40	; 64
     7d0:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <__mulsf3>
     7d4:	dc 01       	movw	r26, r24
     7d6:	cb 01       	movw	r24, r22
     7d8:	89 8b       	std	Y+17, r24	; 0x11
     7da:	9a 8b       	std	Y+18, r25	; 0x12
     7dc:	ab 8b       	std	Y+19, r26	; 0x13
     7de:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
     7e0:	69 89       	ldd	r22, Y+17	; 0x11
     7e2:	7a 89       	ldd	r23, Y+18	; 0x12
     7e4:	8b 89       	ldd	r24, Y+19	; 0x13
     7e6:	9c 89       	ldd	r25, Y+20	; 0x14
     7e8:	20 e0       	ldi	r18, 0x00	; 0
     7ea:	30 e0       	ldi	r19, 0x00	; 0
     7ec:	40 e8       	ldi	r20, 0x80	; 128
     7ee:	5f e3       	ldi	r21, 0x3F	; 63
     7f0:	0e 94 80 0c 	call	0x1900	; 0x1900 <__ltsf2>
     7f4:	88 23       	and	r24, r24
     7f6:	1c f4       	brge	.+6      	; 0x7fe <ultrasoneAfstand+0x78>
		__ticks = 1;
     7f8:	81 e0       	ldi	r24, 0x01	; 1
     7fa:	88 8b       	std	Y+16, r24	; 0x10
     7fc:	91 c0       	rjmp	.+290    	; 0x920 <__stack+0x21>
	else if (__tmp > 255)
     7fe:	69 89       	ldd	r22, Y+17	; 0x11
     800:	7a 89       	ldd	r23, Y+18	; 0x12
     802:	8b 89       	ldd	r24, Y+19	; 0x13
     804:	9c 89       	ldd	r25, Y+20	; 0x14
     806:	20 e0       	ldi	r18, 0x00	; 0
     808:	30 e0       	ldi	r19, 0x00	; 0
     80a:	4f e7       	ldi	r20, 0x7F	; 127
     80c:	53 e4       	ldi	r21, 0x43	; 67
     80e:	0e 94 20 0c 	call	0x1840	; 0x1840 <__gtsf2>
     812:	18 16       	cp	r1, r24
     814:	0c f0       	brlt	.+2      	; 0x818 <ultrasoneAfstand+0x92>
     816:	7b c0       	rjmp	.+246    	; 0x90e <__stack+0xf>
	{
		_delay_ms(__us / 1000.0);
     818:	6d 89       	ldd	r22, Y+21	; 0x15
     81a:	7e 89       	ldd	r23, Y+22	; 0x16
     81c:	8f 89       	ldd	r24, Y+23	; 0x17
     81e:	98 8d       	ldd	r25, Y+24	; 0x18
     820:	20 e0       	ldi	r18, 0x00	; 0
     822:	30 e0       	ldi	r19, 0x00	; 0
     824:	4a e7       	ldi	r20, 0x7A	; 122
     826:	54 e4       	ldi	r21, 0x44	; 68
     828:	0e 94 74 0b 	call	0x16e8	; 0x16e8 <__divsf3>
     82c:	dc 01       	movw	r26, r24
     82e:	cb 01       	movw	r24, r22
     830:	8c 87       	std	Y+12, r24	; 0x0c
     832:	9d 87       	std	Y+13, r25	; 0x0d
     834:	ae 87       	std	Y+14, r26	; 0x0e
     836:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     838:	6c 85       	ldd	r22, Y+12	; 0x0c
     83a:	7d 85       	ldd	r23, Y+13	; 0x0d
     83c:	8e 85       	ldd	r24, Y+14	; 0x0e
     83e:	9f 85       	ldd	r25, Y+15	; 0x0f
     840:	20 e0       	ldi	r18, 0x00	; 0
     842:	30 e0       	ldi	r19, 0x00	; 0
     844:	4a e7       	ldi	r20, 0x7A	; 122
     846:	55 e4       	ldi	r21, 0x45	; 69
     848:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <__mulsf3>
     84c:	dc 01       	movw	r26, r24
     84e:	cb 01       	movw	r24, r22
     850:	88 87       	std	Y+8, r24	; 0x08
     852:	99 87       	std	Y+9, r25	; 0x09
     854:	aa 87       	std	Y+10, r26	; 0x0a
     856:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
     858:	68 85       	ldd	r22, Y+8	; 0x08
     85a:	79 85       	ldd	r23, Y+9	; 0x09
     85c:	8a 85       	ldd	r24, Y+10	; 0x0a
     85e:	9b 85       	ldd	r25, Y+11	; 0x0b
     860:	20 e0       	ldi	r18, 0x00	; 0
     862:	30 e0       	ldi	r19, 0x00	; 0
     864:	40 e8       	ldi	r20, 0x80	; 128
     866:	5f e3       	ldi	r21, 0x3F	; 63
     868:	0e 94 80 0c 	call	0x1900	; 0x1900 <__ltsf2>
     86c:	88 23       	and	r24, r24
     86e:	2c f4       	brge	.+10     	; 0x87a <ultrasoneAfstand+0xf4>
		__ticks = 1;
     870:	81 e0       	ldi	r24, 0x01	; 1
     872:	90 e0       	ldi	r25, 0x00	; 0
     874:	9f 83       	std	Y+7, r25	; 0x07
     876:	8e 83       	std	Y+6, r24	; 0x06
     878:	3f c0       	rjmp	.+126    	; 0x8f8 <ultrasoneAfstand+0x172>
	else if (__tmp > 65535)
     87a:	68 85       	ldd	r22, Y+8	; 0x08
     87c:	79 85       	ldd	r23, Y+9	; 0x09
     87e:	8a 85       	ldd	r24, Y+10	; 0x0a
     880:	9b 85       	ldd	r25, Y+11	; 0x0b
     882:	20 e0       	ldi	r18, 0x00	; 0
     884:	3f ef       	ldi	r19, 0xFF	; 255
     886:	4f e7       	ldi	r20, 0x7F	; 127
     888:	57 e4       	ldi	r21, 0x47	; 71
     88a:	0e 94 20 0c 	call	0x1840	; 0x1840 <__gtsf2>
     88e:	18 16       	cp	r1, r24
     890:	4c f5       	brge	.+82     	; 0x8e4 <ultrasoneAfstand+0x15e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     892:	6c 85       	ldd	r22, Y+12	; 0x0c
     894:	7d 85       	ldd	r23, Y+13	; 0x0d
     896:	8e 85       	ldd	r24, Y+14	; 0x0e
     898:	9f 85       	ldd	r25, Y+15	; 0x0f
     89a:	20 e0       	ldi	r18, 0x00	; 0
     89c:	30 e0       	ldi	r19, 0x00	; 0
     89e:	40 e2       	ldi	r20, 0x20	; 32
     8a0:	51 e4       	ldi	r21, 0x41	; 65
     8a2:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <__mulsf3>
     8a6:	dc 01       	movw	r26, r24
     8a8:	cb 01       	movw	r24, r22
     8aa:	bc 01       	movw	r22, r24
     8ac:	cd 01       	movw	r24, r26
     8ae:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixunssfsi>
     8b2:	dc 01       	movw	r26, r24
     8b4:	cb 01       	movw	r24, r22
     8b6:	9f 83       	std	Y+7, r25	; 0x07
     8b8:	8e 83       	std	Y+6, r24	; 0x06
     8ba:	0f c0       	rjmp	.+30     	; 0x8da <ultrasoneAfstand+0x154>
     8bc:	80 e9       	ldi	r24, 0x90	; 144
     8be:	91 e0       	ldi	r25, 0x01	; 1
     8c0:	9d 83       	std	Y+5, r25	; 0x05
     8c2:	8c 83       	std	Y+4, r24	; 0x04
     8c4:	8c 81       	ldd	r24, Y+4	; 0x04
     8c6:	9d 81       	ldd	r25, Y+5	; 0x05
     8c8:	01 97       	sbiw	r24, 0x01	; 1
     8ca:	f1 f7       	brne	.-4      	; 0x8c8 <ultrasoneAfstand+0x142>
     8cc:	9d 83       	std	Y+5, r25	; 0x05
     8ce:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     8d0:	8e 81       	ldd	r24, Y+6	; 0x06
     8d2:	9f 81       	ldd	r25, Y+7	; 0x07
     8d4:	01 97       	sbiw	r24, 0x01	; 1
     8d6:	9f 83       	std	Y+7, r25	; 0x07
     8d8:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     8da:	8e 81       	ldd	r24, Y+6	; 0x06
     8dc:	9f 81       	ldd	r25, Y+7	; 0x07
     8de:	00 97       	sbiw	r24, 0x00	; 0
     8e0:	69 f7       	brne	.-38     	; 0x8bc <ultrasoneAfstand+0x136>
     8e2:	24 c0       	rjmp	.+72     	; 0x92c <__stack+0x2d>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     8e4:	68 85       	ldd	r22, Y+8	; 0x08
     8e6:	79 85       	ldd	r23, Y+9	; 0x09
     8e8:	8a 85       	ldd	r24, Y+10	; 0x0a
     8ea:	9b 85       	ldd	r25, Y+11	; 0x0b
     8ec:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixunssfsi>
     8f0:	dc 01       	movw	r26, r24
     8f2:	cb 01       	movw	r24, r22
     8f4:	9f 83       	std	Y+7, r25	; 0x07
     8f6:	8e 83       	std	Y+6, r24	; 0x06
     8f8:	8e 81       	ldd	r24, Y+6	; 0x06
     8fa:	9f 81       	ldd	r25, Y+7	; 0x07
     8fc:	9b 83       	std	Y+3, r25	; 0x03
     8fe:	8a 83       	std	Y+2, r24	; 0x02
     900:	8a 81       	ldd	r24, Y+2	; 0x02
     902:	9b 81       	ldd	r25, Y+3	; 0x03
     904:	01 97       	sbiw	r24, 0x01	; 1
     906:	f1 f7       	brne	.-4      	; 0x904 <__stack+0x5>
     908:	9b 83       	std	Y+3, r25	; 0x03
     90a:	8a 83       	std	Y+2, r24	; 0x02
     90c:	0f c0       	rjmp	.+30     	; 0x92c <__stack+0x2d>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     90e:	69 89       	ldd	r22, Y+17	; 0x11
     910:	7a 89       	ldd	r23, Y+18	; 0x12
     912:	8b 89       	ldd	r24, Y+19	; 0x13
     914:	9c 89       	ldd	r25, Y+20	; 0x14
     916:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixunssfsi>
     91a:	dc 01       	movw	r26, r24
     91c:	cb 01       	movw	r24, r22
     91e:	88 8b       	std	Y+16, r24	; 0x10
     920:	88 89       	ldd	r24, Y+16	; 0x10
     922:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     924:	89 81       	ldd	r24, Y+1	; 0x01
     926:	8a 95       	dec	r24
     928:	f1 f7       	brne	.-4      	; 0x926 <__stack+0x27>
     92a:	89 83       	std	Y+1, r24	; 0x01
    _delay_us (10);
    PORTD &= ~(1<<trig);
     92c:	ab e2       	ldi	r26, 0x2B	; 43
     92e:	b0 e0       	ldi	r27, 0x00	; 0
     930:	eb e2       	ldi	r30, 0x2B	; 43
     932:	f0 e0       	ldi	r31, 0x00	; 0
     934:	80 81       	ld	r24, Z
     936:	8e 7f       	andi	r24, 0xFE	; 254
     938:	8c 93       	st	X, r24
    TCNT1 = 0;
     93a:	e4 e8       	ldi	r30, 0x84	; 132
     93c:	f0 e0       	ldi	r31, 0x00	; 0
     93e:	11 82       	std	Z+1, r1	; 0x01
     940:	10 82       	st	Z, r1
    timer = 0;
     942:	10 92 0c 02 	sts	0x020C, r1
     946:	10 92 0d 02 	sts	0x020D, r1
     94a:	10 92 0e 02 	sts	0x020E, r1
     94e:	10 92 0f 02 	sts	0x020F, r1
    TIFR1 = 1<<ICF1;
     952:	e6 e3       	ldi	r30, 0x36	; 54
     954:	f0 e0       	ldi	r31, 0x00	; 0
     956:	80 e2       	ldi	r24, 0x20	; 32
     958:	80 83       	st	Z, r24
    TIFR1 = 1<<TOV1;
     95a:	e6 e3       	ldi	r30, 0x36	; 54
     95c:	f0 e0       	ldi	r31, 0x00	; 0
     95e:	81 e0       	ldi	r24, 0x01	; 1
     960:	80 83       	st	Z, r24
    TCCR1B = 0x41;
     962:	e1 e8       	ldi	r30, 0x81	; 129
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	81 e4       	ldi	r24, 0x41	; 65
     968:	80 83       	st	Z, r24

    while ((TIFR1 & (1 << ICF1)) == 0);/* Wait for rising edge */
     96a:	e6 e3       	ldi	r30, 0x36	; 54
     96c:	f0 e0       	ldi	r31, 0x00	; 0
     96e:	80 81       	ld	r24, Z
     970:	88 2f       	mov	r24, r24
     972:	90 e0       	ldi	r25, 0x00	; 0
     974:	80 72       	andi	r24, 0x20	; 32
     976:	90 70       	andi	r25, 0x00	; 0
     978:	00 97       	sbiw	r24, 0x00	; 0
     97a:	b9 f3       	breq	.-18     	; 0x96a <__stack+0x6b>
		TCNT1 = 0;	/* Clear Timer counter */
     97c:	e4 e8       	ldi	r30, 0x84	; 132
     97e:	f0 e0       	ldi	r31, 0x00	; 0
     980:	11 82       	std	Z+1, r1	; 0x01
     982:	10 82       	st	Z, r1
		TCCR1B = 0x01;	/* Capture on falling edge, No prescaler */
     984:	e1 e8       	ldi	r30, 0x81	; 129
     986:	f0 e0       	ldi	r31, 0x00	; 0
     988:	81 e0       	ldi	r24, 0x01	; 1
     98a:	80 83       	st	Z, r24
		TIFR1 = 1<<ICF1;	/* Clear ICP flag (Input Capture flag) */
     98c:	e6 e3       	ldi	r30, 0x36	; 54
     98e:	f0 e0       	ldi	r31, 0x00	; 0
     990:	80 e2       	ldi	r24, 0x20	; 32
     992:	80 83       	st	Z, r24
		TIFR1 = 1<<TOV1;	/* Clear Timer Overflow flag */
     994:	e6 e3       	ldi	r30, 0x36	; 54
     996:	f0 e0       	ldi	r31, 0x00	; 0
     998:	81 e0       	ldi	r24, 0x01	; 1
     99a:	80 83       	st	Z, r24
		timer = 0;/* Clear Timer overflow count */
     99c:	10 92 0c 02 	sts	0x020C, r1
     9a0:	10 92 0d 02 	sts	0x020D, r1
     9a4:	10 92 0e 02 	sts	0x020E, r1
     9a8:	10 92 0f 02 	sts	0x020F, r1

    while ((TIFR1 & (1 << ICF1)) == 0);/* Wait for falling edge */
     9ac:	e6 e3       	ldi	r30, 0x36	; 54
     9ae:	f0 e0       	ldi	r31, 0x00	; 0
     9b0:	80 81       	ld	r24, Z
     9b2:	88 2f       	mov	r24, r24
     9b4:	90 e0       	ldi	r25, 0x00	; 0
     9b6:	80 72       	andi	r24, 0x20	; 32
     9b8:	90 70       	andi	r25, 0x00	; 0
     9ba:	00 97       	sbiw	r24, 0x00	; 0
     9bc:	b9 f3       	breq	.-18     	; 0x9ac <__stack+0xad>
		count = ICR1 + (65535 * timer);	/* Take count */
     9be:	e6 e8       	ldi	r30, 0x86	; 134
     9c0:	f0 e0       	ldi	r31, 0x00	; 0
     9c2:	80 81       	ld	r24, Z
     9c4:	91 81       	ldd	r25, Z+1	; 0x01
     9c6:	7c 01       	movw	r14, r24
     9c8:	00 e0       	ldi	r16, 0x00	; 0
     9ca:	10 e0       	ldi	r17, 0x00	; 0
     9cc:	80 91 0c 02 	lds	r24, 0x020C
     9d0:	90 91 0d 02 	lds	r25, 0x020D
     9d4:	a0 91 0e 02 	lds	r26, 0x020E
     9d8:	b0 91 0f 02 	lds	r27, 0x020F
     9dc:	2f ef       	ldi	r18, 0xFF	; 255
     9de:	3f ef       	ldi	r19, 0xFF	; 255
     9e0:	40 e0       	ldi	r20, 0x00	; 0
     9e2:	50 e0       	ldi	r21, 0x00	; 0
     9e4:	bc 01       	movw	r22, r24
     9e6:	cd 01       	movw	r24, r26
     9e8:	0e 94 57 0f 	call	0x1eae	; 0x1eae <__mulsi3>
     9ec:	dc 01       	movw	r26, r24
     9ee:	cb 01       	movw	r24, r22
     9f0:	8e 0d       	add	r24, r14
     9f2:	9f 1d       	adc	r25, r15
     9f4:	a0 1f       	adc	r26, r16
     9f6:	b1 1f       	adc	r27, r17
     9f8:	8d 8f       	std	Y+29, r24	; 0x1d
     9fa:	9e 8f       	std	Y+30, r25	; 0x1e
     9fc:	af 8f       	std	Y+31, r26	; 0x1f
     9fe:	b8 a3       	std	Y+32, r27	; 0x20
		/* 16MHz Timer freq, sound speed =343 m/s */
		distance = (double)count / 93.294; // in cm
     a00:	6d 8d       	ldd	r22, Y+29	; 0x1d
     a02:	7e 8d       	ldd	r23, Y+30	; 0x1e
     a04:	8f 8d       	ldd	r24, Y+31	; 0x1f
     a06:	98 a1       	ldd	r25, Y+32	; 0x20
     a08:	0e 94 b0 0c 	call	0x1960	; 0x1960 <__floatsisf>
     a0c:	dc 01       	movw	r26, r24
     a0e:	cb 01       	movw	r24, r22
     a10:	bc 01       	movw	r22, r24
     a12:	cd 01       	movw	r24, r26
     a14:	27 e8       	ldi	r18, 0x87	; 135
     a16:	36 e9       	ldi	r19, 0x96	; 150
     a18:	4a eb       	ldi	r20, 0xBA	; 186
     a1a:	52 e4       	ldi	r21, 0x42	; 66
     a1c:	0e 94 74 0b 	call	0x16e8	; 0x16e8 <__divsf3>
     a20:	dc 01       	movw	r26, r24
     a22:	cb 01       	movw	r24, r22
     a24:	89 8f       	std	Y+25, r24	; 0x19
     a26:	9a 8f       	std	Y+26, r25	; 0x1a
     a28:	ab 8f       	std	Y+27, r26	; 0x1b
     a2a:	bc 8f       	std	Y+28, r27	; 0x1c
    return(distance);
     a2c:	69 8d       	ldd	r22, Y+25	; 0x19
     a2e:	7a 8d       	ldd	r23, Y+26	; 0x1a
     a30:	8b 8d       	ldd	r24, Y+27	; 0x1b
     a32:	9c 8d       	ldd	r25, Y+28	; 0x1c
     a34:	0e 94 0e 0d 	call	0x1a1c	; 0x1a1c <__fixsfsi>
     a38:	dc 01       	movw	r26, r24
     a3a:	cb 01       	movw	r24, r22
}
     a3c:	a0 96       	adiw	r28, 0x20	; 32
     a3e:	0f b6       	in	r0, 0x3f	; 63
     a40:	f8 94       	cli
     a42:	de bf       	out	0x3e, r29	; 62
     a44:	0f be       	out	0x3f, r0	; 63
     a46:	cd bf       	out	0x3d, r28	; 61
     a48:	cf 91       	pop	r28
     a4a:	df 91       	pop	r29
     a4c:	1f 91       	pop	r17
     a4e:	0f 91       	pop	r16
     a50:	ff 90       	pop	r15
     a52:	ef 90       	pop	r14
     a54:	08 95       	ret

00000a56 <main>:


int main(void)
{
     a56:	0f 93       	push	r16
     a58:	1f 93       	push	r17
     a5a:	df 93       	push	r29
     a5c:	cf 93       	push	r28
     a5e:	cd b7       	in	r28, 0x3d	; 61
     a60:	de b7       	in	r29, 0x3e	; 62
     a62:	c6 55       	subi	r28, 0x56	; 86
     a64:	d0 40       	sbci	r29, 0x00	; 0
     a66:	0f b6       	in	r0, 0x3f	; 63
     a68:	f8 94       	cli
     a6a:	de bf       	out	0x3e, r29	; 62
     a6c:	0f be       	out	0x3f, r0	; 63
     a6e:	cd bf       	out	0x3d, r28	; 61
    init();
     a70:	0e 94 53 00 	call	0xa6	; 0xa6 <init>
    PORTC |= _BV(bochtPin);
     a74:	a8 e2       	ldi	r26, 0x28	; 40
     a76:	b0 e0       	ldi	r27, 0x00	; 0
     a78:	e8 e2       	ldi	r30, 0x28	; 40
     a7a:	f0 e0       	ldi	r31, 0x00	; 0
     a7c:	80 81       	ld	r24, Z
     a7e:	84 60       	ori	r24, 0x04	; 4
     a80:	8c 93       	st	X, r24
    PORTC |= _BV(bochtPinL);
     a82:	a8 e2       	ldi	r26, 0x28	; 40
     a84:	b0 e0       	ldi	r27, 0x00	; 0
     a86:	e8 e2       	ldi	r30, 0x28	; 40
     a88:	f0 e0       	ldi	r31, 0x00	; 0
     a8a:	80 81       	ld	r24, Z
     a8c:	82 60       	ori	r24, 0x02	; 2
     a8e:	8c 93       	st	X, r24
    PORTC |= _BV(motorPin);
     a90:	a8 e2       	ldi	r26, 0x28	; 40
     a92:	b0 e0       	ldi	r27, 0x00	; 0
     a94:	e8 e2       	ldi	r30, 0x28	; 40
     a96:	f0 e0       	ldi	r31, 0x00	; 0
     a98:	80 81       	ld	r24, Z
     a9a:	88 60       	ori	r24, 0x08	; 8
     a9c:	8c 93       	st	X, r24

    while(1)
    {


        if(ultrasoneAfstand() < 150) //eerste meting, minder precies
     a9e:	0e 94 c3 03 	call	0x786	; 0x786 <ultrasoneAfstand>
     aa2:	86 39       	cpi	r24, 0x96	; 150
     aa4:	91 05       	cpc	r25, r1
     aa6:	0c f0       	brlt	.+2      	; 0xaaa <main+0x54>
     aa8:	c5 c1       	rjmp	.+906    	; 0xe34 <main+0x3de>
     aaa:	fe 01       	movw	r30, r28
     aac:	ef 5a       	subi	r30, 0xAF	; 175
     aae:	ff 4f       	sbci	r31, 0xFF	; 255
     ab0:	80 e0       	ldi	r24, 0x00	; 0
     ab2:	90 e0       	ldi	r25, 0x00	; 0
     ab4:	a8 ec       	ldi	r26, 0xC8	; 200
     ab6:	b1 e4       	ldi	r27, 0x41	; 65
     ab8:	80 83       	st	Z, r24
     aba:	91 83       	std	Z+1, r25	; 0x01
     abc:	a2 83       	std	Z+2, r26	; 0x02
     abe:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     ac0:	8e 01       	movw	r16, r28
     ac2:	03 5b       	subi	r16, 0xB3	; 179
     ac4:	1f 4f       	sbci	r17, 0xFF	; 255
     ac6:	fe 01       	movw	r30, r28
     ac8:	ef 5a       	subi	r30, 0xAF	; 175
     aca:	ff 4f       	sbci	r31, 0xFF	; 255
     acc:	60 81       	ld	r22, Z
     ace:	71 81       	ldd	r23, Z+1	; 0x01
     ad0:	82 81       	ldd	r24, Z+2	; 0x02
     ad2:	93 81       	ldd	r25, Z+3	; 0x03
     ad4:	20 e0       	ldi	r18, 0x00	; 0
     ad6:	30 e0       	ldi	r19, 0x00	; 0
     ad8:	4a e7       	ldi	r20, 0x7A	; 122
     ada:	55 e4       	ldi	r21, 0x45	; 69
     adc:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <__mulsf3>
     ae0:	dc 01       	movw	r26, r24
     ae2:	cb 01       	movw	r24, r22
     ae4:	f8 01       	movw	r30, r16
     ae6:	80 83       	st	Z, r24
     ae8:	91 83       	std	Z+1, r25	; 0x01
     aea:	a2 83       	std	Z+2, r26	; 0x02
     aec:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     aee:	fe 01       	movw	r30, r28
     af0:	e3 5b       	subi	r30, 0xB3	; 179
     af2:	ff 4f       	sbci	r31, 0xFF	; 255
     af4:	60 81       	ld	r22, Z
     af6:	71 81       	ldd	r23, Z+1	; 0x01
     af8:	82 81       	ldd	r24, Z+2	; 0x02
     afa:	93 81       	ldd	r25, Z+3	; 0x03
     afc:	20 e0       	ldi	r18, 0x00	; 0
     afe:	30 e0       	ldi	r19, 0x00	; 0
     b00:	40 e8       	ldi	r20, 0x80	; 128
     b02:	5f e3       	ldi	r21, 0x3F	; 63
     b04:	0e 94 80 0c 	call	0x1900	; 0x1900 <__ltsf2>
     b08:	88 23       	and	r24, r24
     b0a:	44 f4       	brge	.+16     	; 0xb1c <main+0xc6>
		__ticks = 1;
     b0c:	fe 01       	movw	r30, r28
     b0e:	e5 5b       	subi	r30, 0xB5	; 181
     b10:	ff 4f       	sbci	r31, 0xFF	; 255
     b12:	81 e0       	ldi	r24, 0x01	; 1
     b14:	90 e0       	ldi	r25, 0x00	; 0
     b16:	91 83       	std	Z+1, r25	; 0x01
     b18:	80 83       	st	Z, r24
     b1a:	64 c0       	rjmp	.+200    	; 0xbe4 <main+0x18e>
	else if (__tmp > 65535)
     b1c:	fe 01       	movw	r30, r28
     b1e:	e3 5b       	subi	r30, 0xB3	; 179
     b20:	ff 4f       	sbci	r31, 0xFF	; 255
     b22:	60 81       	ld	r22, Z
     b24:	71 81       	ldd	r23, Z+1	; 0x01
     b26:	82 81       	ldd	r24, Z+2	; 0x02
     b28:	93 81       	ldd	r25, Z+3	; 0x03
     b2a:	20 e0       	ldi	r18, 0x00	; 0
     b2c:	3f ef       	ldi	r19, 0xFF	; 255
     b2e:	4f e7       	ldi	r20, 0x7F	; 127
     b30:	57 e4       	ldi	r21, 0x47	; 71
     b32:	0e 94 20 0c 	call	0x1840	; 0x1840 <__gtsf2>
     b36:	18 16       	cp	r1, r24
     b38:	0c f0       	brlt	.+2      	; 0xb3c <main+0xe6>
     b3a:	43 c0       	rjmp	.+134    	; 0xbc2 <main+0x16c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     b3c:	fe 01       	movw	r30, r28
     b3e:	ef 5a       	subi	r30, 0xAF	; 175
     b40:	ff 4f       	sbci	r31, 0xFF	; 255
     b42:	60 81       	ld	r22, Z
     b44:	71 81       	ldd	r23, Z+1	; 0x01
     b46:	82 81       	ldd	r24, Z+2	; 0x02
     b48:	93 81       	ldd	r25, Z+3	; 0x03
     b4a:	20 e0       	ldi	r18, 0x00	; 0
     b4c:	30 e0       	ldi	r19, 0x00	; 0
     b4e:	40 e2       	ldi	r20, 0x20	; 32
     b50:	51 e4       	ldi	r21, 0x41	; 65
     b52:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <__mulsf3>
     b56:	dc 01       	movw	r26, r24
     b58:	cb 01       	movw	r24, r22
     b5a:	8e 01       	movw	r16, r28
     b5c:	05 5b       	subi	r16, 0xB5	; 181
     b5e:	1f 4f       	sbci	r17, 0xFF	; 255
     b60:	bc 01       	movw	r22, r24
     b62:	cd 01       	movw	r24, r26
     b64:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixunssfsi>
     b68:	dc 01       	movw	r26, r24
     b6a:	cb 01       	movw	r24, r22
     b6c:	f8 01       	movw	r30, r16
     b6e:	91 83       	std	Z+1, r25	; 0x01
     b70:	80 83       	st	Z, r24
     b72:	1f c0       	rjmp	.+62     	; 0xbb2 <main+0x15c>
     b74:	fe 01       	movw	r30, r28
     b76:	e7 5b       	subi	r30, 0xB7	; 183
     b78:	ff 4f       	sbci	r31, 0xFF	; 255
     b7a:	80 e9       	ldi	r24, 0x90	; 144
     b7c:	91 e0       	ldi	r25, 0x01	; 1
     b7e:	91 83       	std	Z+1, r25	; 0x01
     b80:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     b82:	fe 01       	movw	r30, r28
     b84:	e7 5b       	subi	r30, 0xB7	; 183
     b86:	ff 4f       	sbci	r31, 0xFF	; 255
     b88:	80 81       	ld	r24, Z
     b8a:	91 81       	ldd	r25, Z+1	; 0x01
     b8c:	01 97       	sbiw	r24, 0x01	; 1
     b8e:	f1 f7       	brne	.-4      	; 0xb8c <main+0x136>
     b90:	fe 01       	movw	r30, r28
     b92:	e7 5b       	subi	r30, 0xB7	; 183
     b94:	ff 4f       	sbci	r31, 0xFF	; 255
     b96:	91 83       	std	Z+1, r25	; 0x01
     b98:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     b9a:	de 01       	movw	r26, r28
     b9c:	a5 5b       	subi	r26, 0xB5	; 181
     b9e:	bf 4f       	sbci	r27, 0xFF	; 255
     ba0:	fe 01       	movw	r30, r28
     ba2:	e5 5b       	subi	r30, 0xB5	; 181
     ba4:	ff 4f       	sbci	r31, 0xFF	; 255
     ba6:	80 81       	ld	r24, Z
     ba8:	91 81       	ldd	r25, Z+1	; 0x01
     baa:	01 97       	sbiw	r24, 0x01	; 1
     bac:	11 96       	adiw	r26, 0x01	; 1
     bae:	9c 93       	st	X, r25
     bb0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     bb2:	fe 01       	movw	r30, r28
     bb4:	e5 5b       	subi	r30, 0xB5	; 181
     bb6:	ff 4f       	sbci	r31, 0xFF	; 255
     bb8:	80 81       	ld	r24, Z
     bba:	91 81       	ldd	r25, Z+1	; 0x01
     bbc:	00 97       	sbiw	r24, 0x00	; 0
     bbe:	d1 f6       	brne	.-76     	; 0xb74 <main+0x11e>
     bc0:	27 c0       	rjmp	.+78     	; 0xc10 <main+0x1ba>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     bc2:	8e 01       	movw	r16, r28
     bc4:	05 5b       	subi	r16, 0xB5	; 181
     bc6:	1f 4f       	sbci	r17, 0xFF	; 255
     bc8:	fe 01       	movw	r30, r28
     bca:	e3 5b       	subi	r30, 0xB3	; 179
     bcc:	ff 4f       	sbci	r31, 0xFF	; 255
     bce:	60 81       	ld	r22, Z
     bd0:	71 81       	ldd	r23, Z+1	; 0x01
     bd2:	82 81       	ldd	r24, Z+2	; 0x02
     bd4:	93 81       	ldd	r25, Z+3	; 0x03
     bd6:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixunssfsi>
     bda:	dc 01       	movw	r26, r24
     bdc:	cb 01       	movw	r24, r22
     bde:	f8 01       	movw	r30, r16
     be0:	91 83       	std	Z+1, r25	; 0x01
     be2:	80 83       	st	Z, r24
     be4:	de 01       	movw	r26, r28
     be6:	a9 5b       	subi	r26, 0xB9	; 185
     be8:	bf 4f       	sbci	r27, 0xFF	; 255
     bea:	fe 01       	movw	r30, r28
     bec:	e5 5b       	subi	r30, 0xB5	; 181
     bee:	ff 4f       	sbci	r31, 0xFF	; 255
     bf0:	80 81       	ld	r24, Z
     bf2:	91 81       	ldd	r25, Z+1	; 0x01
     bf4:	8d 93       	st	X+, r24
     bf6:	9c 93       	st	X, r25
     bf8:	fe 01       	movw	r30, r28
     bfa:	e9 5b       	subi	r30, 0xB9	; 185
     bfc:	ff 4f       	sbci	r31, 0xFF	; 255
     bfe:	80 81       	ld	r24, Z
     c00:	91 81       	ldd	r25, Z+1	; 0x01
     c02:	01 97       	sbiw	r24, 0x01	; 1
     c04:	f1 f7       	brne	.-4      	; 0xc02 <main+0x1ac>
     c06:	fe 01       	movw	r30, r28
     c08:	e9 5b       	subi	r30, 0xB9	; 185
     c0a:	ff 4f       	sbci	r31, 0xFF	; 255
     c0c:	91 83       	std	Z+1, r25	; 0x01
     c0e:	80 83       	st	Z, r24
        {
            _delay_ms(25);
            if(ultrasoneAfstand() < 70) //debounce afstandsmeting
     c10:	0e 94 c3 03 	call	0x786	; 0x786 <ultrasoneAfstand>
     c14:	86 34       	cpi	r24, 0x46	; 70
     c16:	91 05       	cpc	r25, r1
     c18:	0c f0       	brlt	.+2      	; 0xc1c <main+0x1c6>
     c1a:	0c c1       	rjmp	.+536    	; 0xe34 <main+0x3de>
            {
                PORTC &= ~_BV(motorPin);
     c1c:	a8 e2       	ldi	r26, 0x28	; 40
     c1e:	b0 e0       	ldi	r27, 0x00	; 0
     c20:	e8 e2       	ldi	r30, 0x28	; 40
     c22:	f0 e0       	ldi	r31, 0x00	; 0
     c24:	80 81       	ld	r24, Z
     c26:	87 7f       	andi	r24, 0xF7	; 247
     c28:	8c 93       	st	X, r24
     c2a:	fe 01       	movw	r30, r28
     c2c:	ed 5b       	subi	r30, 0xBD	; 189
     c2e:	ff 4f       	sbci	r31, 0xFF	; 255
     c30:	80 e0       	ldi	r24, 0x00	; 0
     c32:	90 e0       	ldi	r25, 0x00	; 0
     c34:	aa e7       	ldi	r26, 0x7A	; 122
     c36:	b4 e4       	ldi	r27, 0x44	; 68
     c38:	80 83       	st	Z, r24
     c3a:	91 83       	std	Z+1, r25	; 0x01
     c3c:	a2 83       	std	Z+2, r26	; 0x02
     c3e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     c40:	8e 01       	movw	r16, r28
     c42:	01 5c       	subi	r16, 0xC1	; 193
     c44:	1f 4f       	sbci	r17, 0xFF	; 255
     c46:	fe 01       	movw	r30, r28
     c48:	ed 5b       	subi	r30, 0xBD	; 189
     c4a:	ff 4f       	sbci	r31, 0xFF	; 255
     c4c:	60 81       	ld	r22, Z
     c4e:	71 81       	ldd	r23, Z+1	; 0x01
     c50:	82 81       	ldd	r24, Z+2	; 0x02
     c52:	93 81       	ldd	r25, Z+3	; 0x03
     c54:	20 e0       	ldi	r18, 0x00	; 0
     c56:	30 e0       	ldi	r19, 0x00	; 0
     c58:	4a e7       	ldi	r20, 0x7A	; 122
     c5a:	55 e4       	ldi	r21, 0x45	; 69
     c5c:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <__mulsf3>
     c60:	dc 01       	movw	r26, r24
     c62:	cb 01       	movw	r24, r22
     c64:	f8 01       	movw	r30, r16
     c66:	80 83       	st	Z, r24
     c68:	91 83       	std	Z+1, r25	; 0x01
     c6a:	a2 83       	std	Z+2, r26	; 0x02
     c6c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     c6e:	fe 01       	movw	r30, r28
     c70:	ff 96       	adiw	r30, 0x3f	; 63
     c72:	60 81       	ld	r22, Z
     c74:	71 81       	ldd	r23, Z+1	; 0x01
     c76:	82 81       	ldd	r24, Z+2	; 0x02
     c78:	93 81       	ldd	r25, Z+3	; 0x03
     c7a:	20 e0       	ldi	r18, 0x00	; 0
     c7c:	30 e0       	ldi	r19, 0x00	; 0
     c7e:	40 e8       	ldi	r20, 0x80	; 128
     c80:	5f e3       	ldi	r21, 0x3F	; 63
     c82:	0e 94 80 0c 	call	0x1900	; 0x1900 <__ltsf2>
     c86:	88 23       	and	r24, r24
     c88:	2c f4       	brge	.+10     	; 0xc94 <main+0x23e>
		__ticks = 1;
     c8a:	81 e0       	ldi	r24, 0x01	; 1
     c8c:	90 e0       	ldi	r25, 0x00	; 0
     c8e:	9e af       	std	Y+62, r25	; 0x3e
     c90:	8d af       	std	Y+61, r24	; 0x3d
     c92:	46 c0       	rjmp	.+140    	; 0xd20 <main+0x2ca>
	else if (__tmp > 65535)
     c94:	fe 01       	movw	r30, r28
     c96:	ff 96       	adiw	r30, 0x3f	; 63
     c98:	60 81       	ld	r22, Z
     c9a:	71 81       	ldd	r23, Z+1	; 0x01
     c9c:	82 81       	ldd	r24, Z+2	; 0x02
     c9e:	93 81       	ldd	r25, Z+3	; 0x03
     ca0:	20 e0       	ldi	r18, 0x00	; 0
     ca2:	3f ef       	ldi	r19, 0xFF	; 255
     ca4:	4f e7       	ldi	r20, 0x7F	; 127
     ca6:	57 e4       	ldi	r21, 0x47	; 71
     ca8:	0e 94 20 0c 	call	0x1840	; 0x1840 <__gtsf2>
     cac:	18 16       	cp	r1, r24
     cae:	64 f5       	brge	.+88     	; 0xd08 <main+0x2b2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     cb0:	fe 01       	movw	r30, r28
     cb2:	ed 5b       	subi	r30, 0xBD	; 189
     cb4:	ff 4f       	sbci	r31, 0xFF	; 255
     cb6:	60 81       	ld	r22, Z
     cb8:	71 81       	ldd	r23, Z+1	; 0x01
     cba:	82 81       	ldd	r24, Z+2	; 0x02
     cbc:	93 81       	ldd	r25, Z+3	; 0x03
     cbe:	20 e0       	ldi	r18, 0x00	; 0
     cc0:	30 e0       	ldi	r19, 0x00	; 0
     cc2:	40 e2       	ldi	r20, 0x20	; 32
     cc4:	51 e4       	ldi	r21, 0x41	; 65
     cc6:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <__mulsf3>
     cca:	dc 01       	movw	r26, r24
     ccc:	cb 01       	movw	r24, r22
     cce:	bc 01       	movw	r22, r24
     cd0:	cd 01       	movw	r24, r26
     cd2:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixunssfsi>
     cd6:	dc 01       	movw	r26, r24
     cd8:	cb 01       	movw	r24, r22
     cda:	9e af       	std	Y+62, r25	; 0x3e
     cdc:	8d af       	std	Y+61, r24	; 0x3d
     cde:	0f c0       	rjmp	.+30     	; 0xcfe <main+0x2a8>
     ce0:	80 e9       	ldi	r24, 0x90	; 144
     ce2:	91 e0       	ldi	r25, 0x01	; 1
     ce4:	9c af       	std	Y+60, r25	; 0x3c
     ce6:	8b af       	std	Y+59, r24	; 0x3b
     ce8:	8b ad       	ldd	r24, Y+59	; 0x3b
     cea:	9c ad       	ldd	r25, Y+60	; 0x3c
     cec:	01 97       	sbiw	r24, 0x01	; 1
     cee:	f1 f7       	brne	.-4      	; 0xcec <main+0x296>
     cf0:	9c af       	std	Y+60, r25	; 0x3c
     cf2:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     cf4:	8d ad       	ldd	r24, Y+61	; 0x3d
     cf6:	9e ad       	ldd	r25, Y+62	; 0x3e
     cf8:	01 97       	sbiw	r24, 0x01	; 1
     cfa:	9e af       	std	Y+62, r25	; 0x3e
     cfc:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     cfe:	8d ad       	ldd	r24, Y+61	; 0x3d
     d00:	9e ad       	ldd	r25, Y+62	; 0x3e
     d02:	00 97       	sbiw	r24, 0x00	; 0
     d04:	69 f7       	brne	.-38     	; 0xce0 <main+0x28a>
     d06:	89 c0       	rjmp	.+274    	; 0xe1a <main+0x3c4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     d08:	fe 01       	movw	r30, r28
     d0a:	ff 96       	adiw	r30, 0x3f	; 63
     d0c:	60 81       	ld	r22, Z
     d0e:	71 81       	ldd	r23, Z+1	; 0x01
     d10:	82 81       	ldd	r24, Z+2	; 0x02
     d12:	93 81       	ldd	r25, Z+3	; 0x03
     d14:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixunssfsi>
     d18:	dc 01       	movw	r26, r24
     d1a:	cb 01       	movw	r24, r22
     d1c:	9e af       	std	Y+62, r25	; 0x3e
     d1e:	8d af       	std	Y+61, r24	; 0x3d
     d20:	8d ad       	ldd	r24, Y+61	; 0x3d
     d22:	9e ad       	ldd	r25, Y+62	; 0x3e
     d24:	9a af       	std	Y+58, r25	; 0x3a
     d26:	89 af       	std	Y+57, r24	; 0x39
     d28:	89 ad       	ldd	r24, Y+57	; 0x39
     d2a:	9a ad       	ldd	r25, Y+58	; 0x3a
     d2c:	01 97       	sbiw	r24, 0x01	; 1
     d2e:	f1 f7       	brne	.-4      	; 0xd2c <main+0x2d6>
     d30:	9a af       	std	Y+58, r25	; 0x3a
     d32:	89 af       	std	Y+57, r24	; 0x39
     d34:	72 c0       	rjmp	.+228    	; 0xe1a <main+0x3c4>
                _delay_ms(1000);
                while(ultrasoneAfstand() < 100) //zolang er nog iets voor staat stil blijven staan
     d36:	80 e0       	ldi	r24, 0x00	; 0
     d38:	90 e0       	ldi	r25, 0x00	; 0
     d3a:	a8 ec       	ldi	r26, 0xC8	; 200
     d3c:	b2 e4       	ldi	r27, 0x42	; 66
     d3e:	8d ab       	std	Y+53, r24	; 0x35
     d40:	9e ab       	std	Y+54, r25	; 0x36
     d42:	af ab       	std	Y+55, r26	; 0x37
     d44:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     d46:	6d a9       	ldd	r22, Y+53	; 0x35
     d48:	7e a9       	ldd	r23, Y+54	; 0x36
     d4a:	8f a9       	ldd	r24, Y+55	; 0x37
     d4c:	98 ad       	ldd	r25, Y+56	; 0x38
     d4e:	20 e0       	ldi	r18, 0x00	; 0
     d50:	30 e0       	ldi	r19, 0x00	; 0
     d52:	4a e7       	ldi	r20, 0x7A	; 122
     d54:	55 e4       	ldi	r21, 0x45	; 69
     d56:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <__mulsf3>
     d5a:	dc 01       	movw	r26, r24
     d5c:	cb 01       	movw	r24, r22
     d5e:	89 ab       	std	Y+49, r24	; 0x31
     d60:	9a ab       	std	Y+50, r25	; 0x32
     d62:	ab ab       	std	Y+51, r26	; 0x33
     d64:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
     d66:	69 a9       	ldd	r22, Y+49	; 0x31
     d68:	7a a9       	ldd	r23, Y+50	; 0x32
     d6a:	8b a9       	ldd	r24, Y+51	; 0x33
     d6c:	9c a9       	ldd	r25, Y+52	; 0x34
     d6e:	20 e0       	ldi	r18, 0x00	; 0
     d70:	30 e0       	ldi	r19, 0x00	; 0
     d72:	40 e8       	ldi	r20, 0x80	; 128
     d74:	5f e3       	ldi	r21, 0x3F	; 63
     d76:	0e 94 80 0c 	call	0x1900	; 0x1900 <__ltsf2>
     d7a:	88 23       	and	r24, r24
     d7c:	2c f4       	brge	.+10     	; 0xd88 <main+0x332>
		__ticks = 1;
     d7e:	81 e0       	ldi	r24, 0x01	; 1
     d80:	90 e0       	ldi	r25, 0x00	; 0
     d82:	98 ab       	std	Y+48, r25	; 0x30
     d84:	8f a7       	std	Y+47, r24	; 0x2f
     d86:	3f c0       	rjmp	.+126    	; 0xe06 <main+0x3b0>
	else if (__tmp > 65535)
     d88:	69 a9       	ldd	r22, Y+49	; 0x31
     d8a:	7a a9       	ldd	r23, Y+50	; 0x32
     d8c:	8b a9       	ldd	r24, Y+51	; 0x33
     d8e:	9c a9       	ldd	r25, Y+52	; 0x34
     d90:	20 e0       	ldi	r18, 0x00	; 0
     d92:	3f ef       	ldi	r19, 0xFF	; 255
     d94:	4f e7       	ldi	r20, 0x7F	; 127
     d96:	57 e4       	ldi	r21, 0x47	; 71
     d98:	0e 94 20 0c 	call	0x1840	; 0x1840 <__gtsf2>
     d9c:	18 16       	cp	r1, r24
     d9e:	4c f5       	brge	.+82     	; 0xdf2 <main+0x39c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     da0:	6d a9       	ldd	r22, Y+53	; 0x35
     da2:	7e a9       	ldd	r23, Y+54	; 0x36
     da4:	8f a9       	ldd	r24, Y+55	; 0x37
     da6:	98 ad       	ldd	r25, Y+56	; 0x38
     da8:	20 e0       	ldi	r18, 0x00	; 0
     daa:	30 e0       	ldi	r19, 0x00	; 0
     dac:	40 e2       	ldi	r20, 0x20	; 32
     dae:	51 e4       	ldi	r21, 0x41	; 65
     db0:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <__mulsf3>
     db4:	dc 01       	movw	r26, r24
     db6:	cb 01       	movw	r24, r22
     db8:	bc 01       	movw	r22, r24
     dba:	cd 01       	movw	r24, r26
     dbc:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixunssfsi>
     dc0:	dc 01       	movw	r26, r24
     dc2:	cb 01       	movw	r24, r22
     dc4:	98 ab       	std	Y+48, r25	; 0x30
     dc6:	8f a7       	std	Y+47, r24	; 0x2f
     dc8:	0f c0       	rjmp	.+30     	; 0xde8 <main+0x392>
     dca:	80 e9       	ldi	r24, 0x90	; 144
     dcc:	91 e0       	ldi	r25, 0x01	; 1
     dce:	9e a7       	std	Y+46, r25	; 0x2e
     dd0:	8d a7       	std	Y+45, r24	; 0x2d
     dd2:	8d a5       	ldd	r24, Y+45	; 0x2d
     dd4:	9e a5       	ldd	r25, Y+46	; 0x2e
     dd6:	01 97       	sbiw	r24, 0x01	; 1
     dd8:	f1 f7       	brne	.-4      	; 0xdd6 <main+0x380>
     dda:	9e a7       	std	Y+46, r25	; 0x2e
     ddc:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     dde:	8f a5       	ldd	r24, Y+47	; 0x2f
     de0:	98 a9       	ldd	r25, Y+48	; 0x30
     de2:	01 97       	sbiw	r24, 0x01	; 1
     de4:	98 ab       	std	Y+48, r25	; 0x30
     de6:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     de8:	8f a5       	ldd	r24, Y+47	; 0x2f
     dea:	98 a9       	ldd	r25, Y+48	; 0x30
     dec:	00 97       	sbiw	r24, 0x00	; 0
     dee:	69 f7       	brne	.-38     	; 0xdca <main+0x374>
     df0:	14 c0       	rjmp	.+40     	; 0xe1a <main+0x3c4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     df2:	69 a9       	ldd	r22, Y+49	; 0x31
     df4:	7a a9       	ldd	r23, Y+50	; 0x32
     df6:	8b a9       	ldd	r24, Y+51	; 0x33
     df8:	9c a9       	ldd	r25, Y+52	; 0x34
     dfa:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixunssfsi>
     dfe:	dc 01       	movw	r26, r24
     e00:	cb 01       	movw	r24, r22
     e02:	98 ab       	std	Y+48, r25	; 0x30
     e04:	8f a7       	std	Y+47, r24	; 0x2f
     e06:	8f a5       	ldd	r24, Y+47	; 0x2f
     e08:	98 a9       	ldd	r25, Y+48	; 0x30
     e0a:	9c a7       	std	Y+44, r25	; 0x2c
     e0c:	8b a7       	std	Y+43, r24	; 0x2b
     e0e:	8b a5       	ldd	r24, Y+43	; 0x2b
     e10:	9c a5       	ldd	r25, Y+44	; 0x2c
     e12:	01 97       	sbiw	r24, 0x01	; 1
     e14:	f1 f7       	brne	.-4      	; 0xe12 <main+0x3bc>
     e16:	9c a7       	std	Y+44, r25	; 0x2c
     e18:	8b a7       	std	Y+43, r24	; 0x2b
     e1a:	0e 94 c3 03 	call	0x786	; 0x786 <ultrasoneAfstand>
     e1e:	84 36       	cpi	r24, 0x64	; 100
     e20:	91 05       	cpc	r25, r1
     e22:	0c f4       	brge	.+2      	; 0xe26 <main+0x3d0>
     e24:	88 cf       	rjmp	.-240    	; 0xd36 <main+0x2e0>
                {
                    _delay_ms(100);
                }

                    PORTC |= _BV(motorPin); //verder rijden na verwijderen obstakel
     e26:	a8 e2       	ldi	r26, 0x28	; 40
     e28:	b0 e0       	ldi	r27, 0x00	; 0
     e2a:	e8 e2       	ldi	r30, 0x28	; 40
     e2c:	f0 e0       	ldi	r31, 0x00	; 0
     e2e:	80 81       	ld	r24, Z
     e30:	88 60       	ori	r24, 0x08	; 8
     e32:	8c 93       	st	X, r24




        }
        int telwaarde = lengteklokje;
     e34:	fe 01       	movw	r30, r28
     e36:	eb 5a       	subi	r30, 0xAB	; 171
     e38:	ff 4f       	sbci	r31, 0xFF	; 255
     e3a:	80 91 0a 02 	lds	r24, 0x020A
     e3e:	90 91 0b 02 	lds	r25, 0x020B
     e42:	91 83       	std	Z+1, r25	; 0x01
     e44:	80 83       	st	Z, r24

        if(telwaarde > 530)
     e46:	fe 01       	movw	r30, r28
     e48:	eb 5a       	subi	r30, 0xAB	; 171
     e4a:	ff 4f       	sbci	r31, 0xFF	; 255
     e4c:	80 81       	ld	r24, Z
     e4e:	91 81       	ldd	r25, Z+1	; 0x01
     e50:	f2 e0       	ldi	r31, 0x02	; 2
     e52:	83 31       	cpi	r24, 0x13	; 19
     e54:	9f 07       	cpc	r25, r31
     e56:	0c f4       	brge	.+2      	; 0xe5a <main+0x404>
     e58:	22 ce       	rjmp	.-956    	; 0xa9e <main+0x48>
        {
            PORTC &= ~_BV(motorPin);
     e5a:	a8 e2       	ldi	r26, 0x28	; 40
     e5c:	b0 e0       	ldi	r27, 0x00	; 0
     e5e:	e8 e2       	ldi	r30, 0x28	; 40
     e60:	f0 e0       	ldi	r31, 0x00	; 0
     e62:	80 81       	ld	r24, Z
     e64:	87 7f       	andi	r24, 0xF7	; 247
     e66:	8c 93       	st	X, r24
     e68:	80 e0       	ldi	r24, 0x00	; 0
     e6a:	90 e0       	ldi	r25, 0x00	; 0
     e6c:	a0 ea       	ldi	r26, 0xA0	; 160
     e6e:	b0 e4       	ldi	r27, 0x40	; 64
     e70:	8f a3       	std	Y+39, r24	; 0x27
     e72:	98 a7       	std	Y+40, r25	; 0x28
     e74:	a9 a7       	std	Y+41, r26	; 0x29
     e76:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     e78:	6f a1       	ldd	r22, Y+39	; 0x27
     e7a:	78 a5       	ldd	r23, Y+40	; 0x28
     e7c:	89 a5       	ldd	r24, Y+41	; 0x29
     e7e:	9a a5       	ldd	r25, Y+42	; 0x2a
     e80:	20 e0       	ldi	r18, 0x00	; 0
     e82:	30 e0       	ldi	r19, 0x00	; 0
     e84:	4a e7       	ldi	r20, 0x7A	; 122
     e86:	55 e4       	ldi	r21, 0x45	; 69
     e88:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <__mulsf3>
     e8c:	dc 01       	movw	r26, r24
     e8e:	cb 01       	movw	r24, r22
     e90:	8b a3       	std	Y+35, r24	; 0x23
     e92:	9c a3       	std	Y+36, r25	; 0x24
     e94:	ad a3       	std	Y+37, r26	; 0x25
     e96:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     e98:	6b a1       	ldd	r22, Y+35	; 0x23
     e9a:	7c a1       	ldd	r23, Y+36	; 0x24
     e9c:	8d a1       	ldd	r24, Y+37	; 0x25
     e9e:	9e a1       	ldd	r25, Y+38	; 0x26
     ea0:	20 e0       	ldi	r18, 0x00	; 0
     ea2:	30 e0       	ldi	r19, 0x00	; 0
     ea4:	40 e8       	ldi	r20, 0x80	; 128
     ea6:	5f e3       	ldi	r21, 0x3F	; 63
     ea8:	0e 94 80 0c 	call	0x1900	; 0x1900 <__ltsf2>
     eac:	88 23       	and	r24, r24
     eae:	2c f4       	brge	.+10     	; 0xeba <main+0x464>
		__ticks = 1;
     eb0:	81 e0       	ldi	r24, 0x01	; 1
     eb2:	90 e0       	ldi	r25, 0x00	; 0
     eb4:	9a a3       	std	Y+34, r25	; 0x22
     eb6:	89 a3       	std	Y+33, r24	; 0x21
     eb8:	3f c0       	rjmp	.+126    	; 0xf38 <main+0x4e2>
	else if (__tmp > 65535)
     eba:	6b a1       	ldd	r22, Y+35	; 0x23
     ebc:	7c a1       	ldd	r23, Y+36	; 0x24
     ebe:	8d a1       	ldd	r24, Y+37	; 0x25
     ec0:	9e a1       	ldd	r25, Y+38	; 0x26
     ec2:	20 e0       	ldi	r18, 0x00	; 0
     ec4:	3f ef       	ldi	r19, 0xFF	; 255
     ec6:	4f e7       	ldi	r20, 0x7F	; 127
     ec8:	57 e4       	ldi	r21, 0x47	; 71
     eca:	0e 94 20 0c 	call	0x1840	; 0x1840 <__gtsf2>
     ece:	18 16       	cp	r1, r24
     ed0:	4c f5       	brge	.+82     	; 0xf24 <main+0x4ce>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     ed2:	6f a1       	ldd	r22, Y+39	; 0x27
     ed4:	78 a5       	ldd	r23, Y+40	; 0x28
     ed6:	89 a5       	ldd	r24, Y+41	; 0x29
     ed8:	9a a5       	ldd	r25, Y+42	; 0x2a
     eda:	20 e0       	ldi	r18, 0x00	; 0
     edc:	30 e0       	ldi	r19, 0x00	; 0
     ede:	40 e2       	ldi	r20, 0x20	; 32
     ee0:	51 e4       	ldi	r21, 0x41	; 65
     ee2:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <__mulsf3>
     ee6:	dc 01       	movw	r26, r24
     ee8:	cb 01       	movw	r24, r22
     eea:	bc 01       	movw	r22, r24
     eec:	cd 01       	movw	r24, r26
     eee:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixunssfsi>
     ef2:	dc 01       	movw	r26, r24
     ef4:	cb 01       	movw	r24, r22
     ef6:	9a a3       	std	Y+34, r25	; 0x22
     ef8:	89 a3       	std	Y+33, r24	; 0x21
     efa:	0f c0       	rjmp	.+30     	; 0xf1a <main+0x4c4>
     efc:	80 e9       	ldi	r24, 0x90	; 144
     efe:	91 e0       	ldi	r25, 0x01	; 1
     f00:	98 a3       	std	Y+32, r25	; 0x20
     f02:	8f 8f       	std	Y+31, r24	; 0x1f
     f04:	8f 8d       	ldd	r24, Y+31	; 0x1f
     f06:	98 a1       	ldd	r25, Y+32	; 0x20
     f08:	01 97       	sbiw	r24, 0x01	; 1
     f0a:	f1 f7       	brne	.-4      	; 0xf08 <main+0x4b2>
     f0c:	98 a3       	std	Y+32, r25	; 0x20
     f0e:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f10:	89 a1       	ldd	r24, Y+33	; 0x21
     f12:	9a a1       	ldd	r25, Y+34	; 0x22
     f14:	01 97       	sbiw	r24, 0x01	; 1
     f16:	9a a3       	std	Y+34, r25	; 0x22
     f18:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f1a:	89 a1       	ldd	r24, Y+33	; 0x21
     f1c:	9a a1       	ldd	r25, Y+34	; 0x22
     f1e:	00 97       	sbiw	r24, 0x00	; 0
     f20:	69 f7       	brne	.-38     	; 0xefc <main+0x4a6>
     f22:	14 c0       	rjmp	.+40     	; 0xf4c <main+0x4f6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     f24:	6b a1       	ldd	r22, Y+35	; 0x23
     f26:	7c a1       	ldd	r23, Y+36	; 0x24
     f28:	8d a1       	ldd	r24, Y+37	; 0x25
     f2a:	9e a1       	ldd	r25, Y+38	; 0x26
     f2c:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixunssfsi>
     f30:	dc 01       	movw	r26, r24
     f32:	cb 01       	movw	r24, r22
     f34:	9a a3       	std	Y+34, r25	; 0x22
     f36:	89 a3       	std	Y+33, r24	; 0x21
     f38:	89 a1       	ldd	r24, Y+33	; 0x21
     f3a:	9a a1       	ldd	r25, Y+34	; 0x22
     f3c:	9e 8f       	std	Y+30, r25	; 0x1e
     f3e:	8d 8f       	std	Y+29, r24	; 0x1d
     f40:	8d 8d       	ldd	r24, Y+29	; 0x1d
     f42:	9e 8d       	ldd	r25, Y+30	; 0x1e
     f44:	01 97       	sbiw	r24, 0x01	; 1
     f46:	f1 f7       	brne	.-4      	; 0xf44 <main+0x4ee>
     f48:	9e 8f       	std	Y+30, r25	; 0x1e
     f4a:	8d 8f       	std	Y+29, r24	; 0x1d
            _delay_ms(5);
            PORTC |= _BV(bochtPinL);
     f4c:	a8 e2       	ldi	r26, 0x28	; 40
     f4e:	b0 e0       	ldi	r27, 0x00	; 0
     f50:	e8 e2       	ldi	r30, 0x28	; 40
     f52:	f0 e0       	ldi	r31, 0x00	; 0
     f54:	80 81       	ld	r24, Z
     f56:	82 60       	ori	r24, 0x02	; 2
     f58:	8c 93       	st	X, r24
     f5a:	80 e0       	ldi	r24, 0x00	; 0
     f5c:	90 e0       	ldi	r25, 0x00	; 0
     f5e:	a0 ea       	ldi	r26, 0xA0	; 160
     f60:	b0 e4       	ldi	r27, 0x40	; 64
     f62:	89 8f       	std	Y+25, r24	; 0x19
     f64:	9a 8f       	std	Y+26, r25	; 0x1a
     f66:	ab 8f       	std	Y+27, r26	; 0x1b
     f68:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     f6a:	69 8d       	ldd	r22, Y+25	; 0x19
     f6c:	7a 8d       	ldd	r23, Y+26	; 0x1a
     f6e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     f70:	9c 8d       	ldd	r25, Y+28	; 0x1c
     f72:	20 e0       	ldi	r18, 0x00	; 0
     f74:	30 e0       	ldi	r19, 0x00	; 0
     f76:	4a e7       	ldi	r20, 0x7A	; 122
     f78:	55 e4       	ldi	r21, 0x45	; 69
     f7a:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <__mulsf3>
     f7e:	dc 01       	movw	r26, r24
     f80:	cb 01       	movw	r24, r22
     f82:	8d 8b       	std	Y+21, r24	; 0x15
     f84:	9e 8b       	std	Y+22, r25	; 0x16
     f86:	af 8b       	std	Y+23, r26	; 0x17
     f88:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     f8a:	6d 89       	ldd	r22, Y+21	; 0x15
     f8c:	7e 89       	ldd	r23, Y+22	; 0x16
     f8e:	8f 89       	ldd	r24, Y+23	; 0x17
     f90:	98 8d       	ldd	r25, Y+24	; 0x18
     f92:	20 e0       	ldi	r18, 0x00	; 0
     f94:	30 e0       	ldi	r19, 0x00	; 0
     f96:	40 e8       	ldi	r20, 0x80	; 128
     f98:	5f e3       	ldi	r21, 0x3F	; 63
     f9a:	0e 94 80 0c 	call	0x1900	; 0x1900 <__ltsf2>
     f9e:	88 23       	and	r24, r24
     fa0:	2c f4       	brge	.+10     	; 0xfac <main+0x556>
		__ticks = 1;
     fa2:	81 e0       	ldi	r24, 0x01	; 1
     fa4:	90 e0       	ldi	r25, 0x00	; 0
     fa6:	9c 8b       	std	Y+20, r25	; 0x14
     fa8:	8b 8b       	std	Y+19, r24	; 0x13
     faa:	3f c0       	rjmp	.+126    	; 0x102a <main+0x5d4>
	else if (__tmp > 65535)
     fac:	6d 89       	ldd	r22, Y+21	; 0x15
     fae:	7e 89       	ldd	r23, Y+22	; 0x16
     fb0:	8f 89       	ldd	r24, Y+23	; 0x17
     fb2:	98 8d       	ldd	r25, Y+24	; 0x18
     fb4:	20 e0       	ldi	r18, 0x00	; 0
     fb6:	3f ef       	ldi	r19, 0xFF	; 255
     fb8:	4f e7       	ldi	r20, 0x7F	; 127
     fba:	57 e4       	ldi	r21, 0x47	; 71
     fbc:	0e 94 20 0c 	call	0x1840	; 0x1840 <__gtsf2>
     fc0:	18 16       	cp	r1, r24
     fc2:	4c f5       	brge	.+82     	; 0x1016 <main+0x5c0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     fc4:	69 8d       	ldd	r22, Y+25	; 0x19
     fc6:	7a 8d       	ldd	r23, Y+26	; 0x1a
     fc8:	8b 8d       	ldd	r24, Y+27	; 0x1b
     fca:	9c 8d       	ldd	r25, Y+28	; 0x1c
     fcc:	20 e0       	ldi	r18, 0x00	; 0
     fce:	30 e0       	ldi	r19, 0x00	; 0
     fd0:	40 e2       	ldi	r20, 0x20	; 32
     fd2:	51 e4       	ldi	r21, 0x41	; 65
     fd4:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <__mulsf3>
     fd8:	dc 01       	movw	r26, r24
     fda:	cb 01       	movw	r24, r22
     fdc:	bc 01       	movw	r22, r24
     fde:	cd 01       	movw	r24, r26
     fe0:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixunssfsi>
     fe4:	dc 01       	movw	r26, r24
     fe6:	cb 01       	movw	r24, r22
     fe8:	9c 8b       	std	Y+20, r25	; 0x14
     fea:	8b 8b       	std	Y+19, r24	; 0x13
     fec:	0f c0       	rjmp	.+30     	; 0x100c <main+0x5b6>
     fee:	80 e9       	ldi	r24, 0x90	; 144
     ff0:	91 e0       	ldi	r25, 0x01	; 1
     ff2:	9a 8b       	std	Y+18, r25	; 0x12
     ff4:	89 8b       	std	Y+17, r24	; 0x11
     ff6:	89 89       	ldd	r24, Y+17	; 0x11
     ff8:	9a 89       	ldd	r25, Y+18	; 0x12
     ffa:	01 97       	sbiw	r24, 0x01	; 1
     ffc:	f1 f7       	brne	.-4      	; 0xffa <main+0x5a4>
     ffe:	9a 8b       	std	Y+18, r25	; 0x12
    1000:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1002:	8b 89       	ldd	r24, Y+19	; 0x13
    1004:	9c 89       	ldd	r25, Y+20	; 0x14
    1006:	01 97       	sbiw	r24, 0x01	; 1
    1008:	9c 8b       	std	Y+20, r25	; 0x14
    100a:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    100c:	8b 89       	ldd	r24, Y+19	; 0x13
    100e:	9c 89       	ldd	r25, Y+20	; 0x14
    1010:	00 97       	sbiw	r24, 0x00	; 0
    1012:	69 f7       	brne	.-38     	; 0xfee <main+0x598>
    1014:	14 c0       	rjmp	.+40     	; 0x103e <main+0x5e8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1016:	6d 89       	ldd	r22, Y+21	; 0x15
    1018:	7e 89       	ldd	r23, Y+22	; 0x16
    101a:	8f 89       	ldd	r24, Y+23	; 0x17
    101c:	98 8d       	ldd	r25, Y+24	; 0x18
    101e:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixunssfsi>
    1022:	dc 01       	movw	r26, r24
    1024:	cb 01       	movw	r24, r22
    1026:	9c 8b       	std	Y+20, r25	; 0x14
    1028:	8b 8b       	std	Y+19, r24	; 0x13
    102a:	8b 89       	ldd	r24, Y+19	; 0x13
    102c:	9c 89       	ldd	r25, Y+20	; 0x14
    102e:	98 8b       	std	Y+16, r25	; 0x10
    1030:	8f 87       	std	Y+15, r24	; 0x0f
    1032:	8f 85       	ldd	r24, Y+15	; 0x0f
    1034:	98 89       	ldd	r25, Y+16	; 0x10
    1036:	01 97       	sbiw	r24, 0x01	; 1
    1038:	f1 f7       	brne	.-4      	; 0x1036 <main+0x5e0>
    103a:	98 8b       	std	Y+16, r25	; 0x10
    103c:	8f 87       	std	Y+15, r24	; 0x0f
            _delay_ms(5);
            PORTC &= ~_BV(bochtPinL);
    103e:	a8 e2       	ldi	r26, 0x28	; 40
    1040:	b0 e0       	ldi	r27, 0x00	; 0
    1042:	e8 e2       	ldi	r30, 0x28	; 40
    1044:	f0 e0       	ldi	r31, 0x00	; 0
    1046:	80 81       	ld	r24, Z
    1048:	8d 7f       	andi	r24, 0xFD	; 253
    104a:	8c 93       	st	X, r24
    104c:	80 e0       	ldi	r24, 0x00	; 0
    104e:	90 e0       	ldi	r25, 0x00	; 0
    1050:	a0 ea       	ldi	r26, 0xA0	; 160
    1052:	b0 e4       	ldi	r27, 0x40	; 64
    1054:	8b 87       	std	Y+11, r24	; 0x0b
    1056:	9c 87       	std	Y+12, r25	; 0x0c
    1058:	ad 87       	std	Y+13, r26	; 0x0d
    105a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    105c:	6b 85       	ldd	r22, Y+11	; 0x0b
    105e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1060:	8d 85       	ldd	r24, Y+13	; 0x0d
    1062:	9e 85       	ldd	r25, Y+14	; 0x0e
    1064:	20 e0       	ldi	r18, 0x00	; 0
    1066:	30 e0       	ldi	r19, 0x00	; 0
    1068:	4a e7       	ldi	r20, 0x7A	; 122
    106a:	55 e4       	ldi	r21, 0x45	; 69
    106c:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <__mulsf3>
    1070:	dc 01       	movw	r26, r24
    1072:	cb 01       	movw	r24, r22
    1074:	8f 83       	std	Y+7, r24	; 0x07
    1076:	98 87       	std	Y+8, r25	; 0x08
    1078:	a9 87       	std	Y+9, r26	; 0x09
    107a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    107c:	6f 81       	ldd	r22, Y+7	; 0x07
    107e:	78 85       	ldd	r23, Y+8	; 0x08
    1080:	89 85       	ldd	r24, Y+9	; 0x09
    1082:	9a 85       	ldd	r25, Y+10	; 0x0a
    1084:	20 e0       	ldi	r18, 0x00	; 0
    1086:	30 e0       	ldi	r19, 0x00	; 0
    1088:	40 e8       	ldi	r20, 0x80	; 128
    108a:	5f e3       	ldi	r21, 0x3F	; 63
    108c:	0e 94 80 0c 	call	0x1900	; 0x1900 <__ltsf2>
    1090:	88 23       	and	r24, r24
    1092:	2c f4       	brge	.+10     	; 0x109e <main+0x648>
		__ticks = 1;
    1094:	81 e0       	ldi	r24, 0x01	; 1
    1096:	90 e0       	ldi	r25, 0x00	; 0
    1098:	9e 83       	std	Y+6, r25	; 0x06
    109a:	8d 83       	std	Y+5, r24	; 0x05
    109c:	3f c0       	rjmp	.+126    	; 0x111c <main+0x6c6>
	else if (__tmp > 65535)
    109e:	6f 81       	ldd	r22, Y+7	; 0x07
    10a0:	78 85       	ldd	r23, Y+8	; 0x08
    10a2:	89 85       	ldd	r24, Y+9	; 0x09
    10a4:	9a 85       	ldd	r25, Y+10	; 0x0a
    10a6:	20 e0       	ldi	r18, 0x00	; 0
    10a8:	3f ef       	ldi	r19, 0xFF	; 255
    10aa:	4f e7       	ldi	r20, 0x7F	; 127
    10ac:	57 e4       	ldi	r21, 0x47	; 71
    10ae:	0e 94 20 0c 	call	0x1840	; 0x1840 <__gtsf2>
    10b2:	18 16       	cp	r1, r24
    10b4:	4c f5       	brge	.+82     	; 0x1108 <main+0x6b2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    10b6:	6b 85       	ldd	r22, Y+11	; 0x0b
    10b8:	7c 85       	ldd	r23, Y+12	; 0x0c
    10ba:	8d 85       	ldd	r24, Y+13	; 0x0d
    10bc:	9e 85       	ldd	r25, Y+14	; 0x0e
    10be:	20 e0       	ldi	r18, 0x00	; 0
    10c0:	30 e0       	ldi	r19, 0x00	; 0
    10c2:	40 e2       	ldi	r20, 0x20	; 32
    10c4:	51 e4       	ldi	r21, 0x41	; 65
    10c6:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <__mulsf3>
    10ca:	dc 01       	movw	r26, r24
    10cc:	cb 01       	movw	r24, r22
    10ce:	bc 01       	movw	r22, r24
    10d0:	cd 01       	movw	r24, r26
    10d2:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixunssfsi>
    10d6:	dc 01       	movw	r26, r24
    10d8:	cb 01       	movw	r24, r22
    10da:	9e 83       	std	Y+6, r25	; 0x06
    10dc:	8d 83       	std	Y+5, r24	; 0x05
    10de:	0f c0       	rjmp	.+30     	; 0x10fe <main+0x6a8>
    10e0:	80 e9       	ldi	r24, 0x90	; 144
    10e2:	91 e0       	ldi	r25, 0x01	; 1
    10e4:	9c 83       	std	Y+4, r25	; 0x04
    10e6:	8b 83       	std	Y+3, r24	; 0x03
    10e8:	8b 81       	ldd	r24, Y+3	; 0x03
    10ea:	9c 81       	ldd	r25, Y+4	; 0x04
    10ec:	01 97       	sbiw	r24, 0x01	; 1
    10ee:	f1 f7       	brne	.-4      	; 0x10ec <main+0x696>
    10f0:	9c 83       	std	Y+4, r25	; 0x04
    10f2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    10f4:	8d 81       	ldd	r24, Y+5	; 0x05
    10f6:	9e 81       	ldd	r25, Y+6	; 0x06
    10f8:	01 97       	sbiw	r24, 0x01	; 1
    10fa:	9e 83       	std	Y+6, r25	; 0x06
    10fc:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    10fe:	8d 81       	ldd	r24, Y+5	; 0x05
    1100:	9e 81       	ldd	r25, Y+6	; 0x06
    1102:	00 97       	sbiw	r24, 0x00	; 0
    1104:	69 f7       	brne	.-38     	; 0x10e0 <main+0x68a>
    1106:	14 c0       	rjmp	.+40     	; 0x1130 <main+0x6da>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1108:	6f 81       	ldd	r22, Y+7	; 0x07
    110a:	78 85       	ldd	r23, Y+8	; 0x08
    110c:	89 85       	ldd	r24, Y+9	; 0x09
    110e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1110:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixunssfsi>
    1114:	dc 01       	movw	r26, r24
    1116:	cb 01       	movw	r24, r22
    1118:	9e 83       	std	Y+6, r25	; 0x06
    111a:	8d 83       	std	Y+5, r24	; 0x05
    111c:	8d 81       	ldd	r24, Y+5	; 0x05
    111e:	9e 81       	ldd	r25, Y+6	; 0x06
    1120:	9a 83       	std	Y+2, r25	; 0x02
    1122:	89 83       	std	Y+1, r24	; 0x01
    1124:	89 81       	ldd	r24, Y+1	; 0x01
    1126:	9a 81       	ldd	r25, Y+2	; 0x02
    1128:	01 97       	sbiw	r24, 0x01	; 1
    112a:	f1 f7       	brne	.-4      	; 0x1128 <main+0x6d2>
    112c:	9a 83       	std	Y+2, r25	; 0x02
    112e:	89 83       	std	Y+1, r24	; 0x01
            _delay_ms(5);
            PORTC |= _BV(motorPin);
    1130:	a8 e2       	ldi	r26, 0x28	; 40
    1132:	b0 e0       	ldi	r27, 0x00	; 0
    1134:	e8 e2       	ldi	r30, 0x28	; 40
    1136:	f0 e0       	ldi	r31, 0x00	; 0
    1138:	80 81       	ld	r24, Z
    113a:	88 60       	ori	r24, 0x08	; 8
    113c:	8c 93       	st	X, r24
            lengteklokje = 0;
    113e:	10 92 0b 02 	sts	0x020B, r1
    1142:	10 92 0a 02 	sts	0x020A, r1
    1146:	ab cc       	rjmp	.-1706   	; 0xa9e <main+0x48>

00001148 <__fixunssfsi>:
    1148:	ef 92       	push	r14
    114a:	ff 92       	push	r15
    114c:	0f 93       	push	r16
    114e:	1f 93       	push	r17
    1150:	7b 01       	movw	r14, r22
    1152:	8c 01       	movw	r16, r24
    1154:	20 e0       	ldi	r18, 0x00	; 0
    1156:	30 e0       	ldi	r19, 0x00	; 0
    1158:	40 e0       	ldi	r20, 0x00	; 0
    115a:	5f e4       	ldi	r21, 0x4F	; 79
    115c:	0e 94 50 0c 	call	0x18a0	; 0x18a0 <__gesf2>
    1160:	88 23       	and	r24, r24
    1162:	8c f0       	brlt	.+34     	; 0x1186 <__fixunssfsi+0x3e>
    1164:	c8 01       	movw	r24, r16
    1166:	b7 01       	movw	r22, r14
    1168:	20 e0       	ldi	r18, 0x00	; 0
    116a:	30 e0       	ldi	r19, 0x00	; 0
    116c:	40 e0       	ldi	r20, 0x00	; 0
    116e:	5f e4       	ldi	r21, 0x4F	; 79
    1170:	0e 94 1c 0a 	call	0x1438	; 0x1438 <__subsf3>
    1174:	0e 94 0e 0d 	call	0x1a1c	; 0x1a1c <__fixsfsi>
    1178:	9b 01       	movw	r18, r22
    117a:	ac 01       	movw	r20, r24
    117c:	20 50       	subi	r18, 0x00	; 0
    117e:	30 40       	sbci	r19, 0x00	; 0
    1180:	40 40       	sbci	r20, 0x00	; 0
    1182:	50 48       	sbci	r21, 0x80	; 128
    1184:	06 c0       	rjmp	.+12     	; 0x1192 <__fixunssfsi+0x4a>
    1186:	c8 01       	movw	r24, r16
    1188:	b7 01       	movw	r22, r14
    118a:	0e 94 0e 0d 	call	0x1a1c	; 0x1a1c <__fixsfsi>
    118e:	9b 01       	movw	r18, r22
    1190:	ac 01       	movw	r20, r24
    1192:	b9 01       	movw	r22, r18
    1194:	ca 01       	movw	r24, r20
    1196:	1f 91       	pop	r17
    1198:	0f 91       	pop	r16
    119a:	ff 90       	pop	r15
    119c:	ef 90       	pop	r14
    119e:	08 95       	ret

000011a0 <_fpadd_parts>:
    11a0:	a0 e0       	ldi	r26, 0x00	; 0
    11a2:	b0 e0       	ldi	r27, 0x00	; 0
    11a4:	e6 ed       	ldi	r30, 0xD6	; 214
    11a6:	f8 e0       	ldi	r31, 0x08	; 8
    11a8:	0c 94 76 0f 	jmp	0x1eec	; 0x1eec <__prologue_saves__>
    11ac:	dc 01       	movw	r26, r24
    11ae:	2b 01       	movw	r4, r22
    11b0:	fa 01       	movw	r30, r20
    11b2:	9c 91       	ld	r25, X
    11b4:	92 30       	cpi	r25, 0x02	; 2
    11b6:	08 f4       	brcc	.+2      	; 0x11ba <_fpadd_parts+0x1a>
    11b8:	39 c1       	rjmp	.+626    	; 0x142c <_fpadd_parts+0x28c>
    11ba:	eb 01       	movw	r28, r22
    11bc:	88 81       	ld	r24, Y
    11be:	82 30       	cpi	r24, 0x02	; 2
    11c0:	08 f4       	brcc	.+2      	; 0x11c4 <_fpadd_parts+0x24>
    11c2:	33 c1       	rjmp	.+614    	; 0x142a <_fpadd_parts+0x28a>
    11c4:	94 30       	cpi	r25, 0x04	; 4
    11c6:	69 f4       	brne	.+26     	; 0x11e2 <_fpadd_parts+0x42>
    11c8:	84 30       	cpi	r24, 0x04	; 4
    11ca:	09 f0       	breq	.+2      	; 0x11ce <_fpadd_parts+0x2e>
    11cc:	2f c1       	rjmp	.+606    	; 0x142c <_fpadd_parts+0x28c>
    11ce:	11 96       	adiw	r26, 0x01	; 1
    11d0:	9c 91       	ld	r25, X
    11d2:	11 97       	sbiw	r26, 0x01	; 1
    11d4:	89 81       	ldd	r24, Y+1	; 0x01
    11d6:	98 17       	cp	r25, r24
    11d8:	09 f4       	brne	.+2      	; 0x11dc <_fpadd_parts+0x3c>
    11da:	28 c1       	rjmp	.+592    	; 0x142c <_fpadd_parts+0x28c>
    11dc:	a0 e0       	ldi	r26, 0x00	; 0
    11de:	b1 e0       	ldi	r27, 0x01	; 1
    11e0:	25 c1       	rjmp	.+586    	; 0x142c <_fpadd_parts+0x28c>
    11e2:	84 30       	cpi	r24, 0x04	; 4
    11e4:	09 f4       	brne	.+2      	; 0x11e8 <_fpadd_parts+0x48>
    11e6:	21 c1       	rjmp	.+578    	; 0x142a <_fpadd_parts+0x28a>
    11e8:	82 30       	cpi	r24, 0x02	; 2
    11ea:	a9 f4       	brne	.+42     	; 0x1216 <_fpadd_parts+0x76>
    11ec:	92 30       	cpi	r25, 0x02	; 2
    11ee:	09 f0       	breq	.+2      	; 0x11f2 <_fpadd_parts+0x52>
    11f0:	1d c1       	rjmp	.+570    	; 0x142c <_fpadd_parts+0x28c>
    11f2:	9a 01       	movw	r18, r20
    11f4:	ad 01       	movw	r20, r26
    11f6:	88 e0       	ldi	r24, 0x08	; 8
    11f8:	ea 01       	movw	r28, r20
    11fa:	09 90       	ld	r0, Y+
    11fc:	ae 01       	movw	r20, r28
    11fe:	e9 01       	movw	r28, r18
    1200:	09 92       	st	Y+, r0
    1202:	9e 01       	movw	r18, r28
    1204:	81 50       	subi	r24, 0x01	; 1
    1206:	c1 f7       	brne	.-16     	; 0x11f8 <_fpadd_parts+0x58>
    1208:	e2 01       	movw	r28, r4
    120a:	89 81       	ldd	r24, Y+1	; 0x01
    120c:	11 96       	adiw	r26, 0x01	; 1
    120e:	9c 91       	ld	r25, X
    1210:	89 23       	and	r24, r25
    1212:	81 83       	std	Z+1, r24	; 0x01
    1214:	08 c1       	rjmp	.+528    	; 0x1426 <_fpadd_parts+0x286>
    1216:	92 30       	cpi	r25, 0x02	; 2
    1218:	09 f4       	brne	.+2      	; 0x121c <_fpadd_parts+0x7c>
    121a:	07 c1       	rjmp	.+526    	; 0x142a <_fpadd_parts+0x28a>
    121c:	12 96       	adiw	r26, 0x02	; 2
    121e:	2d 90       	ld	r2, X+
    1220:	3c 90       	ld	r3, X
    1222:	13 97       	sbiw	r26, 0x03	; 3
    1224:	eb 01       	movw	r28, r22
    1226:	8a 81       	ldd	r24, Y+2	; 0x02
    1228:	9b 81       	ldd	r25, Y+3	; 0x03
    122a:	14 96       	adiw	r26, 0x04	; 4
    122c:	ad 90       	ld	r10, X+
    122e:	bd 90       	ld	r11, X+
    1230:	cd 90       	ld	r12, X+
    1232:	dc 90       	ld	r13, X
    1234:	17 97       	sbiw	r26, 0x07	; 7
    1236:	ec 80       	ldd	r14, Y+4	; 0x04
    1238:	fd 80       	ldd	r15, Y+5	; 0x05
    123a:	0e 81       	ldd	r16, Y+6	; 0x06
    123c:	1f 81       	ldd	r17, Y+7	; 0x07
    123e:	91 01       	movw	r18, r2
    1240:	28 1b       	sub	r18, r24
    1242:	39 0b       	sbc	r19, r25
    1244:	b9 01       	movw	r22, r18
    1246:	37 ff       	sbrs	r19, 7
    1248:	04 c0       	rjmp	.+8      	; 0x1252 <_fpadd_parts+0xb2>
    124a:	66 27       	eor	r22, r22
    124c:	77 27       	eor	r23, r23
    124e:	62 1b       	sub	r22, r18
    1250:	73 0b       	sbc	r23, r19
    1252:	60 32       	cpi	r22, 0x20	; 32
    1254:	71 05       	cpc	r23, r1
    1256:	0c f0       	brlt	.+2      	; 0x125a <_fpadd_parts+0xba>
    1258:	61 c0       	rjmp	.+194    	; 0x131c <_fpadd_parts+0x17c>
    125a:	12 16       	cp	r1, r18
    125c:	13 06       	cpc	r1, r19
    125e:	6c f5       	brge	.+90     	; 0x12ba <_fpadd_parts+0x11a>
    1260:	37 01       	movw	r6, r14
    1262:	48 01       	movw	r8, r16
    1264:	06 2e       	mov	r0, r22
    1266:	04 c0       	rjmp	.+8      	; 0x1270 <_fpadd_parts+0xd0>
    1268:	96 94       	lsr	r9
    126a:	87 94       	ror	r8
    126c:	77 94       	ror	r7
    126e:	67 94       	ror	r6
    1270:	0a 94       	dec	r0
    1272:	d2 f7       	brpl	.-12     	; 0x1268 <_fpadd_parts+0xc8>
    1274:	21 e0       	ldi	r18, 0x01	; 1
    1276:	30 e0       	ldi	r19, 0x00	; 0
    1278:	40 e0       	ldi	r20, 0x00	; 0
    127a:	50 e0       	ldi	r21, 0x00	; 0
    127c:	04 c0       	rjmp	.+8      	; 0x1286 <_fpadd_parts+0xe6>
    127e:	22 0f       	add	r18, r18
    1280:	33 1f       	adc	r19, r19
    1282:	44 1f       	adc	r20, r20
    1284:	55 1f       	adc	r21, r21
    1286:	6a 95       	dec	r22
    1288:	d2 f7       	brpl	.-12     	; 0x127e <_fpadd_parts+0xde>
    128a:	21 50       	subi	r18, 0x01	; 1
    128c:	30 40       	sbci	r19, 0x00	; 0
    128e:	40 40       	sbci	r20, 0x00	; 0
    1290:	50 40       	sbci	r21, 0x00	; 0
    1292:	2e 21       	and	r18, r14
    1294:	3f 21       	and	r19, r15
    1296:	40 23       	and	r20, r16
    1298:	51 23       	and	r21, r17
    129a:	21 15       	cp	r18, r1
    129c:	31 05       	cpc	r19, r1
    129e:	41 05       	cpc	r20, r1
    12a0:	51 05       	cpc	r21, r1
    12a2:	21 f0       	breq	.+8      	; 0x12ac <_fpadd_parts+0x10c>
    12a4:	21 e0       	ldi	r18, 0x01	; 1
    12a6:	30 e0       	ldi	r19, 0x00	; 0
    12a8:	40 e0       	ldi	r20, 0x00	; 0
    12aa:	50 e0       	ldi	r21, 0x00	; 0
    12ac:	79 01       	movw	r14, r18
    12ae:	8a 01       	movw	r16, r20
    12b0:	e6 28       	or	r14, r6
    12b2:	f7 28       	or	r15, r7
    12b4:	08 29       	or	r16, r8
    12b6:	19 29       	or	r17, r9
    12b8:	3c c0       	rjmp	.+120    	; 0x1332 <_fpadd_parts+0x192>
    12ba:	23 2b       	or	r18, r19
    12bc:	d1 f1       	breq	.+116    	; 0x1332 <_fpadd_parts+0x192>
    12be:	26 0e       	add	r2, r22
    12c0:	37 1e       	adc	r3, r23
    12c2:	35 01       	movw	r6, r10
    12c4:	46 01       	movw	r8, r12
    12c6:	06 2e       	mov	r0, r22
    12c8:	04 c0       	rjmp	.+8      	; 0x12d2 <_fpadd_parts+0x132>
    12ca:	96 94       	lsr	r9
    12cc:	87 94       	ror	r8
    12ce:	77 94       	ror	r7
    12d0:	67 94       	ror	r6
    12d2:	0a 94       	dec	r0
    12d4:	d2 f7       	brpl	.-12     	; 0x12ca <_fpadd_parts+0x12a>
    12d6:	21 e0       	ldi	r18, 0x01	; 1
    12d8:	30 e0       	ldi	r19, 0x00	; 0
    12da:	40 e0       	ldi	r20, 0x00	; 0
    12dc:	50 e0       	ldi	r21, 0x00	; 0
    12de:	04 c0       	rjmp	.+8      	; 0x12e8 <_fpadd_parts+0x148>
    12e0:	22 0f       	add	r18, r18
    12e2:	33 1f       	adc	r19, r19
    12e4:	44 1f       	adc	r20, r20
    12e6:	55 1f       	adc	r21, r21
    12e8:	6a 95       	dec	r22
    12ea:	d2 f7       	brpl	.-12     	; 0x12e0 <_fpadd_parts+0x140>
    12ec:	21 50       	subi	r18, 0x01	; 1
    12ee:	30 40       	sbci	r19, 0x00	; 0
    12f0:	40 40       	sbci	r20, 0x00	; 0
    12f2:	50 40       	sbci	r21, 0x00	; 0
    12f4:	2a 21       	and	r18, r10
    12f6:	3b 21       	and	r19, r11
    12f8:	4c 21       	and	r20, r12
    12fa:	5d 21       	and	r21, r13
    12fc:	21 15       	cp	r18, r1
    12fe:	31 05       	cpc	r19, r1
    1300:	41 05       	cpc	r20, r1
    1302:	51 05       	cpc	r21, r1
    1304:	21 f0       	breq	.+8      	; 0x130e <_fpadd_parts+0x16e>
    1306:	21 e0       	ldi	r18, 0x01	; 1
    1308:	30 e0       	ldi	r19, 0x00	; 0
    130a:	40 e0       	ldi	r20, 0x00	; 0
    130c:	50 e0       	ldi	r21, 0x00	; 0
    130e:	59 01       	movw	r10, r18
    1310:	6a 01       	movw	r12, r20
    1312:	a6 28       	or	r10, r6
    1314:	b7 28       	or	r11, r7
    1316:	c8 28       	or	r12, r8
    1318:	d9 28       	or	r13, r9
    131a:	0b c0       	rjmp	.+22     	; 0x1332 <_fpadd_parts+0x192>
    131c:	82 15       	cp	r24, r2
    131e:	93 05       	cpc	r25, r3
    1320:	2c f0       	brlt	.+10     	; 0x132c <_fpadd_parts+0x18c>
    1322:	1c 01       	movw	r2, r24
    1324:	aa 24       	eor	r10, r10
    1326:	bb 24       	eor	r11, r11
    1328:	65 01       	movw	r12, r10
    132a:	03 c0       	rjmp	.+6      	; 0x1332 <_fpadd_parts+0x192>
    132c:	ee 24       	eor	r14, r14
    132e:	ff 24       	eor	r15, r15
    1330:	87 01       	movw	r16, r14
    1332:	11 96       	adiw	r26, 0x01	; 1
    1334:	9c 91       	ld	r25, X
    1336:	d2 01       	movw	r26, r4
    1338:	11 96       	adiw	r26, 0x01	; 1
    133a:	8c 91       	ld	r24, X
    133c:	98 17       	cp	r25, r24
    133e:	09 f4       	brne	.+2      	; 0x1342 <_fpadd_parts+0x1a2>
    1340:	45 c0       	rjmp	.+138    	; 0x13cc <_fpadd_parts+0x22c>
    1342:	99 23       	and	r25, r25
    1344:	39 f0       	breq	.+14     	; 0x1354 <_fpadd_parts+0x1b4>
    1346:	a8 01       	movw	r20, r16
    1348:	97 01       	movw	r18, r14
    134a:	2a 19       	sub	r18, r10
    134c:	3b 09       	sbc	r19, r11
    134e:	4c 09       	sbc	r20, r12
    1350:	5d 09       	sbc	r21, r13
    1352:	06 c0       	rjmp	.+12     	; 0x1360 <_fpadd_parts+0x1c0>
    1354:	a6 01       	movw	r20, r12
    1356:	95 01       	movw	r18, r10
    1358:	2e 19       	sub	r18, r14
    135a:	3f 09       	sbc	r19, r15
    135c:	40 0b       	sbc	r20, r16
    135e:	51 0b       	sbc	r21, r17
    1360:	57 fd       	sbrc	r21, 7
    1362:	08 c0       	rjmp	.+16     	; 0x1374 <_fpadd_parts+0x1d4>
    1364:	11 82       	std	Z+1, r1	; 0x01
    1366:	33 82       	std	Z+3, r3	; 0x03
    1368:	22 82       	std	Z+2, r2	; 0x02
    136a:	24 83       	std	Z+4, r18	; 0x04
    136c:	35 83       	std	Z+5, r19	; 0x05
    136e:	46 83       	std	Z+6, r20	; 0x06
    1370:	57 83       	std	Z+7, r21	; 0x07
    1372:	1d c0       	rjmp	.+58     	; 0x13ae <_fpadd_parts+0x20e>
    1374:	81 e0       	ldi	r24, 0x01	; 1
    1376:	81 83       	std	Z+1, r24	; 0x01
    1378:	33 82       	std	Z+3, r3	; 0x03
    137a:	22 82       	std	Z+2, r2	; 0x02
    137c:	88 27       	eor	r24, r24
    137e:	99 27       	eor	r25, r25
    1380:	dc 01       	movw	r26, r24
    1382:	82 1b       	sub	r24, r18
    1384:	93 0b       	sbc	r25, r19
    1386:	a4 0b       	sbc	r26, r20
    1388:	b5 0b       	sbc	r27, r21
    138a:	84 83       	std	Z+4, r24	; 0x04
    138c:	95 83       	std	Z+5, r25	; 0x05
    138e:	a6 83       	std	Z+6, r26	; 0x06
    1390:	b7 83       	std	Z+7, r27	; 0x07
    1392:	0d c0       	rjmp	.+26     	; 0x13ae <_fpadd_parts+0x20e>
    1394:	22 0f       	add	r18, r18
    1396:	33 1f       	adc	r19, r19
    1398:	44 1f       	adc	r20, r20
    139a:	55 1f       	adc	r21, r21
    139c:	24 83       	std	Z+4, r18	; 0x04
    139e:	35 83       	std	Z+5, r19	; 0x05
    13a0:	46 83       	std	Z+6, r20	; 0x06
    13a2:	57 83       	std	Z+7, r21	; 0x07
    13a4:	82 81       	ldd	r24, Z+2	; 0x02
    13a6:	93 81       	ldd	r25, Z+3	; 0x03
    13a8:	01 97       	sbiw	r24, 0x01	; 1
    13aa:	93 83       	std	Z+3, r25	; 0x03
    13ac:	82 83       	std	Z+2, r24	; 0x02
    13ae:	24 81       	ldd	r18, Z+4	; 0x04
    13b0:	35 81       	ldd	r19, Z+5	; 0x05
    13b2:	46 81       	ldd	r20, Z+6	; 0x06
    13b4:	57 81       	ldd	r21, Z+7	; 0x07
    13b6:	da 01       	movw	r26, r20
    13b8:	c9 01       	movw	r24, r18
    13ba:	01 97       	sbiw	r24, 0x01	; 1
    13bc:	a1 09       	sbc	r26, r1
    13be:	b1 09       	sbc	r27, r1
    13c0:	8f 5f       	subi	r24, 0xFF	; 255
    13c2:	9f 4f       	sbci	r25, 0xFF	; 255
    13c4:	af 4f       	sbci	r26, 0xFF	; 255
    13c6:	bf 43       	sbci	r27, 0x3F	; 63
    13c8:	28 f3       	brcs	.-54     	; 0x1394 <_fpadd_parts+0x1f4>
    13ca:	0b c0       	rjmp	.+22     	; 0x13e2 <_fpadd_parts+0x242>
    13cc:	91 83       	std	Z+1, r25	; 0x01
    13ce:	33 82       	std	Z+3, r3	; 0x03
    13d0:	22 82       	std	Z+2, r2	; 0x02
    13d2:	ea 0c       	add	r14, r10
    13d4:	fb 1c       	adc	r15, r11
    13d6:	0c 1d       	adc	r16, r12
    13d8:	1d 1d       	adc	r17, r13
    13da:	e4 82       	std	Z+4, r14	; 0x04
    13dc:	f5 82       	std	Z+5, r15	; 0x05
    13de:	06 83       	std	Z+6, r16	; 0x06
    13e0:	17 83       	std	Z+7, r17	; 0x07
    13e2:	83 e0       	ldi	r24, 0x03	; 3
    13e4:	80 83       	st	Z, r24
    13e6:	24 81       	ldd	r18, Z+4	; 0x04
    13e8:	35 81       	ldd	r19, Z+5	; 0x05
    13ea:	46 81       	ldd	r20, Z+6	; 0x06
    13ec:	57 81       	ldd	r21, Z+7	; 0x07
    13ee:	57 ff       	sbrs	r21, 7
    13f0:	1a c0       	rjmp	.+52     	; 0x1426 <_fpadd_parts+0x286>
    13f2:	c9 01       	movw	r24, r18
    13f4:	aa 27       	eor	r26, r26
    13f6:	97 fd       	sbrc	r25, 7
    13f8:	a0 95       	com	r26
    13fa:	ba 2f       	mov	r27, r26
    13fc:	81 70       	andi	r24, 0x01	; 1
    13fe:	90 70       	andi	r25, 0x00	; 0
    1400:	a0 70       	andi	r26, 0x00	; 0
    1402:	b0 70       	andi	r27, 0x00	; 0
    1404:	56 95       	lsr	r21
    1406:	47 95       	ror	r20
    1408:	37 95       	ror	r19
    140a:	27 95       	ror	r18
    140c:	82 2b       	or	r24, r18
    140e:	93 2b       	or	r25, r19
    1410:	a4 2b       	or	r26, r20
    1412:	b5 2b       	or	r27, r21
    1414:	84 83       	std	Z+4, r24	; 0x04
    1416:	95 83       	std	Z+5, r25	; 0x05
    1418:	a6 83       	std	Z+6, r26	; 0x06
    141a:	b7 83       	std	Z+7, r27	; 0x07
    141c:	82 81       	ldd	r24, Z+2	; 0x02
    141e:	93 81       	ldd	r25, Z+3	; 0x03
    1420:	01 96       	adiw	r24, 0x01	; 1
    1422:	93 83       	std	Z+3, r25	; 0x03
    1424:	82 83       	std	Z+2, r24	; 0x02
    1426:	df 01       	movw	r26, r30
    1428:	01 c0       	rjmp	.+2      	; 0x142c <_fpadd_parts+0x28c>
    142a:	d2 01       	movw	r26, r4
    142c:	cd 01       	movw	r24, r26
    142e:	cd b7       	in	r28, 0x3d	; 61
    1430:	de b7       	in	r29, 0x3e	; 62
    1432:	e2 e1       	ldi	r30, 0x12	; 18
    1434:	0c 94 92 0f 	jmp	0x1f24	; 0x1f24 <__epilogue_restores__>

00001438 <__subsf3>:
    1438:	a0 e2       	ldi	r26, 0x20	; 32
    143a:	b0 e0       	ldi	r27, 0x00	; 0
    143c:	e2 e2       	ldi	r30, 0x22	; 34
    143e:	fa e0       	ldi	r31, 0x0A	; 10
    1440:	0c 94 82 0f 	jmp	0x1f04	; 0x1f04 <__prologue_saves__+0x18>
    1444:	69 83       	std	Y+1, r22	; 0x01
    1446:	7a 83       	std	Y+2, r23	; 0x02
    1448:	8b 83       	std	Y+3, r24	; 0x03
    144a:	9c 83       	std	Y+4, r25	; 0x04
    144c:	2d 83       	std	Y+5, r18	; 0x05
    144e:	3e 83       	std	Y+6, r19	; 0x06
    1450:	4f 83       	std	Y+7, r20	; 0x07
    1452:	58 87       	std	Y+8, r21	; 0x08
    1454:	e9 e0       	ldi	r30, 0x09	; 9
    1456:	ee 2e       	mov	r14, r30
    1458:	f1 2c       	mov	r15, r1
    145a:	ec 0e       	add	r14, r28
    145c:	fd 1e       	adc	r15, r29
    145e:	ce 01       	movw	r24, r28
    1460:	01 96       	adiw	r24, 0x01	; 1
    1462:	b7 01       	movw	r22, r14
    1464:	0e 94 86 0e 	call	0x1d0c	; 0x1d0c <__unpack_f>
    1468:	8e 01       	movw	r16, r28
    146a:	0f 5e       	subi	r16, 0xEF	; 239
    146c:	1f 4f       	sbci	r17, 0xFF	; 255
    146e:	ce 01       	movw	r24, r28
    1470:	05 96       	adiw	r24, 0x05	; 5
    1472:	b8 01       	movw	r22, r16
    1474:	0e 94 86 0e 	call	0x1d0c	; 0x1d0c <__unpack_f>
    1478:	8a 89       	ldd	r24, Y+18	; 0x12
    147a:	91 e0       	ldi	r25, 0x01	; 1
    147c:	89 27       	eor	r24, r25
    147e:	8a 8b       	std	Y+18, r24	; 0x12
    1480:	c7 01       	movw	r24, r14
    1482:	b8 01       	movw	r22, r16
    1484:	ae 01       	movw	r20, r28
    1486:	47 5e       	subi	r20, 0xE7	; 231
    1488:	5f 4f       	sbci	r21, 0xFF	; 255
    148a:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <_fpadd_parts>
    148e:	0e 94 b1 0d 	call	0x1b62	; 0x1b62 <__pack_f>
    1492:	a0 96       	adiw	r28, 0x20	; 32
    1494:	e6 e0       	ldi	r30, 0x06	; 6
    1496:	0c 94 9e 0f 	jmp	0x1f3c	; 0x1f3c <__epilogue_restores__+0x18>

0000149a <__addsf3>:
    149a:	a0 e2       	ldi	r26, 0x20	; 32
    149c:	b0 e0       	ldi	r27, 0x00	; 0
    149e:	e3 e5       	ldi	r30, 0x53	; 83
    14a0:	fa e0       	ldi	r31, 0x0A	; 10
    14a2:	0c 94 82 0f 	jmp	0x1f04	; 0x1f04 <__prologue_saves__+0x18>
    14a6:	69 83       	std	Y+1, r22	; 0x01
    14a8:	7a 83       	std	Y+2, r23	; 0x02
    14aa:	8b 83       	std	Y+3, r24	; 0x03
    14ac:	9c 83       	std	Y+4, r25	; 0x04
    14ae:	2d 83       	std	Y+5, r18	; 0x05
    14b0:	3e 83       	std	Y+6, r19	; 0x06
    14b2:	4f 83       	std	Y+7, r20	; 0x07
    14b4:	58 87       	std	Y+8, r21	; 0x08
    14b6:	f9 e0       	ldi	r31, 0x09	; 9
    14b8:	ef 2e       	mov	r14, r31
    14ba:	f1 2c       	mov	r15, r1
    14bc:	ec 0e       	add	r14, r28
    14be:	fd 1e       	adc	r15, r29
    14c0:	ce 01       	movw	r24, r28
    14c2:	01 96       	adiw	r24, 0x01	; 1
    14c4:	b7 01       	movw	r22, r14
    14c6:	0e 94 86 0e 	call	0x1d0c	; 0x1d0c <__unpack_f>
    14ca:	8e 01       	movw	r16, r28
    14cc:	0f 5e       	subi	r16, 0xEF	; 239
    14ce:	1f 4f       	sbci	r17, 0xFF	; 255
    14d0:	ce 01       	movw	r24, r28
    14d2:	05 96       	adiw	r24, 0x05	; 5
    14d4:	b8 01       	movw	r22, r16
    14d6:	0e 94 86 0e 	call	0x1d0c	; 0x1d0c <__unpack_f>
    14da:	c7 01       	movw	r24, r14
    14dc:	b8 01       	movw	r22, r16
    14de:	ae 01       	movw	r20, r28
    14e0:	47 5e       	subi	r20, 0xE7	; 231
    14e2:	5f 4f       	sbci	r21, 0xFF	; 255
    14e4:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <_fpadd_parts>
    14e8:	0e 94 b1 0d 	call	0x1b62	; 0x1b62 <__pack_f>
    14ec:	a0 96       	adiw	r28, 0x20	; 32
    14ee:	e6 e0       	ldi	r30, 0x06	; 6
    14f0:	0c 94 9e 0f 	jmp	0x1f3c	; 0x1f3c <__epilogue_restores__+0x18>

000014f4 <__mulsf3>:
    14f4:	a0 e2       	ldi	r26, 0x20	; 32
    14f6:	b0 e0       	ldi	r27, 0x00	; 0
    14f8:	e0 e8       	ldi	r30, 0x80	; 128
    14fa:	fa e0       	ldi	r31, 0x0A	; 10
    14fc:	0c 94 76 0f 	jmp	0x1eec	; 0x1eec <__prologue_saves__>
    1500:	69 83       	std	Y+1, r22	; 0x01
    1502:	7a 83       	std	Y+2, r23	; 0x02
    1504:	8b 83       	std	Y+3, r24	; 0x03
    1506:	9c 83       	std	Y+4, r25	; 0x04
    1508:	2d 83       	std	Y+5, r18	; 0x05
    150a:	3e 83       	std	Y+6, r19	; 0x06
    150c:	4f 83       	std	Y+7, r20	; 0x07
    150e:	58 87       	std	Y+8, r21	; 0x08
    1510:	ce 01       	movw	r24, r28
    1512:	01 96       	adiw	r24, 0x01	; 1
    1514:	be 01       	movw	r22, r28
    1516:	67 5f       	subi	r22, 0xF7	; 247
    1518:	7f 4f       	sbci	r23, 0xFF	; 255
    151a:	0e 94 86 0e 	call	0x1d0c	; 0x1d0c <__unpack_f>
    151e:	ce 01       	movw	r24, r28
    1520:	05 96       	adiw	r24, 0x05	; 5
    1522:	be 01       	movw	r22, r28
    1524:	6f 5e       	subi	r22, 0xEF	; 239
    1526:	7f 4f       	sbci	r23, 0xFF	; 255
    1528:	0e 94 86 0e 	call	0x1d0c	; 0x1d0c <__unpack_f>
    152c:	99 85       	ldd	r25, Y+9	; 0x09
    152e:	92 30       	cpi	r25, 0x02	; 2
    1530:	88 f0       	brcs	.+34     	; 0x1554 <__mulsf3+0x60>
    1532:	89 89       	ldd	r24, Y+17	; 0x11
    1534:	82 30       	cpi	r24, 0x02	; 2
    1536:	c8 f0       	brcs	.+50     	; 0x156a <__mulsf3+0x76>
    1538:	94 30       	cpi	r25, 0x04	; 4
    153a:	19 f4       	brne	.+6      	; 0x1542 <__mulsf3+0x4e>
    153c:	82 30       	cpi	r24, 0x02	; 2
    153e:	51 f4       	brne	.+20     	; 0x1554 <__mulsf3+0x60>
    1540:	04 c0       	rjmp	.+8      	; 0x154a <__mulsf3+0x56>
    1542:	84 30       	cpi	r24, 0x04	; 4
    1544:	29 f4       	brne	.+10     	; 0x1550 <__mulsf3+0x5c>
    1546:	92 30       	cpi	r25, 0x02	; 2
    1548:	81 f4       	brne	.+32     	; 0x156a <__mulsf3+0x76>
    154a:	80 e0       	ldi	r24, 0x00	; 0
    154c:	91 e0       	ldi	r25, 0x01	; 1
    154e:	c6 c0       	rjmp	.+396    	; 0x16dc <__mulsf3+0x1e8>
    1550:	92 30       	cpi	r25, 0x02	; 2
    1552:	49 f4       	brne	.+18     	; 0x1566 <__mulsf3+0x72>
    1554:	20 e0       	ldi	r18, 0x00	; 0
    1556:	9a 85       	ldd	r25, Y+10	; 0x0a
    1558:	8a 89       	ldd	r24, Y+18	; 0x12
    155a:	98 13       	cpse	r25, r24
    155c:	21 e0       	ldi	r18, 0x01	; 1
    155e:	2a 87       	std	Y+10, r18	; 0x0a
    1560:	ce 01       	movw	r24, r28
    1562:	09 96       	adiw	r24, 0x09	; 9
    1564:	bb c0       	rjmp	.+374    	; 0x16dc <__mulsf3+0x1e8>
    1566:	82 30       	cpi	r24, 0x02	; 2
    1568:	49 f4       	brne	.+18     	; 0x157c <__mulsf3+0x88>
    156a:	20 e0       	ldi	r18, 0x00	; 0
    156c:	9a 85       	ldd	r25, Y+10	; 0x0a
    156e:	8a 89       	ldd	r24, Y+18	; 0x12
    1570:	98 13       	cpse	r25, r24
    1572:	21 e0       	ldi	r18, 0x01	; 1
    1574:	2a 8b       	std	Y+18, r18	; 0x12
    1576:	ce 01       	movw	r24, r28
    1578:	41 96       	adiw	r24, 0x11	; 17
    157a:	b0 c0       	rjmp	.+352    	; 0x16dc <__mulsf3+0x1e8>
    157c:	2d 84       	ldd	r2, Y+13	; 0x0d
    157e:	3e 84       	ldd	r3, Y+14	; 0x0e
    1580:	4f 84       	ldd	r4, Y+15	; 0x0f
    1582:	58 88       	ldd	r5, Y+16	; 0x10
    1584:	6d 88       	ldd	r6, Y+21	; 0x15
    1586:	7e 88       	ldd	r7, Y+22	; 0x16
    1588:	8f 88       	ldd	r8, Y+23	; 0x17
    158a:	98 8c       	ldd	r9, Y+24	; 0x18
    158c:	ee 24       	eor	r14, r14
    158e:	ff 24       	eor	r15, r15
    1590:	87 01       	movw	r16, r14
    1592:	aa 24       	eor	r10, r10
    1594:	bb 24       	eor	r11, r11
    1596:	65 01       	movw	r12, r10
    1598:	40 e0       	ldi	r20, 0x00	; 0
    159a:	50 e0       	ldi	r21, 0x00	; 0
    159c:	60 e0       	ldi	r22, 0x00	; 0
    159e:	70 e0       	ldi	r23, 0x00	; 0
    15a0:	e0 e0       	ldi	r30, 0x00	; 0
    15a2:	f0 e0       	ldi	r31, 0x00	; 0
    15a4:	c1 01       	movw	r24, r2
    15a6:	81 70       	andi	r24, 0x01	; 1
    15a8:	90 70       	andi	r25, 0x00	; 0
    15aa:	89 2b       	or	r24, r25
    15ac:	e9 f0       	breq	.+58     	; 0x15e8 <__mulsf3+0xf4>
    15ae:	e6 0c       	add	r14, r6
    15b0:	f7 1c       	adc	r15, r7
    15b2:	08 1d       	adc	r16, r8
    15b4:	19 1d       	adc	r17, r9
    15b6:	9a 01       	movw	r18, r20
    15b8:	ab 01       	movw	r20, r22
    15ba:	2a 0d       	add	r18, r10
    15bc:	3b 1d       	adc	r19, r11
    15be:	4c 1d       	adc	r20, r12
    15c0:	5d 1d       	adc	r21, r13
    15c2:	80 e0       	ldi	r24, 0x00	; 0
    15c4:	90 e0       	ldi	r25, 0x00	; 0
    15c6:	a0 e0       	ldi	r26, 0x00	; 0
    15c8:	b0 e0       	ldi	r27, 0x00	; 0
    15ca:	e6 14       	cp	r14, r6
    15cc:	f7 04       	cpc	r15, r7
    15ce:	08 05       	cpc	r16, r8
    15d0:	19 05       	cpc	r17, r9
    15d2:	20 f4       	brcc	.+8      	; 0x15dc <__mulsf3+0xe8>
    15d4:	81 e0       	ldi	r24, 0x01	; 1
    15d6:	90 e0       	ldi	r25, 0x00	; 0
    15d8:	a0 e0       	ldi	r26, 0x00	; 0
    15da:	b0 e0       	ldi	r27, 0x00	; 0
    15dc:	ba 01       	movw	r22, r20
    15de:	a9 01       	movw	r20, r18
    15e0:	48 0f       	add	r20, r24
    15e2:	59 1f       	adc	r21, r25
    15e4:	6a 1f       	adc	r22, r26
    15e6:	7b 1f       	adc	r23, r27
    15e8:	aa 0c       	add	r10, r10
    15ea:	bb 1c       	adc	r11, r11
    15ec:	cc 1c       	adc	r12, r12
    15ee:	dd 1c       	adc	r13, r13
    15f0:	97 fe       	sbrs	r9, 7
    15f2:	08 c0       	rjmp	.+16     	; 0x1604 <__mulsf3+0x110>
    15f4:	81 e0       	ldi	r24, 0x01	; 1
    15f6:	90 e0       	ldi	r25, 0x00	; 0
    15f8:	a0 e0       	ldi	r26, 0x00	; 0
    15fa:	b0 e0       	ldi	r27, 0x00	; 0
    15fc:	a8 2a       	or	r10, r24
    15fe:	b9 2a       	or	r11, r25
    1600:	ca 2a       	or	r12, r26
    1602:	db 2a       	or	r13, r27
    1604:	31 96       	adiw	r30, 0x01	; 1
    1606:	e0 32       	cpi	r30, 0x20	; 32
    1608:	f1 05       	cpc	r31, r1
    160a:	49 f0       	breq	.+18     	; 0x161e <__mulsf3+0x12a>
    160c:	66 0c       	add	r6, r6
    160e:	77 1c       	adc	r7, r7
    1610:	88 1c       	adc	r8, r8
    1612:	99 1c       	adc	r9, r9
    1614:	56 94       	lsr	r5
    1616:	47 94       	ror	r4
    1618:	37 94       	ror	r3
    161a:	27 94       	ror	r2
    161c:	c3 cf       	rjmp	.-122    	; 0x15a4 <__mulsf3+0xb0>
    161e:	fa 85       	ldd	r31, Y+10	; 0x0a
    1620:	ea 89       	ldd	r30, Y+18	; 0x12
    1622:	2b 89       	ldd	r18, Y+19	; 0x13
    1624:	3c 89       	ldd	r19, Y+20	; 0x14
    1626:	8b 85       	ldd	r24, Y+11	; 0x0b
    1628:	9c 85       	ldd	r25, Y+12	; 0x0c
    162a:	28 0f       	add	r18, r24
    162c:	39 1f       	adc	r19, r25
    162e:	2e 5f       	subi	r18, 0xFE	; 254
    1630:	3f 4f       	sbci	r19, 0xFF	; 255
    1632:	17 c0       	rjmp	.+46     	; 0x1662 <__mulsf3+0x16e>
    1634:	ca 01       	movw	r24, r20
    1636:	81 70       	andi	r24, 0x01	; 1
    1638:	90 70       	andi	r25, 0x00	; 0
    163a:	89 2b       	or	r24, r25
    163c:	61 f0       	breq	.+24     	; 0x1656 <__mulsf3+0x162>
    163e:	16 95       	lsr	r17
    1640:	07 95       	ror	r16
    1642:	f7 94       	ror	r15
    1644:	e7 94       	ror	r14
    1646:	80 e0       	ldi	r24, 0x00	; 0
    1648:	90 e0       	ldi	r25, 0x00	; 0
    164a:	a0 e0       	ldi	r26, 0x00	; 0
    164c:	b0 e8       	ldi	r27, 0x80	; 128
    164e:	e8 2a       	or	r14, r24
    1650:	f9 2a       	or	r15, r25
    1652:	0a 2b       	or	r16, r26
    1654:	1b 2b       	or	r17, r27
    1656:	76 95       	lsr	r23
    1658:	67 95       	ror	r22
    165a:	57 95       	ror	r21
    165c:	47 95       	ror	r20
    165e:	2f 5f       	subi	r18, 0xFF	; 255
    1660:	3f 4f       	sbci	r19, 0xFF	; 255
    1662:	77 fd       	sbrc	r23, 7
    1664:	e7 cf       	rjmp	.-50     	; 0x1634 <__mulsf3+0x140>
    1666:	0c c0       	rjmp	.+24     	; 0x1680 <__mulsf3+0x18c>
    1668:	44 0f       	add	r20, r20
    166a:	55 1f       	adc	r21, r21
    166c:	66 1f       	adc	r22, r22
    166e:	77 1f       	adc	r23, r23
    1670:	17 fd       	sbrc	r17, 7
    1672:	41 60       	ori	r20, 0x01	; 1
    1674:	ee 0c       	add	r14, r14
    1676:	ff 1c       	adc	r15, r15
    1678:	00 1f       	adc	r16, r16
    167a:	11 1f       	adc	r17, r17
    167c:	21 50       	subi	r18, 0x01	; 1
    167e:	30 40       	sbci	r19, 0x00	; 0
    1680:	40 30       	cpi	r20, 0x00	; 0
    1682:	90 e0       	ldi	r25, 0x00	; 0
    1684:	59 07       	cpc	r21, r25
    1686:	90 e0       	ldi	r25, 0x00	; 0
    1688:	69 07       	cpc	r22, r25
    168a:	90 e4       	ldi	r25, 0x40	; 64
    168c:	79 07       	cpc	r23, r25
    168e:	60 f3       	brcs	.-40     	; 0x1668 <__mulsf3+0x174>
    1690:	2b 8f       	std	Y+27, r18	; 0x1b
    1692:	3c 8f       	std	Y+28, r19	; 0x1c
    1694:	db 01       	movw	r26, r22
    1696:	ca 01       	movw	r24, r20
    1698:	8f 77       	andi	r24, 0x7F	; 127
    169a:	90 70       	andi	r25, 0x00	; 0
    169c:	a0 70       	andi	r26, 0x00	; 0
    169e:	b0 70       	andi	r27, 0x00	; 0
    16a0:	80 34       	cpi	r24, 0x40	; 64
    16a2:	91 05       	cpc	r25, r1
    16a4:	a1 05       	cpc	r26, r1
    16a6:	b1 05       	cpc	r27, r1
    16a8:	61 f4       	brne	.+24     	; 0x16c2 <__mulsf3+0x1ce>
    16aa:	47 fd       	sbrc	r20, 7
    16ac:	0a c0       	rjmp	.+20     	; 0x16c2 <__mulsf3+0x1ce>
    16ae:	e1 14       	cp	r14, r1
    16b0:	f1 04       	cpc	r15, r1
    16b2:	01 05       	cpc	r16, r1
    16b4:	11 05       	cpc	r17, r1
    16b6:	29 f0       	breq	.+10     	; 0x16c2 <__mulsf3+0x1ce>
    16b8:	40 5c       	subi	r20, 0xC0	; 192
    16ba:	5f 4f       	sbci	r21, 0xFF	; 255
    16bc:	6f 4f       	sbci	r22, 0xFF	; 255
    16be:	7f 4f       	sbci	r23, 0xFF	; 255
    16c0:	40 78       	andi	r20, 0x80	; 128
    16c2:	1a 8e       	std	Y+26, r1	; 0x1a
    16c4:	fe 17       	cp	r31, r30
    16c6:	11 f0       	breq	.+4      	; 0x16cc <__mulsf3+0x1d8>
    16c8:	81 e0       	ldi	r24, 0x01	; 1
    16ca:	8a 8f       	std	Y+26, r24	; 0x1a
    16cc:	4d 8f       	std	Y+29, r20	; 0x1d
    16ce:	5e 8f       	std	Y+30, r21	; 0x1e
    16d0:	6f 8f       	std	Y+31, r22	; 0x1f
    16d2:	78 a3       	std	Y+32, r23	; 0x20
    16d4:	83 e0       	ldi	r24, 0x03	; 3
    16d6:	89 8f       	std	Y+25, r24	; 0x19
    16d8:	ce 01       	movw	r24, r28
    16da:	49 96       	adiw	r24, 0x19	; 25
    16dc:	0e 94 b1 0d 	call	0x1b62	; 0x1b62 <__pack_f>
    16e0:	a0 96       	adiw	r28, 0x20	; 32
    16e2:	e2 e1       	ldi	r30, 0x12	; 18
    16e4:	0c 94 92 0f 	jmp	0x1f24	; 0x1f24 <__epilogue_restores__>

000016e8 <__divsf3>:
    16e8:	a8 e1       	ldi	r26, 0x18	; 24
    16ea:	b0 e0       	ldi	r27, 0x00	; 0
    16ec:	ea e7       	ldi	r30, 0x7A	; 122
    16ee:	fb e0       	ldi	r31, 0x0B	; 11
    16f0:	0c 94 7e 0f 	jmp	0x1efc	; 0x1efc <__prologue_saves__+0x10>
    16f4:	69 83       	std	Y+1, r22	; 0x01
    16f6:	7a 83       	std	Y+2, r23	; 0x02
    16f8:	8b 83       	std	Y+3, r24	; 0x03
    16fa:	9c 83       	std	Y+4, r25	; 0x04
    16fc:	2d 83       	std	Y+5, r18	; 0x05
    16fe:	3e 83       	std	Y+6, r19	; 0x06
    1700:	4f 83       	std	Y+7, r20	; 0x07
    1702:	58 87       	std	Y+8, r21	; 0x08
    1704:	b9 e0       	ldi	r27, 0x09	; 9
    1706:	eb 2e       	mov	r14, r27
    1708:	f1 2c       	mov	r15, r1
    170a:	ec 0e       	add	r14, r28
    170c:	fd 1e       	adc	r15, r29
    170e:	ce 01       	movw	r24, r28
    1710:	01 96       	adiw	r24, 0x01	; 1
    1712:	b7 01       	movw	r22, r14
    1714:	0e 94 86 0e 	call	0x1d0c	; 0x1d0c <__unpack_f>
    1718:	8e 01       	movw	r16, r28
    171a:	0f 5e       	subi	r16, 0xEF	; 239
    171c:	1f 4f       	sbci	r17, 0xFF	; 255
    171e:	ce 01       	movw	r24, r28
    1720:	05 96       	adiw	r24, 0x05	; 5
    1722:	b8 01       	movw	r22, r16
    1724:	0e 94 86 0e 	call	0x1d0c	; 0x1d0c <__unpack_f>
    1728:	29 85       	ldd	r18, Y+9	; 0x09
    172a:	22 30       	cpi	r18, 0x02	; 2
    172c:	08 f4       	brcc	.+2      	; 0x1730 <__divsf3+0x48>
    172e:	7e c0       	rjmp	.+252    	; 0x182c <__divsf3+0x144>
    1730:	39 89       	ldd	r19, Y+17	; 0x11
    1732:	32 30       	cpi	r19, 0x02	; 2
    1734:	10 f4       	brcc	.+4      	; 0x173a <__divsf3+0x52>
    1736:	b8 01       	movw	r22, r16
    1738:	7c c0       	rjmp	.+248    	; 0x1832 <__divsf3+0x14a>
    173a:	8a 85       	ldd	r24, Y+10	; 0x0a
    173c:	9a 89       	ldd	r25, Y+18	; 0x12
    173e:	89 27       	eor	r24, r25
    1740:	8a 87       	std	Y+10, r24	; 0x0a
    1742:	24 30       	cpi	r18, 0x04	; 4
    1744:	11 f0       	breq	.+4      	; 0x174a <__divsf3+0x62>
    1746:	22 30       	cpi	r18, 0x02	; 2
    1748:	31 f4       	brne	.+12     	; 0x1756 <__divsf3+0x6e>
    174a:	23 17       	cp	r18, r19
    174c:	09 f0       	breq	.+2      	; 0x1750 <__divsf3+0x68>
    174e:	6e c0       	rjmp	.+220    	; 0x182c <__divsf3+0x144>
    1750:	60 e0       	ldi	r22, 0x00	; 0
    1752:	71 e0       	ldi	r23, 0x01	; 1
    1754:	6e c0       	rjmp	.+220    	; 0x1832 <__divsf3+0x14a>
    1756:	34 30       	cpi	r19, 0x04	; 4
    1758:	39 f4       	brne	.+14     	; 0x1768 <__divsf3+0x80>
    175a:	1d 86       	std	Y+13, r1	; 0x0d
    175c:	1e 86       	std	Y+14, r1	; 0x0e
    175e:	1f 86       	std	Y+15, r1	; 0x0f
    1760:	18 8a       	std	Y+16, r1	; 0x10
    1762:	1c 86       	std	Y+12, r1	; 0x0c
    1764:	1b 86       	std	Y+11, r1	; 0x0b
    1766:	04 c0       	rjmp	.+8      	; 0x1770 <__divsf3+0x88>
    1768:	32 30       	cpi	r19, 0x02	; 2
    176a:	21 f4       	brne	.+8      	; 0x1774 <__divsf3+0x8c>
    176c:	84 e0       	ldi	r24, 0x04	; 4
    176e:	89 87       	std	Y+9, r24	; 0x09
    1770:	b7 01       	movw	r22, r14
    1772:	5f c0       	rjmp	.+190    	; 0x1832 <__divsf3+0x14a>
    1774:	2b 85       	ldd	r18, Y+11	; 0x0b
    1776:	3c 85       	ldd	r19, Y+12	; 0x0c
    1778:	8b 89       	ldd	r24, Y+19	; 0x13
    177a:	9c 89       	ldd	r25, Y+20	; 0x14
    177c:	28 1b       	sub	r18, r24
    177e:	39 0b       	sbc	r19, r25
    1780:	3c 87       	std	Y+12, r19	; 0x0c
    1782:	2b 87       	std	Y+11, r18	; 0x0b
    1784:	ed 84       	ldd	r14, Y+13	; 0x0d
    1786:	fe 84       	ldd	r15, Y+14	; 0x0e
    1788:	0f 85       	ldd	r16, Y+15	; 0x0f
    178a:	18 89       	ldd	r17, Y+16	; 0x10
    178c:	ad 88       	ldd	r10, Y+21	; 0x15
    178e:	be 88       	ldd	r11, Y+22	; 0x16
    1790:	cf 88       	ldd	r12, Y+23	; 0x17
    1792:	d8 8c       	ldd	r13, Y+24	; 0x18
    1794:	ea 14       	cp	r14, r10
    1796:	fb 04       	cpc	r15, r11
    1798:	0c 05       	cpc	r16, r12
    179a:	1d 05       	cpc	r17, r13
    179c:	40 f4       	brcc	.+16     	; 0x17ae <__divsf3+0xc6>
    179e:	ee 0c       	add	r14, r14
    17a0:	ff 1c       	adc	r15, r15
    17a2:	00 1f       	adc	r16, r16
    17a4:	11 1f       	adc	r17, r17
    17a6:	21 50       	subi	r18, 0x01	; 1
    17a8:	30 40       	sbci	r19, 0x00	; 0
    17aa:	3c 87       	std	Y+12, r19	; 0x0c
    17ac:	2b 87       	std	Y+11, r18	; 0x0b
    17ae:	20 e0       	ldi	r18, 0x00	; 0
    17b0:	30 e0       	ldi	r19, 0x00	; 0
    17b2:	40 e0       	ldi	r20, 0x00	; 0
    17b4:	50 e0       	ldi	r21, 0x00	; 0
    17b6:	80 e0       	ldi	r24, 0x00	; 0
    17b8:	90 e0       	ldi	r25, 0x00	; 0
    17ba:	a0 e0       	ldi	r26, 0x00	; 0
    17bc:	b0 e4       	ldi	r27, 0x40	; 64
    17be:	60 e0       	ldi	r22, 0x00	; 0
    17c0:	70 e0       	ldi	r23, 0x00	; 0
    17c2:	ea 14       	cp	r14, r10
    17c4:	fb 04       	cpc	r15, r11
    17c6:	0c 05       	cpc	r16, r12
    17c8:	1d 05       	cpc	r17, r13
    17ca:	40 f0       	brcs	.+16     	; 0x17dc <__divsf3+0xf4>
    17cc:	28 2b       	or	r18, r24
    17ce:	39 2b       	or	r19, r25
    17d0:	4a 2b       	or	r20, r26
    17d2:	5b 2b       	or	r21, r27
    17d4:	ea 18       	sub	r14, r10
    17d6:	fb 08       	sbc	r15, r11
    17d8:	0c 09       	sbc	r16, r12
    17da:	1d 09       	sbc	r17, r13
    17dc:	b6 95       	lsr	r27
    17de:	a7 95       	ror	r26
    17e0:	97 95       	ror	r25
    17e2:	87 95       	ror	r24
    17e4:	ee 0c       	add	r14, r14
    17e6:	ff 1c       	adc	r15, r15
    17e8:	00 1f       	adc	r16, r16
    17ea:	11 1f       	adc	r17, r17
    17ec:	6f 5f       	subi	r22, 0xFF	; 255
    17ee:	7f 4f       	sbci	r23, 0xFF	; 255
    17f0:	6f 31       	cpi	r22, 0x1F	; 31
    17f2:	71 05       	cpc	r23, r1
    17f4:	31 f7       	brne	.-52     	; 0x17c2 <__divsf3+0xda>
    17f6:	da 01       	movw	r26, r20
    17f8:	c9 01       	movw	r24, r18
    17fa:	8f 77       	andi	r24, 0x7F	; 127
    17fc:	90 70       	andi	r25, 0x00	; 0
    17fe:	a0 70       	andi	r26, 0x00	; 0
    1800:	b0 70       	andi	r27, 0x00	; 0
    1802:	80 34       	cpi	r24, 0x40	; 64
    1804:	91 05       	cpc	r25, r1
    1806:	a1 05       	cpc	r26, r1
    1808:	b1 05       	cpc	r27, r1
    180a:	61 f4       	brne	.+24     	; 0x1824 <__divsf3+0x13c>
    180c:	27 fd       	sbrc	r18, 7
    180e:	0a c0       	rjmp	.+20     	; 0x1824 <__divsf3+0x13c>
    1810:	e1 14       	cp	r14, r1
    1812:	f1 04       	cpc	r15, r1
    1814:	01 05       	cpc	r16, r1
    1816:	11 05       	cpc	r17, r1
    1818:	29 f0       	breq	.+10     	; 0x1824 <__divsf3+0x13c>
    181a:	20 5c       	subi	r18, 0xC0	; 192
    181c:	3f 4f       	sbci	r19, 0xFF	; 255
    181e:	4f 4f       	sbci	r20, 0xFF	; 255
    1820:	5f 4f       	sbci	r21, 0xFF	; 255
    1822:	20 78       	andi	r18, 0x80	; 128
    1824:	2d 87       	std	Y+13, r18	; 0x0d
    1826:	3e 87       	std	Y+14, r19	; 0x0e
    1828:	4f 87       	std	Y+15, r20	; 0x0f
    182a:	58 8b       	std	Y+16, r21	; 0x10
    182c:	be 01       	movw	r22, r28
    182e:	67 5f       	subi	r22, 0xF7	; 247
    1830:	7f 4f       	sbci	r23, 0xFF	; 255
    1832:	cb 01       	movw	r24, r22
    1834:	0e 94 b1 0d 	call	0x1b62	; 0x1b62 <__pack_f>
    1838:	68 96       	adiw	r28, 0x18	; 24
    183a:	ea e0       	ldi	r30, 0x0A	; 10
    183c:	0c 94 9a 0f 	jmp	0x1f34	; 0x1f34 <__epilogue_restores__+0x10>

00001840 <__gtsf2>:
    1840:	a8 e1       	ldi	r26, 0x18	; 24
    1842:	b0 e0       	ldi	r27, 0x00	; 0
    1844:	e6 e2       	ldi	r30, 0x26	; 38
    1846:	fc e0       	ldi	r31, 0x0C	; 12
    1848:	0c 94 82 0f 	jmp	0x1f04	; 0x1f04 <__prologue_saves__+0x18>
    184c:	69 83       	std	Y+1, r22	; 0x01
    184e:	7a 83       	std	Y+2, r23	; 0x02
    1850:	8b 83       	std	Y+3, r24	; 0x03
    1852:	9c 83       	std	Y+4, r25	; 0x04
    1854:	2d 83       	std	Y+5, r18	; 0x05
    1856:	3e 83       	std	Y+6, r19	; 0x06
    1858:	4f 83       	std	Y+7, r20	; 0x07
    185a:	58 87       	std	Y+8, r21	; 0x08
    185c:	89 e0       	ldi	r24, 0x09	; 9
    185e:	e8 2e       	mov	r14, r24
    1860:	f1 2c       	mov	r15, r1
    1862:	ec 0e       	add	r14, r28
    1864:	fd 1e       	adc	r15, r29
    1866:	ce 01       	movw	r24, r28
    1868:	01 96       	adiw	r24, 0x01	; 1
    186a:	b7 01       	movw	r22, r14
    186c:	0e 94 86 0e 	call	0x1d0c	; 0x1d0c <__unpack_f>
    1870:	8e 01       	movw	r16, r28
    1872:	0f 5e       	subi	r16, 0xEF	; 239
    1874:	1f 4f       	sbci	r17, 0xFF	; 255
    1876:	ce 01       	movw	r24, r28
    1878:	05 96       	adiw	r24, 0x05	; 5
    187a:	b8 01       	movw	r22, r16
    187c:	0e 94 86 0e 	call	0x1d0c	; 0x1d0c <__unpack_f>
    1880:	89 85       	ldd	r24, Y+9	; 0x09
    1882:	82 30       	cpi	r24, 0x02	; 2
    1884:	40 f0       	brcs	.+16     	; 0x1896 <__gtsf2+0x56>
    1886:	89 89       	ldd	r24, Y+17	; 0x11
    1888:	82 30       	cpi	r24, 0x02	; 2
    188a:	28 f0       	brcs	.+10     	; 0x1896 <__gtsf2+0x56>
    188c:	c7 01       	movw	r24, r14
    188e:	b8 01       	movw	r22, r16
    1890:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__fpcmp_parts_f>
    1894:	01 c0       	rjmp	.+2      	; 0x1898 <__gtsf2+0x58>
    1896:	8f ef       	ldi	r24, 0xFF	; 255
    1898:	68 96       	adiw	r28, 0x18	; 24
    189a:	e6 e0       	ldi	r30, 0x06	; 6
    189c:	0c 94 9e 0f 	jmp	0x1f3c	; 0x1f3c <__epilogue_restores__+0x18>

000018a0 <__gesf2>:
    18a0:	a8 e1       	ldi	r26, 0x18	; 24
    18a2:	b0 e0       	ldi	r27, 0x00	; 0
    18a4:	e6 e5       	ldi	r30, 0x56	; 86
    18a6:	fc e0       	ldi	r31, 0x0C	; 12
    18a8:	0c 94 82 0f 	jmp	0x1f04	; 0x1f04 <__prologue_saves__+0x18>
    18ac:	69 83       	std	Y+1, r22	; 0x01
    18ae:	7a 83       	std	Y+2, r23	; 0x02
    18b0:	8b 83       	std	Y+3, r24	; 0x03
    18b2:	9c 83       	std	Y+4, r25	; 0x04
    18b4:	2d 83       	std	Y+5, r18	; 0x05
    18b6:	3e 83       	std	Y+6, r19	; 0x06
    18b8:	4f 83       	std	Y+7, r20	; 0x07
    18ba:	58 87       	std	Y+8, r21	; 0x08
    18bc:	89 e0       	ldi	r24, 0x09	; 9
    18be:	e8 2e       	mov	r14, r24
    18c0:	f1 2c       	mov	r15, r1
    18c2:	ec 0e       	add	r14, r28
    18c4:	fd 1e       	adc	r15, r29
    18c6:	ce 01       	movw	r24, r28
    18c8:	01 96       	adiw	r24, 0x01	; 1
    18ca:	b7 01       	movw	r22, r14
    18cc:	0e 94 86 0e 	call	0x1d0c	; 0x1d0c <__unpack_f>
    18d0:	8e 01       	movw	r16, r28
    18d2:	0f 5e       	subi	r16, 0xEF	; 239
    18d4:	1f 4f       	sbci	r17, 0xFF	; 255
    18d6:	ce 01       	movw	r24, r28
    18d8:	05 96       	adiw	r24, 0x05	; 5
    18da:	b8 01       	movw	r22, r16
    18dc:	0e 94 86 0e 	call	0x1d0c	; 0x1d0c <__unpack_f>
    18e0:	89 85       	ldd	r24, Y+9	; 0x09
    18e2:	82 30       	cpi	r24, 0x02	; 2
    18e4:	40 f0       	brcs	.+16     	; 0x18f6 <__gesf2+0x56>
    18e6:	89 89       	ldd	r24, Y+17	; 0x11
    18e8:	82 30       	cpi	r24, 0x02	; 2
    18ea:	28 f0       	brcs	.+10     	; 0x18f6 <__gesf2+0x56>
    18ec:	c7 01       	movw	r24, r14
    18ee:	b8 01       	movw	r22, r16
    18f0:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__fpcmp_parts_f>
    18f4:	01 c0       	rjmp	.+2      	; 0x18f8 <__gesf2+0x58>
    18f6:	8f ef       	ldi	r24, 0xFF	; 255
    18f8:	68 96       	adiw	r28, 0x18	; 24
    18fa:	e6 e0       	ldi	r30, 0x06	; 6
    18fc:	0c 94 9e 0f 	jmp	0x1f3c	; 0x1f3c <__epilogue_restores__+0x18>

00001900 <__ltsf2>:
    1900:	a8 e1       	ldi	r26, 0x18	; 24
    1902:	b0 e0       	ldi	r27, 0x00	; 0
    1904:	e6 e8       	ldi	r30, 0x86	; 134
    1906:	fc e0       	ldi	r31, 0x0C	; 12
    1908:	0c 94 82 0f 	jmp	0x1f04	; 0x1f04 <__prologue_saves__+0x18>
    190c:	69 83       	std	Y+1, r22	; 0x01
    190e:	7a 83       	std	Y+2, r23	; 0x02
    1910:	8b 83       	std	Y+3, r24	; 0x03
    1912:	9c 83       	std	Y+4, r25	; 0x04
    1914:	2d 83       	std	Y+5, r18	; 0x05
    1916:	3e 83       	std	Y+6, r19	; 0x06
    1918:	4f 83       	std	Y+7, r20	; 0x07
    191a:	58 87       	std	Y+8, r21	; 0x08
    191c:	89 e0       	ldi	r24, 0x09	; 9
    191e:	e8 2e       	mov	r14, r24
    1920:	f1 2c       	mov	r15, r1
    1922:	ec 0e       	add	r14, r28
    1924:	fd 1e       	adc	r15, r29
    1926:	ce 01       	movw	r24, r28
    1928:	01 96       	adiw	r24, 0x01	; 1
    192a:	b7 01       	movw	r22, r14
    192c:	0e 94 86 0e 	call	0x1d0c	; 0x1d0c <__unpack_f>
    1930:	8e 01       	movw	r16, r28
    1932:	0f 5e       	subi	r16, 0xEF	; 239
    1934:	1f 4f       	sbci	r17, 0xFF	; 255
    1936:	ce 01       	movw	r24, r28
    1938:	05 96       	adiw	r24, 0x05	; 5
    193a:	b8 01       	movw	r22, r16
    193c:	0e 94 86 0e 	call	0x1d0c	; 0x1d0c <__unpack_f>
    1940:	89 85       	ldd	r24, Y+9	; 0x09
    1942:	82 30       	cpi	r24, 0x02	; 2
    1944:	40 f0       	brcs	.+16     	; 0x1956 <__ltsf2+0x56>
    1946:	89 89       	ldd	r24, Y+17	; 0x11
    1948:	82 30       	cpi	r24, 0x02	; 2
    194a:	28 f0       	brcs	.+10     	; 0x1956 <__ltsf2+0x56>
    194c:	c7 01       	movw	r24, r14
    194e:	b8 01       	movw	r22, r16
    1950:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__fpcmp_parts_f>
    1954:	01 c0       	rjmp	.+2      	; 0x1958 <__ltsf2+0x58>
    1956:	81 e0       	ldi	r24, 0x01	; 1
    1958:	68 96       	adiw	r28, 0x18	; 24
    195a:	e6 e0       	ldi	r30, 0x06	; 6
    195c:	0c 94 9e 0f 	jmp	0x1f3c	; 0x1f3c <__epilogue_restores__+0x18>

00001960 <__floatsisf>:
    1960:	a8 e0       	ldi	r26, 0x08	; 8
    1962:	b0 e0       	ldi	r27, 0x00	; 0
    1964:	e6 eb       	ldi	r30, 0xB6	; 182
    1966:	fc e0       	ldi	r31, 0x0C	; 12
    1968:	0c 94 7f 0f 	jmp	0x1efe	; 0x1efe <__prologue_saves__+0x12>
    196c:	9b 01       	movw	r18, r22
    196e:	ac 01       	movw	r20, r24
    1970:	83 e0       	ldi	r24, 0x03	; 3
    1972:	89 83       	std	Y+1, r24	; 0x01
    1974:	da 01       	movw	r26, r20
    1976:	c9 01       	movw	r24, r18
    1978:	88 27       	eor	r24, r24
    197a:	b7 fd       	sbrc	r27, 7
    197c:	83 95       	inc	r24
    197e:	99 27       	eor	r25, r25
    1980:	aa 27       	eor	r26, r26
    1982:	bb 27       	eor	r27, r27
    1984:	b8 2e       	mov	r11, r24
    1986:	21 15       	cp	r18, r1
    1988:	31 05       	cpc	r19, r1
    198a:	41 05       	cpc	r20, r1
    198c:	51 05       	cpc	r21, r1
    198e:	19 f4       	brne	.+6      	; 0x1996 <__floatsisf+0x36>
    1990:	82 e0       	ldi	r24, 0x02	; 2
    1992:	89 83       	std	Y+1, r24	; 0x01
    1994:	3a c0       	rjmp	.+116    	; 0x1a0a <__floatsisf+0xaa>
    1996:	88 23       	and	r24, r24
    1998:	a9 f0       	breq	.+42     	; 0x19c4 <__floatsisf+0x64>
    199a:	20 30       	cpi	r18, 0x00	; 0
    199c:	80 e0       	ldi	r24, 0x00	; 0
    199e:	38 07       	cpc	r19, r24
    19a0:	80 e0       	ldi	r24, 0x00	; 0
    19a2:	48 07       	cpc	r20, r24
    19a4:	80 e8       	ldi	r24, 0x80	; 128
    19a6:	58 07       	cpc	r21, r24
    19a8:	29 f4       	brne	.+10     	; 0x19b4 <__floatsisf+0x54>
    19aa:	60 e0       	ldi	r22, 0x00	; 0
    19ac:	70 e0       	ldi	r23, 0x00	; 0
    19ae:	80 e0       	ldi	r24, 0x00	; 0
    19b0:	9f ec       	ldi	r25, 0xCF	; 207
    19b2:	30 c0       	rjmp	.+96     	; 0x1a14 <__floatsisf+0xb4>
    19b4:	ee 24       	eor	r14, r14
    19b6:	ff 24       	eor	r15, r15
    19b8:	87 01       	movw	r16, r14
    19ba:	e2 1a       	sub	r14, r18
    19bc:	f3 0a       	sbc	r15, r19
    19be:	04 0b       	sbc	r16, r20
    19c0:	15 0b       	sbc	r17, r21
    19c2:	02 c0       	rjmp	.+4      	; 0x19c8 <__floatsisf+0x68>
    19c4:	79 01       	movw	r14, r18
    19c6:	8a 01       	movw	r16, r20
    19c8:	8e e1       	ldi	r24, 0x1E	; 30
    19ca:	c8 2e       	mov	r12, r24
    19cc:	d1 2c       	mov	r13, r1
    19ce:	dc 82       	std	Y+4, r13	; 0x04
    19d0:	cb 82       	std	Y+3, r12	; 0x03
    19d2:	ed 82       	std	Y+5, r14	; 0x05
    19d4:	fe 82       	std	Y+6, r15	; 0x06
    19d6:	0f 83       	std	Y+7, r16	; 0x07
    19d8:	18 87       	std	Y+8, r17	; 0x08
    19da:	c8 01       	movw	r24, r16
    19dc:	b7 01       	movw	r22, r14
    19de:	0e 94 62 0d 	call	0x1ac4	; 0x1ac4 <__clzsi2>
    19e2:	01 97       	sbiw	r24, 0x01	; 1
    19e4:	18 16       	cp	r1, r24
    19e6:	19 06       	cpc	r1, r25
    19e8:	84 f4       	brge	.+32     	; 0x1a0a <__floatsisf+0xaa>
    19ea:	08 2e       	mov	r0, r24
    19ec:	04 c0       	rjmp	.+8      	; 0x19f6 <__floatsisf+0x96>
    19ee:	ee 0c       	add	r14, r14
    19f0:	ff 1c       	adc	r15, r15
    19f2:	00 1f       	adc	r16, r16
    19f4:	11 1f       	adc	r17, r17
    19f6:	0a 94       	dec	r0
    19f8:	d2 f7       	brpl	.-12     	; 0x19ee <__floatsisf+0x8e>
    19fa:	ed 82       	std	Y+5, r14	; 0x05
    19fc:	fe 82       	std	Y+6, r15	; 0x06
    19fe:	0f 83       	std	Y+7, r16	; 0x07
    1a00:	18 87       	std	Y+8, r17	; 0x08
    1a02:	c8 1a       	sub	r12, r24
    1a04:	d9 0a       	sbc	r13, r25
    1a06:	dc 82       	std	Y+4, r13	; 0x04
    1a08:	cb 82       	std	Y+3, r12	; 0x03
    1a0a:	ba 82       	std	Y+2, r11	; 0x02
    1a0c:	ce 01       	movw	r24, r28
    1a0e:	01 96       	adiw	r24, 0x01	; 1
    1a10:	0e 94 b1 0d 	call	0x1b62	; 0x1b62 <__pack_f>
    1a14:	28 96       	adiw	r28, 0x08	; 8
    1a16:	e9 e0       	ldi	r30, 0x09	; 9
    1a18:	0c 94 9b 0f 	jmp	0x1f36	; 0x1f36 <__epilogue_restores__+0x12>

00001a1c <__fixsfsi>:
    1a1c:	ac e0       	ldi	r26, 0x0C	; 12
    1a1e:	b0 e0       	ldi	r27, 0x00	; 0
    1a20:	e4 e1       	ldi	r30, 0x14	; 20
    1a22:	fd e0       	ldi	r31, 0x0D	; 13
    1a24:	0c 94 86 0f 	jmp	0x1f0c	; 0x1f0c <__prologue_saves__+0x20>
    1a28:	69 83       	std	Y+1, r22	; 0x01
    1a2a:	7a 83       	std	Y+2, r23	; 0x02
    1a2c:	8b 83       	std	Y+3, r24	; 0x03
    1a2e:	9c 83       	std	Y+4, r25	; 0x04
    1a30:	ce 01       	movw	r24, r28
    1a32:	01 96       	adiw	r24, 0x01	; 1
    1a34:	be 01       	movw	r22, r28
    1a36:	6b 5f       	subi	r22, 0xFB	; 251
    1a38:	7f 4f       	sbci	r23, 0xFF	; 255
    1a3a:	0e 94 86 0e 	call	0x1d0c	; 0x1d0c <__unpack_f>
    1a3e:	8d 81       	ldd	r24, Y+5	; 0x05
    1a40:	82 30       	cpi	r24, 0x02	; 2
    1a42:	61 f1       	breq	.+88     	; 0x1a9c <__fixsfsi+0x80>
    1a44:	82 30       	cpi	r24, 0x02	; 2
    1a46:	50 f1       	brcs	.+84     	; 0x1a9c <__fixsfsi+0x80>
    1a48:	84 30       	cpi	r24, 0x04	; 4
    1a4a:	21 f4       	brne	.+8      	; 0x1a54 <__fixsfsi+0x38>
    1a4c:	8e 81       	ldd	r24, Y+6	; 0x06
    1a4e:	88 23       	and	r24, r24
    1a50:	51 f1       	breq	.+84     	; 0x1aa6 <__fixsfsi+0x8a>
    1a52:	2e c0       	rjmp	.+92     	; 0x1ab0 <__fixsfsi+0x94>
    1a54:	2f 81       	ldd	r18, Y+7	; 0x07
    1a56:	38 85       	ldd	r19, Y+8	; 0x08
    1a58:	37 fd       	sbrc	r19, 7
    1a5a:	20 c0       	rjmp	.+64     	; 0x1a9c <__fixsfsi+0x80>
    1a5c:	6e 81       	ldd	r22, Y+6	; 0x06
    1a5e:	2f 31       	cpi	r18, 0x1F	; 31
    1a60:	31 05       	cpc	r19, r1
    1a62:	1c f0       	brlt	.+6      	; 0x1a6a <__fixsfsi+0x4e>
    1a64:	66 23       	and	r22, r22
    1a66:	f9 f0       	breq	.+62     	; 0x1aa6 <__fixsfsi+0x8a>
    1a68:	23 c0       	rjmp	.+70     	; 0x1ab0 <__fixsfsi+0x94>
    1a6a:	8e e1       	ldi	r24, 0x1E	; 30
    1a6c:	90 e0       	ldi	r25, 0x00	; 0
    1a6e:	82 1b       	sub	r24, r18
    1a70:	93 0b       	sbc	r25, r19
    1a72:	29 85       	ldd	r18, Y+9	; 0x09
    1a74:	3a 85       	ldd	r19, Y+10	; 0x0a
    1a76:	4b 85       	ldd	r20, Y+11	; 0x0b
    1a78:	5c 85       	ldd	r21, Y+12	; 0x0c
    1a7a:	04 c0       	rjmp	.+8      	; 0x1a84 <__fixsfsi+0x68>
    1a7c:	56 95       	lsr	r21
    1a7e:	47 95       	ror	r20
    1a80:	37 95       	ror	r19
    1a82:	27 95       	ror	r18
    1a84:	8a 95       	dec	r24
    1a86:	d2 f7       	brpl	.-12     	; 0x1a7c <__fixsfsi+0x60>
    1a88:	66 23       	and	r22, r22
    1a8a:	b1 f0       	breq	.+44     	; 0x1ab8 <__fixsfsi+0x9c>
    1a8c:	50 95       	com	r21
    1a8e:	40 95       	com	r20
    1a90:	30 95       	com	r19
    1a92:	21 95       	neg	r18
    1a94:	3f 4f       	sbci	r19, 0xFF	; 255
    1a96:	4f 4f       	sbci	r20, 0xFF	; 255
    1a98:	5f 4f       	sbci	r21, 0xFF	; 255
    1a9a:	0e c0       	rjmp	.+28     	; 0x1ab8 <__fixsfsi+0x9c>
    1a9c:	20 e0       	ldi	r18, 0x00	; 0
    1a9e:	30 e0       	ldi	r19, 0x00	; 0
    1aa0:	40 e0       	ldi	r20, 0x00	; 0
    1aa2:	50 e0       	ldi	r21, 0x00	; 0
    1aa4:	09 c0       	rjmp	.+18     	; 0x1ab8 <__fixsfsi+0x9c>
    1aa6:	2f ef       	ldi	r18, 0xFF	; 255
    1aa8:	3f ef       	ldi	r19, 0xFF	; 255
    1aaa:	4f ef       	ldi	r20, 0xFF	; 255
    1aac:	5f e7       	ldi	r21, 0x7F	; 127
    1aae:	04 c0       	rjmp	.+8      	; 0x1ab8 <__fixsfsi+0x9c>
    1ab0:	20 e0       	ldi	r18, 0x00	; 0
    1ab2:	30 e0       	ldi	r19, 0x00	; 0
    1ab4:	40 e0       	ldi	r20, 0x00	; 0
    1ab6:	50 e8       	ldi	r21, 0x80	; 128
    1ab8:	b9 01       	movw	r22, r18
    1aba:	ca 01       	movw	r24, r20
    1abc:	2c 96       	adiw	r28, 0x0c	; 12
    1abe:	e2 e0       	ldi	r30, 0x02	; 2
    1ac0:	0c 94 a2 0f 	jmp	0x1f44	; 0x1f44 <__epilogue_restores__+0x20>

00001ac4 <__clzsi2>:
    1ac4:	ef 92       	push	r14
    1ac6:	ff 92       	push	r15
    1ac8:	0f 93       	push	r16
    1aca:	1f 93       	push	r17
    1acc:	7b 01       	movw	r14, r22
    1ace:	8c 01       	movw	r16, r24
    1ad0:	80 e0       	ldi	r24, 0x00	; 0
    1ad2:	e8 16       	cp	r14, r24
    1ad4:	80 e0       	ldi	r24, 0x00	; 0
    1ad6:	f8 06       	cpc	r15, r24
    1ad8:	81 e0       	ldi	r24, 0x01	; 1
    1ada:	08 07       	cpc	r16, r24
    1adc:	80 e0       	ldi	r24, 0x00	; 0
    1ade:	18 07       	cpc	r17, r24
    1ae0:	88 f4       	brcc	.+34     	; 0x1b04 <__clzsi2+0x40>
    1ae2:	8f ef       	ldi	r24, 0xFF	; 255
    1ae4:	e8 16       	cp	r14, r24
    1ae6:	f1 04       	cpc	r15, r1
    1ae8:	01 05       	cpc	r16, r1
    1aea:	11 05       	cpc	r17, r1
    1aec:	31 f0       	breq	.+12     	; 0x1afa <__clzsi2+0x36>
    1aee:	28 f0       	brcs	.+10     	; 0x1afa <__clzsi2+0x36>
    1af0:	88 e0       	ldi	r24, 0x08	; 8
    1af2:	90 e0       	ldi	r25, 0x00	; 0
    1af4:	a0 e0       	ldi	r26, 0x00	; 0
    1af6:	b0 e0       	ldi	r27, 0x00	; 0
    1af8:	17 c0       	rjmp	.+46     	; 0x1b28 <__clzsi2+0x64>
    1afa:	80 e0       	ldi	r24, 0x00	; 0
    1afc:	90 e0       	ldi	r25, 0x00	; 0
    1afe:	a0 e0       	ldi	r26, 0x00	; 0
    1b00:	b0 e0       	ldi	r27, 0x00	; 0
    1b02:	12 c0       	rjmp	.+36     	; 0x1b28 <__clzsi2+0x64>
    1b04:	80 e0       	ldi	r24, 0x00	; 0
    1b06:	e8 16       	cp	r14, r24
    1b08:	80 e0       	ldi	r24, 0x00	; 0
    1b0a:	f8 06       	cpc	r15, r24
    1b0c:	80 e0       	ldi	r24, 0x00	; 0
    1b0e:	08 07       	cpc	r16, r24
    1b10:	81 e0       	ldi	r24, 0x01	; 1
    1b12:	18 07       	cpc	r17, r24
    1b14:	28 f0       	brcs	.+10     	; 0x1b20 <__clzsi2+0x5c>
    1b16:	88 e1       	ldi	r24, 0x18	; 24
    1b18:	90 e0       	ldi	r25, 0x00	; 0
    1b1a:	a0 e0       	ldi	r26, 0x00	; 0
    1b1c:	b0 e0       	ldi	r27, 0x00	; 0
    1b1e:	04 c0       	rjmp	.+8      	; 0x1b28 <__clzsi2+0x64>
    1b20:	80 e1       	ldi	r24, 0x10	; 16
    1b22:	90 e0       	ldi	r25, 0x00	; 0
    1b24:	a0 e0       	ldi	r26, 0x00	; 0
    1b26:	b0 e0       	ldi	r27, 0x00	; 0
    1b28:	20 e2       	ldi	r18, 0x20	; 32
    1b2a:	30 e0       	ldi	r19, 0x00	; 0
    1b2c:	40 e0       	ldi	r20, 0x00	; 0
    1b2e:	50 e0       	ldi	r21, 0x00	; 0
    1b30:	28 1b       	sub	r18, r24
    1b32:	39 0b       	sbc	r19, r25
    1b34:	4a 0b       	sbc	r20, r26
    1b36:	5b 0b       	sbc	r21, r27
    1b38:	04 c0       	rjmp	.+8      	; 0x1b42 <__clzsi2+0x7e>
    1b3a:	16 95       	lsr	r17
    1b3c:	07 95       	ror	r16
    1b3e:	f7 94       	ror	r15
    1b40:	e7 94       	ror	r14
    1b42:	8a 95       	dec	r24
    1b44:	d2 f7       	brpl	.-12     	; 0x1b3a <__clzsi2+0x76>
    1b46:	f7 01       	movw	r30, r14
    1b48:	e8 5f       	subi	r30, 0xF8	; 248
    1b4a:	fe 4f       	sbci	r31, 0xFE	; 254
    1b4c:	80 81       	ld	r24, Z
    1b4e:	28 1b       	sub	r18, r24
    1b50:	31 09       	sbc	r19, r1
    1b52:	41 09       	sbc	r20, r1
    1b54:	51 09       	sbc	r21, r1
    1b56:	c9 01       	movw	r24, r18
    1b58:	1f 91       	pop	r17
    1b5a:	0f 91       	pop	r16
    1b5c:	ff 90       	pop	r15
    1b5e:	ef 90       	pop	r14
    1b60:	08 95       	ret

00001b62 <__pack_f>:
    1b62:	df 92       	push	r13
    1b64:	ef 92       	push	r14
    1b66:	ff 92       	push	r15
    1b68:	0f 93       	push	r16
    1b6a:	1f 93       	push	r17
    1b6c:	fc 01       	movw	r30, r24
    1b6e:	e4 80       	ldd	r14, Z+4	; 0x04
    1b70:	f5 80       	ldd	r15, Z+5	; 0x05
    1b72:	06 81       	ldd	r16, Z+6	; 0x06
    1b74:	17 81       	ldd	r17, Z+7	; 0x07
    1b76:	d1 80       	ldd	r13, Z+1	; 0x01
    1b78:	80 81       	ld	r24, Z
    1b7a:	82 30       	cpi	r24, 0x02	; 2
    1b7c:	48 f4       	brcc	.+18     	; 0x1b90 <__pack_f+0x2e>
    1b7e:	80 e0       	ldi	r24, 0x00	; 0
    1b80:	90 e0       	ldi	r25, 0x00	; 0
    1b82:	a0 e1       	ldi	r26, 0x10	; 16
    1b84:	b0 e0       	ldi	r27, 0x00	; 0
    1b86:	e8 2a       	or	r14, r24
    1b88:	f9 2a       	or	r15, r25
    1b8a:	0a 2b       	or	r16, r26
    1b8c:	1b 2b       	or	r17, r27
    1b8e:	a5 c0       	rjmp	.+330    	; 0x1cda <__pack_f+0x178>
    1b90:	84 30       	cpi	r24, 0x04	; 4
    1b92:	09 f4       	brne	.+2      	; 0x1b96 <__pack_f+0x34>
    1b94:	9f c0       	rjmp	.+318    	; 0x1cd4 <__pack_f+0x172>
    1b96:	82 30       	cpi	r24, 0x02	; 2
    1b98:	21 f4       	brne	.+8      	; 0x1ba2 <__pack_f+0x40>
    1b9a:	ee 24       	eor	r14, r14
    1b9c:	ff 24       	eor	r15, r15
    1b9e:	87 01       	movw	r16, r14
    1ba0:	05 c0       	rjmp	.+10     	; 0x1bac <__pack_f+0x4a>
    1ba2:	e1 14       	cp	r14, r1
    1ba4:	f1 04       	cpc	r15, r1
    1ba6:	01 05       	cpc	r16, r1
    1ba8:	11 05       	cpc	r17, r1
    1baa:	19 f4       	brne	.+6      	; 0x1bb2 <__pack_f+0x50>
    1bac:	e0 e0       	ldi	r30, 0x00	; 0
    1bae:	f0 e0       	ldi	r31, 0x00	; 0
    1bb0:	96 c0       	rjmp	.+300    	; 0x1cde <__pack_f+0x17c>
    1bb2:	62 81       	ldd	r22, Z+2	; 0x02
    1bb4:	73 81       	ldd	r23, Z+3	; 0x03
    1bb6:	9f ef       	ldi	r25, 0xFF	; 255
    1bb8:	62 38       	cpi	r22, 0x82	; 130
    1bba:	79 07       	cpc	r23, r25
    1bbc:	0c f0       	brlt	.+2      	; 0x1bc0 <__pack_f+0x5e>
    1bbe:	5b c0       	rjmp	.+182    	; 0x1c76 <__pack_f+0x114>
    1bc0:	22 e8       	ldi	r18, 0x82	; 130
    1bc2:	3f ef       	ldi	r19, 0xFF	; 255
    1bc4:	26 1b       	sub	r18, r22
    1bc6:	37 0b       	sbc	r19, r23
    1bc8:	2a 31       	cpi	r18, 0x1A	; 26
    1bca:	31 05       	cpc	r19, r1
    1bcc:	2c f0       	brlt	.+10     	; 0x1bd8 <__pack_f+0x76>
    1bce:	20 e0       	ldi	r18, 0x00	; 0
    1bd0:	30 e0       	ldi	r19, 0x00	; 0
    1bd2:	40 e0       	ldi	r20, 0x00	; 0
    1bd4:	50 e0       	ldi	r21, 0x00	; 0
    1bd6:	2a c0       	rjmp	.+84     	; 0x1c2c <__pack_f+0xca>
    1bd8:	b8 01       	movw	r22, r16
    1bda:	a7 01       	movw	r20, r14
    1bdc:	02 2e       	mov	r0, r18
    1bde:	04 c0       	rjmp	.+8      	; 0x1be8 <__pack_f+0x86>
    1be0:	76 95       	lsr	r23
    1be2:	67 95       	ror	r22
    1be4:	57 95       	ror	r21
    1be6:	47 95       	ror	r20
    1be8:	0a 94       	dec	r0
    1bea:	d2 f7       	brpl	.-12     	; 0x1be0 <__pack_f+0x7e>
    1bec:	81 e0       	ldi	r24, 0x01	; 1
    1bee:	90 e0       	ldi	r25, 0x00	; 0
    1bf0:	a0 e0       	ldi	r26, 0x00	; 0
    1bf2:	b0 e0       	ldi	r27, 0x00	; 0
    1bf4:	04 c0       	rjmp	.+8      	; 0x1bfe <__pack_f+0x9c>
    1bf6:	88 0f       	add	r24, r24
    1bf8:	99 1f       	adc	r25, r25
    1bfa:	aa 1f       	adc	r26, r26
    1bfc:	bb 1f       	adc	r27, r27
    1bfe:	2a 95       	dec	r18
    1c00:	d2 f7       	brpl	.-12     	; 0x1bf6 <__pack_f+0x94>
    1c02:	01 97       	sbiw	r24, 0x01	; 1
    1c04:	a1 09       	sbc	r26, r1
    1c06:	b1 09       	sbc	r27, r1
    1c08:	8e 21       	and	r24, r14
    1c0a:	9f 21       	and	r25, r15
    1c0c:	a0 23       	and	r26, r16
    1c0e:	b1 23       	and	r27, r17
    1c10:	00 97       	sbiw	r24, 0x00	; 0
    1c12:	a1 05       	cpc	r26, r1
    1c14:	b1 05       	cpc	r27, r1
    1c16:	21 f0       	breq	.+8      	; 0x1c20 <__pack_f+0xbe>
    1c18:	81 e0       	ldi	r24, 0x01	; 1
    1c1a:	90 e0       	ldi	r25, 0x00	; 0
    1c1c:	a0 e0       	ldi	r26, 0x00	; 0
    1c1e:	b0 e0       	ldi	r27, 0x00	; 0
    1c20:	9a 01       	movw	r18, r20
    1c22:	ab 01       	movw	r20, r22
    1c24:	28 2b       	or	r18, r24
    1c26:	39 2b       	or	r19, r25
    1c28:	4a 2b       	or	r20, r26
    1c2a:	5b 2b       	or	r21, r27
    1c2c:	da 01       	movw	r26, r20
    1c2e:	c9 01       	movw	r24, r18
    1c30:	8f 77       	andi	r24, 0x7F	; 127
    1c32:	90 70       	andi	r25, 0x00	; 0
    1c34:	a0 70       	andi	r26, 0x00	; 0
    1c36:	b0 70       	andi	r27, 0x00	; 0
    1c38:	80 34       	cpi	r24, 0x40	; 64
    1c3a:	91 05       	cpc	r25, r1
    1c3c:	a1 05       	cpc	r26, r1
    1c3e:	b1 05       	cpc	r27, r1
    1c40:	39 f4       	brne	.+14     	; 0x1c50 <__pack_f+0xee>
    1c42:	27 ff       	sbrs	r18, 7
    1c44:	09 c0       	rjmp	.+18     	; 0x1c58 <__pack_f+0xf6>
    1c46:	20 5c       	subi	r18, 0xC0	; 192
    1c48:	3f 4f       	sbci	r19, 0xFF	; 255
    1c4a:	4f 4f       	sbci	r20, 0xFF	; 255
    1c4c:	5f 4f       	sbci	r21, 0xFF	; 255
    1c4e:	04 c0       	rjmp	.+8      	; 0x1c58 <__pack_f+0xf6>
    1c50:	21 5c       	subi	r18, 0xC1	; 193
    1c52:	3f 4f       	sbci	r19, 0xFF	; 255
    1c54:	4f 4f       	sbci	r20, 0xFF	; 255
    1c56:	5f 4f       	sbci	r21, 0xFF	; 255
    1c58:	e0 e0       	ldi	r30, 0x00	; 0
    1c5a:	f0 e0       	ldi	r31, 0x00	; 0
    1c5c:	20 30       	cpi	r18, 0x00	; 0
    1c5e:	a0 e0       	ldi	r26, 0x00	; 0
    1c60:	3a 07       	cpc	r19, r26
    1c62:	a0 e0       	ldi	r26, 0x00	; 0
    1c64:	4a 07       	cpc	r20, r26
    1c66:	a0 e4       	ldi	r26, 0x40	; 64
    1c68:	5a 07       	cpc	r21, r26
    1c6a:	10 f0       	brcs	.+4      	; 0x1c70 <__pack_f+0x10e>
    1c6c:	e1 e0       	ldi	r30, 0x01	; 1
    1c6e:	f0 e0       	ldi	r31, 0x00	; 0
    1c70:	79 01       	movw	r14, r18
    1c72:	8a 01       	movw	r16, r20
    1c74:	27 c0       	rjmp	.+78     	; 0x1cc4 <__pack_f+0x162>
    1c76:	60 38       	cpi	r22, 0x80	; 128
    1c78:	71 05       	cpc	r23, r1
    1c7a:	64 f5       	brge	.+88     	; 0x1cd4 <__pack_f+0x172>
    1c7c:	fb 01       	movw	r30, r22
    1c7e:	e1 58       	subi	r30, 0x81	; 129
    1c80:	ff 4f       	sbci	r31, 0xFF	; 255
    1c82:	d8 01       	movw	r26, r16
    1c84:	c7 01       	movw	r24, r14
    1c86:	8f 77       	andi	r24, 0x7F	; 127
    1c88:	90 70       	andi	r25, 0x00	; 0
    1c8a:	a0 70       	andi	r26, 0x00	; 0
    1c8c:	b0 70       	andi	r27, 0x00	; 0
    1c8e:	80 34       	cpi	r24, 0x40	; 64
    1c90:	91 05       	cpc	r25, r1
    1c92:	a1 05       	cpc	r26, r1
    1c94:	b1 05       	cpc	r27, r1
    1c96:	39 f4       	brne	.+14     	; 0x1ca6 <__pack_f+0x144>
    1c98:	e7 fe       	sbrs	r14, 7
    1c9a:	0d c0       	rjmp	.+26     	; 0x1cb6 <__pack_f+0x154>
    1c9c:	80 e4       	ldi	r24, 0x40	; 64
    1c9e:	90 e0       	ldi	r25, 0x00	; 0
    1ca0:	a0 e0       	ldi	r26, 0x00	; 0
    1ca2:	b0 e0       	ldi	r27, 0x00	; 0
    1ca4:	04 c0       	rjmp	.+8      	; 0x1cae <__pack_f+0x14c>
    1ca6:	8f e3       	ldi	r24, 0x3F	; 63
    1ca8:	90 e0       	ldi	r25, 0x00	; 0
    1caa:	a0 e0       	ldi	r26, 0x00	; 0
    1cac:	b0 e0       	ldi	r27, 0x00	; 0
    1cae:	e8 0e       	add	r14, r24
    1cb0:	f9 1e       	adc	r15, r25
    1cb2:	0a 1f       	adc	r16, r26
    1cb4:	1b 1f       	adc	r17, r27
    1cb6:	17 ff       	sbrs	r17, 7
    1cb8:	05 c0       	rjmp	.+10     	; 0x1cc4 <__pack_f+0x162>
    1cba:	16 95       	lsr	r17
    1cbc:	07 95       	ror	r16
    1cbe:	f7 94       	ror	r15
    1cc0:	e7 94       	ror	r14
    1cc2:	31 96       	adiw	r30, 0x01	; 1
    1cc4:	87 e0       	ldi	r24, 0x07	; 7
    1cc6:	16 95       	lsr	r17
    1cc8:	07 95       	ror	r16
    1cca:	f7 94       	ror	r15
    1ccc:	e7 94       	ror	r14
    1cce:	8a 95       	dec	r24
    1cd0:	d1 f7       	brne	.-12     	; 0x1cc6 <__pack_f+0x164>
    1cd2:	05 c0       	rjmp	.+10     	; 0x1cde <__pack_f+0x17c>
    1cd4:	ee 24       	eor	r14, r14
    1cd6:	ff 24       	eor	r15, r15
    1cd8:	87 01       	movw	r16, r14
    1cda:	ef ef       	ldi	r30, 0xFF	; 255
    1cdc:	f0 e0       	ldi	r31, 0x00	; 0
    1cde:	6e 2f       	mov	r22, r30
    1ce0:	67 95       	ror	r22
    1ce2:	66 27       	eor	r22, r22
    1ce4:	67 95       	ror	r22
    1ce6:	90 2f       	mov	r25, r16
    1ce8:	9f 77       	andi	r25, 0x7F	; 127
    1cea:	d7 94       	ror	r13
    1cec:	dd 24       	eor	r13, r13
    1cee:	d7 94       	ror	r13
    1cf0:	8e 2f       	mov	r24, r30
    1cf2:	86 95       	lsr	r24
    1cf4:	49 2f       	mov	r20, r25
    1cf6:	46 2b       	or	r20, r22
    1cf8:	58 2f       	mov	r21, r24
    1cfa:	5d 29       	or	r21, r13
    1cfc:	b7 01       	movw	r22, r14
    1cfe:	ca 01       	movw	r24, r20
    1d00:	1f 91       	pop	r17
    1d02:	0f 91       	pop	r16
    1d04:	ff 90       	pop	r15
    1d06:	ef 90       	pop	r14
    1d08:	df 90       	pop	r13
    1d0a:	08 95       	ret

00001d0c <__unpack_f>:
    1d0c:	fc 01       	movw	r30, r24
    1d0e:	db 01       	movw	r26, r22
    1d10:	40 81       	ld	r20, Z
    1d12:	51 81       	ldd	r21, Z+1	; 0x01
    1d14:	22 81       	ldd	r18, Z+2	; 0x02
    1d16:	62 2f       	mov	r22, r18
    1d18:	6f 77       	andi	r22, 0x7F	; 127
    1d1a:	70 e0       	ldi	r23, 0x00	; 0
    1d1c:	22 1f       	adc	r18, r18
    1d1e:	22 27       	eor	r18, r18
    1d20:	22 1f       	adc	r18, r18
    1d22:	93 81       	ldd	r25, Z+3	; 0x03
    1d24:	89 2f       	mov	r24, r25
    1d26:	88 0f       	add	r24, r24
    1d28:	82 2b       	or	r24, r18
    1d2a:	28 2f       	mov	r18, r24
    1d2c:	30 e0       	ldi	r19, 0x00	; 0
    1d2e:	99 1f       	adc	r25, r25
    1d30:	99 27       	eor	r25, r25
    1d32:	99 1f       	adc	r25, r25
    1d34:	11 96       	adiw	r26, 0x01	; 1
    1d36:	9c 93       	st	X, r25
    1d38:	11 97       	sbiw	r26, 0x01	; 1
    1d3a:	21 15       	cp	r18, r1
    1d3c:	31 05       	cpc	r19, r1
    1d3e:	a9 f5       	brne	.+106    	; 0x1daa <__unpack_f+0x9e>
    1d40:	41 15       	cp	r20, r1
    1d42:	51 05       	cpc	r21, r1
    1d44:	61 05       	cpc	r22, r1
    1d46:	71 05       	cpc	r23, r1
    1d48:	11 f4       	brne	.+4      	; 0x1d4e <__unpack_f+0x42>
    1d4a:	82 e0       	ldi	r24, 0x02	; 2
    1d4c:	37 c0       	rjmp	.+110    	; 0x1dbc <__unpack_f+0xb0>
    1d4e:	82 e8       	ldi	r24, 0x82	; 130
    1d50:	9f ef       	ldi	r25, 0xFF	; 255
    1d52:	13 96       	adiw	r26, 0x03	; 3
    1d54:	9c 93       	st	X, r25
    1d56:	8e 93       	st	-X, r24
    1d58:	12 97       	sbiw	r26, 0x02	; 2
    1d5a:	9a 01       	movw	r18, r20
    1d5c:	ab 01       	movw	r20, r22
    1d5e:	67 e0       	ldi	r22, 0x07	; 7
    1d60:	22 0f       	add	r18, r18
    1d62:	33 1f       	adc	r19, r19
    1d64:	44 1f       	adc	r20, r20
    1d66:	55 1f       	adc	r21, r21
    1d68:	6a 95       	dec	r22
    1d6a:	d1 f7       	brne	.-12     	; 0x1d60 <__unpack_f+0x54>
    1d6c:	83 e0       	ldi	r24, 0x03	; 3
    1d6e:	8c 93       	st	X, r24
    1d70:	0d c0       	rjmp	.+26     	; 0x1d8c <__unpack_f+0x80>
    1d72:	22 0f       	add	r18, r18
    1d74:	33 1f       	adc	r19, r19
    1d76:	44 1f       	adc	r20, r20
    1d78:	55 1f       	adc	r21, r21
    1d7a:	12 96       	adiw	r26, 0x02	; 2
    1d7c:	8d 91       	ld	r24, X+
    1d7e:	9c 91       	ld	r25, X
    1d80:	13 97       	sbiw	r26, 0x03	; 3
    1d82:	01 97       	sbiw	r24, 0x01	; 1
    1d84:	13 96       	adiw	r26, 0x03	; 3
    1d86:	9c 93       	st	X, r25
    1d88:	8e 93       	st	-X, r24
    1d8a:	12 97       	sbiw	r26, 0x02	; 2
    1d8c:	20 30       	cpi	r18, 0x00	; 0
    1d8e:	80 e0       	ldi	r24, 0x00	; 0
    1d90:	38 07       	cpc	r19, r24
    1d92:	80 e0       	ldi	r24, 0x00	; 0
    1d94:	48 07       	cpc	r20, r24
    1d96:	80 e4       	ldi	r24, 0x40	; 64
    1d98:	58 07       	cpc	r21, r24
    1d9a:	58 f3       	brcs	.-42     	; 0x1d72 <__unpack_f+0x66>
    1d9c:	14 96       	adiw	r26, 0x04	; 4
    1d9e:	2d 93       	st	X+, r18
    1da0:	3d 93       	st	X+, r19
    1da2:	4d 93       	st	X+, r20
    1da4:	5c 93       	st	X, r21
    1da6:	17 97       	sbiw	r26, 0x07	; 7
    1da8:	08 95       	ret
    1daa:	2f 3f       	cpi	r18, 0xFF	; 255
    1dac:	31 05       	cpc	r19, r1
    1dae:	79 f4       	brne	.+30     	; 0x1dce <__unpack_f+0xc2>
    1db0:	41 15       	cp	r20, r1
    1db2:	51 05       	cpc	r21, r1
    1db4:	61 05       	cpc	r22, r1
    1db6:	71 05       	cpc	r23, r1
    1db8:	19 f4       	brne	.+6      	; 0x1dc0 <__unpack_f+0xb4>
    1dba:	84 e0       	ldi	r24, 0x04	; 4
    1dbc:	8c 93       	st	X, r24
    1dbe:	08 95       	ret
    1dc0:	64 ff       	sbrs	r22, 4
    1dc2:	03 c0       	rjmp	.+6      	; 0x1dca <__unpack_f+0xbe>
    1dc4:	81 e0       	ldi	r24, 0x01	; 1
    1dc6:	8c 93       	st	X, r24
    1dc8:	12 c0       	rjmp	.+36     	; 0x1dee <__unpack_f+0xe2>
    1dca:	1c 92       	st	X, r1
    1dcc:	10 c0       	rjmp	.+32     	; 0x1dee <__unpack_f+0xe2>
    1dce:	2f 57       	subi	r18, 0x7F	; 127
    1dd0:	30 40       	sbci	r19, 0x00	; 0
    1dd2:	13 96       	adiw	r26, 0x03	; 3
    1dd4:	3c 93       	st	X, r19
    1dd6:	2e 93       	st	-X, r18
    1dd8:	12 97       	sbiw	r26, 0x02	; 2
    1dda:	83 e0       	ldi	r24, 0x03	; 3
    1ddc:	8c 93       	st	X, r24
    1dde:	87 e0       	ldi	r24, 0x07	; 7
    1de0:	44 0f       	add	r20, r20
    1de2:	55 1f       	adc	r21, r21
    1de4:	66 1f       	adc	r22, r22
    1de6:	77 1f       	adc	r23, r23
    1de8:	8a 95       	dec	r24
    1dea:	d1 f7       	brne	.-12     	; 0x1de0 <__unpack_f+0xd4>
    1dec:	70 64       	ori	r23, 0x40	; 64
    1dee:	14 96       	adiw	r26, 0x04	; 4
    1df0:	4d 93       	st	X+, r20
    1df2:	5d 93       	st	X+, r21
    1df4:	6d 93       	st	X+, r22
    1df6:	7c 93       	st	X, r23
    1df8:	17 97       	sbiw	r26, 0x07	; 7
    1dfa:	08 95       	ret

00001dfc <__fpcmp_parts_f>:
    1dfc:	1f 93       	push	r17
    1dfe:	dc 01       	movw	r26, r24
    1e00:	fb 01       	movw	r30, r22
    1e02:	9c 91       	ld	r25, X
    1e04:	92 30       	cpi	r25, 0x02	; 2
    1e06:	08 f4       	brcc	.+2      	; 0x1e0a <__fpcmp_parts_f+0xe>
    1e08:	47 c0       	rjmp	.+142    	; 0x1e98 <__fpcmp_parts_f+0x9c>
    1e0a:	80 81       	ld	r24, Z
    1e0c:	82 30       	cpi	r24, 0x02	; 2
    1e0e:	08 f4       	brcc	.+2      	; 0x1e12 <__fpcmp_parts_f+0x16>
    1e10:	43 c0       	rjmp	.+134    	; 0x1e98 <__fpcmp_parts_f+0x9c>
    1e12:	94 30       	cpi	r25, 0x04	; 4
    1e14:	51 f4       	brne	.+20     	; 0x1e2a <__fpcmp_parts_f+0x2e>
    1e16:	11 96       	adiw	r26, 0x01	; 1
    1e18:	1c 91       	ld	r17, X
    1e1a:	84 30       	cpi	r24, 0x04	; 4
    1e1c:	99 f5       	brne	.+102    	; 0x1e84 <__fpcmp_parts_f+0x88>
    1e1e:	81 81       	ldd	r24, Z+1	; 0x01
    1e20:	68 2f       	mov	r22, r24
    1e22:	70 e0       	ldi	r23, 0x00	; 0
    1e24:	61 1b       	sub	r22, r17
    1e26:	71 09       	sbc	r23, r1
    1e28:	3f c0       	rjmp	.+126    	; 0x1ea8 <__fpcmp_parts_f+0xac>
    1e2a:	84 30       	cpi	r24, 0x04	; 4
    1e2c:	21 f0       	breq	.+8      	; 0x1e36 <__fpcmp_parts_f+0x3a>
    1e2e:	92 30       	cpi	r25, 0x02	; 2
    1e30:	31 f4       	brne	.+12     	; 0x1e3e <__fpcmp_parts_f+0x42>
    1e32:	82 30       	cpi	r24, 0x02	; 2
    1e34:	b9 f1       	breq	.+110    	; 0x1ea4 <__fpcmp_parts_f+0xa8>
    1e36:	81 81       	ldd	r24, Z+1	; 0x01
    1e38:	88 23       	and	r24, r24
    1e3a:	89 f1       	breq	.+98     	; 0x1e9e <__fpcmp_parts_f+0xa2>
    1e3c:	2d c0       	rjmp	.+90     	; 0x1e98 <__fpcmp_parts_f+0x9c>
    1e3e:	11 96       	adiw	r26, 0x01	; 1
    1e40:	1c 91       	ld	r17, X
    1e42:	11 97       	sbiw	r26, 0x01	; 1
    1e44:	82 30       	cpi	r24, 0x02	; 2
    1e46:	f1 f0       	breq	.+60     	; 0x1e84 <__fpcmp_parts_f+0x88>
    1e48:	81 81       	ldd	r24, Z+1	; 0x01
    1e4a:	18 17       	cp	r17, r24
    1e4c:	d9 f4       	brne	.+54     	; 0x1e84 <__fpcmp_parts_f+0x88>
    1e4e:	12 96       	adiw	r26, 0x02	; 2
    1e50:	2d 91       	ld	r18, X+
    1e52:	3c 91       	ld	r19, X
    1e54:	13 97       	sbiw	r26, 0x03	; 3
    1e56:	82 81       	ldd	r24, Z+2	; 0x02
    1e58:	93 81       	ldd	r25, Z+3	; 0x03
    1e5a:	82 17       	cp	r24, r18
    1e5c:	93 07       	cpc	r25, r19
    1e5e:	94 f0       	brlt	.+36     	; 0x1e84 <__fpcmp_parts_f+0x88>
    1e60:	28 17       	cp	r18, r24
    1e62:	39 07       	cpc	r19, r25
    1e64:	bc f0       	brlt	.+46     	; 0x1e94 <__fpcmp_parts_f+0x98>
    1e66:	14 96       	adiw	r26, 0x04	; 4
    1e68:	8d 91       	ld	r24, X+
    1e6a:	9d 91       	ld	r25, X+
    1e6c:	0d 90       	ld	r0, X+
    1e6e:	bc 91       	ld	r27, X
    1e70:	a0 2d       	mov	r26, r0
    1e72:	24 81       	ldd	r18, Z+4	; 0x04
    1e74:	35 81       	ldd	r19, Z+5	; 0x05
    1e76:	46 81       	ldd	r20, Z+6	; 0x06
    1e78:	57 81       	ldd	r21, Z+7	; 0x07
    1e7a:	28 17       	cp	r18, r24
    1e7c:	39 07       	cpc	r19, r25
    1e7e:	4a 07       	cpc	r20, r26
    1e80:	5b 07       	cpc	r21, r27
    1e82:	18 f4       	brcc	.+6      	; 0x1e8a <__fpcmp_parts_f+0x8e>
    1e84:	11 23       	and	r17, r17
    1e86:	41 f0       	breq	.+16     	; 0x1e98 <__fpcmp_parts_f+0x9c>
    1e88:	0a c0       	rjmp	.+20     	; 0x1e9e <__fpcmp_parts_f+0xa2>
    1e8a:	82 17       	cp	r24, r18
    1e8c:	93 07       	cpc	r25, r19
    1e8e:	a4 07       	cpc	r26, r20
    1e90:	b5 07       	cpc	r27, r21
    1e92:	40 f4       	brcc	.+16     	; 0x1ea4 <__fpcmp_parts_f+0xa8>
    1e94:	11 23       	and	r17, r17
    1e96:	19 f0       	breq	.+6      	; 0x1e9e <__fpcmp_parts_f+0xa2>
    1e98:	61 e0       	ldi	r22, 0x01	; 1
    1e9a:	70 e0       	ldi	r23, 0x00	; 0
    1e9c:	05 c0       	rjmp	.+10     	; 0x1ea8 <__fpcmp_parts_f+0xac>
    1e9e:	6f ef       	ldi	r22, 0xFF	; 255
    1ea0:	7f ef       	ldi	r23, 0xFF	; 255
    1ea2:	02 c0       	rjmp	.+4      	; 0x1ea8 <__fpcmp_parts_f+0xac>
    1ea4:	60 e0       	ldi	r22, 0x00	; 0
    1ea6:	70 e0       	ldi	r23, 0x00	; 0
    1ea8:	cb 01       	movw	r24, r22
    1eaa:	1f 91       	pop	r17
    1eac:	08 95       	ret

00001eae <__mulsi3>:
    1eae:	62 9f       	mul	r22, r18
    1eb0:	d0 01       	movw	r26, r0
    1eb2:	73 9f       	mul	r23, r19
    1eb4:	f0 01       	movw	r30, r0
    1eb6:	82 9f       	mul	r24, r18
    1eb8:	e0 0d       	add	r30, r0
    1eba:	f1 1d       	adc	r31, r1
    1ebc:	64 9f       	mul	r22, r20
    1ebe:	e0 0d       	add	r30, r0
    1ec0:	f1 1d       	adc	r31, r1
    1ec2:	92 9f       	mul	r25, r18
    1ec4:	f0 0d       	add	r31, r0
    1ec6:	83 9f       	mul	r24, r19
    1ec8:	f0 0d       	add	r31, r0
    1eca:	74 9f       	mul	r23, r20
    1ecc:	f0 0d       	add	r31, r0
    1ece:	65 9f       	mul	r22, r21
    1ed0:	f0 0d       	add	r31, r0
    1ed2:	99 27       	eor	r25, r25
    1ed4:	72 9f       	mul	r23, r18
    1ed6:	b0 0d       	add	r27, r0
    1ed8:	e1 1d       	adc	r30, r1
    1eda:	f9 1f       	adc	r31, r25
    1edc:	63 9f       	mul	r22, r19
    1ede:	b0 0d       	add	r27, r0
    1ee0:	e1 1d       	adc	r30, r1
    1ee2:	f9 1f       	adc	r31, r25
    1ee4:	bd 01       	movw	r22, r26
    1ee6:	cf 01       	movw	r24, r30
    1ee8:	11 24       	eor	r1, r1
    1eea:	08 95       	ret

00001eec <__prologue_saves__>:
    1eec:	2f 92       	push	r2
    1eee:	3f 92       	push	r3
    1ef0:	4f 92       	push	r4
    1ef2:	5f 92       	push	r5
    1ef4:	6f 92       	push	r6
    1ef6:	7f 92       	push	r7
    1ef8:	8f 92       	push	r8
    1efa:	9f 92       	push	r9
    1efc:	af 92       	push	r10
    1efe:	bf 92       	push	r11
    1f00:	cf 92       	push	r12
    1f02:	df 92       	push	r13
    1f04:	ef 92       	push	r14
    1f06:	ff 92       	push	r15
    1f08:	0f 93       	push	r16
    1f0a:	1f 93       	push	r17
    1f0c:	cf 93       	push	r28
    1f0e:	df 93       	push	r29
    1f10:	cd b7       	in	r28, 0x3d	; 61
    1f12:	de b7       	in	r29, 0x3e	; 62
    1f14:	ca 1b       	sub	r28, r26
    1f16:	db 0b       	sbc	r29, r27
    1f18:	0f b6       	in	r0, 0x3f	; 63
    1f1a:	f8 94       	cli
    1f1c:	de bf       	out	0x3e, r29	; 62
    1f1e:	0f be       	out	0x3f, r0	; 63
    1f20:	cd bf       	out	0x3d, r28	; 61
    1f22:	09 94       	ijmp

00001f24 <__epilogue_restores__>:
    1f24:	2a 88       	ldd	r2, Y+18	; 0x12
    1f26:	39 88       	ldd	r3, Y+17	; 0x11
    1f28:	48 88       	ldd	r4, Y+16	; 0x10
    1f2a:	5f 84       	ldd	r5, Y+15	; 0x0f
    1f2c:	6e 84       	ldd	r6, Y+14	; 0x0e
    1f2e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1f30:	8c 84       	ldd	r8, Y+12	; 0x0c
    1f32:	9b 84       	ldd	r9, Y+11	; 0x0b
    1f34:	aa 84       	ldd	r10, Y+10	; 0x0a
    1f36:	b9 84       	ldd	r11, Y+9	; 0x09
    1f38:	c8 84       	ldd	r12, Y+8	; 0x08
    1f3a:	df 80       	ldd	r13, Y+7	; 0x07
    1f3c:	ee 80       	ldd	r14, Y+6	; 0x06
    1f3e:	fd 80       	ldd	r15, Y+5	; 0x05
    1f40:	0c 81       	ldd	r16, Y+4	; 0x04
    1f42:	1b 81       	ldd	r17, Y+3	; 0x03
    1f44:	aa 81       	ldd	r26, Y+2	; 0x02
    1f46:	b9 81       	ldd	r27, Y+1	; 0x01
    1f48:	ce 0f       	add	r28, r30
    1f4a:	d1 1d       	adc	r29, r1
    1f4c:	0f b6       	in	r0, 0x3f	; 63
    1f4e:	f8 94       	cli
    1f50:	de bf       	out	0x3e, r29	; 62
    1f52:	0f be       	out	0x3f, r0	; 63
    1f54:	cd bf       	out	0x3d, r28	; 61
    1f56:	ed 01       	movw	r28, r26
    1f58:	08 95       	ret

00001f5a <_exit>:
    1f5a:	f8 94       	cli

00001f5c <__stop_program>:
    1f5c:	ff cf       	rjmp	.-2      	; 0x1f5c <__stop_program>
