
bin\Debug\ProjectAGV_Uno.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000108  00800100  000017d6  0000188a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000017d6  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800208  00800208  00001992  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  00001992  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .debug_aranges 000001c0  00000000  00000000  00001995  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 0000029a  00000000  00000000  00001b55  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000291a  00000000  00000000  00001def  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001508  00000000  00000000  00004709  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000017a3  00000000  00000000  00005c11  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000260  00000000  00000000  000073b4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000414  00000000  00000000  00007614  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009ce  00000000  00000000  00007a28  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  000083f6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 81 01 	jmp	0x302	; 0x302 <__vector_3>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
      74:	12 e0       	ldi	r17, 0x02	; 2
      76:	a8 e0       	ldi	r26, 0x08	; 8
      78:	b2 e0       	ldi	r27, 0x02	; 2
      7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
      7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
      7e:	aa 30       	cpi	r26, 0x0A	; 10
      80:	b1 07       	cpc	r27, r17
      82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>

00000084 <__do_copy_data>:
      84:	12 e0       	ldi	r17, 0x02	; 2
      86:	a0 e0       	ldi	r26, 0x00	; 0
      88:	b1 e0       	ldi	r27, 0x01	; 1
      8a:	e6 ed       	ldi	r30, 0xD6	; 214
      8c:	f7 e1       	ldi	r31, 0x17	; 23
      8e:	02 c0       	rjmp	.+4      	; 0x94 <.do_copy_data_start>

00000090 <.do_copy_data_loop>:
      90:	05 90       	lpm	r0, Z+
      92:	0d 92       	st	X+, r0

00000094 <.do_copy_data_start>:
      94:	a8 30       	cpi	r26, 0x08	; 8
      96:	b1 07       	cpc	r27, r17
      98:	d9 f7       	brne	.-10     	; 0x90 <.do_copy_data_loop>
      9a:	0e 94 84 03 	call	0x708	; 0x708 <main>
      9e:	0c 94 e9 0b 	jmp	0x17d2	; 0x17d2 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <init>:

// --- algemene waardes
volatile int aanwaarde = 0;

void init(void)
{
      a6:	df 93       	push	r29
      a8:	cf 93       	push	r28
      aa:	cd b7       	in	r28, 0x3d	; 61
      ac:	de b7       	in	r29, 0x3e	; 62
    //DDR Reg:
    DDRC |= _BV(motorPin);
      ae:	a7 e2       	ldi	r26, 0x27	; 39
      b0:	b0 e0       	ldi	r27, 0x00	; 0
      b2:	e7 e2       	ldi	r30, 0x27	; 39
      b4:	f0 e0       	ldi	r31, 0x00	; 0
      b6:	80 81       	ld	r24, Z
      b8:	80 61       	ori	r24, 0x10	; 16
      ba:	8c 93       	st	X, r24
    DDRC |= _BV(bochtPin);
      bc:	a7 e2       	ldi	r26, 0x27	; 39
      be:	b0 e0       	ldi	r27, 0x00	; 0
      c0:	e7 e2       	ldi	r30, 0x27	; 39
      c2:	f0 e0       	ldi	r31, 0x00	; 0
      c4:	80 81       	ld	r24, Z
      c6:	80 62       	ori	r24, 0x20	; 32
      c8:	8c 93       	st	X, r24
    DDRD |= _BV(buzzerPin);
      ca:	aa e2       	ldi	r26, 0x2A	; 42
      cc:	b0 e0       	ldi	r27, 0x00	; 0
      ce:	ea e2       	ldi	r30, 0x2A	; 42
      d0:	f0 e0       	ldi	r31, 0x00	; 0
      d2:	80 81       	ld	r24, Z
      d4:	82 60       	ori	r24, 0x02	; 2
      d6:	8c 93       	st	X, r24

    //init pins:
    PORTB |= _BV(IrSen1);
      d8:	a5 e2       	ldi	r26, 0x25	; 37
      da:	b0 e0       	ldi	r27, 0x00	; 0
      dc:	e5 e2       	ldi	r30, 0x25	; 37
      de:	f0 e0       	ldi	r31, 0x00	; 0
      e0:	80 81       	ld	r24, Z
      e2:	82 60       	ori	r24, 0x02	; 2
      e4:	8c 93       	st	X, r24
    PORTB |= _BV(IrSen2);
      e6:	a5 e2       	ldi	r26, 0x25	; 37
      e8:	b0 e0       	ldi	r27, 0x00	; 0
      ea:	e5 e2       	ldi	r30, 0x25	; 37
      ec:	f0 e0       	ldi	r31, 0x00	; 0
      ee:	80 81       	ld	r24, Z
      f0:	84 60       	ori	r24, 0x04	; 4
      f2:	8c 93       	st	X, r24

    //init PCINT
    PCICR |= (1 << PCIE0);
      f4:	a8 e6       	ldi	r26, 0x68	; 104
      f6:	b0 e0       	ldi	r27, 0x00	; 0
      f8:	e8 e6       	ldi	r30, 0x68	; 104
      fa:	f0 e0       	ldi	r31, 0x00	; 0
      fc:	80 81       	ld	r24, Z
      fe:	81 60       	ori	r24, 0x01	; 1
     100:	8c 93       	st	X, r24
    PCMSK0 |= ((1 << IrSen1) | (1 << IrSen2));
     102:	ab e6       	ldi	r26, 0x6B	; 107
     104:	b0 e0       	ldi	r27, 0x00	; 0
     106:	eb e6       	ldi	r30, 0x6B	; 107
     108:	f0 e0       	ldi	r31, 0x00	; 0
     10a:	80 81       	ld	r24, Z
     10c:	86 60       	ori	r24, 0x06	; 6
     10e:	8c 93       	st	X, r24

    //init interrupt
    sei();
     110:	78 94       	sei
}
     112:	cf 91       	pop	r28
     114:	df 91       	pop	r29
     116:	08 95       	ret

00000118 <buzzer>:

void buzzer(int freq, int aantal)
{
     118:	df 93       	push	r29
     11a:	cf 93       	push	r28
     11c:	cd b7       	in	r28, 0x3d	; 61
     11e:	de b7       	in	r29, 0x3e	; 62
     120:	6e 97       	sbiw	r28, 0x1e	; 30
     122:	0f b6       	in	r0, 0x3f	; 63
     124:	f8 94       	cli
     126:	de bf       	out	0x3e, r29	; 62
     128:	0f be       	out	0x3f, r0	; 63
     12a:	cd bf       	out	0x3d, r28	; 61
     12c:	9c 8f       	std	Y+28, r25	; 0x1c
     12e:	8b 8f       	std	Y+27, r24	; 0x1b
     130:	7e 8f       	std	Y+30, r23	; 0x1e
     132:	6d 8f       	std	Y+29, r22	; 0x1d
    for(int i = 0; i < aantal; i++)
     134:	1a 8e       	std	Y+26, r1	; 0x1a
     136:	19 8e       	std	Y+25, r1	; 0x19
     138:	d3 c0       	rjmp	.+422    	; 0x2e0 <buzzer+0x1c8>
    {
        PORTD ^= _BV(buzzerPin);
     13a:	ab e2       	ldi	r26, 0x2B	; 43
     13c:	b0 e0       	ldi	r27, 0x00	; 0
     13e:	eb e2       	ldi	r30, 0x2B	; 43
     140:	f0 e0       	ldi	r31, 0x00	; 0
     142:	90 81       	ld	r25, Z
     144:	82 e0       	ldi	r24, 0x02	; 2
     146:	89 27       	eor	r24, r25
     148:	8c 93       	st	X, r24
        _delay_us(freq);
     14a:	8b 8d       	ldd	r24, Y+27	; 0x1b
     14c:	9c 8d       	ldd	r25, Y+28	; 0x1c
     14e:	aa 27       	eor	r26, r26
     150:	97 fd       	sbrc	r25, 7
     152:	a0 95       	com	r26
     154:	ba 2f       	mov	r27, r26
     156:	bc 01       	movw	r22, r24
     158:	cd 01       	movw	r24, r26
     15a:	0e 94 0b 09 	call	0x1216	; 0x1216 <__floatsisf>
     15e:	dc 01       	movw	r26, r24
     160:	cb 01       	movw	r24, r22
     162:	8d 8b       	std	Y+21, r24	; 0x15
     164:	9e 8b       	std	Y+22, r25	; 0x16
     166:	af 8b       	std	Y+23, r26	; 0x17
     168:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     16a:	6d 89       	ldd	r22, Y+21	; 0x15
     16c:	7e 89       	ldd	r23, Y+22	; 0x16
     16e:	8f 89       	ldd	r24, Y+23	; 0x17
     170:	98 8d       	ldd	r25, Y+24	; 0x18
     172:	2b ea       	ldi	r18, 0xAB	; 171
     174:	3a ea       	ldi	r19, 0xAA	; 170
     176:	4a ea       	ldi	r20, 0xAA	; 170
     178:	50 e4       	ldi	r21, 0x40	; 64
     17a:	0e 94 d5 06 	call	0xdaa	; 0xdaa <__mulsf3>
     17e:	dc 01       	movw	r26, r24
     180:	cb 01       	movw	r24, r22
     182:	89 8b       	std	Y+17, r24	; 0x11
     184:	9a 8b       	std	Y+18, r25	; 0x12
     186:	ab 8b       	std	Y+19, r26	; 0x13
     188:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
     18a:	69 89       	ldd	r22, Y+17	; 0x11
     18c:	7a 89       	ldd	r23, Y+18	; 0x12
     18e:	8b 89       	ldd	r24, Y+19	; 0x13
     190:	9c 89       	ldd	r25, Y+20	; 0x14
     192:	20 e0       	ldi	r18, 0x00	; 0
     194:	30 e0       	ldi	r19, 0x00	; 0
     196:	40 e8       	ldi	r20, 0x80	; 128
     198:	5f e3       	ldi	r21, 0x3F	; 63
     19a:	0e 94 db 08 	call	0x11b6	; 0x11b6 <__ltsf2>
     19e:	88 23       	and	r24, r24
     1a0:	1c f4       	brge	.+6      	; 0x1a8 <buzzer+0x90>
		__ticks = 1;
     1a2:	81 e0       	ldi	r24, 0x01	; 1
     1a4:	88 8b       	std	Y+16, r24	; 0x10
     1a6:	91 c0       	rjmp	.+290    	; 0x2ca <buzzer+0x1b2>
	else if (__tmp > 255)
     1a8:	69 89       	ldd	r22, Y+17	; 0x11
     1aa:	7a 89       	ldd	r23, Y+18	; 0x12
     1ac:	8b 89       	ldd	r24, Y+19	; 0x13
     1ae:	9c 89       	ldd	r25, Y+20	; 0x14
     1b0:	20 e0       	ldi	r18, 0x00	; 0
     1b2:	30 e0       	ldi	r19, 0x00	; 0
     1b4:	4f e7       	ldi	r20, 0x7F	; 127
     1b6:	53 e4       	ldi	r21, 0x43	; 67
     1b8:	0e 94 7b 08 	call	0x10f6	; 0x10f6 <__gtsf2>
     1bc:	18 16       	cp	r1, r24
     1be:	0c f0       	brlt	.+2      	; 0x1c2 <buzzer+0xaa>
     1c0:	7b c0       	rjmp	.+246    	; 0x2b8 <buzzer+0x1a0>
	{
		_delay_ms(__us / 1000.0);
     1c2:	6d 89       	ldd	r22, Y+21	; 0x15
     1c4:	7e 89       	ldd	r23, Y+22	; 0x16
     1c6:	8f 89       	ldd	r24, Y+23	; 0x17
     1c8:	98 8d       	ldd	r25, Y+24	; 0x18
     1ca:	20 e0       	ldi	r18, 0x00	; 0
     1cc:	30 e0       	ldi	r19, 0x00	; 0
     1ce:	4a e7       	ldi	r20, 0x7A	; 122
     1d0:	54 e4       	ldi	r21, 0x44	; 68
     1d2:	0e 94 cf 07 	call	0xf9e	; 0xf9e <__divsf3>
     1d6:	dc 01       	movw	r26, r24
     1d8:	cb 01       	movw	r24, r22
     1da:	8c 87       	std	Y+12, r24	; 0x0c
     1dc:	9d 87       	std	Y+13, r25	; 0x0d
     1de:	ae 87       	std	Y+14, r26	; 0x0e
     1e0:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     1e2:	6c 85       	ldd	r22, Y+12	; 0x0c
     1e4:	7d 85       	ldd	r23, Y+13	; 0x0d
     1e6:	8e 85       	ldd	r24, Y+14	; 0x0e
     1e8:	9f 85       	ldd	r25, Y+15	; 0x0f
     1ea:	20 e0       	ldi	r18, 0x00	; 0
     1ec:	30 e0       	ldi	r19, 0x00	; 0
     1ee:	4a e7       	ldi	r20, 0x7A	; 122
     1f0:	55 e4       	ldi	r21, 0x45	; 69
     1f2:	0e 94 d5 06 	call	0xdaa	; 0xdaa <__mulsf3>
     1f6:	dc 01       	movw	r26, r24
     1f8:	cb 01       	movw	r24, r22
     1fa:	88 87       	std	Y+8, r24	; 0x08
     1fc:	99 87       	std	Y+9, r25	; 0x09
     1fe:	aa 87       	std	Y+10, r26	; 0x0a
     200:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
     202:	68 85       	ldd	r22, Y+8	; 0x08
     204:	79 85       	ldd	r23, Y+9	; 0x09
     206:	8a 85       	ldd	r24, Y+10	; 0x0a
     208:	9b 85       	ldd	r25, Y+11	; 0x0b
     20a:	20 e0       	ldi	r18, 0x00	; 0
     20c:	30 e0       	ldi	r19, 0x00	; 0
     20e:	40 e8       	ldi	r20, 0x80	; 128
     210:	5f e3       	ldi	r21, 0x3F	; 63
     212:	0e 94 db 08 	call	0x11b6	; 0x11b6 <__ltsf2>
     216:	88 23       	and	r24, r24
     218:	2c f4       	brge	.+10     	; 0x224 <buzzer+0x10c>
		__ticks = 1;
     21a:	81 e0       	ldi	r24, 0x01	; 1
     21c:	90 e0       	ldi	r25, 0x00	; 0
     21e:	9f 83       	std	Y+7, r25	; 0x07
     220:	8e 83       	std	Y+6, r24	; 0x06
     222:	3f c0       	rjmp	.+126    	; 0x2a2 <buzzer+0x18a>
	else if (__tmp > 65535)
     224:	68 85       	ldd	r22, Y+8	; 0x08
     226:	79 85       	ldd	r23, Y+9	; 0x09
     228:	8a 85       	ldd	r24, Y+10	; 0x0a
     22a:	9b 85       	ldd	r25, Y+11	; 0x0b
     22c:	20 e0       	ldi	r18, 0x00	; 0
     22e:	3f ef       	ldi	r19, 0xFF	; 255
     230:	4f e7       	ldi	r20, 0x7F	; 127
     232:	57 e4       	ldi	r21, 0x47	; 71
     234:	0e 94 7b 08 	call	0x10f6	; 0x10f6 <__gtsf2>
     238:	18 16       	cp	r1, r24
     23a:	4c f5       	brge	.+82     	; 0x28e <buzzer+0x176>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     23c:	6c 85       	ldd	r22, Y+12	; 0x0c
     23e:	7d 85       	ldd	r23, Y+13	; 0x0d
     240:	8e 85       	ldd	r24, Y+14	; 0x0e
     242:	9f 85       	ldd	r25, Y+15	; 0x0f
     244:	20 e0       	ldi	r18, 0x00	; 0
     246:	30 e0       	ldi	r19, 0x00	; 0
     248:	40 e2       	ldi	r20, 0x20	; 32
     24a:	51 e4       	ldi	r21, 0x41	; 65
     24c:	0e 94 d5 06 	call	0xdaa	; 0xdaa <__mulsf3>
     250:	dc 01       	movw	r26, r24
     252:	cb 01       	movw	r24, r22
     254:	bc 01       	movw	r22, r24
     256:	cd 01       	movw	r24, r26
     258:	0e 94 ff 04 	call	0x9fe	; 0x9fe <__fixunssfsi>
     25c:	dc 01       	movw	r26, r24
     25e:	cb 01       	movw	r24, r22
     260:	9f 83       	std	Y+7, r25	; 0x07
     262:	8e 83       	std	Y+6, r24	; 0x06
     264:	0f c0       	rjmp	.+30     	; 0x284 <buzzer+0x16c>
     266:	80 e9       	ldi	r24, 0x90	; 144
     268:	91 e0       	ldi	r25, 0x01	; 1
     26a:	9d 83       	std	Y+5, r25	; 0x05
     26c:	8c 83       	std	Y+4, r24	; 0x04
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     26e:	8c 81       	ldd	r24, Y+4	; 0x04
     270:	9d 81       	ldd	r25, Y+5	; 0x05
     272:	01 97       	sbiw	r24, 0x01	; 1
     274:	f1 f7       	brne	.-4      	; 0x272 <buzzer+0x15a>
     276:	9d 83       	std	Y+5, r25	; 0x05
     278:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     27a:	8e 81       	ldd	r24, Y+6	; 0x06
     27c:	9f 81       	ldd	r25, Y+7	; 0x07
     27e:	01 97       	sbiw	r24, 0x01	; 1
     280:	9f 83       	std	Y+7, r25	; 0x07
     282:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     284:	8e 81       	ldd	r24, Y+6	; 0x06
     286:	9f 81       	ldd	r25, Y+7	; 0x07
     288:	00 97       	sbiw	r24, 0x00	; 0
     28a:	69 f7       	brne	.-38     	; 0x266 <buzzer+0x14e>
     28c:	24 c0       	rjmp	.+72     	; 0x2d6 <buzzer+0x1be>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     28e:	68 85       	ldd	r22, Y+8	; 0x08
     290:	79 85       	ldd	r23, Y+9	; 0x09
     292:	8a 85       	ldd	r24, Y+10	; 0x0a
     294:	9b 85       	ldd	r25, Y+11	; 0x0b
     296:	0e 94 ff 04 	call	0x9fe	; 0x9fe <__fixunssfsi>
     29a:	dc 01       	movw	r26, r24
     29c:	cb 01       	movw	r24, r22
     29e:	9f 83       	std	Y+7, r25	; 0x07
     2a0:	8e 83       	std	Y+6, r24	; 0x06
     2a2:	8e 81       	ldd	r24, Y+6	; 0x06
     2a4:	9f 81       	ldd	r25, Y+7	; 0x07
     2a6:	9b 83       	std	Y+3, r25	; 0x03
     2a8:	8a 83       	std	Y+2, r24	; 0x02
     2aa:	8a 81       	ldd	r24, Y+2	; 0x02
     2ac:	9b 81       	ldd	r25, Y+3	; 0x03
     2ae:	01 97       	sbiw	r24, 0x01	; 1
     2b0:	f1 f7       	brne	.-4      	; 0x2ae <buzzer+0x196>
     2b2:	9b 83       	std	Y+3, r25	; 0x03
     2b4:	8a 83       	std	Y+2, r24	; 0x02
     2b6:	0f c0       	rjmp	.+30     	; 0x2d6 <buzzer+0x1be>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     2b8:	69 89       	ldd	r22, Y+17	; 0x11
     2ba:	7a 89       	ldd	r23, Y+18	; 0x12
     2bc:	8b 89       	ldd	r24, Y+19	; 0x13
     2be:	9c 89       	ldd	r25, Y+20	; 0x14
     2c0:	0e 94 ff 04 	call	0x9fe	; 0x9fe <__fixunssfsi>
     2c4:	dc 01       	movw	r26, r24
     2c6:	cb 01       	movw	r24, r22
     2c8:	88 8b       	std	Y+16, r24	; 0x10
     2ca:	88 89       	ldd	r24, Y+16	; 0x10
     2cc:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     2ce:	89 81       	ldd	r24, Y+1	; 0x01
     2d0:	8a 95       	dec	r24
     2d2:	f1 f7       	brne	.-4      	; 0x2d0 <buzzer+0x1b8>
     2d4:	89 83       	std	Y+1, r24	; 0x01
    sei();
}

void buzzer(int freq, int aantal)
{
    for(int i = 0; i < aantal; i++)
     2d6:	89 8d       	ldd	r24, Y+25	; 0x19
     2d8:	9a 8d       	ldd	r25, Y+26	; 0x1a
     2da:	01 96       	adiw	r24, 0x01	; 1
     2dc:	9a 8f       	std	Y+26, r25	; 0x1a
     2de:	89 8f       	std	Y+25, r24	; 0x19
     2e0:	29 8d       	ldd	r18, Y+25	; 0x19
     2e2:	3a 8d       	ldd	r19, Y+26	; 0x1a
     2e4:	8d 8d       	ldd	r24, Y+29	; 0x1d
     2e6:	9e 8d       	ldd	r25, Y+30	; 0x1e
     2e8:	28 17       	cp	r18, r24
     2ea:	39 07       	cpc	r19, r25
     2ec:	0c f4       	brge	.+2      	; 0x2f0 <buzzer+0x1d8>
     2ee:	25 cf       	rjmp	.-438    	; 0x13a <buzzer+0x22>
    {
        PORTD ^= _BV(buzzerPin);
        _delay_us(freq);

    }
}
     2f0:	6e 96       	adiw	r28, 0x1e	; 30
     2f2:	0f b6       	in	r0, 0x3f	; 63
     2f4:	f8 94       	cli
     2f6:	de bf       	out	0x3e, r29	; 62
     2f8:	0f be       	out	0x3f, r0	; 63
     2fa:	cd bf       	out	0x3d, r28	; 61
     2fc:	cf 91       	pop	r28
     2fe:	df 91       	pop	r29
     300:	08 95       	ret

00000302 <__vector_3>:

ISR(PCINT0_vect)
{
     302:	1f 92       	push	r1
     304:	0f 92       	push	r0
     306:	0f b6       	in	r0, 0x3f	; 63
     308:	0f 92       	push	r0
     30a:	11 24       	eor	r1, r1
     30c:	2f 93       	push	r18
     30e:	3f 93       	push	r19
     310:	4f 93       	push	r20
     312:	5f 93       	push	r21
     314:	6f 93       	push	r22
     316:	7f 93       	push	r23
     318:	8f 93       	push	r24
     31a:	9f 93       	push	r25
     31c:	af 93       	push	r26
     31e:	bf 93       	push	r27
     320:	ef 93       	push	r30
     322:	ff 93       	push	r31
     324:	df 93       	push	r29
     326:	cf 93       	push	r28
     328:	cd b7       	in	r28, 0x3d	; 61
     32a:	de b7       	in	r29, 0x3e	; 62
     32c:	aa 97       	sbiw	r28, 0x2a	; 42
     32e:	de bf       	out	0x3e, r29	; 62
     330:	cd bf       	out	0x3d, r28	; 61
     332:	80 e0       	ldi	r24, 0x00	; 0
     334:	90 e0       	ldi	r25, 0x00	; 0
     336:	a8 ec       	ldi	r26, 0xC8	; 200
     338:	b1 e4       	ldi	r27, 0x41	; 65
     33a:	8f a3       	std	Y+39, r24	; 0x27
     33c:	98 a7       	std	Y+40, r25	; 0x28
     33e:	a9 a7       	std	Y+41, r26	; 0x29
     340:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     342:	6f a1       	ldd	r22, Y+39	; 0x27
     344:	78 a5       	ldd	r23, Y+40	; 0x28
     346:	89 a5       	ldd	r24, Y+41	; 0x29
     348:	9a a5       	ldd	r25, Y+42	; 0x2a
     34a:	20 e0       	ldi	r18, 0x00	; 0
     34c:	30 e0       	ldi	r19, 0x00	; 0
     34e:	4a e7       	ldi	r20, 0x7A	; 122
     350:	55 e4       	ldi	r21, 0x45	; 69
     352:	0e 94 d5 06 	call	0xdaa	; 0xdaa <__mulsf3>
     356:	dc 01       	movw	r26, r24
     358:	cb 01       	movw	r24, r22
     35a:	8b a3       	std	Y+35, r24	; 0x23
     35c:	9c a3       	std	Y+36, r25	; 0x24
     35e:	ad a3       	std	Y+37, r26	; 0x25
     360:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     362:	6b a1       	ldd	r22, Y+35	; 0x23
     364:	7c a1       	ldd	r23, Y+36	; 0x24
     366:	8d a1       	ldd	r24, Y+37	; 0x25
     368:	9e a1       	ldd	r25, Y+38	; 0x26
     36a:	20 e0       	ldi	r18, 0x00	; 0
     36c:	30 e0       	ldi	r19, 0x00	; 0
     36e:	40 e8       	ldi	r20, 0x80	; 128
     370:	5f e3       	ldi	r21, 0x3F	; 63
     372:	0e 94 db 08 	call	0x11b6	; 0x11b6 <__ltsf2>
     376:	88 23       	and	r24, r24
     378:	2c f4       	brge	.+10     	; 0x384 <__vector_3+0x82>
		__ticks = 1;
     37a:	81 e0       	ldi	r24, 0x01	; 1
     37c:	90 e0       	ldi	r25, 0x00	; 0
     37e:	9a a3       	std	Y+34, r25	; 0x22
     380:	89 a3       	std	Y+33, r24	; 0x21
     382:	3f c0       	rjmp	.+126    	; 0x402 <__vector_3+0x100>
	else if (__tmp > 65535)
     384:	6b a1       	ldd	r22, Y+35	; 0x23
     386:	7c a1       	ldd	r23, Y+36	; 0x24
     388:	8d a1       	ldd	r24, Y+37	; 0x25
     38a:	9e a1       	ldd	r25, Y+38	; 0x26
     38c:	20 e0       	ldi	r18, 0x00	; 0
     38e:	3f ef       	ldi	r19, 0xFF	; 255
     390:	4f e7       	ldi	r20, 0x7F	; 127
     392:	57 e4       	ldi	r21, 0x47	; 71
     394:	0e 94 7b 08 	call	0x10f6	; 0x10f6 <__gtsf2>
     398:	18 16       	cp	r1, r24
     39a:	4c f5       	brge	.+82     	; 0x3ee <__vector_3+0xec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     39c:	6f a1       	ldd	r22, Y+39	; 0x27
     39e:	78 a5       	ldd	r23, Y+40	; 0x28
     3a0:	89 a5       	ldd	r24, Y+41	; 0x29
     3a2:	9a a5       	ldd	r25, Y+42	; 0x2a
     3a4:	20 e0       	ldi	r18, 0x00	; 0
     3a6:	30 e0       	ldi	r19, 0x00	; 0
     3a8:	40 e2       	ldi	r20, 0x20	; 32
     3aa:	51 e4       	ldi	r21, 0x41	; 65
     3ac:	0e 94 d5 06 	call	0xdaa	; 0xdaa <__mulsf3>
     3b0:	dc 01       	movw	r26, r24
     3b2:	cb 01       	movw	r24, r22
     3b4:	bc 01       	movw	r22, r24
     3b6:	cd 01       	movw	r24, r26
     3b8:	0e 94 ff 04 	call	0x9fe	; 0x9fe <__fixunssfsi>
     3bc:	dc 01       	movw	r26, r24
     3be:	cb 01       	movw	r24, r22
     3c0:	9a a3       	std	Y+34, r25	; 0x22
     3c2:	89 a3       	std	Y+33, r24	; 0x21
     3c4:	0f c0       	rjmp	.+30     	; 0x3e4 <__vector_3+0xe2>
     3c6:	80 e9       	ldi	r24, 0x90	; 144
     3c8:	91 e0       	ldi	r25, 0x01	; 1
     3ca:	98 a3       	std	Y+32, r25	; 0x20
     3cc:	8f 8f       	std	Y+31, r24	; 0x1f
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     3ce:	8f 8d       	ldd	r24, Y+31	; 0x1f
     3d0:	98 a1       	ldd	r25, Y+32	; 0x20
     3d2:	01 97       	sbiw	r24, 0x01	; 1
     3d4:	f1 f7       	brne	.-4      	; 0x3d2 <__vector_3+0xd0>
     3d6:	98 a3       	std	Y+32, r25	; 0x20
     3d8:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     3da:	89 a1       	ldd	r24, Y+33	; 0x21
     3dc:	9a a1       	ldd	r25, Y+34	; 0x22
     3de:	01 97       	sbiw	r24, 0x01	; 1
     3e0:	9a a3       	std	Y+34, r25	; 0x22
     3e2:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     3e4:	89 a1       	ldd	r24, Y+33	; 0x21
     3e6:	9a a1       	ldd	r25, Y+34	; 0x22
     3e8:	00 97       	sbiw	r24, 0x00	; 0
     3ea:	69 f7       	brne	.-38     	; 0x3c6 <__vector_3+0xc4>
     3ec:	14 c0       	rjmp	.+40     	; 0x416 <__vector_3+0x114>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     3ee:	6b a1       	ldd	r22, Y+35	; 0x23
     3f0:	7c a1       	ldd	r23, Y+36	; 0x24
     3f2:	8d a1       	ldd	r24, Y+37	; 0x25
     3f4:	9e a1       	ldd	r25, Y+38	; 0x26
     3f6:	0e 94 ff 04 	call	0x9fe	; 0x9fe <__fixunssfsi>
     3fa:	dc 01       	movw	r26, r24
     3fc:	cb 01       	movw	r24, r22
     3fe:	9a a3       	std	Y+34, r25	; 0x22
     400:	89 a3       	std	Y+33, r24	; 0x21
     402:	89 a1       	ldd	r24, Y+33	; 0x21
     404:	9a a1       	ldd	r25, Y+34	; 0x22
     406:	9e 8f       	std	Y+30, r25	; 0x1e
     408:	8d 8f       	std	Y+29, r24	; 0x1d
     40a:	8d 8d       	ldd	r24, Y+29	; 0x1d
     40c:	9e 8d       	ldd	r25, Y+30	; 0x1e
     40e:	01 97       	sbiw	r24, 0x01	; 1
     410:	f1 f7       	brne	.-4      	; 0x40e <__vector_3+0x10c>
     412:	9e 8f       	std	Y+30, r25	; 0x1e
     414:	8d 8f       	std	Y+29, r24	; 0x1d
    _delay_ms(25);
    if(bit_is_clear(PINB, IrSen1))
     416:	e3 e2       	ldi	r30, 0x23	; 35
     418:	f0 e0       	ldi	r31, 0x00	; 0
     41a:	80 81       	ld	r24, Z
     41c:	88 2f       	mov	r24, r24
     41e:	90 e0       	ldi	r25, 0x00	; 0
     420:	82 70       	andi	r24, 0x02	; 2
     422:	90 70       	andi	r25, 0x00	; 0
     424:	00 97       	sbiw	r24, 0x00	; 0
     426:	09 f0       	breq	.+2      	; 0x42a <__vector_3+0x128>
     428:	8e c0       	rjmp	.+284    	; 0x546 <__vector_3+0x244>
    {
        if(aanwaarde != 1)
     42a:	80 91 08 02 	lds	r24, 0x0208
     42e:	90 91 09 02 	lds	r25, 0x0209
     432:	81 30       	cpi	r24, 0x01	; 1
     434:	91 05       	cpc	r25, r1
     436:	09 f4       	brne	.+2      	; 0x43a <__vector_3+0x138>
     438:	86 c0       	rjmp	.+268    	; 0x546 <__vector_3+0x244>
        {
            PORTC |= _BV(motorPin);
     43a:	a8 e2       	ldi	r26, 0x28	; 40
     43c:	b0 e0       	ldi	r27, 0x00	; 0
     43e:	e8 e2       	ldi	r30, 0x28	; 40
     440:	f0 e0       	ldi	r31, 0x00	; 0
     442:	80 81       	ld	r24, Z
     444:	80 61       	ori	r24, 0x10	; 16
     446:	8c 93       	st	X, r24
            buzzer(350, 1000);
     448:	8e e5       	ldi	r24, 0x5E	; 94
     44a:	91 e0       	ldi	r25, 0x01	; 1
     44c:	68 ee       	ldi	r22, 0xE8	; 232
     44e:	73 e0       	ldi	r23, 0x03	; 3
     450:	0e 94 8c 00 	call	0x118	; 0x118 <buzzer>
     454:	80 e0       	ldi	r24, 0x00	; 0
     456:	90 e0       	ldi	r25, 0x00	; 0
     458:	aa ef       	ldi	r26, 0xFA	; 250
     45a:	b3 e4       	ldi	r27, 0x43	; 67
     45c:	89 8f       	std	Y+25, r24	; 0x19
     45e:	9a 8f       	std	Y+26, r25	; 0x1a
     460:	ab 8f       	std	Y+27, r26	; 0x1b
     462:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     464:	69 8d       	ldd	r22, Y+25	; 0x19
     466:	7a 8d       	ldd	r23, Y+26	; 0x1a
     468:	8b 8d       	ldd	r24, Y+27	; 0x1b
     46a:	9c 8d       	ldd	r25, Y+28	; 0x1c
     46c:	20 e0       	ldi	r18, 0x00	; 0
     46e:	30 e0       	ldi	r19, 0x00	; 0
     470:	4a e7       	ldi	r20, 0x7A	; 122
     472:	55 e4       	ldi	r21, 0x45	; 69
     474:	0e 94 d5 06 	call	0xdaa	; 0xdaa <__mulsf3>
     478:	dc 01       	movw	r26, r24
     47a:	cb 01       	movw	r24, r22
     47c:	8d 8b       	std	Y+21, r24	; 0x15
     47e:	9e 8b       	std	Y+22, r25	; 0x16
     480:	af 8b       	std	Y+23, r26	; 0x17
     482:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     484:	6d 89       	ldd	r22, Y+21	; 0x15
     486:	7e 89       	ldd	r23, Y+22	; 0x16
     488:	8f 89       	ldd	r24, Y+23	; 0x17
     48a:	98 8d       	ldd	r25, Y+24	; 0x18
     48c:	20 e0       	ldi	r18, 0x00	; 0
     48e:	30 e0       	ldi	r19, 0x00	; 0
     490:	40 e8       	ldi	r20, 0x80	; 128
     492:	5f e3       	ldi	r21, 0x3F	; 63
     494:	0e 94 db 08 	call	0x11b6	; 0x11b6 <__ltsf2>
     498:	88 23       	and	r24, r24
     49a:	2c f4       	brge	.+10     	; 0x4a6 <__vector_3+0x1a4>
		__ticks = 1;
     49c:	81 e0       	ldi	r24, 0x01	; 1
     49e:	90 e0       	ldi	r25, 0x00	; 0
     4a0:	9c 8b       	std	Y+20, r25	; 0x14
     4a2:	8b 8b       	std	Y+19, r24	; 0x13
     4a4:	3f c0       	rjmp	.+126    	; 0x524 <__vector_3+0x222>
	else if (__tmp > 65535)
     4a6:	6d 89       	ldd	r22, Y+21	; 0x15
     4a8:	7e 89       	ldd	r23, Y+22	; 0x16
     4aa:	8f 89       	ldd	r24, Y+23	; 0x17
     4ac:	98 8d       	ldd	r25, Y+24	; 0x18
     4ae:	20 e0       	ldi	r18, 0x00	; 0
     4b0:	3f ef       	ldi	r19, 0xFF	; 255
     4b2:	4f e7       	ldi	r20, 0x7F	; 127
     4b4:	57 e4       	ldi	r21, 0x47	; 71
     4b6:	0e 94 7b 08 	call	0x10f6	; 0x10f6 <__gtsf2>
     4ba:	18 16       	cp	r1, r24
     4bc:	4c f5       	brge	.+82     	; 0x510 <__vector_3+0x20e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     4be:	69 8d       	ldd	r22, Y+25	; 0x19
     4c0:	7a 8d       	ldd	r23, Y+26	; 0x1a
     4c2:	8b 8d       	ldd	r24, Y+27	; 0x1b
     4c4:	9c 8d       	ldd	r25, Y+28	; 0x1c
     4c6:	20 e0       	ldi	r18, 0x00	; 0
     4c8:	30 e0       	ldi	r19, 0x00	; 0
     4ca:	40 e2       	ldi	r20, 0x20	; 32
     4cc:	51 e4       	ldi	r21, 0x41	; 65
     4ce:	0e 94 d5 06 	call	0xdaa	; 0xdaa <__mulsf3>
     4d2:	dc 01       	movw	r26, r24
     4d4:	cb 01       	movw	r24, r22
     4d6:	bc 01       	movw	r22, r24
     4d8:	cd 01       	movw	r24, r26
     4da:	0e 94 ff 04 	call	0x9fe	; 0x9fe <__fixunssfsi>
     4de:	dc 01       	movw	r26, r24
     4e0:	cb 01       	movw	r24, r22
     4e2:	9c 8b       	std	Y+20, r25	; 0x14
     4e4:	8b 8b       	std	Y+19, r24	; 0x13
     4e6:	0f c0       	rjmp	.+30     	; 0x506 <__vector_3+0x204>
     4e8:	80 e9       	ldi	r24, 0x90	; 144
     4ea:	91 e0       	ldi	r25, 0x01	; 1
     4ec:	9a 8b       	std	Y+18, r25	; 0x12
     4ee:	89 8b       	std	Y+17, r24	; 0x11
     4f0:	89 89       	ldd	r24, Y+17	; 0x11
     4f2:	9a 89       	ldd	r25, Y+18	; 0x12
     4f4:	01 97       	sbiw	r24, 0x01	; 1
     4f6:	f1 f7       	brne	.-4      	; 0x4f4 <__vector_3+0x1f2>
     4f8:	9a 8b       	std	Y+18, r25	; 0x12
     4fa:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     4fc:	8b 89       	ldd	r24, Y+19	; 0x13
     4fe:	9c 89       	ldd	r25, Y+20	; 0x14
     500:	01 97       	sbiw	r24, 0x01	; 1
     502:	9c 8b       	std	Y+20, r25	; 0x14
     504:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     506:	8b 89       	ldd	r24, Y+19	; 0x13
     508:	9c 89       	ldd	r25, Y+20	; 0x14
     50a:	00 97       	sbiw	r24, 0x00	; 0
     50c:	69 f7       	brne	.-38     	; 0x4e8 <__vector_3+0x1e6>
     50e:	14 c0       	rjmp	.+40     	; 0x538 <__vector_3+0x236>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     510:	6d 89       	ldd	r22, Y+21	; 0x15
     512:	7e 89       	ldd	r23, Y+22	; 0x16
     514:	8f 89       	ldd	r24, Y+23	; 0x17
     516:	98 8d       	ldd	r25, Y+24	; 0x18
     518:	0e 94 ff 04 	call	0x9fe	; 0x9fe <__fixunssfsi>
     51c:	dc 01       	movw	r26, r24
     51e:	cb 01       	movw	r24, r22
     520:	9c 8b       	std	Y+20, r25	; 0x14
     522:	8b 8b       	std	Y+19, r24	; 0x13
     524:	8b 89       	ldd	r24, Y+19	; 0x13
     526:	9c 89       	ldd	r25, Y+20	; 0x14
     528:	98 8b       	std	Y+16, r25	; 0x10
     52a:	8f 87       	std	Y+15, r24	; 0x0f
     52c:	8f 85       	ldd	r24, Y+15	; 0x0f
     52e:	98 89       	ldd	r25, Y+16	; 0x10
     530:	01 97       	sbiw	r24, 0x01	; 1
     532:	f1 f7       	brne	.-4      	; 0x530 <__vector_3+0x22e>
     534:	98 8b       	std	Y+16, r25	; 0x10
     536:	8f 87       	std	Y+15, r24	; 0x0f
            _delay_ms(500);
            PORTC &= ~_BV(motorPin);
     538:	a8 e2       	ldi	r26, 0x28	; 40
     53a:	b0 e0       	ldi	r27, 0x00	; 0
     53c:	e8 e2       	ldi	r30, 0x28	; 40
     53e:	f0 e0       	ldi	r31, 0x00	; 0
     540:	80 81       	ld	r24, Z
     542:	8f 7e       	andi	r24, 0xEF	; 239
     544:	8c 93       	st	X, r24
        }

    }
    if(bit_is_clear(PINB, IrSen2))
     546:	e3 e2       	ldi	r30, 0x23	; 35
     548:	f0 e0       	ldi	r31, 0x00	; 0
     54a:	80 81       	ld	r24, Z
     54c:	88 2f       	mov	r24, r24
     54e:	90 e0       	ldi	r25, 0x00	; 0
     550:	84 70       	andi	r24, 0x04	; 4
     552:	90 70       	andi	r25, 0x00	; 0
     554:	00 97       	sbiw	r24, 0x00	; 0
     556:	09 f0       	breq	.+2      	; 0x55a <__vector_3+0x258>
     558:	8e c0       	rjmp	.+284    	; 0x676 <__vector_3+0x374>
    {
        if(aanwaarde != 2)
     55a:	80 91 08 02 	lds	r24, 0x0208
     55e:	90 91 09 02 	lds	r25, 0x0209
     562:	82 30       	cpi	r24, 0x02	; 2
     564:	91 05       	cpc	r25, r1
     566:	09 f4       	brne	.+2      	; 0x56a <__vector_3+0x268>
     568:	86 c0       	rjmp	.+268    	; 0x676 <__vector_3+0x374>
        {
            PORTC |= _BV(motorPin);
     56a:	a8 e2       	ldi	r26, 0x28	; 40
     56c:	b0 e0       	ldi	r27, 0x00	; 0
     56e:	e8 e2       	ldi	r30, 0x28	; 40
     570:	f0 e0       	ldi	r31, 0x00	; 0
     572:	80 81       	ld	r24, Z
     574:	80 61       	ori	r24, 0x10	; 16
     576:	8c 93       	st	X, r24
            buzzer(350, 1000);
     578:	8e e5       	ldi	r24, 0x5E	; 94
     57a:	91 e0       	ldi	r25, 0x01	; 1
     57c:	68 ee       	ldi	r22, 0xE8	; 232
     57e:	73 e0       	ldi	r23, 0x03	; 3
     580:	0e 94 8c 00 	call	0x118	; 0x118 <buzzer>
     584:	80 e0       	ldi	r24, 0x00	; 0
     586:	90 e0       	ldi	r25, 0x00	; 0
     588:	aa ef       	ldi	r26, 0xFA	; 250
     58a:	b3 e4       	ldi	r27, 0x43	; 67
     58c:	8b 87       	std	Y+11, r24	; 0x0b
     58e:	9c 87       	std	Y+12, r25	; 0x0c
     590:	ad 87       	std	Y+13, r26	; 0x0d
     592:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     594:	6b 85       	ldd	r22, Y+11	; 0x0b
     596:	7c 85       	ldd	r23, Y+12	; 0x0c
     598:	8d 85       	ldd	r24, Y+13	; 0x0d
     59a:	9e 85       	ldd	r25, Y+14	; 0x0e
     59c:	20 e0       	ldi	r18, 0x00	; 0
     59e:	30 e0       	ldi	r19, 0x00	; 0
     5a0:	4a e7       	ldi	r20, 0x7A	; 122
     5a2:	55 e4       	ldi	r21, 0x45	; 69
     5a4:	0e 94 d5 06 	call	0xdaa	; 0xdaa <__mulsf3>
     5a8:	dc 01       	movw	r26, r24
     5aa:	cb 01       	movw	r24, r22
     5ac:	8f 83       	std	Y+7, r24	; 0x07
     5ae:	98 87       	std	Y+8, r25	; 0x08
     5b0:	a9 87       	std	Y+9, r26	; 0x09
     5b2:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     5b4:	6f 81       	ldd	r22, Y+7	; 0x07
     5b6:	78 85       	ldd	r23, Y+8	; 0x08
     5b8:	89 85       	ldd	r24, Y+9	; 0x09
     5ba:	9a 85       	ldd	r25, Y+10	; 0x0a
     5bc:	20 e0       	ldi	r18, 0x00	; 0
     5be:	30 e0       	ldi	r19, 0x00	; 0
     5c0:	40 e8       	ldi	r20, 0x80	; 128
     5c2:	5f e3       	ldi	r21, 0x3F	; 63
     5c4:	0e 94 db 08 	call	0x11b6	; 0x11b6 <__ltsf2>
     5c8:	88 23       	and	r24, r24
     5ca:	2c f4       	brge	.+10     	; 0x5d6 <__vector_3+0x2d4>
		__ticks = 1;
     5cc:	81 e0       	ldi	r24, 0x01	; 1
     5ce:	90 e0       	ldi	r25, 0x00	; 0
     5d0:	9e 83       	std	Y+6, r25	; 0x06
     5d2:	8d 83       	std	Y+5, r24	; 0x05
     5d4:	3f c0       	rjmp	.+126    	; 0x654 <__vector_3+0x352>
	else if (__tmp > 65535)
     5d6:	6f 81       	ldd	r22, Y+7	; 0x07
     5d8:	78 85       	ldd	r23, Y+8	; 0x08
     5da:	89 85       	ldd	r24, Y+9	; 0x09
     5dc:	9a 85       	ldd	r25, Y+10	; 0x0a
     5de:	20 e0       	ldi	r18, 0x00	; 0
     5e0:	3f ef       	ldi	r19, 0xFF	; 255
     5e2:	4f e7       	ldi	r20, 0x7F	; 127
     5e4:	57 e4       	ldi	r21, 0x47	; 71
     5e6:	0e 94 7b 08 	call	0x10f6	; 0x10f6 <__gtsf2>
     5ea:	18 16       	cp	r1, r24
     5ec:	4c f5       	brge	.+82     	; 0x640 <__vector_3+0x33e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     5ee:	6b 85       	ldd	r22, Y+11	; 0x0b
     5f0:	7c 85       	ldd	r23, Y+12	; 0x0c
     5f2:	8d 85       	ldd	r24, Y+13	; 0x0d
     5f4:	9e 85       	ldd	r25, Y+14	; 0x0e
     5f6:	20 e0       	ldi	r18, 0x00	; 0
     5f8:	30 e0       	ldi	r19, 0x00	; 0
     5fa:	40 e2       	ldi	r20, 0x20	; 32
     5fc:	51 e4       	ldi	r21, 0x41	; 65
     5fe:	0e 94 d5 06 	call	0xdaa	; 0xdaa <__mulsf3>
     602:	dc 01       	movw	r26, r24
     604:	cb 01       	movw	r24, r22
     606:	bc 01       	movw	r22, r24
     608:	cd 01       	movw	r24, r26
     60a:	0e 94 ff 04 	call	0x9fe	; 0x9fe <__fixunssfsi>
     60e:	dc 01       	movw	r26, r24
     610:	cb 01       	movw	r24, r22
     612:	9e 83       	std	Y+6, r25	; 0x06
     614:	8d 83       	std	Y+5, r24	; 0x05
     616:	0f c0       	rjmp	.+30     	; 0x636 <__vector_3+0x334>
     618:	80 e9       	ldi	r24, 0x90	; 144
     61a:	91 e0       	ldi	r25, 0x01	; 1
     61c:	9c 83       	std	Y+4, r25	; 0x04
     61e:	8b 83       	std	Y+3, r24	; 0x03
     620:	8b 81       	ldd	r24, Y+3	; 0x03
     622:	9c 81       	ldd	r25, Y+4	; 0x04
     624:	01 97       	sbiw	r24, 0x01	; 1
     626:	f1 f7       	brne	.-4      	; 0x624 <__vector_3+0x322>
     628:	9c 83       	std	Y+4, r25	; 0x04
     62a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     62c:	8d 81       	ldd	r24, Y+5	; 0x05
     62e:	9e 81       	ldd	r25, Y+6	; 0x06
     630:	01 97       	sbiw	r24, 0x01	; 1
     632:	9e 83       	std	Y+6, r25	; 0x06
     634:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     636:	8d 81       	ldd	r24, Y+5	; 0x05
     638:	9e 81       	ldd	r25, Y+6	; 0x06
     63a:	00 97       	sbiw	r24, 0x00	; 0
     63c:	69 f7       	brne	.-38     	; 0x618 <__vector_3+0x316>
     63e:	14 c0       	rjmp	.+40     	; 0x668 <__vector_3+0x366>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     640:	6f 81       	ldd	r22, Y+7	; 0x07
     642:	78 85       	ldd	r23, Y+8	; 0x08
     644:	89 85       	ldd	r24, Y+9	; 0x09
     646:	9a 85       	ldd	r25, Y+10	; 0x0a
     648:	0e 94 ff 04 	call	0x9fe	; 0x9fe <__fixunssfsi>
     64c:	dc 01       	movw	r26, r24
     64e:	cb 01       	movw	r24, r22
     650:	9e 83       	std	Y+6, r25	; 0x06
     652:	8d 83       	std	Y+5, r24	; 0x05
     654:	8d 81       	ldd	r24, Y+5	; 0x05
     656:	9e 81       	ldd	r25, Y+6	; 0x06
     658:	9a 83       	std	Y+2, r25	; 0x02
     65a:	89 83       	std	Y+1, r24	; 0x01
     65c:	89 81       	ldd	r24, Y+1	; 0x01
     65e:	9a 81       	ldd	r25, Y+2	; 0x02
     660:	01 97       	sbiw	r24, 0x01	; 1
     662:	f1 f7       	brne	.-4      	; 0x660 <__vector_3+0x35e>
     664:	9a 83       	std	Y+2, r25	; 0x02
     666:	89 83       	std	Y+1, r24	; 0x01
            _delay_ms(500);
            PORTC &= ~_BV(motorPin);
     668:	a8 e2       	ldi	r26, 0x28	; 40
     66a:	b0 e0       	ldi	r27, 0x00	; 0
     66c:	e8 e2       	ldi	r30, 0x28	; 40
     66e:	f0 e0       	ldi	r31, 0x00	; 0
     670:	80 81       	ld	r24, Z
     672:	8f 7e       	andi	r24, 0xEF	; 239
     674:	8c 93       	st	X, r24
        }

    }
}
     676:	aa 96       	adiw	r28, 0x2a	; 42
     678:	de bf       	out	0x3e, r29	; 62
     67a:	cd bf       	out	0x3d, r28	; 61
     67c:	cf 91       	pop	r28
     67e:	df 91       	pop	r29
     680:	ff 91       	pop	r31
     682:	ef 91       	pop	r30
     684:	bf 91       	pop	r27
     686:	af 91       	pop	r26
     688:	9f 91       	pop	r25
     68a:	8f 91       	pop	r24
     68c:	7f 91       	pop	r23
     68e:	6f 91       	pop	r22
     690:	5f 91       	pop	r21
     692:	4f 91       	pop	r20
     694:	3f 91       	pop	r19
     696:	2f 91       	pop	r18
     698:	0f 90       	pop	r0
     69a:	0f be       	out	0x3f, r0	; 63
     69c:	0f 90       	pop	r0
     69e:	1f 90       	pop	r1
     6a0:	18 95       	reti

000006a2 <functie1>:

void functie1 (void) //links uit
{
     6a2:	df 93       	push	r29
     6a4:	cf 93       	push	r28
     6a6:	cd b7       	in	r28, 0x3d	; 61
     6a8:	de b7       	in	r29, 0x3e	; 62
    aanwaarde = 2;
     6aa:	82 e0       	ldi	r24, 0x02	; 2
     6ac:	90 e0       	ldi	r25, 0x00	; 0
     6ae:	90 93 09 02 	sts	0x0209, r25
     6b2:	80 93 08 02 	sts	0x0208, r24
}
     6b6:	cf 91       	pop	r28
     6b8:	df 91       	pop	r29
     6ba:	08 95       	ret

000006bc <functie2>:

void functie2 (void) // rechts uit
{
     6bc:	df 93       	push	r29
     6be:	cf 93       	push	r28
     6c0:	cd b7       	in	r28, 0x3d	; 61
     6c2:	de b7       	in	r29, 0x3e	; 62
    aanwaarde = 1;
     6c4:	81 e0       	ldi	r24, 0x01	; 1
     6c6:	90 e0       	ldi	r25, 0x00	; 0
     6c8:	90 93 09 02 	sts	0x0209, r25
     6cc:	80 93 08 02 	sts	0x0208, r24
}
     6d0:	cf 91       	pop	r28
     6d2:	df 91       	pop	r29
     6d4:	08 95       	ret

000006d6 <functie3>:

void functie3 (void) // geen IR uit
{
     6d6:	df 93       	push	r29
     6d8:	cf 93       	push	r28
     6da:	cd b7       	in	r28, 0x3d	; 61
     6dc:	de b7       	in	r29, 0x3e	; 62
    aanwaarde = 0;
     6de:	10 92 09 02 	sts	0x0209, r1
     6e2:	10 92 08 02 	sts	0x0208, r1
}
     6e6:	cf 91       	pop	r28
     6e8:	df 91       	pop	r29
     6ea:	08 95       	ret

000006ec <functie4>:

void functie4 (void)
{
     6ec:	df 93       	push	r29
     6ee:	cf 93       	push	r28
     6f0:	cd b7       	in	r28, 0x3d	; 61
     6f2:	de b7       	in	r29, 0x3e	; 62

}
     6f4:	cf 91       	pop	r28
     6f6:	df 91       	pop	r29
     6f8:	08 95       	ret

000006fa <functie5>:

void functie5 (void)
{
     6fa:	df 93       	push	r29
     6fc:	cf 93       	push	r28
     6fe:	cd b7       	in	r28, 0x3d	; 61
     700:	de b7       	in	r29, 0x3e	; 62

}
     702:	cf 91       	pop	r28
     704:	df 91       	pop	r29
     706:	08 95       	ret

00000708 <main>:


int main(void)
{
     708:	df 93       	push	r29
     70a:	cf 93       	push	r28
     70c:	cd b7       	in	r28, 0x3d	; 61
     70e:	de b7       	in	r29, 0x3e	; 62
     710:	aa 97       	sbiw	r28, 0x2a	; 42
     712:	0f b6       	in	r0, 0x3f	; 63
     714:	f8 94       	cli
     716:	de bf       	out	0x3e, r29	; 62
     718:	0f be       	out	0x3f, r0	; 63
     71a:	cd bf       	out	0x3d, r28	; 61
    init();
     71c:	0e 94 53 00 	call	0xa6	; 0xa6 <init>


    while(1)
    {
        functie1();
     720:	0e 94 51 03 	call	0x6a2	; 0x6a2 <functie1>
     724:	80 e0       	ldi	r24, 0x00	; 0
     726:	90 e4       	ldi	r25, 0x40	; 64
     728:	ac e9       	ldi	r26, 0x9C	; 156
     72a:	b5 e4       	ldi	r27, 0x45	; 69
     72c:	8f a3       	std	Y+39, r24	; 0x27
     72e:	98 a7       	std	Y+40, r25	; 0x28
     730:	a9 a7       	std	Y+41, r26	; 0x29
     732:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     734:	6f a1       	ldd	r22, Y+39	; 0x27
     736:	78 a5       	ldd	r23, Y+40	; 0x28
     738:	89 a5       	ldd	r24, Y+41	; 0x29
     73a:	9a a5       	ldd	r25, Y+42	; 0x2a
     73c:	20 e0       	ldi	r18, 0x00	; 0
     73e:	30 e0       	ldi	r19, 0x00	; 0
     740:	4a e7       	ldi	r20, 0x7A	; 122
     742:	55 e4       	ldi	r21, 0x45	; 69
     744:	0e 94 d5 06 	call	0xdaa	; 0xdaa <__mulsf3>
     748:	dc 01       	movw	r26, r24
     74a:	cb 01       	movw	r24, r22
     74c:	8b a3       	std	Y+35, r24	; 0x23
     74e:	9c a3       	std	Y+36, r25	; 0x24
     750:	ad a3       	std	Y+37, r26	; 0x25
     752:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     754:	6b a1       	ldd	r22, Y+35	; 0x23
     756:	7c a1       	ldd	r23, Y+36	; 0x24
     758:	8d a1       	ldd	r24, Y+37	; 0x25
     75a:	9e a1       	ldd	r25, Y+38	; 0x26
     75c:	20 e0       	ldi	r18, 0x00	; 0
     75e:	30 e0       	ldi	r19, 0x00	; 0
     760:	40 e8       	ldi	r20, 0x80	; 128
     762:	5f e3       	ldi	r21, 0x3F	; 63
     764:	0e 94 db 08 	call	0x11b6	; 0x11b6 <__ltsf2>
     768:	88 23       	and	r24, r24
     76a:	2c f4       	brge	.+10     	; 0x776 <main+0x6e>
		__ticks = 1;
     76c:	81 e0       	ldi	r24, 0x01	; 1
     76e:	90 e0       	ldi	r25, 0x00	; 0
     770:	9a a3       	std	Y+34, r25	; 0x22
     772:	89 a3       	std	Y+33, r24	; 0x21
     774:	3f c0       	rjmp	.+126    	; 0x7f4 <main+0xec>
	else if (__tmp > 65535)
     776:	6b a1       	ldd	r22, Y+35	; 0x23
     778:	7c a1       	ldd	r23, Y+36	; 0x24
     77a:	8d a1       	ldd	r24, Y+37	; 0x25
     77c:	9e a1       	ldd	r25, Y+38	; 0x26
     77e:	20 e0       	ldi	r18, 0x00	; 0
     780:	3f ef       	ldi	r19, 0xFF	; 255
     782:	4f e7       	ldi	r20, 0x7F	; 127
     784:	57 e4       	ldi	r21, 0x47	; 71
     786:	0e 94 7b 08 	call	0x10f6	; 0x10f6 <__gtsf2>
     78a:	18 16       	cp	r1, r24
     78c:	4c f5       	brge	.+82     	; 0x7e0 <main+0xd8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     78e:	6f a1       	ldd	r22, Y+39	; 0x27
     790:	78 a5       	ldd	r23, Y+40	; 0x28
     792:	89 a5       	ldd	r24, Y+41	; 0x29
     794:	9a a5       	ldd	r25, Y+42	; 0x2a
     796:	20 e0       	ldi	r18, 0x00	; 0
     798:	30 e0       	ldi	r19, 0x00	; 0
     79a:	40 e2       	ldi	r20, 0x20	; 32
     79c:	51 e4       	ldi	r21, 0x41	; 65
     79e:	0e 94 d5 06 	call	0xdaa	; 0xdaa <__mulsf3>
     7a2:	dc 01       	movw	r26, r24
     7a4:	cb 01       	movw	r24, r22
     7a6:	bc 01       	movw	r22, r24
     7a8:	cd 01       	movw	r24, r26
     7aa:	0e 94 ff 04 	call	0x9fe	; 0x9fe <__fixunssfsi>
     7ae:	dc 01       	movw	r26, r24
     7b0:	cb 01       	movw	r24, r22
     7b2:	9a a3       	std	Y+34, r25	; 0x22
     7b4:	89 a3       	std	Y+33, r24	; 0x21
     7b6:	0f c0       	rjmp	.+30     	; 0x7d6 <main+0xce>
     7b8:	80 e9       	ldi	r24, 0x90	; 144
     7ba:	91 e0       	ldi	r25, 0x01	; 1
     7bc:	98 a3       	std	Y+32, r25	; 0x20
     7be:	8f 8f       	std	Y+31, r24	; 0x1f
     7c0:	8f 8d       	ldd	r24, Y+31	; 0x1f
     7c2:	98 a1       	ldd	r25, Y+32	; 0x20
     7c4:	01 97       	sbiw	r24, 0x01	; 1
     7c6:	f1 f7       	brne	.-4      	; 0x7c4 <main+0xbc>
     7c8:	98 a3       	std	Y+32, r25	; 0x20
     7ca:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     7cc:	89 a1       	ldd	r24, Y+33	; 0x21
     7ce:	9a a1       	ldd	r25, Y+34	; 0x22
     7d0:	01 97       	sbiw	r24, 0x01	; 1
     7d2:	9a a3       	std	Y+34, r25	; 0x22
     7d4:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     7d6:	89 a1       	ldd	r24, Y+33	; 0x21
     7d8:	9a a1       	ldd	r25, Y+34	; 0x22
     7da:	00 97       	sbiw	r24, 0x00	; 0
     7dc:	69 f7       	brne	.-38     	; 0x7b8 <main+0xb0>
     7de:	14 c0       	rjmp	.+40     	; 0x808 <main+0x100>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     7e0:	6b a1       	ldd	r22, Y+35	; 0x23
     7e2:	7c a1       	ldd	r23, Y+36	; 0x24
     7e4:	8d a1       	ldd	r24, Y+37	; 0x25
     7e6:	9e a1       	ldd	r25, Y+38	; 0x26
     7e8:	0e 94 ff 04 	call	0x9fe	; 0x9fe <__fixunssfsi>
     7ec:	dc 01       	movw	r26, r24
     7ee:	cb 01       	movw	r24, r22
     7f0:	9a a3       	std	Y+34, r25	; 0x22
     7f2:	89 a3       	std	Y+33, r24	; 0x21
     7f4:	89 a1       	ldd	r24, Y+33	; 0x21
     7f6:	9a a1       	ldd	r25, Y+34	; 0x22
     7f8:	9e 8f       	std	Y+30, r25	; 0x1e
     7fa:	8d 8f       	std	Y+29, r24	; 0x1d
     7fc:	8d 8d       	ldd	r24, Y+29	; 0x1d
     7fe:	9e 8d       	ldd	r25, Y+30	; 0x1e
     800:	01 97       	sbiw	r24, 0x01	; 1
     802:	f1 f7       	brne	.-4      	; 0x800 <main+0xf8>
     804:	9e 8f       	std	Y+30, r25	; 0x1e
     806:	8d 8f       	std	Y+29, r24	; 0x1d
        _delay_ms(5000);
        buzzer(350, 500);
     808:	8e e5       	ldi	r24, 0x5E	; 94
     80a:	91 e0       	ldi	r25, 0x01	; 1
     80c:	64 ef       	ldi	r22, 0xF4	; 244
     80e:	71 e0       	ldi	r23, 0x01	; 1
     810:	0e 94 8c 00 	call	0x118	; 0x118 <buzzer>
        functie2();
     814:	0e 94 5e 03 	call	0x6bc	; 0x6bc <functie2>
     818:	80 e0       	ldi	r24, 0x00	; 0
     81a:	90 e4       	ldi	r25, 0x40	; 64
     81c:	ac e9       	ldi	r26, 0x9C	; 156
     81e:	b5 e4       	ldi	r27, 0x45	; 69
     820:	89 8f       	std	Y+25, r24	; 0x19
     822:	9a 8f       	std	Y+26, r25	; 0x1a
     824:	ab 8f       	std	Y+27, r26	; 0x1b
     826:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     828:	69 8d       	ldd	r22, Y+25	; 0x19
     82a:	7a 8d       	ldd	r23, Y+26	; 0x1a
     82c:	8b 8d       	ldd	r24, Y+27	; 0x1b
     82e:	9c 8d       	ldd	r25, Y+28	; 0x1c
     830:	20 e0       	ldi	r18, 0x00	; 0
     832:	30 e0       	ldi	r19, 0x00	; 0
     834:	4a e7       	ldi	r20, 0x7A	; 122
     836:	55 e4       	ldi	r21, 0x45	; 69
     838:	0e 94 d5 06 	call	0xdaa	; 0xdaa <__mulsf3>
     83c:	dc 01       	movw	r26, r24
     83e:	cb 01       	movw	r24, r22
     840:	8d 8b       	std	Y+21, r24	; 0x15
     842:	9e 8b       	std	Y+22, r25	; 0x16
     844:	af 8b       	std	Y+23, r26	; 0x17
     846:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     848:	6d 89       	ldd	r22, Y+21	; 0x15
     84a:	7e 89       	ldd	r23, Y+22	; 0x16
     84c:	8f 89       	ldd	r24, Y+23	; 0x17
     84e:	98 8d       	ldd	r25, Y+24	; 0x18
     850:	20 e0       	ldi	r18, 0x00	; 0
     852:	30 e0       	ldi	r19, 0x00	; 0
     854:	40 e8       	ldi	r20, 0x80	; 128
     856:	5f e3       	ldi	r21, 0x3F	; 63
     858:	0e 94 db 08 	call	0x11b6	; 0x11b6 <__ltsf2>
     85c:	88 23       	and	r24, r24
     85e:	2c f4       	brge	.+10     	; 0x86a <main+0x162>
		__ticks = 1;
     860:	81 e0       	ldi	r24, 0x01	; 1
     862:	90 e0       	ldi	r25, 0x00	; 0
     864:	9c 8b       	std	Y+20, r25	; 0x14
     866:	8b 8b       	std	Y+19, r24	; 0x13
     868:	3f c0       	rjmp	.+126    	; 0x8e8 <main+0x1e0>
	else if (__tmp > 65535)
     86a:	6d 89       	ldd	r22, Y+21	; 0x15
     86c:	7e 89       	ldd	r23, Y+22	; 0x16
     86e:	8f 89       	ldd	r24, Y+23	; 0x17
     870:	98 8d       	ldd	r25, Y+24	; 0x18
     872:	20 e0       	ldi	r18, 0x00	; 0
     874:	3f ef       	ldi	r19, 0xFF	; 255
     876:	4f e7       	ldi	r20, 0x7F	; 127
     878:	57 e4       	ldi	r21, 0x47	; 71
     87a:	0e 94 7b 08 	call	0x10f6	; 0x10f6 <__gtsf2>
     87e:	18 16       	cp	r1, r24
     880:	4c f5       	brge	.+82     	; 0x8d4 <main+0x1cc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     882:	69 8d       	ldd	r22, Y+25	; 0x19
     884:	7a 8d       	ldd	r23, Y+26	; 0x1a
     886:	8b 8d       	ldd	r24, Y+27	; 0x1b
     888:	9c 8d       	ldd	r25, Y+28	; 0x1c
     88a:	20 e0       	ldi	r18, 0x00	; 0
     88c:	30 e0       	ldi	r19, 0x00	; 0
     88e:	40 e2       	ldi	r20, 0x20	; 32
     890:	51 e4       	ldi	r21, 0x41	; 65
     892:	0e 94 d5 06 	call	0xdaa	; 0xdaa <__mulsf3>
     896:	dc 01       	movw	r26, r24
     898:	cb 01       	movw	r24, r22
     89a:	bc 01       	movw	r22, r24
     89c:	cd 01       	movw	r24, r26
     89e:	0e 94 ff 04 	call	0x9fe	; 0x9fe <__fixunssfsi>
     8a2:	dc 01       	movw	r26, r24
     8a4:	cb 01       	movw	r24, r22
     8a6:	9c 8b       	std	Y+20, r25	; 0x14
     8a8:	8b 8b       	std	Y+19, r24	; 0x13
     8aa:	0f c0       	rjmp	.+30     	; 0x8ca <main+0x1c2>
     8ac:	80 e9       	ldi	r24, 0x90	; 144
     8ae:	91 e0       	ldi	r25, 0x01	; 1
     8b0:	9a 8b       	std	Y+18, r25	; 0x12
     8b2:	89 8b       	std	Y+17, r24	; 0x11
     8b4:	89 89       	ldd	r24, Y+17	; 0x11
     8b6:	9a 89       	ldd	r25, Y+18	; 0x12
     8b8:	01 97       	sbiw	r24, 0x01	; 1
     8ba:	f1 f7       	brne	.-4      	; 0x8b8 <main+0x1b0>
     8bc:	9a 8b       	std	Y+18, r25	; 0x12
     8be:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     8c0:	8b 89       	ldd	r24, Y+19	; 0x13
     8c2:	9c 89       	ldd	r25, Y+20	; 0x14
     8c4:	01 97       	sbiw	r24, 0x01	; 1
     8c6:	9c 8b       	std	Y+20, r25	; 0x14
     8c8:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     8ca:	8b 89       	ldd	r24, Y+19	; 0x13
     8cc:	9c 89       	ldd	r25, Y+20	; 0x14
     8ce:	00 97       	sbiw	r24, 0x00	; 0
     8d0:	69 f7       	brne	.-38     	; 0x8ac <main+0x1a4>
     8d2:	14 c0       	rjmp	.+40     	; 0x8fc <main+0x1f4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     8d4:	6d 89       	ldd	r22, Y+21	; 0x15
     8d6:	7e 89       	ldd	r23, Y+22	; 0x16
     8d8:	8f 89       	ldd	r24, Y+23	; 0x17
     8da:	98 8d       	ldd	r25, Y+24	; 0x18
     8dc:	0e 94 ff 04 	call	0x9fe	; 0x9fe <__fixunssfsi>
     8e0:	dc 01       	movw	r26, r24
     8e2:	cb 01       	movw	r24, r22
     8e4:	9c 8b       	std	Y+20, r25	; 0x14
     8e6:	8b 8b       	std	Y+19, r24	; 0x13
     8e8:	8b 89       	ldd	r24, Y+19	; 0x13
     8ea:	9c 89       	ldd	r25, Y+20	; 0x14
     8ec:	98 8b       	std	Y+16, r25	; 0x10
     8ee:	8f 87       	std	Y+15, r24	; 0x0f
     8f0:	8f 85       	ldd	r24, Y+15	; 0x0f
     8f2:	98 89       	ldd	r25, Y+16	; 0x10
     8f4:	01 97       	sbiw	r24, 0x01	; 1
     8f6:	f1 f7       	brne	.-4      	; 0x8f4 <main+0x1ec>
     8f8:	98 8b       	std	Y+16, r25	; 0x10
     8fa:	8f 87       	std	Y+15, r24	; 0x0f
        _delay_ms(5000);
        buzzer(350, 500);
     8fc:	8e e5       	ldi	r24, 0x5E	; 94
     8fe:	91 e0       	ldi	r25, 0x01	; 1
     900:	64 ef       	ldi	r22, 0xF4	; 244
     902:	71 e0       	ldi	r23, 0x01	; 1
     904:	0e 94 8c 00 	call	0x118	; 0x118 <buzzer>
        functie3();
     908:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <functie3>
     90c:	80 e0       	ldi	r24, 0x00	; 0
     90e:	90 e4       	ldi	r25, 0x40	; 64
     910:	ac e9       	ldi	r26, 0x9C	; 156
     912:	b5 e4       	ldi	r27, 0x45	; 69
     914:	8b 87       	std	Y+11, r24	; 0x0b
     916:	9c 87       	std	Y+12, r25	; 0x0c
     918:	ad 87       	std	Y+13, r26	; 0x0d
     91a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     91c:	6b 85       	ldd	r22, Y+11	; 0x0b
     91e:	7c 85       	ldd	r23, Y+12	; 0x0c
     920:	8d 85       	ldd	r24, Y+13	; 0x0d
     922:	9e 85       	ldd	r25, Y+14	; 0x0e
     924:	20 e0       	ldi	r18, 0x00	; 0
     926:	30 e0       	ldi	r19, 0x00	; 0
     928:	4a e7       	ldi	r20, 0x7A	; 122
     92a:	55 e4       	ldi	r21, 0x45	; 69
     92c:	0e 94 d5 06 	call	0xdaa	; 0xdaa <__mulsf3>
     930:	dc 01       	movw	r26, r24
     932:	cb 01       	movw	r24, r22
     934:	8f 83       	std	Y+7, r24	; 0x07
     936:	98 87       	std	Y+8, r25	; 0x08
     938:	a9 87       	std	Y+9, r26	; 0x09
     93a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     93c:	6f 81       	ldd	r22, Y+7	; 0x07
     93e:	78 85       	ldd	r23, Y+8	; 0x08
     940:	89 85       	ldd	r24, Y+9	; 0x09
     942:	9a 85       	ldd	r25, Y+10	; 0x0a
     944:	20 e0       	ldi	r18, 0x00	; 0
     946:	30 e0       	ldi	r19, 0x00	; 0
     948:	40 e8       	ldi	r20, 0x80	; 128
     94a:	5f e3       	ldi	r21, 0x3F	; 63
     94c:	0e 94 db 08 	call	0x11b6	; 0x11b6 <__ltsf2>
     950:	88 23       	and	r24, r24
     952:	2c f4       	brge	.+10     	; 0x95e <__stack+0x5f>
		__ticks = 1;
     954:	81 e0       	ldi	r24, 0x01	; 1
     956:	90 e0       	ldi	r25, 0x00	; 0
     958:	9e 83       	std	Y+6, r25	; 0x06
     95a:	8d 83       	std	Y+5, r24	; 0x05
     95c:	3f c0       	rjmp	.+126    	; 0x9dc <__stack+0xdd>
	else if (__tmp > 65535)
     95e:	6f 81       	ldd	r22, Y+7	; 0x07
     960:	78 85       	ldd	r23, Y+8	; 0x08
     962:	89 85       	ldd	r24, Y+9	; 0x09
     964:	9a 85       	ldd	r25, Y+10	; 0x0a
     966:	20 e0       	ldi	r18, 0x00	; 0
     968:	3f ef       	ldi	r19, 0xFF	; 255
     96a:	4f e7       	ldi	r20, 0x7F	; 127
     96c:	57 e4       	ldi	r21, 0x47	; 71
     96e:	0e 94 7b 08 	call	0x10f6	; 0x10f6 <__gtsf2>
     972:	18 16       	cp	r1, r24
     974:	4c f5       	brge	.+82     	; 0x9c8 <__stack+0xc9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     976:	6b 85       	ldd	r22, Y+11	; 0x0b
     978:	7c 85       	ldd	r23, Y+12	; 0x0c
     97a:	8d 85       	ldd	r24, Y+13	; 0x0d
     97c:	9e 85       	ldd	r25, Y+14	; 0x0e
     97e:	20 e0       	ldi	r18, 0x00	; 0
     980:	30 e0       	ldi	r19, 0x00	; 0
     982:	40 e2       	ldi	r20, 0x20	; 32
     984:	51 e4       	ldi	r21, 0x41	; 65
     986:	0e 94 d5 06 	call	0xdaa	; 0xdaa <__mulsf3>
     98a:	dc 01       	movw	r26, r24
     98c:	cb 01       	movw	r24, r22
     98e:	bc 01       	movw	r22, r24
     990:	cd 01       	movw	r24, r26
     992:	0e 94 ff 04 	call	0x9fe	; 0x9fe <__fixunssfsi>
     996:	dc 01       	movw	r26, r24
     998:	cb 01       	movw	r24, r22
     99a:	9e 83       	std	Y+6, r25	; 0x06
     99c:	8d 83       	std	Y+5, r24	; 0x05
     99e:	0f c0       	rjmp	.+30     	; 0x9be <__stack+0xbf>
     9a0:	80 e9       	ldi	r24, 0x90	; 144
     9a2:	91 e0       	ldi	r25, 0x01	; 1
     9a4:	9c 83       	std	Y+4, r25	; 0x04
     9a6:	8b 83       	std	Y+3, r24	; 0x03
     9a8:	8b 81       	ldd	r24, Y+3	; 0x03
     9aa:	9c 81       	ldd	r25, Y+4	; 0x04
     9ac:	01 97       	sbiw	r24, 0x01	; 1
     9ae:	f1 f7       	brne	.-4      	; 0x9ac <__stack+0xad>
     9b0:	9c 83       	std	Y+4, r25	; 0x04
     9b2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     9b4:	8d 81       	ldd	r24, Y+5	; 0x05
     9b6:	9e 81       	ldd	r25, Y+6	; 0x06
     9b8:	01 97       	sbiw	r24, 0x01	; 1
     9ba:	9e 83       	std	Y+6, r25	; 0x06
     9bc:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     9be:	8d 81       	ldd	r24, Y+5	; 0x05
     9c0:	9e 81       	ldd	r25, Y+6	; 0x06
     9c2:	00 97       	sbiw	r24, 0x00	; 0
     9c4:	69 f7       	brne	.-38     	; 0x9a0 <__stack+0xa1>
     9c6:	14 c0       	rjmp	.+40     	; 0x9f0 <__stack+0xf1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     9c8:	6f 81       	ldd	r22, Y+7	; 0x07
     9ca:	78 85       	ldd	r23, Y+8	; 0x08
     9cc:	89 85       	ldd	r24, Y+9	; 0x09
     9ce:	9a 85       	ldd	r25, Y+10	; 0x0a
     9d0:	0e 94 ff 04 	call	0x9fe	; 0x9fe <__fixunssfsi>
     9d4:	dc 01       	movw	r26, r24
     9d6:	cb 01       	movw	r24, r22
     9d8:	9e 83       	std	Y+6, r25	; 0x06
     9da:	8d 83       	std	Y+5, r24	; 0x05
     9dc:	8d 81       	ldd	r24, Y+5	; 0x05
     9de:	9e 81       	ldd	r25, Y+6	; 0x06
     9e0:	9a 83       	std	Y+2, r25	; 0x02
     9e2:	89 83       	std	Y+1, r24	; 0x01
     9e4:	89 81       	ldd	r24, Y+1	; 0x01
     9e6:	9a 81       	ldd	r25, Y+2	; 0x02
     9e8:	01 97       	sbiw	r24, 0x01	; 1
     9ea:	f1 f7       	brne	.-4      	; 0x9e8 <__stack+0xe9>
     9ec:	9a 83       	std	Y+2, r25	; 0x02
     9ee:	89 83       	std	Y+1, r24	; 0x01
        _delay_ms(5000);
        buzzer(350, 500);
     9f0:	8e e5       	ldi	r24, 0x5E	; 94
     9f2:	91 e0       	ldi	r25, 0x01	; 1
     9f4:	64 ef       	ldi	r22, 0xF4	; 244
     9f6:	71 e0       	ldi	r23, 0x01	; 1
     9f8:	0e 94 8c 00 	call	0x118	; 0x118 <buzzer>
     9fc:	91 ce       	rjmp	.-734    	; 0x720 <main+0x18>

000009fe <__fixunssfsi>:
     9fe:	ef 92       	push	r14
     a00:	ff 92       	push	r15
     a02:	0f 93       	push	r16
     a04:	1f 93       	push	r17
     a06:	7b 01       	movw	r14, r22
     a08:	8c 01       	movw	r16, r24
     a0a:	20 e0       	ldi	r18, 0x00	; 0
     a0c:	30 e0       	ldi	r19, 0x00	; 0
     a0e:	40 e0       	ldi	r20, 0x00	; 0
     a10:	5f e4       	ldi	r21, 0x4F	; 79
     a12:	0e 94 ab 08 	call	0x1156	; 0x1156 <__gesf2>
     a16:	88 23       	and	r24, r24
     a18:	8c f0       	brlt	.+34     	; 0xa3c <__fixunssfsi+0x3e>
     a1a:	c8 01       	movw	r24, r16
     a1c:	b7 01       	movw	r22, r14
     a1e:	20 e0       	ldi	r18, 0x00	; 0
     a20:	30 e0       	ldi	r19, 0x00	; 0
     a22:	40 e0       	ldi	r20, 0x00	; 0
     a24:	5f e4       	ldi	r21, 0x4F	; 79
     a26:	0e 94 77 06 	call	0xcee	; 0xcee <__subsf3>
     a2a:	0e 94 69 09 	call	0x12d2	; 0x12d2 <__fixsfsi>
     a2e:	9b 01       	movw	r18, r22
     a30:	ac 01       	movw	r20, r24
     a32:	20 50       	subi	r18, 0x00	; 0
     a34:	30 40       	sbci	r19, 0x00	; 0
     a36:	40 40       	sbci	r20, 0x00	; 0
     a38:	50 48       	sbci	r21, 0x80	; 128
     a3a:	06 c0       	rjmp	.+12     	; 0xa48 <__fixunssfsi+0x4a>
     a3c:	c8 01       	movw	r24, r16
     a3e:	b7 01       	movw	r22, r14
     a40:	0e 94 69 09 	call	0x12d2	; 0x12d2 <__fixsfsi>
     a44:	9b 01       	movw	r18, r22
     a46:	ac 01       	movw	r20, r24
     a48:	b9 01       	movw	r22, r18
     a4a:	ca 01       	movw	r24, r20
     a4c:	1f 91       	pop	r17
     a4e:	0f 91       	pop	r16
     a50:	ff 90       	pop	r15
     a52:	ef 90       	pop	r14
     a54:	08 95       	ret

00000a56 <_fpadd_parts>:
     a56:	a0 e0       	ldi	r26, 0x00	; 0
     a58:	b0 e0       	ldi	r27, 0x00	; 0
     a5a:	e1 e3       	ldi	r30, 0x31	; 49
     a5c:	f5 e0       	ldi	r31, 0x05	; 5
     a5e:	0c 94 b2 0b 	jmp	0x1764	; 0x1764 <__prologue_saves__>
     a62:	dc 01       	movw	r26, r24
     a64:	2b 01       	movw	r4, r22
     a66:	fa 01       	movw	r30, r20
     a68:	9c 91       	ld	r25, X
     a6a:	92 30       	cpi	r25, 0x02	; 2
     a6c:	08 f4       	brcc	.+2      	; 0xa70 <_fpadd_parts+0x1a>
     a6e:	39 c1       	rjmp	.+626    	; 0xce2 <_fpadd_parts+0x28c>
     a70:	eb 01       	movw	r28, r22
     a72:	88 81       	ld	r24, Y
     a74:	82 30       	cpi	r24, 0x02	; 2
     a76:	08 f4       	brcc	.+2      	; 0xa7a <_fpadd_parts+0x24>
     a78:	33 c1       	rjmp	.+614    	; 0xce0 <_fpadd_parts+0x28a>
     a7a:	94 30       	cpi	r25, 0x04	; 4
     a7c:	69 f4       	brne	.+26     	; 0xa98 <_fpadd_parts+0x42>
     a7e:	84 30       	cpi	r24, 0x04	; 4
     a80:	09 f0       	breq	.+2      	; 0xa84 <_fpadd_parts+0x2e>
     a82:	2f c1       	rjmp	.+606    	; 0xce2 <_fpadd_parts+0x28c>
     a84:	11 96       	adiw	r26, 0x01	; 1
     a86:	9c 91       	ld	r25, X
     a88:	11 97       	sbiw	r26, 0x01	; 1
     a8a:	89 81       	ldd	r24, Y+1	; 0x01
     a8c:	98 17       	cp	r25, r24
     a8e:	09 f4       	brne	.+2      	; 0xa92 <_fpadd_parts+0x3c>
     a90:	28 c1       	rjmp	.+592    	; 0xce2 <_fpadd_parts+0x28c>
     a92:	a0 e0       	ldi	r26, 0x00	; 0
     a94:	b1 e0       	ldi	r27, 0x01	; 1
     a96:	25 c1       	rjmp	.+586    	; 0xce2 <_fpadd_parts+0x28c>
     a98:	84 30       	cpi	r24, 0x04	; 4
     a9a:	09 f4       	brne	.+2      	; 0xa9e <_fpadd_parts+0x48>
     a9c:	21 c1       	rjmp	.+578    	; 0xce0 <_fpadd_parts+0x28a>
     a9e:	82 30       	cpi	r24, 0x02	; 2
     aa0:	a9 f4       	brne	.+42     	; 0xacc <_fpadd_parts+0x76>
     aa2:	92 30       	cpi	r25, 0x02	; 2
     aa4:	09 f0       	breq	.+2      	; 0xaa8 <_fpadd_parts+0x52>
     aa6:	1d c1       	rjmp	.+570    	; 0xce2 <_fpadd_parts+0x28c>
     aa8:	9a 01       	movw	r18, r20
     aaa:	ad 01       	movw	r20, r26
     aac:	88 e0       	ldi	r24, 0x08	; 8
     aae:	ea 01       	movw	r28, r20
     ab0:	09 90       	ld	r0, Y+
     ab2:	ae 01       	movw	r20, r28
     ab4:	e9 01       	movw	r28, r18
     ab6:	09 92       	st	Y+, r0
     ab8:	9e 01       	movw	r18, r28
     aba:	81 50       	subi	r24, 0x01	; 1
     abc:	c1 f7       	brne	.-16     	; 0xaae <_fpadd_parts+0x58>
     abe:	e2 01       	movw	r28, r4
     ac0:	89 81       	ldd	r24, Y+1	; 0x01
     ac2:	11 96       	adiw	r26, 0x01	; 1
     ac4:	9c 91       	ld	r25, X
     ac6:	89 23       	and	r24, r25
     ac8:	81 83       	std	Z+1, r24	; 0x01
     aca:	08 c1       	rjmp	.+528    	; 0xcdc <_fpadd_parts+0x286>
     acc:	92 30       	cpi	r25, 0x02	; 2
     ace:	09 f4       	brne	.+2      	; 0xad2 <_fpadd_parts+0x7c>
     ad0:	07 c1       	rjmp	.+526    	; 0xce0 <_fpadd_parts+0x28a>
     ad2:	12 96       	adiw	r26, 0x02	; 2
     ad4:	2d 90       	ld	r2, X+
     ad6:	3c 90       	ld	r3, X
     ad8:	13 97       	sbiw	r26, 0x03	; 3
     ada:	eb 01       	movw	r28, r22
     adc:	8a 81       	ldd	r24, Y+2	; 0x02
     ade:	9b 81       	ldd	r25, Y+3	; 0x03
     ae0:	14 96       	adiw	r26, 0x04	; 4
     ae2:	ad 90       	ld	r10, X+
     ae4:	bd 90       	ld	r11, X+
     ae6:	cd 90       	ld	r12, X+
     ae8:	dc 90       	ld	r13, X
     aea:	17 97       	sbiw	r26, 0x07	; 7
     aec:	ec 80       	ldd	r14, Y+4	; 0x04
     aee:	fd 80       	ldd	r15, Y+5	; 0x05
     af0:	0e 81       	ldd	r16, Y+6	; 0x06
     af2:	1f 81       	ldd	r17, Y+7	; 0x07
     af4:	91 01       	movw	r18, r2
     af6:	28 1b       	sub	r18, r24
     af8:	39 0b       	sbc	r19, r25
     afa:	b9 01       	movw	r22, r18
     afc:	37 ff       	sbrs	r19, 7
     afe:	04 c0       	rjmp	.+8      	; 0xb08 <_fpadd_parts+0xb2>
     b00:	66 27       	eor	r22, r22
     b02:	77 27       	eor	r23, r23
     b04:	62 1b       	sub	r22, r18
     b06:	73 0b       	sbc	r23, r19
     b08:	60 32       	cpi	r22, 0x20	; 32
     b0a:	71 05       	cpc	r23, r1
     b0c:	0c f0       	brlt	.+2      	; 0xb10 <_fpadd_parts+0xba>
     b0e:	61 c0       	rjmp	.+194    	; 0xbd2 <_fpadd_parts+0x17c>
     b10:	12 16       	cp	r1, r18
     b12:	13 06       	cpc	r1, r19
     b14:	6c f5       	brge	.+90     	; 0xb70 <_fpadd_parts+0x11a>
     b16:	37 01       	movw	r6, r14
     b18:	48 01       	movw	r8, r16
     b1a:	06 2e       	mov	r0, r22
     b1c:	04 c0       	rjmp	.+8      	; 0xb26 <_fpadd_parts+0xd0>
     b1e:	96 94       	lsr	r9
     b20:	87 94       	ror	r8
     b22:	77 94       	ror	r7
     b24:	67 94       	ror	r6
     b26:	0a 94       	dec	r0
     b28:	d2 f7       	brpl	.-12     	; 0xb1e <_fpadd_parts+0xc8>
     b2a:	21 e0       	ldi	r18, 0x01	; 1
     b2c:	30 e0       	ldi	r19, 0x00	; 0
     b2e:	40 e0       	ldi	r20, 0x00	; 0
     b30:	50 e0       	ldi	r21, 0x00	; 0
     b32:	04 c0       	rjmp	.+8      	; 0xb3c <_fpadd_parts+0xe6>
     b34:	22 0f       	add	r18, r18
     b36:	33 1f       	adc	r19, r19
     b38:	44 1f       	adc	r20, r20
     b3a:	55 1f       	adc	r21, r21
     b3c:	6a 95       	dec	r22
     b3e:	d2 f7       	brpl	.-12     	; 0xb34 <_fpadd_parts+0xde>
     b40:	21 50       	subi	r18, 0x01	; 1
     b42:	30 40       	sbci	r19, 0x00	; 0
     b44:	40 40       	sbci	r20, 0x00	; 0
     b46:	50 40       	sbci	r21, 0x00	; 0
     b48:	2e 21       	and	r18, r14
     b4a:	3f 21       	and	r19, r15
     b4c:	40 23       	and	r20, r16
     b4e:	51 23       	and	r21, r17
     b50:	21 15       	cp	r18, r1
     b52:	31 05       	cpc	r19, r1
     b54:	41 05       	cpc	r20, r1
     b56:	51 05       	cpc	r21, r1
     b58:	21 f0       	breq	.+8      	; 0xb62 <_fpadd_parts+0x10c>
     b5a:	21 e0       	ldi	r18, 0x01	; 1
     b5c:	30 e0       	ldi	r19, 0x00	; 0
     b5e:	40 e0       	ldi	r20, 0x00	; 0
     b60:	50 e0       	ldi	r21, 0x00	; 0
     b62:	79 01       	movw	r14, r18
     b64:	8a 01       	movw	r16, r20
     b66:	e6 28       	or	r14, r6
     b68:	f7 28       	or	r15, r7
     b6a:	08 29       	or	r16, r8
     b6c:	19 29       	or	r17, r9
     b6e:	3c c0       	rjmp	.+120    	; 0xbe8 <_fpadd_parts+0x192>
     b70:	23 2b       	or	r18, r19
     b72:	d1 f1       	breq	.+116    	; 0xbe8 <_fpadd_parts+0x192>
     b74:	26 0e       	add	r2, r22
     b76:	37 1e       	adc	r3, r23
     b78:	35 01       	movw	r6, r10
     b7a:	46 01       	movw	r8, r12
     b7c:	06 2e       	mov	r0, r22
     b7e:	04 c0       	rjmp	.+8      	; 0xb88 <_fpadd_parts+0x132>
     b80:	96 94       	lsr	r9
     b82:	87 94       	ror	r8
     b84:	77 94       	ror	r7
     b86:	67 94       	ror	r6
     b88:	0a 94       	dec	r0
     b8a:	d2 f7       	brpl	.-12     	; 0xb80 <_fpadd_parts+0x12a>
     b8c:	21 e0       	ldi	r18, 0x01	; 1
     b8e:	30 e0       	ldi	r19, 0x00	; 0
     b90:	40 e0       	ldi	r20, 0x00	; 0
     b92:	50 e0       	ldi	r21, 0x00	; 0
     b94:	04 c0       	rjmp	.+8      	; 0xb9e <_fpadd_parts+0x148>
     b96:	22 0f       	add	r18, r18
     b98:	33 1f       	adc	r19, r19
     b9a:	44 1f       	adc	r20, r20
     b9c:	55 1f       	adc	r21, r21
     b9e:	6a 95       	dec	r22
     ba0:	d2 f7       	brpl	.-12     	; 0xb96 <_fpadd_parts+0x140>
     ba2:	21 50       	subi	r18, 0x01	; 1
     ba4:	30 40       	sbci	r19, 0x00	; 0
     ba6:	40 40       	sbci	r20, 0x00	; 0
     ba8:	50 40       	sbci	r21, 0x00	; 0
     baa:	2a 21       	and	r18, r10
     bac:	3b 21       	and	r19, r11
     bae:	4c 21       	and	r20, r12
     bb0:	5d 21       	and	r21, r13
     bb2:	21 15       	cp	r18, r1
     bb4:	31 05       	cpc	r19, r1
     bb6:	41 05       	cpc	r20, r1
     bb8:	51 05       	cpc	r21, r1
     bba:	21 f0       	breq	.+8      	; 0xbc4 <_fpadd_parts+0x16e>
     bbc:	21 e0       	ldi	r18, 0x01	; 1
     bbe:	30 e0       	ldi	r19, 0x00	; 0
     bc0:	40 e0       	ldi	r20, 0x00	; 0
     bc2:	50 e0       	ldi	r21, 0x00	; 0
     bc4:	59 01       	movw	r10, r18
     bc6:	6a 01       	movw	r12, r20
     bc8:	a6 28       	or	r10, r6
     bca:	b7 28       	or	r11, r7
     bcc:	c8 28       	or	r12, r8
     bce:	d9 28       	or	r13, r9
     bd0:	0b c0       	rjmp	.+22     	; 0xbe8 <_fpadd_parts+0x192>
     bd2:	82 15       	cp	r24, r2
     bd4:	93 05       	cpc	r25, r3
     bd6:	2c f0       	brlt	.+10     	; 0xbe2 <_fpadd_parts+0x18c>
     bd8:	1c 01       	movw	r2, r24
     bda:	aa 24       	eor	r10, r10
     bdc:	bb 24       	eor	r11, r11
     bde:	65 01       	movw	r12, r10
     be0:	03 c0       	rjmp	.+6      	; 0xbe8 <_fpadd_parts+0x192>
     be2:	ee 24       	eor	r14, r14
     be4:	ff 24       	eor	r15, r15
     be6:	87 01       	movw	r16, r14
     be8:	11 96       	adiw	r26, 0x01	; 1
     bea:	9c 91       	ld	r25, X
     bec:	d2 01       	movw	r26, r4
     bee:	11 96       	adiw	r26, 0x01	; 1
     bf0:	8c 91       	ld	r24, X
     bf2:	98 17       	cp	r25, r24
     bf4:	09 f4       	brne	.+2      	; 0xbf8 <_fpadd_parts+0x1a2>
     bf6:	45 c0       	rjmp	.+138    	; 0xc82 <_fpadd_parts+0x22c>
     bf8:	99 23       	and	r25, r25
     bfa:	39 f0       	breq	.+14     	; 0xc0a <_fpadd_parts+0x1b4>
     bfc:	a8 01       	movw	r20, r16
     bfe:	97 01       	movw	r18, r14
     c00:	2a 19       	sub	r18, r10
     c02:	3b 09       	sbc	r19, r11
     c04:	4c 09       	sbc	r20, r12
     c06:	5d 09       	sbc	r21, r13
     c08:	06 c0       	rjmp	.+12     	; 0xc16 <_fpadd_parts+0x1c0>
     c0a:	a6 01       	movw	r20, r12
     c0c:	95 01       	movw	r18, r10
     c0e:	2e 19       	sub	r18, r14
     c10:	3f 09       	sbc	r19, r15
     c12:	40 0b       	sbc	r20, r16
     c14:	51 0b       	sbc	r21, r17
     c16:	57 fd       	sbrc	r21, 7
     c18:	08 c0       	rjmp	.+16     	; 0xc2a <_fpadd_parts+0x1d4>
     c1a:	11 82       	std	Z+1, r1	; 0x01
     c1c:	33 82       	std	Z+3, r3	; 0x03
     c1e:	22 82       	std	Z+2, r2	; 0x02
     c20:	24 83       	std	Z+4, r18	; 0x04
     c22:	35 83       	std	Z+5, r19	; 0x05
     c24:	46 83       	std	Z+6, r20	; 0x06
     c26:	57 83       	std	Z+7, r21	; 0x07
     c28:	1d c0       	rjmp	.+58     	; 0xc64 <_fpadd_parts+0x20e>
     c2a:	81 e0       	ldi	r24, 0x01	; 1
     c2c:	81 83       	std	Z+1, r24	; 0x01
     c2e:	33 82       	std	Z+3, r3	; 0x03
     c30:	22 82       	std	Z+2, r2	; 0x02
     c32:	88 27       	eor	r24, r24
     c34:	99 27       	eor	r25, r25
     c36:	dc 01       	movw	r26, r24
     c38:	82 1b       	sub	r24, r18
     c3a:	93 0b       	sbc	r25, r19
     c3c:	a4 0b       	sbc	r26, r20
     c3e:	b5 0b       	sbc	r27, r21
     c40:	84 83       	std	Z+4, r24	; 0x04
     c42:	95 83       	std	Z+5, r25	; 0x05
     c44:	a6 83       	std	Z+6, r26	; 0x06
     c46:	b7 83       	std	Z+7, r27	; 0x07
     c48:	0d c0       	rjmp	.+26     	; 0xc64 <_fpadd_parts+0x20e>
     c4a:	22 0f       	add	r18, r18
     c4c:	33 1f       	adc	r19, r19
     c4e:	44 1f       	adc	r20, r20
     c50:	55 1f       	adc	r21, r21
     c52:	24 83       	std	Z+4, r18	; 0x04
     c54:	35 83       	std	Z+5, r19	; 0x05
     c56:	46 83       	std	Z+6, r20	; 0x06
     c58:	57 83       	std	Z+7, r21	; 0x07
     c5a:	82 81       	ldd	r24, Z+2	; 0x02
     c5c:	93 81       	ldd	r25, Z+3	; 0x03
     c5e:	01 97       	sbiw	r24, 0x01	; 1
     c60:	93 83       	std	Z+3, r25	; 0x03
     c62:	82 83       	std	Z+2, r24	; 0x02
     c64:	24 81       	ldd	r18, Z+4	; 0x04
     c66:	35 81       	ldd	r19, Z+5	; 0x05
     c68:	46 81       	ldd	r20, Z+6	; 0x06
     c6a:	57 81       	ldd	r21, Z+7	; 0x07
     c6c:	da 01       	movw	r26, r20
     c6e:	c9 01       	movw	r24, r18
     c70:	01 97       	sbiw	r24, 0x01	; 1
     c72:	a1 09       	sbc	r26, r1
     c74:	b1 09       	sbc	r27, r1
     c76:	8f 5f       	subi	r24, 0xFF	; 255
     c78:	9f 4f       	sbci	r25, 0xFF	; 255
     c7a:	af 4f       	sbci	r26, 0xFF	; 255
     c7c:	bf 43       	sbci	r27, 0x3F	; 63
     c7e:	28 f3       	brcs	.-54     	; 0xc4a <_fpadd_parts+0x1f4>
     c80:	0b c0       	rjmp	.+22     	; 0xc98 <_fpadd_parts+0x242>
     c82:	91 83       	std	Z+1, r25	; 0x01
     c84:	33 82       	std	Z+3, r3	; 0x03
     c86:	22 82       	std	Z+2, r2	; 0x02
     c88:	ea 0c       	add	r14, r10
     c8a:	fb 1c       	adc	r15, r11
     c8c:	0c 1d       	adc	r16, r12
     c8e:	1d 1d       	adc	r17, r13
     c90:	e4 82       	std	Z+4, r14	; 0x04
     c92:	f5 82       	std	Z+5, r15	; 0x05
     c94:	06 83       	std	Z+6, r16	; 0x06
     c96:	17 83       	std	Z+7, r17	; 0x07
     c98:	83 e0       	ldi	r24, 0x03	; 3
     c9a:	80 83       	st	Z, r24
     c9c:	24 81       	ldd	r18, Z+4	; 0x04
     c9e:	35 81       	ldd	r19, Z+5	; 0x05
     ca0:	46 81       	ldd	r20, Z+6	; 0x06
     ca2:	57 81       	ldd	r21, Z+7	; 0x07
     ca4:	57 ff       	sbrs	r21, 7
     ca6:	1a c0       	rjmp	.+52     	; 0xcdc <_fpadd_parts+0x286>
     ca8:	c9 01       	movw	r24, r18
     caa:	aa 27       	eor	r26, r26
     cac:	97 fd       	sbrc	r25, 7
     cae:	a0 95       	com	r26
     cb0:	ba 2f       	mov	r27, r26
     cb2:	81 70       	andi	r24, 0x01	; 1
     cb4:	90 70       	andi	r25, 0x00	; 0
     cb6:	a0 70       	andi	r26, 0x00	; 0
     cb8:	b0 70       	andi	r27, 0x00	; 0
     cba:	56 95       	lsr	r21
     cbc:	47 95       	ror	r20
     cbe:	37 95       	ror	r19
     cc0:	27 95       	ror	r18
     cc2:	82 2b       	or	r24, r18
     cc4:	93 2b       	or	r25, r19
     cc6:	a4 2b       	or	r26, r20
     cc8:	b5 2b       	or	r27, r21
     cca:	84 83       	std	Z+4, r24	; 0x04
     ccc:	95 83       	std	Z+5, r25	; 0x05
     cce:	a6 83       	std	Z+6, r26	; 0x06
     cd0:	b7 83       	std	Z+7, r27	; 0x07
     cd2:	82 81       	ldd	r24, Z+2	; 0x02
     cd4:	93 81       	ldd	r25, Z+3	; 0x03
     cd6:	01 96       	adiw	r24, 0x01	; 1
     cd8:	93 83       	std	Z+3, r25	; 0x03
     cda:	82 83       	std	Z+2, r24	; 0x02
     cdc:	df 01       	movw	r26, r30
     cde:	01 c0       	rjmp	.+2      	; 0xce2 <_fpadd_parts+0x28c>
     ce0:	d2 01       	movw	r26, r4
     ce2:	cd 01       	movw	r24, r26
     ce4:	cd b7       	in	r28, 0x3d	; 61
     ce6:	de b7       	in	r29, 0x3e	; 62
     ce8:	e2 e1       	ldi	r30, 0x12	; 18
     cea:	0c 94 ce 0b 	jmp	0x179c	; 0x179c <__epilogue_restores__>

00000cee <__subsf3>:
     cee:	a0 e2       	ldi	r26, 0x20	; 32
     cf0:	b0 e0       	ldi	r27, 0x00	; 0
     cf2:	ed e7       	ldi	r30, 0x7D	; 125
     cf4:	f6 e0       	ldi	r31, 0x06	; 6
     cf6:	0c 94 be 0b 	jmp	0x177c	; 0x177c <__prologue_saves__+0x18>
     cfa:	69 83       	std	Y+1, r22	; 0x01
     cfc:	7a 83       	std	Y+2, r23	; 0x02
     cfe:	8b 83       	std	Y+3, r24	; 0x03
     d00:	9c 83       	std	Y+4, r25	; 0x04
     d02:	2d 83       	std	Y+5, r18	; 0x05
     d04:	3e 83       	std	Y+6, r19	; 0x06
     d06:	4f 83       	std	Y+7, r20	; 0x07
     d08:	58 87       	std	Y+8, r21	; 0x08
     d0a:	e9 e0       	ldi	r30, 0x09	; 9
     d0c:	ee 2e       	mov	r14, r30
     d0e:	f1 2c       	mov	r15, r1
     d10:	ec 0e       	add	r14, r28
     d12:	fd 1e       	adc	r15, r29
     d14:	ce 01       	movw	r24, r28
     d16:	01 96       	adiw	r24, 0x01	; 1
     d18:	b7 01       	movw	r22, r14
     d1a:	0e 94 e1 0a 	call	0x15c2	; 0x15c2 <__unpack_f>
     d1e:	8e 01       	movw	r16, r28
     d20:	0f 5e       	subi	r16, 0xEF	; 239
     d22:	1f 4f       	sbci	r17, 0xFF	; 255
     d24:	ce 01       	movw	r24, r28
     d26:	05 96       	adiw	r24, 0x05	; 5
     d28:	b8 01       	movw	r22, r16
     d2a:	0e 94 e1 0a 	call	0x15c2	; 0x15c2 <__unpack_f>
     d2e:	8a 89       	ldd	r24, Y+18	; 0x12
     d30:	91 e0       	ldi	r25, 0x01	; 1
     d32:	89 27       	eor	r24, r25
     d34:	8a 8b       	std	Y+18, r24	; 0x12
     d36:	c7 01       	movw	r24, r14
     d38:	b8 01       	movw	r22, r16
     d3a:	ae 01       	movw	r20, r28
     d3c:	47 5e       	subi	r20, 0xE7	; 231
     d3e:	5f 4f       	sbci	r21, 0xFF	; 255
     d40:	0e 94 2b 05 	call	0xa56	; 0xa56 <_fpadd_parts>
     d44:	0e 94 0c 0a 	call	0x1418	; 0x1418 <__pack_f>
     d48:	a0 96       	adiw	r28, 0x20	; 32
     d4a:	e6 e0       	ldi	r30, 0x06	; 6
     d4c:	0c 94 da 0b 	jmp	0x17b4	; 0x17b4 <__epilogue_restores__+0x18>

00000d50 <__addsf3>:
     d50:	a0 e2       	ldi	r26, 0x20	; 32
     d52:	b0 e0       	ldi	r27, 0x00	; 0
     d54:	ee ea       	ldi	r30, 0xAE	; 174
     d56:	f6 e0       	ldi	r31, 0x06	; 6
     d58:	0c 94 be 0b 	jmp	0x177c	; 0x177c <__prologue_saves__+0x18>
     d5c:	69 83       	std	Y+1, r22	; 0x01
     d5e:	7a 83       	std	Y+2, r23	; 0x02
     d60:	8b 83       	std	Y+3, r24	; 0x03
     d62:	9c 83       	std	Y+4, r25	; 0x04
     d64:	2d 83       	std	Y+5, r18	; 0x05
     d66:	3e 83       	std	Y+6, r19	; 0x06
     d68:	4f 83       	std	Y+7, r20	; 0x07
     d6a:	58 87       	std	Y+8, r21	; 0x08
     d6c:	f9 e0       	ldi	r31, 0x09	; 9
     d6e:	ef 2e       	mov	r14, r31
     d70:	f1 2c       	mov	r15, r1
     d72:	ec 0e       	add	r14, r28
     d74:	fd 1e       	adc	r15, r29
     d76:	ce 01       	movw	r24, r28
     d78:	01 96       	adiw	r24, 0x01	; 1
     d7a:	b7 01       	movw	r22, r14
     d7c:	0e 94 e1 0a 	call	0x15c2	; 0x15c2 <__unpack_f>
     d80:	8e 01       	movw	r16, r28
     d82:	0f 5e       	subi	r16, 0xEF	; 239
     d84:	1f 4f       	sbci	r17, 0xFF	; 255
     d86:	ce 01       	movw	r24, r28
     d88:	05 96       	adiw	r24, 0x05	; 5
     d8a:	b8 01       	movw	r22, r16
     d8c:	0e 94 e1 0a 	call	0x15c2	; 0x15c2 <__unpack_f>
     d90:	c7 01       	movw	r24, r14
     d92:	b8 01       	movw	r22, r16
     d94:	ae 01       	movw	r20, r28
     d96:	47 5e       	subi	r20, 0xE7	; 231
     d98:	5f 4f       	sbci	r21, 0xFF	; 255
     d9a:	0e 94 2b 05 	call	0xa56	; 0xa56 <_fpadd_parts>
     d9e:	0e 94 0c 0a 	call	0x1418	; 0x1418 <__pack_f>
     da2:	a0 96       	adiw	r28, 0x20	; 32
     da4:	e6 e0       	ldi	r30, 0x06	; 6
     da6:	0c 94 da 0b 	jmp	0x17b4	; 0x17b4 <__epilogue_restores__+0x18>

00000daa <__mulsf3>:
     daa:	a0 e2       	ldi	r26, 0x20	; 32
     dac:	b0 e0       	ldi	r27, 0x00	; 0
     dae:	eb ed       	ldi	r30, 0xDB	; 219
     db0:	f6 e0       	ldi	r31, 0x06	; 6
     db2:	0c 94 b2 0b 	jmp	0x1764	; 0x1764 <__prologue_saves__>
     db6:	69 83       	std	Y+1, r22	; 0x01
     db8:	7a 83       	std	Y+2, r23	; 0x02
     dba:	8b 83       	std	Y+3, r24	; 0x03
     dbc:	9c 83       	std	Y+4, r25	; 0x04
     dbe:	2d 83       	std	Y+5, r18	; 0x05
     dc0:	3e 83       	std	Y+6, r19	; 0x06
     dc2:	4f 83       	std	Y+7, r20	; 0x07
     dc4:	58 87       	std	Y+8, r21	; 0x08
     dc6:	ce 01       	movw	r24, r28
     dc8:	01 96       	adiw	r24, 0x01	; 1
     dca:	be 01       	movw	r22, r28
     dcc:	67 5f       	subi	r22, 0xF7	; 247
     dce:	7f 4f       	sbci	r23, 0xFF	; 255
     dd0:	0e 94 e1 0a 	call	0x15c2	; 0x15c2 <__unpack_f>
     dd4:	ce 01       	movw	r24, r28
     dd6:	05 96       	adiw	r24, 0x05	; 5
     dd8:	be 01       	movw	r22, r28
     dda:	6f 5e       	subi	r22, 0xEF	; 239
     ddc:	7f 4f       	sbci	r23, 0xFF	; 255
     dde:	0e 94 e1 0a 	call	0x15c2	; 0x15c2 <__unpack_f>
     de2:	99 85       	ldd	r25, Y+9	; 0x09
     de4:	92 30       	cpi	r25, 0x02	; 2
     de6:	88 f0       	brcs	.+34     	; 0xe0a <__mulsf3+0x60>
     de8:	89 89       	ldd	r24, Y+17	; 0x11
     dea:	82 30       	cpi	r24, 0x02	; 2
     dec:	c8 f0       	brcs	.+50     	; 0xe20 <__mulsf3+0x76>
     dee:	94 30       	cpi	r25, 0x04	; 4
     df0:	19 f4       	brne	.+6      	; 0xdf8 <__mulsf3+0x4e>
     df2:	82 30       	cpi	r24, 0x02	; 2
     df4:	51 f4       	brne	.+20     	; 0xe0a <__mulsf3+0x60>
     df6:	04 c0       	rjmp	.+8      	; 0xe00 <__mulsf3+0x56>
     df8:	84 30       	cpi	r24, 0x04	; 4
     dfa:	29 f4       	brne	.+10     	; 0xe06 <__mulsf3+0x5c>
     dfc:	92 30       	cpi	r25, 0x02	; 2
     dfe:	81 f4       	brne	.+32     	; 0xe20 <__mulsf3+0x76>
     e00:	80 e0       	ldi	r24, 0x00	; 0
     e02:	91 e0       	ldi	r25, 0x01	; 1
     e04:	c6 c0       	rjmp	.+396    	; 0xf92 <__mulsf3+0x1e8>
     e06:	92 30       	cpi	r25, 0x02	; 2
     e08:	49 f4       	brne	.+18     	; 0xe1c <__mulsf3+0x72>
     e0a:	20 e0       	ldi	r18, 0x00	; 0
     e0c:	9a 85       	ldd	r25, Y+10	; 0x0a
     e0e:	8a 89       	ldd	r24, Y+18	; 0x12
     e10:	98 13       	cpse	r25, r24
     e12:	21 e0       	ldi	r18, 0x01	; 1
     e14:	2a 87       	std	Y+10, r18	; 0x0a
     e16:	ce 01       	movw	r24, r28
     e18:	09 96       	adiw	r24, 0x09	; 9
     e1a:	bb c0       	rjmp	.+374    	; 0xf92 <__mulsf3+0x1e8>
     e1c:	82 30       	cpi	r24, 0x02	; 2
     e1e:	49 f4       	brne	.+18     	; 0xe32 <__mulsf3+0x88>
     e20:	20 e0       	ldi	r18, 0x00	; 0
     e22:	9a 85       	ldd	r25, Y+10	; 0x0a
     e24:	8a 89       	ldd	r24, Y+18	; 0x12
     e26:	98 13       	cpse	r25, r24
     e28:	21 e0       	ldi	r18, 0x01	; 1
     e2a:	2a 8b       	std	Y+18, r18	; 0x12
     e2c:	ce 01       	movw	r24, r28
     e2e:	41 96       	adiw	r24, 0x11	; 17
     e30:	b0 c0       	rjmp	.+352    	; 0xf92 <__mulsf3+0x1e8>
     e32:	2d 84       	ldd	r2, Y+13	; 0x0d
     e34:	3e 84       	ldd	r3, Y+14	; 0x0e
     e36:	4f 84       	ldd	r4, Y+15	; 0x0f
     e38:	58 88       	ldd	r5, Y+16	; 0x10
     e3a:	6d 88       	ldd	r6, Y+21	; 0x15
     e3c:	7e 88       	ldd	r7, Y+22	; 0x16
     e3e:	8f 88       	ldd	r8, Y+23	; 0x17
     e40:	98 8c       	ldd	r9, Y+24	; 0x18
     e42:	ee 24       	eor	r14, r14
     e44:	ff 24       	eor	r15, r15
     e46:	87 01       	movw	r16, r14
     e48:	aa 24       	eor	r10, r10
     e4a:	bb 24       	eor	r11, r11
     e4c:	65 01       	movw	r12, r10
     e4e:	40 e0       	ldi	r20, 0x00	; 0
     e50:	50 e0       	ldi	r21, 0x00	; 0
     e52:	60 e0       	ldi	r22, 0x00	; 0
     e54:	70 e0       	ldi	r23, 0x00	; 0
     e56:	e0 e0       	ldi	r30, 0x00	; 0
     e58:	f0 e0       	ldi	r31, 0x00	; 0
     e5a:	c1 01       	movw	r24, r2
     e5c:	81 70       	andi	r24, 0x01	; 1
     e5e:	90 70       	andi	r25, 0x00	; 0
     e60:	89 2b       	or	r24, r25
     e62:	e9 f0       	breq	.+58     	; 0xe9e <__mulsf3+0xf4>
     e64:	e6 0c       	add	r14, r6
     e66:	f7 1c       	adc	r15, r7
     e68:	08 1d       	adc	r16, r8
     e6a:	19 1d       	adc	r17, r9
     e6c:	9a 01       	movw	r18, r20
     e6e:	ab 01       	movw	r20, r22
     e70:	2a 0d       	add	r18, r10
     e72:	3b 1d       	adc	r19, r11
     e74:	4c 1d       	adc	r20, r12
     e76:	5d 1d       	adc	r21, r13
     e78:	80 e0       	ldi	r24, 0x00	; 0
     e7a:	90 e0       	ldi	r25, 0x00	; 0
     e7c:	a0 e0       	ldi	r26, 0x00	; 0
     e7e:	b0 e0       	ldi	r27, 0x00	; 0
     e80:	e6 14       	cp	r14, r6
     e82:	f7 04       	cpc	r15, r7
     e84:	08 05       	cpc	r16, r8
     e86:	19 05       	cpc	r17, r9
     e88:	20 f4       	brcc	.+8      	; 0xe92 <__mulsf3+0xe8>
     e8a:	81 e0       	ldi	r24, 0x01	; 1
     e8c:	90 e0       	ldi	r25, 0x00	; 0
     e8e:	a0 e0       	ldi	r26, 0x00	; 0
     e90:	b0 e0       	ldi	r27, 0x00	; 0
     e92:	ba 01       	movw	r22, r20
     e94:	a9 01       	movw	r20, r18
     e96:	48 0f       	add	r20, r24
     e98:	59 1f       	adc	r21, r25
     e9a:	6a 1f       	adc	r22, r26
     e9c:	7b 1f       	adc	r23, r27
     e9e:	aa 0c       	add	r10, r10
     ea0:	bb 1c       	adc	r11, r11
     ea2:	cc 1c       	adc	r12, r12
     ea4:	dd 1c       	adc	r13, r13
     ea6:	97 fe       	sbrs	r9, 7
     ea8:	08 c0       	rjmp	.+16     	; 0xeba <__mulsf3+0x110>
     eaa:	81 e0       	ldi	r24, 0x01	; 1
     eac:	90 e0       	ldi	r25, 0x00	; 0
     eae:	a0 e0       	ldi	r26, 0x00	; 0
     eb0:	b0 e0       	ldi	r27, 0x00	; 0
     eb2:	a8 2a       	or	r10, r24
     eb4:	b9 2a       	or	r11, r25
     eb6:	ca 2a       	or	r12, r26
     eb8:	db 2a       	or	r13, r27
     eba:	31 96       	adiw	r30, 0x01	; 1
     ebc:	e0 32       	cpi	r30, 0x20	; 32
     ebe:	f1 05       	cpc	r31, r1
     ec0:	49 f0       	breq	.+18     	; 0xed4 <__mulsf3+0x12a>
     ec2:	66 0c       	add	r6, r6
     ec4:	77 1c       	adc	r7, r7
     ec6:	88 1c       	adc	r8, r8
     ec8:	99 1c       	adc	r9, r9
     eca:	56 94       	lsr	r5
     ecc:	47 94       	ror	r4
     ece:	37 94       	ror	r3
     ed0:	27 94       	ror	r2
     ed2:	c3 cf       	rjmp	.-122    	; 0xe5a <__mulsf3+0xb0>
     ed4:	fa 85       	ldd	r31, Y+10	; 0x0a
     ed6:	ea 89       	ldd	r30, Y+18	; 0x12
     ed8:	2b 89       	ldd	r18, Y+19	; 0x13
     eda:	3c 89       	ldd	r19, Y+20	; 0x14
     edc:	8b 85       	ldd	r24, Y+11	; 0x0b
     ede:	9c 85       	ldd	r25, Y+12	; 0x0c
     ee0:	28 0f       	add	r18, r24
     ee2:	39 1f       	adc	r19, r25
     ee4:	2e 5f       	subi	r18, 0xFE	; 254
     ee6:	3f 4f       	sbci	r19, 0xFF	; 255
     ee8:	17 c0       	rjmp	.+46     	; 0xf18 <__mulsf3+0x16e>
     eea:	ca 01       	movw	r24, r20
     eec:	81 70       	andi	r24, 0x01	; 1
     eee:	90 70       	andi	r25, 0x00	; 0
     ef0:	89 2b       	or	r24, r25
     ef2:	61 f0       	breq	.+24     	; 0xf0c <__mulsf3+0x162>
     ef4:	16 95       	lsr	r17
     ef6:	07 95       	ror	r16
     ef8:	f7 94       	ror	r15
     efa:	e7 94       	ror	r14
     efc:	80 e0       	ldi	r24, 0x00	; 0
     efe:	90 e0       	ldi	r25, 0x00	; 0
     f00:	a0 e0       	ldi	r26, 0x00	; 0
     f02:	b0 e8       	ldi	r27, 0x80	; 128
     f04:	e8 2a       	or	r14, r24
     f06:	f9 2a       	or	r15, r25
     f08:	0a 2b       	or	r16, r26
     f0a:	1b 2b       	or	r17, r27
     f0c:	76 95       	lsr	r23
     f0e:	67 95       	ror	r22
     f10:	57 95       	ror	r21
     f12:	47 95       	ror	r20
     f14:	2f 5f       	subi	r18, 0xFF	; 255
     f16:	3f 4f       	sbci	r19, 0xFF	; 255
     f18:	77 fd       	sbrc	r23, 7
     f1a:	e7 cf       	rjmp	.-50     	; 0xeea <__mulsf3+0x140>
     f1c:	0c c0       	rjmp	.+24     	; 0xf36 <__mulsf3+0x18c>
     f1e:	44 0f       	add	r20, r20
     f20:	55 1f       	adc	r21, r21
     f22:	66 1f       	adc	r22, r22
     f24:	77 1f       	adc	r23, r23
     f26:	17 fd       	sbrc	r17, 7
     f28:	41 60       	ori	r20, 0x01	; 1
     f2a:	ee 0c       	add	r14, r14
     f2c:	ff 1c       	adc	r15, r15
     f2e:	00 1f       	adc	r16, r16
     f30:	11 1f       	adc	r17, r17
     f32:	21 50       	subi	r18, 0x01	; 1
     f34:	30 40       	sbci	r19, 0x00	; 0
     f36:	40 30       	cpi	r20, 0x00	; 0
     f38:	90 e0       	ldi	r25, 0x00	; 0
     f3a:	59 07       	cpc	r21, r25
     f3c:	90 e0       	ldi	r25, 0x00	; 0
     f3e:	69 07       	cpc	r22, r25
     f40:	90 e4       	ldi	r25, 0x40	; 64
     f42:	79 07       	cpc	r23, r25
     f44:	60 f3       	brcs	.-40     	; 0xf1e <__mulsf3+0x174>
     f46:	2b 8f       	std	Y+27, r18	; 0x1b
     f48:	3c 8f       	std	Y+28, r19	; 0x1c
     f4a:	db 01       	movw	r26, r22
     f4c:	ca 01       	movw	r24, r20
     f4e:	8f 77       	andi	r24, 0x7F	; 127
     f50:	90 70       	andi	r25, 0x00	; 0
     f52:	a0 70       	andi	r26, 0x00	; 0
     f54:	b0 70       	andi	r27, 0x00	; 0
     f56:	80 34       	cpi	r24, 0x40	; 64
     f58:	91 05       	cpc	r25, r1
     f5a:	a1 05       	cpc	r26, r1
     f5c:	b1 05       	cpc	r27, r1
     f5e:	61 f4       	brne	.+24     	; 0xf78 <__mulsf3+0x1ce>
     f60:	47 fd       	sbrc	r20, 7
     f62:	0a c0       	rjmp	.+20     	; 0xf78 <__mulsf3+0x1ce>
     f64:	e1 14       	cp	r14, r1
     f66:	f1 04       	cpc	r15, r1
     f68:	01 05       	cpc	r16, r1
     f6a:	11 05       	cpc	r17, r1
     f6c:	29 f0       	breq	.+10     	; 0xf78 <__mulsf3+0x1ce>
     f6e:	40 5c       	subi	r20, 0xC0	; 192
     f70:	5f 4f       	sbci	r21, 0xFF	; 255
     f72:	6f 4f       	sbci	r22, 0xFF	; 255
     f74:	7f 4f       	sbci	r23, 0xFF	; 255
     f76:	40 78       	andi	r20, 0x80	; 128
     f78:	1a 8e       	std	Y+26, r1	; 0x1a
     f7a:	fe 17       	cp	r31, r30
     f7c:	11 f0       	breq	.+4      	; 0xf82 <__mulsf3+0x1d8>
     f7e:	81 e0       	ldi	r24, 0x01	; 1
     f80:	8a 8f       	std	Y+26, r24	; 0x1a
     f82:	4d 8f       	std	Y+29, r20	; 0x1d
     f84:	5e 8f       	std	Y+30, r21	; 0x1e
     f86:	6f 8f       	std	Y+31, r22	; 0x1f
     f88:	78 a3       	std	Y+32, r23	; 0x20
     f8a:	83 e0       	ldi	r24, 0x03	; 3
     f8c:	89 8f       	std	Y+25, r24	; 0x19
     f8e:	ce 01       	movw	r24, r28
     f90:	49 96       	adiw	r24, 0x19	; 25
     f92:	0e 94 0c 0a 	call	0x1418	; 0x1418 <__pack_f>
     f96:	a0 96       	adiw	r28, 0x20	; 32
     f98:	e2 e1       	ldi	r30, 0x12	; 18
     f9a:	0c 94 ce 0b 	jmp	0x179c	; 0x179c <__epilogue_restores__>

00000f9e <__divsf3>:
     f9e:	a8 e1       	ldi	r26, 0x18	; 24
     fa0:	b0 e0       	ldi	r27, 0x00	; 0
     fa2:	e5 ed       	ldi	r30, 0xD5	; 213
     fa4:	f7 e0       	ldi	r31, 0x07	; 7
     fa6:	0c 94 ba 0b 	jmp	0x1774	; 0x1774 <__prologue_saves__+0x10>
     faa:	69 83       	std	Y+1, r22	; 0x01
     fac:	7a 83       	std	Y+2, r23	; 0x02
     fae:	8b 83       	std	Y+3, r24	; 0x03
     fb0:	9c 83       	std	Y+4, r25	; 0x04
     fb2:	2d 83       	std	Y+5, r18	; 0x05
     fb4:	3e 83       	std	Y+6, r19	; 0x06
     fb6:	4f 83       	std	Y+7, r20	; 0x07
     fb8:	58 87       	std	Y+8, r21	; 0x08
     fba:	b9 e0       	ldi	r27, 0x09	; 9
     fbc:	eb 2e       	mov	r14, r27
     fbe:	f1 2c       	mov	r15, r1
     fc0:	ec 0e       	add	r14, r28
     fc2:	fd 1e       	adc	r15, r29
     fc4:	ce 01       	movw	r24, r28
     fc6:	01 96       	adiw	r24, 0x01	; 1
     fc8:	b7 01       	movw	r22, r14
     fca:	0e 94 e1 0a 	call	0x15c2	; 0x15c2 <__unpack_f>
     fce:	8e 01       	movw	r16, r28
     fd0:	0f 5e       	subi	r16, 0xEF	; 239
     fd2:	1f 4f       	sbci	r17, 0xFF	; 255
     fd4:	ce 01       	movw	r24, r28
     fd6:	05 96       	adiw	r24, 0x05	; 5
     fd8:	b8 01       	movw	r22, r16
     fda:	0e 94 e1 0a 	call	0x15c2	; 0x15c2 <__unpack_f>
     fde:	29 85       	ldd	r18, Y+9	; 0x09
     fe0:	22 30       	cpi	r18, 0x02	; 2
     fe2:	08 f4       	brcc	.+2      	; 0xfe6 <__divsf3+0x48>
     fe4:	7e c0       	rjmp	.+252    	; 0x10e2 <__divsf3+0x144>
     fe6:	39 89       	ldd	r19, Y+17	; 0x11
     fe8:	32 30       	cpi	r19, 0x02	; 2
     fea:	10 f4       	brcc	.+4      	; 0xff0 <__divsf3+0x52>
     fec:	b8 01       	movw	r22, r16
     fee:	7c c0       	rjmp	.+248    	; 0x10e8 <__divsf3+0x14a>
     ff0:	8a 85       	ldd	r24, Y+10	; 0x0a
     ff2:	9a 89       	ldd	r25, Y+18	; 0x12
     ff4:	89 27       	eor	r24, r25
     ff6:	8a 87       	std	Y+10, r24	; 0x0a
     ff8:	24 30       	cpi	r18, 0x04	; 4
     ffa:	11 f0       	breq	.+4      	; 0x1000 <__divsf3+0x62>
     ffc:	22 30       	cpi	r18, 0x02	; 2
     ffe:	31 f4       	brne	.+12     	; 0x100c <__divsf3+0x6e>
    1000:	23 17       	cp	r18, r19
    1002:	09 f0       	breq	.+2      	; 0x1006 <__divsf3+0x68>
    1004:	6e c0       	rjmp	.+220    	; 0x10e2 <__divsf3+0x144>
    1006:	60 e0       	ldi	r22, 0x00	; 0
    1008:	71 e0       	ldi	r23, 0x01	; 1
    100a:	6e c0       	rjmp	.+220    	; 0x10e8 <__divsf3+0x14a>
    100c:	34 30       	cpi	r19, 0x04	; 4
    100e:	39 f4       	brne	.+14     	; 0x101e <__divsf3+0x80>
    1010:	1d 86       	std	Y+13, r1	; 0x0d
    1012:	1e 86       	std	Y+14, r1	; 0x0e
    1014:	1f 86       	std	Y+15, r1	; 0x0f
    1016:	18 8a       	std	Y+16, r1	; 0x10
    1018:	1c 86       	std	Y+12, r1	; 0x0c
    101a:	1b 86       	std	Y+11, r1	; 0x0b
    101c:	04 c0       	rjmp	.+8      	; 0x1026 <__divsf3+0x88>
    101e:	32 30       	cpi	r19, 0x02	; 2
    1020:	21 f4       	brne	.+8      	; 0x102a <__divsf3+0x8c>
    1022:	84 e0       	ldi	r24, 0x04	; 4
    1024:	89 87       	std	Y+9, r24	; 0x09
    1026:	b7 01       	movw	r22, r14
    1028:	5f c0       	rjmp	.+190    	; 0x10e8 <__divsf3+0x14a>
    102a:	2b 85       	ldd	r18, Y+11	; 0x0b
    102c:	3c 85       	ldd	r19, Y+12	; 0x0c
    102e:	8b 89       	ldd	r24, Y+19	; 0x13
    1030:	9c 89       	ldd	r25, Y+20	; 0x14
    1032:	28 1b       	sub	r18, r24
    1034:	39 0b       	sbc	r19, r25
    1036:	3c 87       	std	Y+12, r19	; 0x0c
    1038:	2b 87       	std	Y+11, r18	; 0x0b
    103a:	ed 84       	ldd	r14, Y+13	; 0x0d
    103c:	fe 84       	ldd	r15, Y+14	; 0x0e
    103e:	0f 85       	ldd	r16, Y+15	; 0x0f
    1040:	18 89       	ldd	r17, Y+16	; 0x10
    1042:	ad 88       	ldd	r10, Y+21	; 0x15
    1044:	be 88       	ldd	r11, Y+22	; 0x16
    1046:	cf 88       	ldd	r12, Y+23	; 0x17
    1048:	d8 8c       	ldd	r13, Y+24	; 0x18
    104a:	ea 14       	cp	r14, r10
    104c:	fb 04       	cpc	r15, r11
    104e:	0c 05       	cpc	r16, r12
    1050:	1d 05       	cpc	r17, r13
    1052:	40 f4       	brcc	.+16     	; 0x1064 <__divsf3+0xc6>
    1054:	ee 0c       	add	r14, r14
    1056:	ff 1c       	adc	r15, r15
    1058:	00 1f       	adc	r16, r16
    105a:	11 1f       	adc	r17, r17
    105c:	21 50       	subi	r18, 0x01	; 1
    105e:	30 40       	sbci	r19, 0x00	; 0
    1060:	3c 87       	std	Y+12, r19	; 0x0c
    1062:	2b 87       	std	Y+11, r18	; 0x0b
    1064:	20 e0       	ldi	r18, 0x00	; 0
    1066:	30 e0       	ldi	r19, 0x00	; 0
    1068:	40 e0       	ldi	r20, 0x00	; 0
    106a:	50 e0       	ldi	r21, 0x00	; 0
    106c:	80 e0       	ldi	r24, 0x00	; 0
    106e:	90 e0       	ldi	r25, 0x00	; 0
    1070:	a0 e0       	ldi	r26, 0x00	; 0
    1072:	b0 e4       	ldi	r27, 0x40	; 64
    1074:	60 e0       	ldi	r22, 0x00	; 0
    1076:	70 e0       	ldi	r23, 0x00	; 0
    1078:	ea 14       	cp	r14, r10
    107a:	fb 04       	cpc	r15, r11
    107c:	0c 05       	cpc	r16, r12
    107e:	1d 05       	cpc	r17, r13
    1080:	40 f0       	brcs	.+16     	; 0x1092 <__divsf3+0xf4>
    1082:	28 2b       	or	r18, r24
    1084:	39 2b       	or	r19, r25
    1086:	4a 2b       	or	r20, r26
    1088:	5b 2b       	or	r21, r27
    108a:	ea 18       	sub	r14, r10
    108c:	fb 08       	sbc	r15, r11
    108e:	0c 09       	sbc	r16, r12
    1090:	1d 09       	sbc	r17, r13
    1092:	b6 95       	lsr	r27
    1094:	a7 95       	ror	r26
    1096:	97 95       	ror	r25
    1098:	87 95       	ror	r24
    109a:	ee 0c       	add	r14, r14
    109c:	ff 1c       	adc	r15, r15
    109e:	00 1f       	adc	r16, r16
    10a0:	11 1f       	adc	r17, r17
    10a2:	6f 5f       	subi	r22, 0xFF	; 255
    10a4:	7f 4f       	sbci	r23, 0xFF	; 255
    10a6:	6f 31       	cpi	r22, 0x1F	; 31
    10a8:	71 05       	cpc	r23, r1
    10aa:	31 f7       	brne	.-52     	; 0x1078 <__divsf3+0xda>
    10ac:	da 01       	movw	r26, r20
    10ae:	c9 01       	movw	r24, r18
    10b0:	8f 77       	andi	r24, 0x7F	; 127
    10b2:	90 70       	andi	r25, 0x00	; 0
    10b4:	a0 70       	andi	r26, 0x00	; 0
    10b6:	b0 70       	andi	r27, 0x00	; 0
    10b8:	80 34       	cpi	r24, 0x40	; 64
    10ba:	91 05       	cpc	r25, r1
    10bc:	a1 05       	cpc	r26, r1
    10be:	b1 05       	cpc	r27, r1
    10c0:	61 f4       	brne	.+24     	; 0x10da <__divsf3+0x13c>
    10c2:	27 fd       	sbrc	r18, 7
    10c4:	0a c0       	rjmp	.+20     	; 0x10da <__divsf3+0x13c>
    10c6:	e1 14       	cp	r14, r1
    10c8:	f1 04       	cpc	r15, r1
    10ca:	01 05       	cpc	r16, r1
    10cc:	11 05       	cpc	r17, r1
    10ce:	29 f0       	breq	.+10     	; 0x10da <__divsf3+0x13c>
    10d0:	20 5c       	subi	r18, 0xC0	; 192
    10d2:	3f 4f       	sbci	r19, 0xFF	; 255
    10d4:	4f 4f       	sbci	r20, 0xFF	; 255
    10d6:	5f 4f       	sbci	r21, 0xFF	; 255
    10d8:	20 78       	andi	r18, 0x80	; 128
    10da:	2d 87       	std	Y+13, r18	; 0x0d
    10dc:	3e 87       	std	Y+14, r19	; 0x0e
    10de:	4f 87       	std	Y+15, r20	; 0x0f
    10e0:	58 8b       	std	Y+16, r21	; 0x10
    10e2:	be 01       	movw	r22, r28
    10e4:	67 5f       	subi	r22, 0xF7	; 247
    10e6:	7f 4f       	sbci	r23, 0xFF	; 255
    10e8:	cb 01       	movw	r24, r22
    10ea:	0e 94 0c 0a 	call	0x1418	; 0x1418 <__pack_f>
    10ee:	68 96       	adiw	r28, 0x18	; 24
    10f0:	ea e0       	ldi	r30, 0x0A	; 10
    10f2:	0c 94 d6 0b 	jmp	0x17ac	; 0x17ac <__epilogue_restores__+0x10>

000010f6 <__gtsf2>:
    10f6:	a8 e1       	ldi	r26, 0x18	; 24
    10f8:	b0 e0       	ldi	r27, 0x00	; 0
    10fa:	e1 e8       	ldi	r30, 0x81	; 129
    10fc:	f8 e0       	ldi	r31, 0x08	; 8
    10fe:	0c 94 be 0b 	jmp	0x177c	; 0x177c <__prologue_saves__+0x18>
    1102:	69 83       	std	Y+1, r22	; 0x01
    1104:	7a 83       	std	Y+2, r23	; 0x02
    1106:	8b 83       	std	Y+3, r24	; 0x03
    1108:	9c 83       	std	Y+4, r25	; 0x04
    110a:	2d 83       	std	Y+5, r18	; 0x05
    110c:	3e 83       	std	Y+6, r19	; 0x06
    110e:	4f 83       	std	Y+7, r20	; 0x07
    1110:	58 87       	std	Y+8, r21	; 0x08
    1112:	89 e0       	ldi	r24, 0x09	; 9
    1114:	e8 2e       	mov	r14, r24
    1116:	f1 2c       	mov	r15, r1
    1118:	ec 0e       	add	r14, r28
    111a:	fd 1e       	adc	r15, r29
    111c:	ce 01       	movw	r24, r28
    111e:	01 96       	adiw	r24, 0x01	; 1
    1120:	b7 01       	movw	r22, r14
    1122:	0e 94 e1 0a 	call	0x15c2	; 0x15c2 <__unpack_f>
    1126:	8e 01       	movw	r16, r28
    1128:	0f 5e       	subi	r16, 0xEF	; 239
    112a:	1f 4f       	sbci	r17, 0xFF	; 255
    112c:	ce 01       	movw	r24, r28
    112e:	05 96       	adiw	r24, 0x05	; 5
    1130:	b8 01       	movw	r22, r16
    1132:	0e 94 e1 0a 	call	0x15c2	; 0x15c2 <__unpack_f>
    1136:	89 85       	ldd	r24, Y+9	; 0x09
    1138:	82 30       	cpi	r24, 0x02	; 2
    113a:	40 f0       	brcs	.+16     	; 0x114c <__gtsf2+0x56>
    113c:	89 89       	ldd	r24, Y+17	; 0x11
    113e:	82 30       	cpi	r24, 0x02	; 2
    1140:	28 f0       	brcs	.+10     	; 0x114c <__gtsf2+0x56>
    1142:	c7 01       	movw	r24, r14
    1144:	b8 01       	movw	r22, r16
    1146:	0e 94 59 0b 	call	0x16b2	; 0x16b2 <__fpcmp_parts_f>
    114a:	01 c0       	rjmp	.+2      	; 0x114e <__gtsf2+0x58>
    114c:	8f ef       	ldi	r24, 0xFF	; 255
    114e:	68 96       	adiw	r28, 0x18	; 24
    1150:	e6 e0       	ldi	r30, 0x06	; 6
    1152:	0c 94 da 0b 	jmp	0x17b4	; 0x17b4 <__epilogue_restores__+0x18>

00001156 <__gesf2>:
    1156:	a8 e1       	ldi	r26, 0x18	; 24
    1158:	b0 e0       	ldi	r27, 0x00	; 0
    115a:	e1 eb       	ldi	r30, 0xB1	; 177
    115c:	f8 e0       	ldi	r31, 0x08	; 8
    115e:	0c 94 be 0b 	jmp	0x177c	; 0x177c <__prologue_saves__+0x18>
    1162:	69 83       	std	Y+1, r22	; 0x01
    1164:	7a 83       	std	Y+2, r23	; 0x02
    1166:	8b 83       	std	Y+3, r24	; 0x03
    1168:	9c 83       	std	Y+4, r25	; 0x04
    116a:	2d 83       	std	Y+5, r18	; 0x05
    116c:	3e 83       	std	Y+6, r19	; 0x06
    116e:	4f 83       	std	Y+7, r20	; 0x07
    1170:	58 87       	std	Y+8, r21	; 0x08
    1172:	89 e0       	ldi	r24, 0x09	; 9
    1174:	e8 2e       	mov	r14, r24
    1176:	f1 2c       	mov	r15, r1
    1178:	ec 0e       	add	r14, r28
    117a:	fd 1e       	adc	r15, r29
    117c:	ce 01       	movw	r24, r28
    117e:	01 96       	adiw	r24, 0x01	; 1
    1180:	b7 01       	movw	r22, r14
    1182:	0e 94 e1 0a 	call	0x15c2	; 0x15c2 <__unpack_f>
    1186:	8e 01       	movw	r16, r28
    1188:	0f 5e       	subi	r16, 0xEF	; 239
    118a:	1f 4f       	sbci	r17, 0xFF	; 255
    118c:	ce 01       	movw	r24, r28
    118e:	05 96       	adiw	r24, 0x05	; 5
    1190:	b8 01       	movw	r22, r16
    1192:	0e 94 e1 0a 	call	0x15c2	; 0x15c2 <__unpack_f>
    1196:	89 85       	ldd	r24, Y+9	; 0x09
    1198:	82 30       	cpi	r24, 0x02	; 2
    119a:	40 f0       	brcs	.+16     	; 0x11ac <__gesf2+0x56>
    119c:	89 89       	ldd	r24, Y+17	; 0x11
    119e:	82 30       	cpi	r24, 0x02	; 2
    11a0:	28 f0       	brcs	.+10     	; 0x11ac <__gesf2+0x56>
    11a2:	c7 01       	movw	r24, r14
    11a4:	b8 01       	movw	r22, r16
    11a6:	0e 94 59 0b 	call	0x16b2	; 0x16b2 <__fpcmp_parts_f>
    11aa:	01 c0       	rjmp	.+2      	; 0x11ae <__gesf2+0x58>
    11ac:	8f ef       	ldi	r24, 0xFF	; 255
    11ae:	68 96       	adiw	r28, 0x18	; 24
    11b0:	e6 e0       	ldi	r30, 0x06	; 6
    11b2:	0c 94 da 0b 	jmp	0x17b4	; 0x17b4 <__epilogue_restores__+0x18>

000011b6 <__ltsf2>:
    11b6:	a8 e1       	ldi	r26, 0x18	; 24
    11b8:	b0 e0       	ldi	r27, 0x00	; 0
    11ba:	e1 ee       	ldi	r30, 0xE1	; 225
    11bc:	f8 e0       	ldi	r31, 0x08	; 8
    11be:	0c 94 be 0b 	jmp	0x177c	; 0x177c <__prologue_saves__+0x18>
    11c2:	69 83       	std	Y+1, r22	; 0x01
    11c4:	7a 83       	std	Y+2, r23	; 0x02
    11c6:	8b 83       	std	Y+3, r24	; 0x03
    11c8:	9c 83       	std	Y+4, r25	; 0x04
    11ca:	2d 83       	std	Y+5, r18	; 0x05
    11cc:	3e 83       	std	Y+6, r19	; 0x06
    11ce:	4f 83       	std	Y+7, r20	; 0x07
    11d0:	58 87       	std	Y+8, r21	; 0x08
    11d2:	89 e0       	ldi	r24, 0x09	; 9
    11d4:	e8 2e       	mov	r14, r24
    11d6:	f1 2c       	mov	r15, r1
    11d8:	ec 0e       	add	r14, r28
    11da:	fd 1e       	adc	r15, r29
    11dc:	ce 01       	movw	r24, r28
    11de:	01 96       	adiw	r24, 0x01	; 1
    11e0:	b7 01       	movw	r22, r14
    11e2:	0e 94 e1 0a 	call	0x15c2	; 0x15c2 <__unpack_f>
    11e6:	8e 01       	movw	r16, r28
    11e8:	0f 5e       	subi	r16, 0xEF	; 239
    11ea:	1f 4f       	sbci	r17, 0xFF	; 255
    11ec:	ce 01       	movw	r24, r28
    11ee:	05 96       	adiw	r24, 0x05	; 5
    11f0:	b8 01       	movw	r22, r16
    11f2:	0e 94 e1 0a 	call	0x15c2	; 0x15c2 <__unpack_f>
    11f6:	89 85       	ldd	r24, Y+9	; 0x09
    11f8:	82 30       	cpi	r24, 0x02	; 2
    11fa:	40 f0       	brcs	.+16     	; 0x120c <__ltsf2+0x56>
    11fc:	89 89       	ldd	r24, Y+17	; 0x11
    11fe:	82 30       	cpi	r24, 0x02	; 2
    1200:	28 f0       	brcs	.+10     	; 0x120c <__ltsf2+0x56>
    1202:	c7 01       	movw	r24, r14
    1204:	b8 01       	movw	r22, r16
    1206:	0e 94 59 0b 	call	0x16b2	; 0x16b2 <__fpcmp_parts_f>
    120a:	01 c0       	rjmp	.+2      	; 0x120e <__ltsf2+0x58>
    120c:	81 e0       	ldi	r24, 0x01	; 1
    120e:	68 96       	adiw	r28, 0x18	; 24
    1210:	e6 e0       	ldi	r30, 0x06	; 6
    1212:	0c 94 da 0b 	jmp	0x17b4	; 0x17b4 <__epilogue_restores__+0x18>

00001216 <__floatsisf>:
    1216:	a8 e0       	ldi	r26, 0x08	; 8
    1218:	b0 e0       	ldi	r27, 0x00	; 0
    121a:	e1 e1       	ldi	r30, 0x11	; 17
    121c:	f9 e0       	ldi	r31, 0x09	; 9
    121e:	0c 94 bb 0b 	jmp	0x1776	; 0x1776 <__prologue_saves__+0x12>
    1222:	9b 01       	movw	r18, r22
    1224:	ac 01       	movw	r20, r24
    1226:	83 e0       	ldi	r24, 0x03	; 3
    1228:	89 83       	std	Y+1, r24	; 0x01
    122a:	da 01       	movw	r26, r20
    122c:	c9 01       	movw	r24, r18
    122e:	88 27       	eor	r24, r24
    1230:	b7 fd       	sbrc	r27, 7
    1232:	83 95       	inc	r24
    1234:	99 27       	eor	r25, r25
    1236:	aa 27       	eor	r26, r26
    1238:	bb 27       	eor	r27, r27
    123a:	b8 2e       	mov	r11, r24
    123c:	21 15       	cp	r18, r1
    123e:	31 05       	cpc	r19, r1
    1240:	41 05       	cpc	r20, r1
    1242:	51 05       	cpc	r21, r1
    1244:	19 f4       	brne	.+6      	; 0x124c <__floatsisf+0x36>
    1246:	82 e0       	ldi	r24, 0x02	; 2
    1248:	89 83       	std	Y+1, r24	; 0x01
    124a:	3a c0       	rjmp	.+116    	; 0x12c0 <__floatsisf+0xaa>
    124c:	88 23       	and	r24, r24
    124e:	a9 f0       	breq	.+42     	; 0x127a <__floatsisf+0x64>
    1250:	20 30       	cpi	r18, 0x00	; 0
    1252:	80 e0       	ldi	r24, 0x00	; 0
    1254:	38 07       	cpc	r19, r24
    1256:	80 e0       	ldi	r24, 0x00	; 0
    1258:	48 07       	cpc	r20, r24
    125a:	80 e8       	ldi	r24, 0x80	; 128
    125c:	58 07       	cpc	r21, r24
    125e:	29 f4       	brne	.+10     	; 0x126a <__floatsisf+0x54>
    1260:	60 e0       	ldi	r22, 0x00	; 0
    1262:	70 e0       	ldi	r23, 0x00	; 0
    1264:	80 e0       	ldi	r24, 0x00	; 0
    1266:	9f ec       	ldi	r25, 0xCF	; 207
    1268:	30 c0       	rjmp	.+96     	; 0x12ca <__floatsisf+0xb4>
    126a:	ee 24       	eor	r14, r14
    126c:	ff 24       	eor	r15, r15
    126e:	87 01       	movw	r16, r14
    1270:	e2 1a       	sub	r14, r18
    1272:	f3 0a       	sbc	r15, r19
    1274:	04 0b       	sbc	r16, r20
    1276:	15 0b       	sbc	r17, r21
    1278:	02 c0       	rjmp	.+4      	; 0x127e <__floatsisf+0x68>
    127a:	79 01       	movw	r14, r18
    127c:	8a 01       	movw	r16, r20
    127e:	8e e1       	ldi	r24, 0x1E	; 30
    1280:	c8 2e       	mov	r12, r24
    1282:	d1 2c       	mov	r13, r1
    1284:	dc 82       	std	Y+4, r13	; 0x04
    1286:	cb 82       	std	Y+3, r12	; 0x03
    1288:	ed 82       	std	Y+5, r14	; 0x05
    128a:	fe 82       	std	Y+6, r15	; 0x06
    128c:	0f 83       	std	Y+7, r16	; 0x07
    128e:	18 87       	std	Y+8, r17	; 0x08
    1290:	c8 01       	movw	r24, r16
    1292:	b7 01       	movw	r22, r14
    1294:	0e 94 bd 09 	call	0x137a	; 0x137a <__clzsi2>
    1298:	01 97       	sbiw	r24, 0x01	; 1
    129a:	18 16       	cp	r1, r24
    129c:	19 06       	cpc	r1, r25
    129e:	84 f4       	brge	.+32     	; 0x12c0 <__floatsisf+0xaa>
    12a0:	08 2e       	mov	r0, r24
    12a2:	04 c0       	rjmp	.+8      	; 0x12ac <__floatsisf+0x96>
    12a4:	ee 0c       	add	r14, r14
    12a6:	ff 1c       	adc	r15, r15
    12a8:	00 1f       	adc	r16, r16
    12aa:	11 1f       	adc	r17, r17
    12ac:	0a 94       	dec	r0
    12ae:	d2 f7       	brpl	.-12     	; 0x12a4 <__floatsisf+0x8e>
    12b0:	ed 82       	std	Y+5, r14	; 0x05
    12b2:	fe 82       	std	Y+6, r15	; 0x06
    12b4:	0f 83       	std	Y+7, r16	; 0x07
    12b6:	18 87       	std	Y+8, r17	; 0x08
    12b8:	c8 1a       	sub	r12, r24
    12ba:	d9 0a       	sbc	r13, r25
    12bc:	dc 82       	std	Y+4, r13	; 0x04
    12be:	cb 82       	std	Y+3, r12	; 0x03
    12c0:	ba 82       	std	Y+2, r11	; 0x02
    12c2:	ce 01       	movw	r24, r28
    12c4:	01 96       	adiw	r24, 0x01	; 1
    12c6:	0e 94 0c 0a 	call	0x1418	; 0x1418 <__pack_f>
    12ca:	28 96       	adiw	r28, 0x08	; 8
    12cc:	e9 e0       	ldi	r30, 0x09	; 9
    12ce:	0c 94 d7 0b 	jmp	0x17ae	; 0x17ae <__epilogue_restores__+0x12>

000012d2 <__fixsfsi>:
    12d2:	ac e0       	ldi	r26, 0x0C	; 12
    12d4:	b0 e0       	ldi	r27, 0x00	; 0
    12d6:	ef e6       	ldi	r30, 0x6F	; 111
    12d8:	f9 e0       	ldi	r31, 0x09	; 9
    12da:	0c 94 c2 0b 	jmp	0x1784	; 0x1784 <__prologue_saves__+0x20>
    12de:	69 83       	std	Y+1, r22	; 0x01
    12e0:	7a 83       	std	Y+2, r23	; 0x02
    12e2:	8b 83       	std	Y+3, r24	; 0x03
    12e4:	9c 83       	std	Y+4, r25	; 0x04
    12e6:	ce 01       	movw	r24, r28
    12e8:	01 96       	adiw	r24, 0x01	; 1
    12ea:	be 01       	movw	r22, r28
    12ec:	6b 5f       	subi	r22, 0xFB	; 251
    12ee:	7f 4f       	sbci	r23, 0xFF	; 255
    12f0:	0e 94 e1 0a 	call	0x15c2	; 0x15c2 <__unpack_f>
    12f4:	8d 81       	ldd	r24, Y+5	; 0x05
    12f6:	82 30       	cpi	r24, 0x02	; 2
    12f8:	61 f1       	breq	.+88     	; 0x1352 <__fixsfsi+0x80>
    12fa:	82 30       	cpi	r24, 0x02	; 2
    12fc:	50 f1       	brcs	.+84     	; 0x1352 <__fixsfsi+0x80>
    12fe:	84 30       	cpi	r24, 0x04	; 4
    1300:	21 f4       	brne	.+8      	; 0x130a <__fixsfsi+0x38>
    1302:	8e 81       	ldd	r24, Y+6	; 0x06
    1304:	88 23       	and	r24, r24
    1306:	51 f1       	breq	.+84     	; 0x135c <__fixsfsi+0x8a>
    1308:	2e c0       	rjmp	.+92     	; 0x1366 <__fixsfsi+0x94>
    130a:	2f 81       	ldd	r18, Y+7	; 0x07
    130c:	38 85       	ldd	r19, Y+8	; 0x08
    130e:	37 fd       	sbrc	r19, 7
    1310:	20 c0       	rjmp	.+64     	; 0x1352 <__fixsfsi+0x80>
    1312:	6e 81       	ldd	r22, Y+6	; 0x06
    1314:	2f 31       	cpi	r18, 0x1F	; 31
    1316:	31 05       	cpc	r19, r1
    1318:	1c f0       	brlt	.+6      	; 0x1320 <__fixsfsi+0x4e>
    131a:	66 23       	and	r22, r22
    131c:	f9 f0       	breq	.+62     	; 0x135c <__fixsfsi+0x8a>
    131e:	23 c0       	rjmp	.+70     	; 0x1366 <__fixsfsi+0x94>
    1320:	8e e1       	ldi	r24, 0x1E	; 30
    1322:	90 e0       	ldi	r25, 0x00	; 0
    1324:	82 1b       	sub	r24, r18
    1326:	93 0b       	sbc	r25, r19
    1328:	29 85       	ldd	r18, Y+9	; 0x09
    132a:	3a 85       	ldd	r19, Y+10	; 0x0a
    132c:	4b 85       	ldd	r20, Y+11	; 0x0b
    132e:	5c 85       	ldd	r21, Y+12	; 0x0c
    1330:	04 c0       	rjmp	.+8      	; 0x133a <__fixsfsi+0x68>
    1332:	56 95       	lsr	r21
    1334:	47 95       	ror	r20
    1336:	37 95       	ror	r19
    1338:	27 95       	ror	r18
    133a:	8a 95       	dec	r24
    133c:	d2 f7       	brpl	.-12     	; 0x1332 <__fixsfsi+0x60>
    133e:	66 23       	and	r22, r22
    1340:	b1 f0       	breq	.+44     	; 0x136e <__fixsfsi+0x9c>
    1342:	50 95       	com	r21
    1344:	40 95       	com	r20
    1346:	30 95       	com	r19
    1348:	21 95       	neg	r18
    134a:	3f 4f       	sbci	r19, 0xFF	; 255
    134c:	4f 4f       	sbci	r20, 0xFF	; 255
    134e:	5f 4f       	sbci	r21, 0xFF	; 255
    1350:	0e c0       	rjmp	.+28     	; 0x136e <__fixsfsi+0x9c>
    1352:	20 e0       	ldi	r18, 0x00	; 0
    1354:	30 e0       	ldi	r19, 0x00	; 0
    1356:	40 e0       	ldi	r20, 0x00	; 0
    1358:	50 e0       	ldi	r21, 0x00	; 0
    135a:	09 c0       	rjmp	.+18     	; 0x136e <__fixsfsi+0x9c>
    135c:	2f ef       	ldi	r18, 0xFF	; 255
    135e:	3f ef       	ldi	r19, 0xFF	; 255
    1360:	4f ef       	ldi	r20, 0xFF	; 255
    1362:	5f e7       	ldi	r21, 0x7F	; 127
    1364:	04 c0       	rjmp	.+8      	; 0x136e <__fixsfsi+0x9c>
    1366:	20 e0       	ldi	r18, 0x00	; 0
    1368:	30 e0       	ldi	r19, 0x00	; 0
    136a:	40 e0       	ldi	r20, 0x00	; 0
    136c:	50 e8       	ldi	r21, 0x80	; 128
    136e:	b9 01       	movw	r22, r18
    1370:	ca 01       	movw	r24, r20
    1372:	2c 96       	adiw	r28, 0x0c	; 12
    1374:	e2 e0       	ldi	r30, 0x02	; 2
    1376:	0c 94 de 0b 	jmp	0x17bc	; 0x17bc <__epilogue_restores__+0x20>

0000137a <__clzsi2>:
    137a:	ef 92       	push	r14
    137c:	ff 92       	push	r15
    137e:	0f 93       	push	r16
    1380:	1f 93       	push	r17
    1382:	7b 01       	movw	r14, r22
    1384:	8c 01       	movw	r16, r24
    1386:	80 e0       	ldi	r24, 0x00	; 0
    1388:	e8 16       	cp	r14, r24
    138a:	80 e0       	ldi	r24, 0x00	; 0
    138c:	f8 06       	cpc	r15, r24
    138e:	81 e0       	ldi	r24, 0x01	; 1
    1390:	08 07       	cpc	r16, r24
    1392:	80 e0       	ldi	r24, 0x00	; 0
    1394:	18 07       	cpc	r17, r24
    1396:	88 f4       	brcc	.+34     	; 0x13ba <__clzsi2+0x40>
    1398:	8f ef       	ldi	r24, 0xFF	; 255
    139a:	e8 16       	cp	r14, r24
    139c:	f1 04       	cpc	r15, r1
    139e:	01 05       	cpc	r16, r1
    13a0:	11 05       	cpc	r17, r1
    13a2:	31 f0       	breq	.+12     	; 0x13b0 <__clzsi2+0x36>
    13a4:	28 f0       	brcs	.+10     	; 0x13b0 <__clzsi2+0x36>
    13a6:	88 e0       	ldi	r24, 0x08	; 8
    13a8:	90 e0       	ldi	r25, 0x00	; 0
    13aa:	a0 e0       	ldi	r26, 0x00	; 0
    13ac:	b0 e0       	ldi	r27, 0x00	; 0
    13ae:	17 c0       	rjmp	.+46     	; 0x13de <__clzsi2+0x64>
    13b0:	80 e0       	ldi	r24, 0x00	; 0
    13b2:	90 e0       	ldi	r25, 0x00	; 0
    13b4:	a0 e0       	ldi	r26, 0x00	; 0
    13b6:	b0 e0       	ldi	r27, 0x00	; 0
    13b8:	12 c0       	rjmp	.+36     	; 0x13de <__clzsi2+0x64>
    13ba:	80 e0       	ldi	r24, 0x00	; 0
    13bc:	e8 16       	cp	r14, r24
    13be:	80 e0       	ldi	r24, 0x00	; 0
    13c0:	f8 06       	cpc	r15, r24
    13c2:	80 e0       	ldi	r24, 0x00	; 0
    13c4:	08 07       	cpc	r16, r24
    13c6:	81 e0       	ldi	r24, 0x01	; 1
    13c8:	18 07       	cpc	r17, r24
    13ca:	28 f0       	brcs	.+10     	; 0x13d6 <__clzsi2+0x5c>
    13cc:	88 e1       	ldi	r24, 0x18	; 24
    13ce:	90 e0       	ldi	r25, 0x00	; 0
    13d0:	a0 e0       	ldi	r26, 0x00	; 0
    13d2:	b0 e0       	ldi	r27, 0x00	; 0
    13d4:	04 c0       	rjmp	.+8      	; 0x13de <__clzsi2+0x64>
    13d6:	80 e1       	ldi	r24, 0x10	; 16
    13d8:	90 e0       	ldi	r25, 0x00	; 0
    13da:	a0 e0       	ldi	r26, 0x00	; 0
    13dc:	b0 e0       	ldi	r27, 0x00	; 0
    13de:	20 e2       	ldi	r18, 0x20	; 32
    13e0:	30 e0       	ldi	r19, 0x00	; 0
    13e2:	40 e0       	ldi	r20, 0x00	; 0
    13e4:	50 e0       	ldi	r21, 0x00	; 0
    13e6:	28 1b       	sub	r18, r24
    13e8:	39 0b       	sbc	r19, r25
    13ea:	4a 0b       	sbc	r20, r26
    13ec:	5b 0b       	sbc	r21, r27
    13ee:	04 c0       	rjmp	.+8      	; 0x13f8 <__clzsi2+0x7e>
    13f0:	16 95       	lsr	r17
    13f2:	07 95       	ror	r16
    13f4:	f7 94       	ror	r15
    13f6:	e7 94       	ror	r14
    13f8:	8a 95       	dec	r24
    13fa:	d2 f7       	brpl	.-12     	; 0x13f0 <__clzsi2+0x76>
    13fc:	f7 01       	movw	r30, r14
    13fe:	e8 5f       	subi	r30, 0xF8	; 248
    1400:	fe 4f       	sbci	r31, 0xFE	; 254
    1402:	80 81       	ld	r24, Z
    1404:	28 1b       	sub	r18, r24
    1406:	31 09       	sbc	r19, r1
    1408:	41 09       	sbc	r20, r1
    140a:	51 09       	sbc	r21, r1
    140c:	c9 01       	movw	r24, r18
    140e:	1f 91       	pop	r17
    1410:	0f 91       	pop	r16
    1412:	ff 90       	pop	r15
    1414:	ef 90       	pop	r14
    1416:	08 95       	ret

00001418 <__pack_f>:
    1418:	df 92       	push	r13
    141a:	ef 92       	push	r14
    141c:	ff 92       	push	r15
    141e:	0f 93       	push	r16
    1420:	1f 93       	push	r17
    1422:	fc 01       	movw	r30, r24
    1424:	e4 80       	ldd	r14, Z+4	; 0x04
    1426:	f5 80       	ldd	r15, Z+5	; 0x05
    1428:	06 81       	ldd	r16, Z+6	; 0x06
    142a:	17 81       	ldd	r17, Z+7	; 0x07
    142c:	d1 80       	ldd	r13, Z+1	; 0x01
    142e:	80 81       	ld	r24, Z
    1430:	82 30       	cpi	r24, 0x02	; 2
    1432:	48 f4       	brcc	.+18     	; 0x1446 <__pack_f+0x2e>
    1434:	80 e0       	ldi	r24, 0x00	; 0
    1436:	90 e0       	ldi	r25, 0x00	; 0
    1438:	a0 e1       	ldi	r26, 0x10	; 16
    143a:	b0 e0       	ldi	r27, 0x00	; 0
    143c:	e8 2a       	or	r14, r24
    143e:	f9 2a       	or	r15, r25
    1440:	0a 2b       	or	r16, r26
    1442:	1b 2b       	or	r17, r27
    1444:	a5 c0       	rjmp	.+330    	; 0x1590 <__pack_f+0x178>
    1446:	84 30       	cpi	r24, 0x04	; 4
    1448:	09 f4       	brne	.+2      	; 0x144c <__pack_f+0x34>
    144a:	9f c0       	rjmp	.+318    	; 0x158a <__pack_f+0x172>
    144c:	82 30       	cpi	r24, 0x02	; 2
    144e:	21 f4       	brne	.+8      	; 0x1458 <__pack_f+0x40>
    1450:	ee 24       	eor	r14, r14
    1452:	ff 24       	eor	r15, r15
    1454:	87 01       	movw	r16, r14
    1456:	05 c0       	rjmp	.+10     	; 0x1462 <__pack_f+0x4a>
    1458:	e1 14       	cp	r14, r1
    145a:	f1 04       	cpc	r15, r1
    145c:	01 05       	cpc	r16, r1
    145e:	11 05       	cpc	r17, r1
    1460:	19 f4       	brne	.+6      	; 0x1468 <__pack_f+0x50>
    1462:	e0 e0       	ldi	r30, 0x00	; 0
    1464:	f0 e0       	ldi	r31, 0x00	; 0
    1466:	96 c0       	rjmp	.+300    	; 0x1594 <__pack_f+0x17c>
    1468:	62 81       	ldd	r22, Z+2	; 0x02
    146a:	73 81       	ldd	r23, Z+3	; 0x03
    146c:	9f ef       	ldi	r25, 0xFF	; 255
    146e:	62 38       	cpi	r22, 0x82	; 130
    1470:	79 07       	cpc	r23, r25
    1472:	0c f0       	brlt	.+2      	; 0x1476 <__pack_f+0x5e>
    1474:	5b c0       	rjmp	.+182    	; 0x152c <__pack_f+0x114>
    1476:	22 e8       	ldi	r18, 0x82	; 130
    1478:	3f ef       	ldi	r19, 0xFF	; 255
    147a:	26 1b       	sub	r18, r22
    147c:	37 0b       	sbc	r19, r23
    147e:	2a 31       	cpi	r18, 0x1A	; 26
    1480:	31 05       	cpc	r19, r1
    1482:	2c f0       	brlt	.+10     	; 0x148e <__pack_f+0x76>
    1484:	20 e0       	ldi	r18, 0x00	; 0
    1486:	30 e0       	ldi	r19, 0x00	; 0
    1488:	40 e0       	ldi	r20, 0x00	; 0
    148a:	50 e0       	ldi	r21, 0x00	; 0
    148c:	2a c0       	rjmp	.+84     	; 0x14e2 <__pack_f+0xca>
    148e:	b8 01       	movw	r22, r16
    1490:	a7 01       	movw	r20, r14
    1492:	02 2e       	mov	r0, r18
    1494:	04 c0       	rjmp	.+8      	; 0x149e <__pack_f+0x86>
    1496:	76 95       	lsr	r23
    1498:	67 95       	ror	r22
    149a:	57 95       	ror	r21
    149c:	47 95       	ror	r20
    149e:	0a 94       	dec	r0
    14a0:	d2 f7       	brpl	.-12     	; 0x1496 <__pack_f+0x7e>
    14a2:	81 e0       	ldi	r24, 0x01	; 1
    14a4:	90 e0       	ldi	r25, 0x00	; 0
    14a6:	a0 e0       	ldi	r26, 0x00	; 0
    14a8:	b0 e0       	ldi	r27, 0x00	; 0
    14aa:	04 c0       	rjmp	.+8      	; 0x14b4 <__pack_f+0x9c>
    14ac:	88 0f       	add	r24, r24
    14ae:	99 1f       	adc	r25, r25
    14b0:	aa 1f       	adc	r26, r26
    14b2:	bb 1f       	adc	r27, r27
    14b4:	2a 95       	dec	r18
    14b6:	d2 f7       	brpl	.-12     	; 0x14ac <__pack_f+0x94>
    14b8:	01 97       	sbiw	r24, 0x01	; 1
    14ba:	a1 09       	sbc	r26, r1
    14bc:	b1 09       	sbc	r27, r1
    14be:	8e 21       	and	r24, r14
    14c0:	9f 21       	and	r25, r15
    14c2:	a0 23       	and	r26, r16
    14c4:	b1 23       	and	r27, r17
    14c6:	00 97       	sbiw	r24, 0x00	; 0
    14c8:	a1 05       	cpc	r26, r1
    14ca:	b1 05       	cpc	r27, r1
    14cc:	21 f0       	breq	.+8      	; 0x14d6 <__pack_f+0xbe>
    14ce:	81 e0       	ldi	r24, 0x01	; 1
    14d0:	90 e0       	ldi	r25, 0x00	; 0
    14d2:	a0 e0       	ldi	r26, 0x00	; 0
    14d4:	b0 e0       	ldi	r27, 0x00	; 0
    14d6:	9a 01       	movw	r18, r20
    14d8:	ab 01       	movw	r20, r22
    14da:	28 2b       	or	r18, r24
    14dc:	39 2b       	or	r19, r25
    14de:	4a 2b       	or	r20, r26
    14e0:	5b 2b       	or	r21, r27
    14e2:	da 01       	movw	r26, r20
    14e4:	c9 01       	movw	r24, r18
    14e6:	8f 77       	andi	r24, 0x7F	; 127
    14e8:	90 70       	andi	r25, 0x00	; 0
    14ea:	a0 70       	andi	r26, 0x00	; 0
    14ec:	b0 70       	andi	r27, 0x00	; 0
    14ee:	80 34       	cpi	r24, 0x40	; 64
    14f0:	91 05       	cpc	r25, r1
    14f2:	a1 05       	cpc	r26, r1
    14f4:	b1 05       	cpc	r27, r1
    14f6:	39 f4       	brne	.+14     	; 0x1506 <__pack_f+0xee>
    14f8:	27 ff       	sbrs	r18, 7
    14fa:	09 c0       	rjmp	.+18     	; 0x150e <__pack_f+0xf6>
    14fc:	20 5c       	subi	r18, 0xC0	; 192
    14fe:	3f 4f       	sbci	r19, 0xFF	; 255
    1500:	4f 4f       	sbci	r20, 0xFF	; 255
    1502:	5f 4f       	sbci	r21, 0xFF	; 255
    1504:	04 c0       	rjmp	.+8      	; 0x150e <__pack_f+0xf6>
    1506:	21 5c       	subi	r18, 0xC1	; 193
    1508:	3f 4f       	sbci	r19, 0xFF	; 255
    150a:	4f 4f       	sbci	r20, 0xFF	; 255
    150c:	5f 4f       	sbci	r21, 0xFF	; 255
    150e:	e0 e0       	ldi	r30, 0x00	; 0
    1510:	f0 e0       	ldi	r31, 0x00	; 0
    1512:	20 30       	cpi	r18, 0x00	; 0
    1514:	a0 e0       	ldi	r26, 0x00	; 0
    1516:	3a 07       	cpc	r19, r26
    1518:	a0 e0       	ldi	r26, 0x00	; 0
    151a:	4a 07       	cpc	r20, r26
    151c:	a0 e4       	ldi	r26, 0x40	; 64
    151e:	5a 07       	cpc	r21, r26
    1520:	10 f0       	brcs	.+4      	; 0x1526 <__pack_f+0x10e>
    1522:	e1 e0       	ldi	r30, 0x01	; 1
    1524:	f0 e0       	ldi	r31, 0x00	; 0
    1526:	79 01       	movw	r14, r18
    1528:	8a 01       	movw	r16, r20
    152a:	27 c0       	rjmp	.+78     	; 0x157a <__pack_f+0x162>
    152c:	60 38       	cpi	r22, 0x80	; 128
    152e:	71 05       	cpc	r23, r1
    1530:	64 f5       	brge	.+88     	; 0x158a <__pack_f+0x172>
    1532:	fb 01       	movw	r30, r22
    1534:	e1 58       	subi	r30, 0x81	; 129
    1536:	ff 4f       	sbci	r31, 0xFF	; 255
    1538:	d8 01       	movw	r26, r16
    153a:	c7 01       	movw	r24, r14
    153c:	8f 77       	andi	r24, 0x7F	; 127
    153e:	90 70       	andi	r25, 0x00	; 0
    1540:	a0 70       	andi	r26, 0x00	; 0
    1542:	b0 70       	andi	r27, 0x00	; 0
    1544:	80 34       	cpi	r24, 0x40	; 64
    1546:	91 05       	cpc	r25, r1
    1548:	a1 05       	cpc	r26, r1
    154a:	b1 05       	cpc	r27, r1
    154c:	39 f4       	brne	.+14     	; 0x155c <__pack_f+0x144>
    154e:	e7 fe       	sbrs	r14, 7
    1550:	0d c0       	rjmp	.+26     	; 0x156c <__pack_f+0x154>
    1552:	80 e4       	ldi	r24, 0x40	; 64
    1554:	90 e0       	ldi	r25, 0x00	; 0
    1556:	a0 e0       	ldi	r26, 0x00	; 0
    1558:	b0 e0       	ldi	r27, 0x00	; 0
    155a:	04 c0       	rjmp	.+8      	; 0x1564 <__pack_f+0x14c>
    155c:	8f e3       	ldi	r24, 0x3F	; 63
    155e:	90 e0       	ldi	r25, 0x00	; 0
    1560:	a0 e0       	ldi	r26, 0x00	; 0
    1562:	b0 e0       	ldi	r27, 0x00	; 0
    1564:	e8 0e       	add	r14, r24
    1566:	f9 1e       	adc	r15, r25
    1568:	0a 1f       	adc	r16, r26
    156a:	1b 1f       	adc	r17, r27
    156c:	17 ff       	sbrs	r17, 7
    156e:	05 c0       	rjmp	.+10     	; 0x157a <__pack_f+0x162>
    1570:	16 95       	lsr	r17
    1572:	07 95       	ror	r16
    1574:	f7 94       	ror	r15
    1576:	e7 94       	ror	r14
    1578:	31 96       	adiw	r30, 0x01	; 1
    157a:	87 e0       	ldi	r24, 0x07	; 7
    157c:	16 95       	lsr	r17
    157e:	07 95       	ror	r16
    1580:	f7 94       	ror	r15
    1582:	e7 94       	ror	r14
    1584:	8a 95       	dec	r24
    1586:	d1 f7       	brne	.-12     	; 0x157c <__pack_f+0x164>
    1588:	05 c0       	rjmp	.+10     	; 0x1594 <__pack_f+0x17c>
    158a:	ee 24       	eor	r14, r14
    158c:	ff 24       	eor	r15, r15
    158e:	87 01       	movw	r16, r14
    1590:	ef ef       	ldi	r30, 0xFF	; 255
    1592:	f0 e0       	ldi	r31, 0x00	; 0
    1594:	6e 2f       	mov	r22, r30
    1596:	67 95       	ror	r22
    1598:	66 27       	eor	r22, r22
    159a:	67 95       	ror	r22
    159c:	90 2f       	mov	r25, r16
    159e:	9f 77       	andi	r25, 0x7F	; 127
    15a0:	d7 94       	ror	r13
    15a2:	dd 24       	eor	r13, r13
    15a4:	d7 94       	ror	r13
    15a6:	8e 2f       	mov	r24, r30
    15a8:	86 95       	lsr	r24
    15aa:	49 2f       	mov	r20, r25
    15ac:	46 2b       	or	r20, r22
    15ae:	58 2f       	mov	r21, r24
    15b0:	5d 29       	or	r21, r13
    15b2:	b7 01       	movw	r22, r14
    15b4:	ca 01       	movw	r24, r20
    15b6:	1f 91       	pop	r17
    15b8:	0f 91       	pop	r16
    15ba:	ff 90       	pop	r15
    15bc:	ef 90       	pop	r14
    15be:	df 90       	pop	r13
    15c0:	08 95       	ret

000015c2 <__unpack_f>:
    15c2:	fc 01       	movw	r30, r24
    15c4:	db 01       	movw	r26, r22
    15c6:	40 81       	ld	r20, Z
    15c8:	51 81       	ldd	r21, Z+1	; 0x01
    15ca:	22 81       	ldd	r18, Z+2	; 0x02
    15cc:	62 2f       	mov	r22, r18
    15ce:	6f 77       	andi	r22, 0x7F	; 127
    15d0:	70 e0       	ldi	r23, 0x00	; 0
    15d2:	22 1f       	adc	r18, r18
    15d4:	22 27       	eor	r18, r18
    15d6:	22 1f       	adc	r18, r18
    15d8:	93 81       	ldd	r25, Z+3	; 0x03
    15da:	89 2f       	mov	r24, r25
    15dc:	88 0f       	add	r24, r24
    15de:	82 2b       	or	r24, r18
    15e0:	28 2f       	mov	r18, r24
    15e2:	30 e0       	ldi	r19, 0x00	; 0
    15e4:	99 1f       	adc	r25, r25
    15e6:	99 27       	eor	r25, r25
    15e8:	99 1f       	adc	r25, r25
    15ea:	11 96       	adiw	r26, 0x01	; 1
    15ec:	9c 93       	st	X, r25
    15ee:	11 97       	sbiw	r26, 0x01	; 1
    15f0:	21 15       	cp	r18, r1
    15f2:	31 05       	cpc	r19, r1
    15f4:	a9 f5       	brne	.+106    	; 0x1660 <__unpack_f+0x9e>
    15f6:	41 15       	cp	r20, r1
    15f8:	51 05       	cpc	r21, r1
    15fa:	61 05       	cpc	r22, r1
    15fc:	71 05       	cpc	r23, r1
    15fe:	11 f4       	brne	.+4      	; 0x1604 <__unpack_f+0x42>
    1600:	82 e0       	ldi	r24, 0x02	; 2
    1602:	37 c0       	rjmp	.+110    	; 0x1672 <__unpack_f+0xb0>
    1604:	82 e8       	ldi	r24, 0x82	; 130
    1606:	9f ef       	ldi	r25, 0xFF	; 255
    1608:	13 96       	adiw	r26, 0x03	; 3
    160a:	9c 93       	st	X, r25
    160c:	8e 93       	st	-X, r24
    160e:	12 97       	sbiw	r26, 0x02	; 2
    1610:	9a 01       	movw	r18, r20
    1612:	ab 01       	movw	r20, r22
    1614:	67 e0       	ldi	r22, 0x07	; 7
    1616:	22 0f       	add	r18, r18
    1618:	33 1f       	adc	r19, r19
    161a:	44 1f       	adc	r20, r20
    161c:	55 1f       	adc	r21, r21
    161e:	6a 95       	dec	r22
    1620:	d1 f7       	brne	.-12     	; 0x1616 <__unpack_f+0x54>
    1622:	83 e0       	ldi	r24, 0x03	; 3
    1624:	8c 93       	st	X, r24
    1626:	0d c0       	rjmp	.+26     	; 0x1642 <__unpack_f+0x80>
    1628:	22 0f       	add	r18, r18
    162a:	33 1f       	adc	r19, r19
    162c:	44 1f       	adc	r20, r20
    162e:	55 1f       	adc	r21, r21
    1630:	12 96       	adiw	r26, 0x02	; 2
    1632:	8d 91       	ld	r24, X+
    1634:	9c 91       	ld	r25, X
    1636:	13 97       	sbiw	r26, 0x03	; 3
    1638:	01 97       	sbiw	r24, 0x01	; 1
    163a:	13 96       	adiw	r26, 0x03	; 3
    163c:	9c 93       	st	X, r25
    163e:	8e 93       	st	-X, r24
    1640:	12 97       	sbiw	r26, 0x02	; 2
    1642:	20 30       	cpi	r18, 0x00	; 0
    1644:	80 e0       	ldi	r24, 0x00	; 0
    1646:	38 07       	cpc	r19, r24
    1648:	80 e0       	ldi	r24, 0x00	; 0
    164a:	48 07       	cpc	r20, r24
    164c:	80 e4       	ldi	r24, 0x40	; 64
    164e:	58 07       	cpc	r21, r24
    1650:	58 f3       	brcs	.-42     	; 0x1628 <__unpack_f+0x66>
    1652:	14 96       	adiw	r26, 0x04	; 4
    1654:	2d 93       	st	X+, r18
    1656:	3d 93       	st	X+, r19
    1658:	4d 93       	st	X+, r20
    165a:	5c 93       	st	X, r21
    165c:	17 97       	sbiw	r26, 0x07	; 7
    165e:	08 95       	ret
    1660:	2f 3f       	cpi	r18, 0xFF	; 255
    1662:	31 05       	cpc	r19, r1
    1664:	79 f4       	brne	.+30     	; 0x1684 <__unpack_f+0xc2>
    1666:	41 15       	cp	r20, r1
    1668:	51 05       	cpc	r21, r1
    166a:	61 05       	cpc	r22, r1
    166c:	71 05       	cpc	r23, r1
    166e:	19 f4       	brne	.+6      	; 0x1676 <__unpack_f+0xb4>
    1670:	84 e0       	ldi	r24, 0x04	; 4
    1672:	8c 93       	st	X, r24
    1674:	08 95       	ret
    1676:	64 ff       	sbrs	r22, 4
    1678:	03 c0       	rjmp	.+6      	; 0x1680 <__unpack_f+0xbe>
    167a:	81 e0       	ldi	r24, 0x01	; 1
    167c:	8c 93       	st	X, r24
    167e:	12 c0       	rjmp	.+36     	; 0x16a4 <__unpack_f+0xe2>
    1680:	1c 92       	st	X, r1
    1682:	10 c0       	rjmp	.+32     	; 0x16a4 <__unpack_f+0xe2>
    1684:	2f 57       	subi	r18, 0x7F	; 127
    1686:	30 40       	sbci	r19, 0x00	; 0
    1688:	13 96       	adiw	r26, 0x03	; 3
    168a:	3c 93       	st	X, r19
    168c:	2e 93       	st	-X, r18
    168e:	12 97       	sbiw	r26, 0x02	; 2
    1690:	83 e0       	ldi	r24, 0x03	; 3
    1692:	8c 93       	st	X, r24
    1694:	87 e0       	ldi	r24, 0x07	; 7
    1696:	44 0f       	add	r20, r20
    1698:	55 1f       	adc	r21, r21
    169a:	66 1f       	adc	r22, r22
    169c:	77 1f       	adc	r23, r23
    169e:	8a 95       	dec	r24
    16a0:	d1 f7       	brne	.-12     	; 0x1696 <__unpack_f+0xd4>
    16a2:	70 64       	ori	r23, 0x40	; 64
    16a4:	14 96       	adiw	r26, 0x04	; 4
    16a6:	4d 93       	st	X+, r20
    16a8:	5d 93       	st	X+, r21
    16aa:	6d 93       	st	X+, r22
    16ac:	7c 93       	st	X, r23
    16ae:	17 97       	sbiw	r26, 0x07	; 7
    16b0:	08 95       	ret

000016b2 <__fpcmp_parts_f>:
    16b2:	1f 93       	push	r17
    16b4:	dc 01       	movw	r26, r24
    16b6:	fb 01       	movw	r30, r22
    16b8:	9c 91       	ld	r25, X
    16ba:	92 30       	cpi	r25, 0x02	; 2
    16bc:	08 f4       	brcc	.+2      	; 0x16c0 <__fpcmp_parts_f+0xe>
    16be:	47 c0       	rjmp	.+142    	; 0x174e <__fpcmp_parts_f+0x9c>
    16c0:	80 81       	ld	r24, Z
    16c2:	82 30       	cpi	r24, 0x02	; 2
    16c4:	08 f4       	brcc	.+2      	; 0x16c8 <__fpcmp_parts_f+0x16>
    16c6:	43 c0       	rjmp	.+134    	; 0x174e <__fpcmp_parts_f+0x9c>
    16c8:	94 30       	cpi	r25, 0x04	; 4
    16ca:	51 f4       	brne	.+20     	; 0x16e0 <__fpcmp_parts_f+0x2e>
    16cc:	11 96       	adiw	r26, 0x01	; 1
    16ce:	1c 91       	ld	r17, X
    16d0:	84 30       	cpi	r24, 0x04	; 4
    16d2:	99 f5       	brne	.+102    	; 0x173a <__fpcmp_parts_f+0x88>
    16d4:	81 81       	ldd	r24, Z+1	; 0x01
    16d6:	68 2f       	mov	r22, r24
    16d8:	70 e0       	ldi	r23, 0x00	; 0
    16da:	61 1b       	sub	r22, r17
    16dc:	71 09       	sbc	r23, r1
    16de:	3f c0       	rjmp	.+126    	; 0x175e <__fpcmp_parts_f+0xac>
    16e0:	84 30       	cpi	r24, 0x04	; 4
    16e2:	21 f0       	breq	.+8      	; 0x16ec <__fpcmp_parts_f+0x3a>
    16e4:	92 30       	cpi	r25, 0x02	; 2
    16e6:	31 f4       	brne	.+12     	; 0x16f4 <__fpcmp_parts_f+0x42>
    16e8:	82 30       	cpi	r24, 0x02	; 2
    16ea:	b9 f1       	breq	.+110    	; 0x175a <__fpcmp_parts_f+0xa8>
    16ec:	81 81       	ldd	r24, Z+1	; 0x01
    16ee:	88 23       	and	r24, r24
    16f0:	89 f1       	breq	.+98     	; 0x1754 <__fpcmp_parts_f+0xa2>
    16f2:	2d c0       	rjmp	.+90     	; 0x174e <__fpcmp_parts_f+0x9c>
    16f4:	11 96       	adiw	r26, 0x01	; 1
    16f6:	1c 91       	ld	r17, X
    16f8:	11 97       	sbiw	r26, 0x01	; 1
    16fa:	82 30       	cpi	r24, 0x02	; 2
    16fc:	f1 f0       	breq	.+60     	; 0x173a <__fpcmp_parts_f+0x88>
    16fe:	81 81       	ldd	r24, Z+1	; 0x01
    1700:	18 17       	cp	r17, r24
    1702:	d9 f4       	brne	.+54     	; 0x173a <__fpcmp_parts_f+0x88>
    1704:	12 96       	adiw	r26, 0x02	; 2
    1706:	2d 91       	ld	r18, X+
    1708:	3c 91       	ld	r19, X
    170a:	13 97       	sbiw	r26, 0x03	; 3
    170c:	82 81       	ldd	r24, Z+2	; 0x02
    170e:	93 81       	ldd	r25, Z+3	; 0x03
    1710:	82 17       	cp	r24, r18
    1712:	93 07       	cpc	r25, r19
    1714:	94 f0       	brlt	.+36     	; 0x173a <__fpcmp_parts_f+0x88>
    1716:	28 17       	cp	r18, r24
    1718:	39 07       	cpc	r19, r25
    171a:	bc f0       	brlt	.+46     	; 0x174a <__fpcmp_parts_f+0x98>
    171c:	14 96       	adiw	r26, 0x04	; 4
    171e:	8d 91       	ld	r24, X+
    1720:	9d 91       	ld	r25, X+
    1722:	0d 90       	ld	r0, X+
    1724:	bc 91       	ld	r27, X
    1726:	a0 2d       	mov	r26, r0
    1728:	24 81       	ldd	r18, Z+4	; 0x04
    172a:	35 81       	ldd	r19, Z+5	; 0x05
    172c:	46 81       	ldd	r20, Z+6	; 0x06
    172e:	57 81       	ldd	r21, Z+7	; 0x07
    1730:	28 17       	cp	r18, r24
    1732:	39 07       	cpc	r19, r25
    1734:	4a 07       	cpc	r20, r26
    1736:	5b 07       	cpc	r21, r27
    1738:	18 f4       	brcc	.+6      	; 0x1740 <__fpcmp_parts_f+0x8e>
    173a:	11 23       	and	r17, r17
    173c:	41 f0       	breq	.+16     	; 0x174e <__fpcmp_parts_f+0x9c>
    173e:	0a c0       	rjmp	.+20     	; 0x1754 <__fpcmp_parts_f+0xa2>
    1740:	82 17       	cp	r24, r18
    1742:	93 07       	cpc	r25, r19
    1744:	a4 07       	cpc	r26, r20
    1746:	b5 07       	cpc	r27, r21
    1748:	40 f4       	brcc	.+16     	; 0x175a <__fpcmp_parts_f+0xa8>
    174a:	11 23       	and	r17, r17
    174c:	19 f0       	breq	.+6      	; 0x1754 <__fpcmp_parts_f+0xa2>
    174e:	61 e0       	ldi	r22, 0x01	; 1
    1750:	70 e0       	ldi	r23, 0x00	; 0
    1752:	05 c0       	rjmp	.+10     	; 0x175e <__fpcmp_parts_f+0xac>
    1754:	6f ef       	ldi	r22, 0xFF	; 255
    1756:	7f ef       	ldi	r23, 0xFF	; 255
    1758:	02 c0       	rjmp	.+4      	; 0x175e <__fpcmp_parts_f+0xac>
    175a:	60 e0       	ldi	r22, 0x00	; 0
    175c:	70 e0       	ldi	r23, 0x00	; 0
    175e:	cb 01       	movw	r24, r22
    1760:	1f 91       	pop	r17
    1762:	08 95       	ret

00001764 <__prologue_saves__>:
    1764:	2f 92       	push	r2
    1766:	3f 92       	push	r3
    1768:	4f 92       	push	r4
    176a:	5f 92       	push	r5
    176c:	6f 92       	push	r6
    176e:	7f 92       	push	r7
    1770:	8f 92       	push	r8
    1772:	9f 92       	push	r9
    1774:	af 92       	push	r10
    1776:	bf 92       	push	r11
    1778:	cf 92       	push	r12
    177a:	df 92       	push	r13
    177c:	ef 92       	push	r14
    177e:	ff 92       	push	r15
    1780:	0f 93       	push	r16
    1782:	1f 93       	push	r17
    1784:	cf 93       	push	r28
    1786:	df 93       	push	r29
    1788:	cd b7       	in	r28, 0x3d	; 61
    178a:	de b7       	in	r29, 0x3e	; 62
    178c:	ca 1b       	sub	r28, r26
    178e:	db 0b       	sbc	r29, r27
    1790:	0f b6       	in	r0, 0x3f	; 63
    1792:	f8 94       	cli
    1794:	de bf       	out	0x3e, r29	; 62
    1796:	0f be       	out	0x3f, r0	; 63
    1798:	cd bf       	out	0x3d, r28	; 61
    179a:	09 94       	ijmp

0000179c <__epilogue_restores__>:
    179c:	2a 88       	ldd	r2, Y+18	; 0x12
    179e:	39 88       	ldd	r3, Y+17	; 0x11
    17a0:	48 88       	ldd	r4, Y+16	; 0x10
    17a2:	5f 84       	ldd	r5, Y+15	; 0x0f
    17a4:	6e 84       	ldd	r6, Y+14	; 0x0e
    17a6:	7d 84       	ldd	r7, Y+13	; 0x0d
    17a8:	8c 84       	ldd	r8, Y+12	; 0x0c
    17aa:	9b 84       	ldd	r9, Y+11	; 0x0b
    17ac:	aa 84       	ldd	r10, Y+10	; 0x0a
    17ae:	b9 84       	ldd	r11, Y+9	; 0x09
    17b0:	c8 84       	ldd	r12, Y+8	; 0x08
    17b2:	df 80       	ldd	r13, Y+7	; 0x07
    17b4:	ee 80       	ldd	r14, Y+6	; 0x06
    17b6:	fd 80       	ldd	r15, Y+5	; 0x05
    17b8:	0c 81       	ldd	r16, Y+4	; 0x04
    17ba:	1b 81       	ldd	r17, Y+3	; 0x03
    17bc:	aa 81       	ldd	r26, Y+2	; 0x02
    17be:	b9 81       	ldd	r27, Y+1	; 0x01
    17c0:	ce 0f       	add	r28, r30
    17c2:	d1 1d       	adc	r29, r1
    17c4:	0f b6       	in	r0, 0x3f	; 63
    17c6:	f8 94       	cli
    17c8:	de bf       	out	0x3e, r29	; 62
    17ca:	0f be       	out	0x3f, r0	; 63
    17cc:	cd bf       	out	0x3d, r28	; 61
    17ce:	ed 01       	movw	r28, r26
    17d0:	08 95       	ret

000017d2 <_exit>:
    17d2:	f8 94       	cli

000017d4 <__stop_program>:
    17d4:	ff cf       	rjmp	.-2      	; 0x17d4 <__stop_program>
