
bin\Debug\ProjectAGV_Uno.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000108  00800100  00001458  000014ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001458  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .fuse         00000003  00820000  00820000  000015f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .debug_aranges 000001c0  00000000  00000000  000015f7  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000024b  00000000  00000000  000017b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000027ba  00000000  00000000  00001a02  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000014ee  00000000  00000000  000041bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000015dd  00000000  00000000  000056aa  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000210  00000000  00000000  00006c88  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003dd  00000000  00000000  00006e98  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000009ce  00000000  00000000  00007275  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  00007c43  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
       8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
       c:	0c 94 79 01 	jmp	0x2f2	; 0x2f2 <__vector_3>
      10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	12 e0       	ldi	r17, 0x02	; 2
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e8 e5       	ldi	r30, 0x58	; 88
      7c:	f4 e1       	ldi	r31, 0x14	; 20
      7e:	02 c0       	rjmp	.+4      	; 0x84 <.do_copy_data_start>

00000080 <.do_copy_data_loop>:
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0

00000084 <.do_copy_data_start>:
      84:	a8 30       	cpi	r26, 0x08	; 8
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <.do_copy_data_loop>
      8a:	0e 94 39 03 	call	0x672	; 0x672 <main>
      8e:	0c 94 2a 0a 	jmp	0x1454	; 0x1454 <_exit>

00000092 <__bad_interrupt>:
      92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <init>:
#define buzzerPin PD1
#define IrSen1 PB1 //rechter
#define IrSen2 PB2 // linker

void init(void)
{
      96:	df 93       	push	r29
      98:	cf 93       	push	r28
      9a:	cd b7       	in	r28, 0x3d	; 61
      9c:	de b7       	in	r29, 0x3e	; 62
    //DDR Reg:
    DDRC |= _BV(motorPin);
      9e:	a7 e2       	ldi	r26, 0x27	; 39
      a0:	b0 e0       	ldi	r27, 0x00	; 0
      a2:	e7 e2       	ldi	r30, 0x27	; 39
      a4:	f0 e0       	ldi	r31, 0x00	; 0
      a6:	80 81       	ld	r24, Z
      a8:	80 61       	ori	r24, 0x10	; 16
      aa:	8c 93       	st	X, r24
    DDRC |= _BV(bochtPin);
      ac:	a7 e2       	ldi	r26, 0x27	; 39
      ae:	b0 e0       	ldi	r27, 0x00	; 0
      b0:	e7 e2       	ldi	r30, 0x27	; 39
      b2:	f0 e0       	ldi	r31, 0x00	; 0
      b4:	80 81       	ld	r24, Z
      b6:	80 62       	ori	r24, 0x20	; 32
      b8:	8c 93       	st	X, r24
    DDRD |= _BV(buzzerPin);
      ba:	aa e2       	ldi	r26, 0x2A	; 42
      bc:	b0 e0       	ldi	r27, 0x00	; 0
      be:	ea e2       	ldi	r30, 0x2A	; 42
      c0:	f0 e0       	ldi	r31, 0x00	; 0
      c2:	80 81       	ld	r24, Z
      c4:	82 60       	ori	r24, 0x02	; 2
      c6:	8c 93       	st	X, r24

    //init pins:
    PORTB |= _BV(IrSen1);
      c8:	a5 e2       	ldi	r26, 0x25	; 37
      ca:	b0 e0       	ldi	r27, 0x00	; 0
      cc:	e5 e2       	ldi	r30, 0x25	; 37
      ce:	f0 e0       	ldi	r31, 0x00	; 0
      d0:	80 81       	ld	r24, Z
      d2:	82 60       	ori	r24, 0x02	; 2
      d4:	8c 93       	st	X, r24
    PORTB |= _BV(IrSen2);
      d6:	a5 e2       	ldi	r26, 0x25	; 37
      d8:	b0 e0       	ldi	r27, 0x00	; 0
      da:	e5 e2       	ldi	r30, 0x25	; 37
      dc:	f0 e0       	ldi	r31, 0x00	; 0
      de:	80 81       	ld	r24, Z
      e0:	84 60       	ori	r24, 0x04	; 4
      e2:	8c 93       	st	X, r24

    //init PCINT
    PCICR |= (1 << PCIE0);
      e4:	a8 e6       	ldi	r26, 0x68	; 104
      e6:	b0 e0       	ldi	r27, 0x00	; 0
      e8:	e8 e6       	ldi	r30, 0x68	; 104
      ea:	f0 e0       	ldi	r31, 0x00	; 0
      ec:	80 81       	ld	r24, Z
      ee:	81 60       	ori	r24, 0x01	; 1
      f0:	8c 93       	st	X, r24
    PCMSK0 |= ((1 << IrSen1) | (1 << IrSen2));
      f2:	ab e6       	ldi	r26, 0x6B	; 107
      f4:	b0 e0       	ldi	r27, 0x00	; 0
      f6:	eb e6       	ldi	r30, 0x6B	; 107
      f8:	f0 e0       	ldi	r31, 0x00	; 0
      fa:	80 81       	ld	r24, Z
      fc:	86 60       	ori	r24, 0x06	; 6
      fe:	8c 93       	st	X, r24

    //init interrupt
    sei();
     100:	78 94       	sei
}
     102:	cf 91       	pop	r28
     104:	df 91       	pop	r29
     106:	08 95       	ret

00000108 <buzzer>:

void buzzer(int freq, int aantal)
{
     108:	df 93       	push	r29
     10a:	cf 93       	push	r28
     10c:	cd b7       	in	r28, 0x3d	; 61
     10e:	de b7       	in	r29, 0x3e	; 62
     110:	6e 97       	sbiw	r28, 0x1e	; 30
     112:	0f b6       	in	r0, 0x3f	; 63
     114:	f8 94       	cli
     116:	de bf       	out	0x3e, r29	; 62
     118:	0f be       	out	0x3f, r0	; 63
     11a:	cd bf       	out	0x3d, r28	; 61
     11c:	9c 8f       	std	Y+28, r25	; 0x1c
     11e:	8b 8f       	std	Y+27, r24	; 0x1b
     120:	7e 8f       	std	Y+30, r23	; 0x1e
     122:	6d 8f       	std	Y+29, r22	; 0x1d
    for(int i = 0; i < aantal; i++)
     124:	1a 8e       	std	Y+26, r1	; 0x1a
     126:	19 8e       	std	Y+25, r1	; 0x19
     128:	d3 c0       	rjmp	.+422    	; 0x2d0 <buzzer+0x1c8>
    {
        PORTD ^= _BV(buzzerPin);
     12a:	ab e2       	ldi	r26, 0x2B	; 43
     12c:	b0 e0       	ldi	r27, 0x00	; 0
     12e:	eb e2       	ldi	r30, 0x2B	; 43
     130:	f0 e0       	ldi	r31, 0x00	; 0
     132:	90 81       	ld	r25, Z
     134:	82 e0       	ldi	r24, 0x02	; 2
     136:	89 27       	eor	r24, r25
     138:	8c 93       	st	X, r24
        _delay_us(freq);
     13a:	8b 8d       	ldd	r24, Y+27	; 0x1b
     13c:	9c 8d       	ldd	r25, Y+28	; 0x1c
     13e:	aa 27       	eor	r26, r26
     140:	97 fd       	sbrc	r25, 7
     142:	a0 95       	com	r26
     144:	ba 2f       	mov	r27, r26
     146:	bc 01       	movw	r22, r24
     148:	cd 01       	movw	r24, r26
     14a:	0e 94 4c 07 	call	0xe98	; 0xe98 <__floatsisf>
     14e:	dc 01       	movw	r26, r24
     150:	cb 01       	movw	r24, r22
     152:	8d 8b       	std	Y+21, r24	; 0x15
     154:	9e 8b       	std	Y+22, r25	; 0x16
     156:	af 8b       	std	Y+23, r26	; 0x17
     158:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     15a:	6d 89       	ldd	r22, Y+21	; 0x15
     15c:	7e 89       	ldd	r23, Y+22	; 0x16
     15e:	8f 89       	ldd	r24, Y+23	; 0x17
     160:	98 8d       	ldd	r25, Y+24	; 0x18
     162:	2b ea       	ldi	r18, 0xAB	; 171
     164:	3a ea       	ldi	r19, 0xAA	; 170
     166:	4a ea       	ldi	r20, 0xAA	; 170
     168:	50 e4       	ldi	r21, 0x40	; 64
     16a:	0e 94 16 05 	call	0xa2c	; 0xa2c <__mulsf3>
     16e:	dc 01       	movw	r26, r24
     170:	cb 01       	movw	r24, r22
     172:	89 8b       	std	Y+17, r24	; 0x11
     174:	9a 8b       	std	Y+18, r25	; 0x12
     176:	ab 8b       	std	Y+19, r26	; 0x13
     178:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
     17a:	69 89       	ldd	r22, Y+17	; 0x11
     17c:	7a 89       	ldd	r23, Y+18	; 0x12
     17e:	8b 89       	ldd	r24, Y+19	; 0x13
     180:	9c 89       	ldd	r25, Y+20	; 0x14
     182:	20 e0       	ldi	r18, 0x00	; 0
     184:	30 e0       	ldi	r19, 0x00	; 0
     186:	40 e8       	ldi	r20, 0x80	; 128
     188:	5f e3       	ldi	r21, 0x3F	; 63
     18a:	0e 94 1c 07 	call	0xe38	; 0xe38 <__ltsf2>
     18e:	88 23       	and	r24, r24
     190:	1c f4       	brge	.+6      	; 0x198 <buzzer+0x90>
		__ticks = 1;
     192:	81 e0       	ldi	r24, 0x01	; 1
     194:	88 8b       	std	Y+16, r24	; 0x10
     196:	91 c0       	rjmp	.+290    	; 0x2ba <buzzer+0x1b2>
	else if (__tmp > 255)
     198:	69 89       	ldd	r22, Y+17	; 0x11
     19a:	7a 89       	ldd	r23, Y+18	; 0x12
     19c:	8b 89       	ldd	r24, Y+19	; 0x13
     19e:	9c 89       	ldd	r25, Y+20	; 0x14
     1a0:	20 e0       	ldi	r18, 0x00	; 0
     1a2:	30 e0       	ldi	r19, 0x00	; 0
     1a4:	4f e7       	ldi	r20, 0x7F	; 127
     1a6:	53 e4       	ldi	r21, 0x43	; 67
     1a8:	0e 94 bc 06 	call	0xd78	; 0xd78 <__gtsf2>
     1ac:	18 16       	cp	r1, r24
     1ae:	0c f0       	brlt	.+2      	; 0x1b2 <buzzer+0xaa>
     1b0:	7b c0       	rjmp	.+246    	; 0x2a8 <buzzer+0x1a0>
	{
		_delay_ms(__us / 1000.0);
     1b2:	6d 89       	ldd	r22, Y+21	; 0x15
     1b4:	7e 89       	ldd	r23, Y+22	; 0x16
     1b6:	8f 89       	ldd	r24, Y+23	; 0x17
     1b8:	98 8d       	ldd	r25, Y+24	; 0x18
     1ba:	20 e0       	ldi	r18, 0x00	; 0
     1bc:	30 e0       	ldi	r19, 0x00	; 0
     1be:	4a e7       	ldi	r20, 0x7A	; 122
     1c0:	54 e4       	ldi	r21, 0x44	; 68
     1c2:	0e 94 10 06 	call	0xc20	; 0xc20 <__divsf3>
     1c6:	dc 01       	movw	r26, r24
     1c8:	cb 01       	movw	r24, r22
     1ca:	8c 87       	std	Y+12, r24	; 0x0c
     1cc:	9d 87       	std	Y+13, r25	; 0x0d
     1ce:	ae 87       	std	Y+14, r26	; 0x0e
     1d0:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     1d2:	6c 85       	ldd	r22, Y+12	; 0x0c
     1d4:	7d 85       	ldd	r23, Y+13	; 0x0d
     1d6:	8e 85       	ldd	r24, Y+14	; 0x0e
     1d8:	9f 85       	ldd	r25, Y+15	; 0x0f
     1da:	20 e0       	ldi	r18, 0x00	; 0
     1dc:	30 e0       	ldi	r19, 0x00	; 0
     1de:	4a e7       	ldi	r20, 0x7A	; 122
     1e0:	55 e4       	ldi	r21, 0x45	; 69
     1e2:	0e 94 16 05 	call	0xa2c	; 0xa2c <__mulsf3>
     1e6:	dc 01       	movw	r26, r24
     1e8:	cb 01       	movw	r24, r22
     1ea:	88 87       	std	Y+8, r24	; 0x08
     1ec:	99 87       	std	Y+9, r25	; 0x09
     1ee:	aa 87       	std	Y+10, r26	; 0x0a
     1f0:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
     1f2:	68 85       	ldd	r22, Y+8	; 0x08
     1f4:	79 85       	ldd	r23, Y+9	; 0x09
     1f6:	8a 85       	ldd	r24, Y+10	; 0x0a
     1f8:	9b 85       	ldd	r25, Y+11	; 0x0b
     1fa:	20 e0       	ldi	r18, 0x00	; 0
     1fc:	30 e0       	ldi	r19, 0x00	; 0
     1fe:	40 e8       	ldi	r20, 0x80	; 128
     200:	5f e3       	ldi	r21, 0x3F	; 63
     202:	0e 94 1c 07 	call	0xe38	; 0xe38 <__ltsf2>
     206:	88 23       	and	r24, r24
     208:	2c f4       	brge	.+10     	; 0x214 <buzzer+0x10c>
		__ticks = 1;
     20a:	81 e0       	ldi	r24, 0x01	; 1
     20c:	90 e0       	ldi	r25, 0x00	; 0
     20e:	9f 83       	std	Y+7, r25	; 0x07
     210:	8e 83       	std	Y+6, r24	; 0x06
     212:	3f c0       	rjmp	.+126    	; 0x292 <buzzer+0x18a>
	else if (__tmp > 65535)
     214:	68 85       	ldd	r22, Y+8	; 0x08
     216:	79 85       	ldd	r23, Y+9	; 0x09
     218:	8a 85       	ldd	r24, Y+10	; 0x0a
     21a:	9b 85       	ldd	r25, Y+11	; 0x0b
     21c:	20 e0       	ldi	r18, 0x00	; 0
     21e:	3f ef       	ldi	r19, 0xFF	; 255
     220:	4f e7       	ldi	r20, 0x7F	; 127
     222:	57 e4       	ldi	r21, 0x47	; 71
     224:	0e 94 bc 06 	call	0xd78	; 0xd78 <__gtsf2>
     228:	18 16       	cp	r1, r24
     22a:	4c f5       	brge	.+82     	; 0x27e <buzzer+0x176>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     22c:	6c 85       	ldd	r22, Y+12	; 0x0c
     22e:	7d 85       	ldd	r23, Y+13	; 0x0d
     230:	8e 85       	ldd	r24, Y+14	; 0x0e
     232:	9f 85       	ldd	r25, Y+15	; 0x0f
     234:	20 e0       	ldi	r18, 0x00	; 0
     236:	30 e0       	ldi	r19, 0x00	; 0
     238:	40 e2       	ldi	r20, 0x20	; 32
     23a:	51 e4       	ldi	r21, 0x41	; 65
     23c:	0e 94 16 05 	call	0xa2c	; 0xa2c <__mulsf3>
     240:	dc 01       	movw	r26, r24
     242:	cb 01       	movw	r24, r22
     244:	bc 01       	movw	r22, r24
     246:	cd 01       	movw	r24, r26
     248:	0e 94 40 03 	call	0x680	; 0x680 <__fixunssfsi>
     24c:	dc 01       	movw	r26, r24
     24e:	cb 01       	movw	r24, r22
     250:	9f 83       	std	Y+7, r25	; 0x07
     252:	8e 83       	std	Y+6, r24	; 0x06
     254:	0f c0       	rjmp	.+30     	; 0x274 <buzzer+0x16c>
     256:	80 e9       	ldi	r24, 0x90	; 144
     258:	91 e0       	ldi	r25, 0x01	; 1
     25a:	9d 83       	std	Y+5, r25	; 0x05
     25c:	8c 83       	std	Y+4, r24	; 0x04
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     25e:	8c 81       	ldd	r24, Y+4	; 0x04
     260:	9d 81       	ldd	r25, Y+5	; 0x05
     262:	01 97       	sbiw	r24, 0x01	; 1
     264:	f1 f7       	brne	.-4      	; 0x262 <buzzer+0x15a>
     266:	9d 83       	std	Y+5, r25	; 0x05
     268:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     26a:	8e 81       	ldd	r24, Y+6	; 0x06
     26c:	9f 81       	ldd	r25, Y+7	; 0x07
     26e:	01 97       	sbiw	r24, 0x01	; 1
     270:	9f 83       	std	Y+7, r25	; 0x07
     272:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     274:	8e 81       	ldd	r24, Y+6	; 0x06
     276:	9f 81       	ldd	r25, Y+7	; 0x07
     278:	00 97       	sbiw	r24, 0x00	; 0
     27a:	69 f7       	brne	.-38     	; 0x256 <buzzer+0x14e>
     27c:	24 c0       	rjmp	.+72     	; 0x2c6 <buzzer+0x1be>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     27e:	68 85       	ldd	r22, Y+8	; 0x08
     280:	79 85       	ldd	r23, Y+9	; 0x09
     282:	8a 85       	ldd	r24, Y+10	; 0x0a
     284:	9b 85       	ldd	r25, Y+11	; 0x0b
     286:	0e 94 40 03 	call	0x680	; 0x680 <__fixunssfsi>
     28a:	dc 01       	movw	r26, r24
     28c:	cb 01       	movw	r24, r22
     28e:	9f 83       	std	Y+7, r25	; 0x07
     290:	8e 83       	std	Y+6, r24	; 0x06
     292:	8e 81       	ldd	r24, Y+6	; 0x06
     294:	9f 81       	ldd	r25, Y+7	; 0x07
     296:	9b 83       	std	Y+3, r25	; 0x03
     298:	8a 83       	std	Y+2, r24	; 0x02
     29a:	8a 81       	ldd	r24, Y+2	; 0x02
     29c:	9b 81       	ldd	r25, Y+3	; 0x03
     29e:	01 97       	sbiw	r24, 0x01	; 1
     2a0:	f1 f7       	brne	.-4      	; 0x29e <buzzer+0x196>
     2a2:	9b 83       	std	Y+3, r25	; 0x03
     2a4:	8a 83       	std	Y+2, r24	; 0x02
     2a6:	0f c0       	rjmp	.+30     	; 0x2c6 <buzzer+0x1be>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     2a8:	69 89       	ldd	r22, Y+17	; 0x11
     2aa:	7a 89       	ldd	r23, Y+18	; 0x12
     2ac:	8b 89       	ldd	r24, Y+19	; 0x13
     2ae:	9c 89       	ldd	r25, Y+20	; 0x14
     2b0:	0e 94 40 03 	call	0x680	; 0x680 <__fixunssfsi>
     2b4:	dc 01       	movw	r26, r24
     2b6:	cb 01       	movw	r24, r22
     2b8:	88 8b       	std	Y+16, r24	; 0x10
     2ba:	88 89       	ldd	r24, Y+16	; 0x10
     2bc:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     2be:	89 81       	ldd	r24, Y+1	; 0x01
     2c0:	8a 95       	dec	r24
     2c2:	f1 f7       	brne	.-4      	; 0x2c0 <buzzer+0x1b8>
     2c4:	89 83       	std	Y+1, r24	; 0x01
    sei();
}

void buzzer(int freq, int aantal)
{
    for(int i = 0; i < aantal; i++)
     2c6:	89 8d       	ldd	r24, Y+25	; 0x19
     2c8:	9a 8d       	ldd	r25, Y+26	; 0x1a
     2ca:	01 96       	adiw	r24, 0x01	; 1
     2cc:	9a 8f       	std	Y+26, r25	; 0x1a
     2ce:	89 8f       	std	Y+25, r24	; 0x19
     2d0:	29 8d       	ldd	r18, Y+25	; 0x19
     2d2:	3a 8d       	ldd	r19, Y+26	; 0x1a
     2d4:	8d 8d       	ldd	r24, Y+29	; 0x1d
     2d6:	9e 8d       	ldd	r25, Y+30	; 0x1e
     2d8:	28 17       	cp	r18, r24
     2da:	39 07       	cpc	r19, r25
     2dc:	0c f4       	brge	.+2      	; 0x2e0 <buzzer+0x1d8>
     2de:	25 cf       	rjmp	.-438    	; 0x12a <buzzer+0x22>
    {
        PORTD ^= _BV(buzzerPin);
        _delay_us(freq);

    }
}
     2e0:	6e 96       	adiw	r28, 0x1e	; 30
     2e2:	0f b6       	in	r0, 0x3f	; 63
     2e4:	f8 94       	cli
     2e6:	de bf       	out	0x3e, r29	; 62
     2e8:	0f be       	out	0x3f, r0	; 63
     2ea:	cd bf       	out	0x3d, r28	; 61
     2ec:	cf 91       	pop	r28
     2ee:	df 91       	pop	r29
     2f0:	08 95       	ret

000002f2 <__vector_3>:

ISR(PCINT0_vect)
{
     2f2:	1f 92       	push	r1
     2f4:	0f 92       	push	r0
     2f6:	0f b6       	in	r0, 0x3f	; 63
     2f8:	0f 92       	push	r0
     2fa:	11 24       	eor	r1, r1
     2fc:	2f 93       	push	r18
     2fe:	3f 93       	push	r19
     300:	4f 93       	push	r20
     302:	5f 93       	push	r21
     304:	6f 93       	push	r22
     306:	7f 93       	push	r23
     308:	8f 93       	push	r24
     30a:	9f 93       	push	r25
     30c:	af 93       	push	r26
     30e:	bf 93       	push	r27
     310:	ef 93       	push	r30
     312:	ff 93       	push	r31
     314:	df 93       	push	r29
     316:	cf 93       	push	r28
     318:	cd b7       	in	r28, 0x3d	; 61
     31a:	de b7       	in	r29, 0x3e	; 62
     31c:	aa 97       	sbiw	r28, 0x2a	; 42
     31e:	de bf       	out	0x3e, r29	; 62
     320:	cd bf       	out	0x3d, r28	; 61
     322:	80 e0       	ldi	r24, 0x00	; 0
     324:	90 e0       	ldi	r25, 0x00	; 0
     326:	a8 ec       	ldi	r26, 0xC8	; 200
     328:	b1 e4       	ldi	r27, 0x41	; 65
     32a:	8f a3       	std	Y+39, r24	; 0x27
     32c:	98 a7       	std	Y+40, r25	; 0x28
     32e:	a9 a7       	std	Y+41, r26	; 0x29
     330:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     332:	6f a1       	ldd	r22, Y+39	; 0x27
     334:	78 a5       	ldd	r23, Y+40	; 0x28
     336:	89 a5       	ldd	r24, Y+41	; 0x29
     338:	9a a5       	ldd	r25, Y+42	; 0x2a
     33a:	20 e0       	ldi	r18, 0x00	; 0
     33c:	30 e0       	ldi	r19, 0x00	; 0
     33e:	4a e7       	ldi	r20, 0x7A	; 122
     340:	55 e4       	ldi	r21, 0x45	; 69
     342:	0e 94 16 05 	call	0xa2c	; 0xa2c <__mulsf3>
     346:	dc 01       	movw	r26, r24
     348:	cb 01       	movw	r24, r22
     34a:	8b a3       	std	Y+35, r24	; 0x23
     34c:	9c a3       	std	Y+36, r25	; 0x24
     34e:	ad a3       	std	Y+37, r26	; 0x25
     350:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     352:	6b a1       	ldd	r22, Y+35	; 0x23
     354:	7c a1       	ldd	r23, Y+36	; 0x24
     356:	8d a1       	ldd	r24, Y+37	; 0x25
     358:	9e a1       	ldd	r25, Y+38	; 0x26
     35a:	20 e0       	ldi	r18, 0x00	; 0
     35c:	30 e0       	ldi	r19, 0x00	; 0
     35e:	40 e8       	ldi	r20, 0x80	; 128
     360:	5f e3       	ldi	r21, 0x3F	; 63
     362:	0e 94 1c 07 	call	0xe38	; 0xe38 <__ltsf2>
     366:	88 23       	and	r24, r24
     368:	2c f4       	brge	.+10     	; 0x374 <__vector_3+0x82>
		__ticks = 1;
     36a:	81 e0       	ldi	r24, 0x01	; 1
     36c:	90 e0       	ldi	r25, 0x00	; 0
     36e:	9a a3       	std	Y+34, r25	; 0x22
     370:	89 a3       	std	Y+33, r24	; 0x21
     372:	3f c0       	rjmp	.+126    	; 0x3f2 <__vector_3+0x100>
	else if (__tmp > 65535)
     374:	6b a1       	ldd	r22, Y+35	; 0x23
     376:	7c a1       	ldd	r23, Y+36	; 0x24
     378:	8d a1       	ldd	r24, Y+37	; 0x25
     37a:	9e a1       	ldd	r25, Y+38	; 0x26
     37c:	20 e0       	ldi	r18, 0x00	; 0
     37e:	3f ef       	ldi	r19, 0xFF	; 255
     380:	4f e7       	ldi	r20, 0x7F	; 127
     382:	57 e4       	ldi	r21, 0x47	; 71
     384:	0e 94 bc 06 	call	0xd78	; 0xd78 <__gtsf2>
     388:	18 16       	cp	r1, r24
     38a:	4c f5       	brge	.+82     	; 0x3de <__vector_3+0xec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     38c:	6f a1       	ldd	r22, Y+39	; 0x27
     38e:	78 a5       	ldd	r23, Y+40	; 0x28
     390:	89 a5       	ldd	r24, Y+41	; 0x29
     392:	9a a5       	ldd	r25, Y+42	; 0x2a
     394:	20 e0       	ldi	r18, 0x00	; 0
     396:	30 e0       	ldi	r19, 0x00	; 0
     398:	40 e2       	ldi	r20, 0x20	; 32
     39a:	51 e4       	ldi	r21, 0x41	; 65
     39c:	0e 94 16 05 	call	0xa2c	; 0xa2c <__mulsf3>
     3a0:	dc 01       	movw	r26, r24
     3a2:	cb 01       	movw	r24, r22
     3a4:	bc 01       	movw	r22, r24
     3a6:	cd 01       	movw	r24, r26
     3a8:	0e 94 40 03 	call	0x680	; 0x680 <__fixunssfsi>
     3ac:	dc 01       	movw	r26, r24
     3ae:	cb 01       	movw	r24, r22
     3b0:	9a a3       	std	Y+34, r25	; 0x22
     3b2:	89 a3       	std	Y+33, r24	; 0x21
     3b4:	0f c0       	rjmp	.+30     	; 0x3d4 <__vector_3+0xe2>
     3b6:	80 e9       	ldi	r24, 0x90	; 144
     3b8:	91 e0       	ldi	r25, 0x01	; 1
     3ba:	98 a3       	std	Y+32, r25	; 0x20
     3bc:	8f 8f       	std	Y+31, r24	; 0x1f
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     3be:	8f 8d       	ldd	r24, Y+31	; 0x1f
     3c0:	98 a1       	ldd	r25, Y+32	; 0x20
     3c2:	01 97       	sbiw	r24, 0x01	; 1
     3c4:	f1 f7       	brne	.-4      	; 0x3c2 <__vector_3+0xd0>
     3c6:	98 a3       	std	Y+32, r25	; 0x20
     3c8:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     3ca:	89 a1       	ldd	r24, Y+33	; 0x21
     3cc:	9a a1       	ldd	r25, Y+34	; 0x22
     3ce:	01 97       	sbiw	r24, 0x01	; 1
     3d0:	9a a3       	std	Y+34, r25	; 0x22
     3d2:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     3d4:	89 a1       	ldd	r24, Y+33	; 0x21
     3d6:	9a a1       	ldd	r25, Y+34	; 0x22
     3d8:	00 97       	sbiw	r24, 0x00	; 0
     3da:	69 f7       	brne	.-38     	; 0x3b6 <__vector_3+0xc4>
     3dc:	14 c0       	rjmp	.+40     	; 0x406 <__vector_3+0x114>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     3de:	6b a1       	ldd	r22, Y+35	; 0x23
     3e0:	7c a1       	ldd	r23, Y+36	; 0x24
     3e2:	8d a1       	ldd	r24, Y+37	; 0x25
     3e4:	9e a1       	ldd	r25, Y+38	; 0x26
     3e6:	0e 94 40 03 	call	0x680	; 0x680 <__fixunssfsi>
     3ea:	dc 01       	movw	r26, r24
     3ec:	cb 01       	movw	r24, r22
     3ee:	9a a3       	std	Y+34, r25	; 0x22
     3f0:	89 a3       	std	Y+33, r24	; 0x21
     3f2:	89 a1       	ldd	r24, Y+33	; 0x21
     3f4:	9a a1       	ldd	r25, Y+34	; 0x22
     3f6:	9e 8f       	std	Y+30, r25	; 0x1e
     3f8:	8d 8f       	std	Y+29, r24	; 0x1d
     3fa:	8d 8d       	ldd	r24, Y+29	; 0x1d
     3fc:	9e 8d       	ldd	r25, Y+30	; 0x1e
     3fe:	01 97       	sbiw	r24, 0x01	; 1
     400:	f1 f7       	brne	.-4      	; 0x3fe <__vector_3+0x10c>
     402:	9e 8f       	std	Y+30, r25	; 0x1e
     404:	8d 8f       	std	Y+29, r24	; 0x1d
    _delay_ms(25);
    if(bit_is_clear(PINB, IrSen1))
     406:	e3 e2       	ldi	r30, 0x23	; 35
     408:	f0 e0       	ldi	r31, 0x00	; 0
     40a:	80 81       	ld	r24, Z
     40c:	88 2f       	mov	r24, r24
     40e:	90 e0       	ldi	r25, 0x00	; 0
     410:	82 70       	andi	r24, 0x02	; 2
     412:	90 70       	andi	r25, 0x00	; 0
     414:	00 97       	sbiw	r24, 0x00	; 0
     416:	09 f0       	breq	.+2      	; 0x41a <__vector_3+0x128>
     418:	86 c0       	rjmp	.+268    	; 0x526 <__vector_3+0x234>
    {
        PORTC |= _BV(motorPin);
     41a:	a8 e2       	ldi	r26, 0x28	; 40
     41c:	b0 e0       	ldi	r27, 0x00	; 0
     41e:	e8 e2       	ldi	r30, 0x28	; 40
     420:	f0 e0       	ldi	r31, 0x00	; 0
     422:	80 81       	ld	r24, Z
     424:	80 61       	ori	r24, 0x10	; 16
     426:	8c 93       	st	X, r24
        buzzer(350, 1000);
     428:	8e e5       	ldi	r24, 0x5E	; 94
     42a:	91 e0       	ldi	r25, 0x01	; 1
     42c:	68 ee       	ldi	r22, 0xE8	; 232
     42e:	73 e0       	ldi	r23, 0x03	; 3
     430:	0e 94 84 00 	call	0x108	; 0x108 <buzzer>
     434:	80 e0       	ldi	r24, 0x00	; 0
     436:	90 e0       	ldi	r25, 0x00	; 0
     438:	aa ef       	ldi	r26, 0xFA	; 250
     43a:	b3 e4       	ldi	r27, 0x43	; 67
     43c:	89 8f       	std	Y+25, r24	; 0x19
     43e:	9a 8f       	std	Y+26, r25	; 0x1a
     440:	ab 8f       	std	Y+27, r26	; 0x1b
     442:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     444:	69 8d       	ldd	r22, Y+25	; 0x19
     446:	7a 8d       	ldd	r23, Y+26	; 0x1a
     448:	8b 8d       	ldd	r24, Y+27	; 0x1b
     44a:	9c 8d       	ldd	r25, Y+28	; 0x1c
     44c:	20 e0       	ldi	r18, 0x00	; 0
     44e:	30 e0       	ldi	r19, 0x00	; 0
     450:	4a e7       	ldi	r20, 0x7A	; 122
     452:	55 e4       	ldi	r21, 0x45	; 69
     454:	0e 94 16 05 	call	0xa2c	; 0xa2c <__mulsf3>
     458:	dc 01       	movw	r26, r24
     45a:	cb 01       	movw	r24, r22
     45c:	8d 8b       	std	Y+21, r24	; 0x15
     45e:	9e 8b       	std	Y+22, r25	; 0x16
     460:	af 8b       	std	Y+23, r26	; 0x17
     462:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     464:	6d 89       	ldd	r22, Y+21	; 0x15
     466:	7e 89       	ldd	r23, Y+22	; 0x16
     468:	8f 89       	ldd	r24, Y+23	; 0x17
     46a:	98 8d       	ldd	r25, Y+24	; 0x18
     46c:	20 e0       	ldi	r18, 0x00	; 0
     46e:	30 e0       	ldi	r19, 0x00	; 0
     470:	40 e8       	ldi	r20, 0x80	; 128
     472:	5f e3       	ldi	r21, 0x3F	; 63
     474:	0e 94 1c 07 	call	0xe38	; 0xe38 <__ltsf2>
     478:	88 23       	and	r24, r24
     47a:	2c f4       	brge	.+10     	; 0x486 <__vector_3+0x194>
		__ticks = 1;
     47c:	81 e0       	ldi	r24, 0x01	; 1
     47e:	90 e0       	ldi	r25, 0x00	; 0
     480:	9c 8b       	std	Y+20, r25	; 0x14
     482:	8b 8b       	std	Y+19, r24	; 0x13
     484:	3f c0       	rjmp	.+126    	; 0x504 <__vector_3+0x212>
	else if (__tmp > 65535)
     486:	6d 89       	ldd	r22, Y+21	; 0x15
     488:	7e 89       	ldd	r23, Y+22	; 0x16
     48a:	8f 89       	ldd	r24, Y+23	; 0x17
     48c:	98 8d       	ldd	r25, Y+24	; 0x18
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	3f ef       	ldi	r19, 0xFF	; 255
     492:	4f e7       	ldi	r20, 0x7F	; 127
     494:	57 e4       	ldi	r21, 0x47	; 71
     496:	0e 94 bc 06 	call	0xd78	; 0xd78 <__gtsf2>
     49a:	18 16       	cp	r1, r24
     49c:	4c f5       	brge	.+82     	; 0x4f0 <__vector_3+0x1fe>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     49e:	69 8d       	ldd	r22, Y+25	; 0x19
     4a0:	7a 8d       	ldd	r23, Y+26	; 0x1a
     4a2:	8b 8d       	ldd	r24, Y+27	; 0x1b
     4a4:	9c 8d       	ldd	r25, Y+28	; 0x1c
     4a6:	20 e0       	ldi	r18, 0x00	; 0
     4a8:	30 e0       	ldi	r19, 0x00	; 0
     4aa:	40 e2       	ldi	r20, 0x20	; 32
     4ac:	51 e4       	ldi	r21, 0x41	; 65
     4ae:	0e 94 16 05 	call	0xa2c	; 0xa2c <__mulsf3>
     4b2:	dc 01       	movw	r26, r24
     4b4:	cb 01       	movw	r24, r22
     4b6:	bc 01       	movw	r22, r24
     4b8:	cd 01       	movw	r24, r26
     4ba:	0e 94 40 03 	call	0x680	; 0x680 <__fixunssfsi>
     4be:	dc 01       	movw	r26, r24
     4c0:	cb 01       	movw	r24, r22
     4c2:	9c 8b       	std	Y+20, r25	; 0x14
     4c4:	8b 8b       	std	Y+19, r24	; 0x13
     4c6:	0f c0       	rjmp	.+30     	; 0x4e6 <__vector_3+0x1f4>
     4c8:	80 e9       	ldi	r24, 0x90	; 144
     4ca:	91 e0       	ldi	r25, 0x01	; 1
     4cc:	9a 8b       	std	Y+18, r25	; 0x12
     4ce:	89 8b       	std	Y+17, r24	; 0x11
     4d0:	89 89       	ldd	r24, Y+17	; 0x11
     4d2:	9a 89       	ldd	r25, Y+18	; 0x12
     4d4:	01 97       	sbiw	r24, 0x01	; 1
     4d6:	f1 f7       	brne	.-4      	; 0x4d4 <__vector_3+0x1e2>
     4d8:	9a 8b       	std	Y+18, r25	; 0x12
     4da:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     4dc:	8b 89       	ldd	r24, Y+19	; 0x13
     4de:	9c 89       	ldd	r25, Y+20	; 0x14
     4e0:	01 97       	sbiw	r24, 0x01	; 1
     4e2:	9c 8b       	std	Y+20, r25	; 0x14
     4e4:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     4e6:	8b 89       	ldd	r24, Y+19	; 0x13
     4e8:	9c 89       	ldd	r25, Y+20	; 0x14
     4ea:	00 97       	sbiw	r24, 0x00	; 0
     4ec:	69 f7       	brne	.-38     	; 0x4c8 <__vector_3+0x1d6>
     4ee:	14 c0       	rjmp	.+40     	; 0x518 <__vector_3+0x226>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     4f0:	6d 89       	ldd	r22, Y+21	; 0x15
     4f2:	7e 89       	ldd	r23, Y+22	; 0x16
     4f4:	8f 89       	ldd	r24, Y+23	; 0x17
     4f6:	98 8d       	ldd	r25, Y+24	; 0x18
     4f8:	0e 94 40 03 	call	0x680	; 0x680 <__fixunssfsi>
     4fc:	dc 01       	movw	r26, r24
     4fe:	cb 01       	movw	r24, r22
     500:	9c 8b       	std	Y+20, r25	; 0x14
     502:	8b 8b       	std	Y+19, r24	; 0x13
     504:	8b 89       	ldd	r24, Y+19	; 0x13
     506:	9c 89       	ldd	r25, Y+20	; 0x14
     508:	98 8b       	std	Y+16, r25	; 0x10
     50a:	8f 87       	std	Y+15, r24	; 0x0f
     50c:	8f 85       	ldd	r24, Y+15	; 0x0f
     50e:	98 89       	ldd	r25, Y+16	; 0x10
     510:	01 97       	sbiw	r24, 0x01	; 1
     512:	f1 f7       	brne	.-4      	; 0x510 <__vector_3+0x21e>
     514:	98 8b       	std	Y+16, r25	; 0x10
     516:	8f 87       	std	Y+15, r24	; 0x0f
        _delay_ms(500);
        PORTC &= ~_BV(motorPin);
     518:	a8 e2       	ldi	r26, 0x28	; 40
     51a:	b0 e0       	ldi	r27, 0x00	; 0
     51c:	e8 e2       	ldi	r30, 0x28	; 40
     51e:	f0 e0       	ldi	r31, 0x00	; 0
     520:	80 81       	ld	r24, Z
     522:	8f 7e       	andi	r24, 0xEF	; 239
     524:	8c 93       	st	X, r24
    }
    if(bit_is_clear(PINB, IrSen2))
     526:	e3 e2       	ldi	r30, 0x23	; 35
     528:	f0 e0       	ldi	r31, 0x00	; 0
     52a:	80 81       	ld	r24, Z
     52c:	88 2f       	mov	r24, r24
     52e:	90 e0       	ldi	r25, 0x00	; 0
     530:	84 70       	andi	r24, 0x04	; 4
     532:	90 70       	andi	r25, 0x00	; 0
     534:	00 97       	sbiw	r24, 0x00	; 0
     536:	09 f0       	breq	.+2      	; 0x53a <__vector_3+0x248>
     538:	86 c0       	rjmp	.+268    	; 0x646 <__vector_3+0x354>
    {
        PORTC |= _BV(motorPin);
     53a:	a8 e2       	ldi	r26, 0x28	; 40
     53c:	b0 e0       	ldi	r27, 0x00	; 0
     53e:	e8 e2       	ldi	r30, 0x28	; 40
     540:	f0 e0       	ldi	r31, 0x00	; 0
     542:	80 81       	ld	r24, Z
     544:	80 61       	ori	r24, 0x10	; 16
     546:	8c 93       	st	X, r24
        buzzer(350, 1000);
     548:	8e e5       	ldi	r24, 0x5E	; 94
     54a:	91 e0       	ldi	r25, 0x01	; 1
     54c:	68 ee       	ldi	r22, 0xE8	; 232
     54e:	73 e0       	ldi	r23, 0x03	; 3
     550:	0e 94 84 00 	call	0x108	; 0x108 <buzzer>
     554:	80 e0       	ldi	r24, 0x00	; 0
     556:	90 e0       	ldi	r25, 0x00	; 0
     558:	aa ef       	ldi	r26, 0xFA	; 250
     55a:	b3 e4       	ldi	r27, 0x43	; 67
     55c:	8b 87       	std	Y+11, r24	; 0x0b
     55e:	9c 87       	std	Y+12, r25	; 0x0c
     560:	ad 87       	std	Y+13, r26	; 0x0d
     562:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     564:	6b 85       	ldd	r22, Y+11	; 0x0b
     566:	7c 85       	ldd	r23, Y+12	; 0x0c
     568:	8d 85       	ldd	r24, Y+13	; 0x0d
     56a:	9e 85       	ldd	r25, Y+14	; 0x0e
     56c:	20 e0       	ldi	r18, 0x00	; 0
     56e:	30 e0       	ldi	r19, 0x00	; 0
     570:	4a e7       	ldi	r20, 0x7A	; 122
     572:	55 e4       	ldi	r21, 0x45	; 69
     574:	0e 94 16 05 	call	0xa2c	; 0xa2c <__mulsf3>
     578:	dc 01       	movw	r26, r24
     57a:	cb 01       	movw	r24, r22
     57c:	8f 83       	std	Y+7, r24	; 0x07
     57e:	98 87       	std	Y+8, r25	; 0x08
     580:	a9 87       	std	Y+9, r26	; 0x09
     582:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     584:	6f 81       	ldd	r22, Y+7	; 0x07
     586:	78 85       	ldd	r23, Y+8	; 0x08
     588:	89 85       	ldd	r24, Y+9	; 0x09
     58a:	9a 85       	ldd	r25, Y+10	; 0x0a
     58c:	20 e0       	ldi	r18, 0x00	; 0
     58e:	30 e0       	ldi	r19, 0x00	; 0
     590:	40 e8       	ldi	r20, 0x80	; 128
     592:	5f e3       	ldi	r21, 0x3F	; 63
     594:	0e 94 1c 07 	call	0xe38	; 0xe38 <__ltsf2>
     598:	88 23       	and	r24, r24
     59a:	2c f4       	brge	.+10     	; 0x5a6 <__vector_3+0x2b4>
		__ticks = 1;
     59c:	81 e0       	ldi	r24, 0x01	; 1
     59e:	90 e0       	ldi	r25, 0x00	; 0
     5a0:	9e 83       	std	Y+6, r25	; 0x06
     5a2:	8d 83       	std	Y+5, r24	; 0x05
     5a4:	3f c0       	rjmp	.+126    	; 0x624 <__vector_3+0x332>
	else if (__tmp > 65535)
     5a6:	6f 81       	ldd	r22, Y+7	; 0x07
     5a8:	78 85       	ldd	r23, Y+8	; 0x08
     5aa:	89 85       	ldd	r24, Y+9	; 0x09
     5ac:	9a 85       	ldd	r25, Y+10	; 0x0a
     5ae:	20 e0       	ldi	r18, 0x00	; 0
     5b0:	3f ef       	ldi	r19, 0xFF	; 255
     5b2:	4f e7       	ldi	r20, 0x7F	; 127
     5b4:	57 e4       	ldi	r21, 0x47	; 71
     5b6:	0e 94 bc 06 	call	0xd78	; 0xd78 <__gtsf2>
     5ba:	18 16       	cp	r1, r24
     5bc:	4c f5       	brge	.+82     	; 0x610 <__vector_3+0x31e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     5be:	6b 85       	ldd	r22, Y+11	; 0x0b
     5c0:	7c 85       	ldd	r23, Y+12	; 0x0c
     5c2:	8d 85       	ldd	r24, Y+13	; 0x0d
     5c4:	9e 85       	ldd	r25, Y+14	; 0x0e
     5c6:	20 e0       	ldi	r18, 0x00	; 0
     5c8:	30 e0       	ldi	r19, 0x00	; 0
     5ca:	40 e2       	ldi	r20, 0x20	; 32
     5cc:	51 e4       	ldi	r21, 0x41	; 65
     5ce:	0e 94 16 05 	call	0xa2c	; 0xa2c <__mulsf3>
     5d2:	dc 01       	movw	r26, r24
     5d4:	cb 01       	movw	r24, r22
     5d6:	bc 01       	movw	r22, r24
     5d8:	cd 01       	movw	r24, r26
     5da:	0e 94 40 03 	call	0x680	; 0x680 <__fixunssfsi>
     5de:	dc 01       	movw	r26, r24
     5e0:	cb 01       	movw	r24, r22
     5e2:	9e 83       	std	Y+6, r25	; 0x06
     5e4:	8d 83       	std	Y+5, r24	; 0x05
     5e6:	0f c0       	rjmp	.+30     	; 0x606 <__vector_3+0x314>
     5e8:	80 e9       	ldi	r24, 0x90	; 144
     5ea:	91 e0       	ldi	r25, 0x01	; 1
     5ec:	9c 83       	std	Y+4, r25	; 0x04
     5ee:	8b 83       	std	Y+3, r24	; 0x03
     5f0:	8b 81       	ldd	r24, Y+3	; 0x03
     5f2:	9c 81       	ldd	r25, Y+4	; 0x04
     5f4:	01 97       	sbiw	r24, 0x01	; 1
     5f6:	f1 f7       	brne	.-4      	; 0x5f4 <__vector_3+0x302>
     5f8:	9c 83       	std	Y+4, r25	; 0x04
     5fa:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     5fc:	8d 81       	ldd	r24, Y+5	; 0x05
     5fe:	9e 81       	ldd	r25, Y+6	; 0x06
     600:	01 97       	sbiw	r24, 0x01	; 1
     602:	9e 83       	std	Y+6, r25	; 0x06
     604:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     606:	8d 81       	ldd	r24, Y+5	; 0x05
     608:	9e 81       	ldd	r25, Y+6	; 0x06
     60a:	00 97       	sbiw	r24, 0x00	; 0
     60c:	69 f7       	brne	.-38     	; 0x5e8 <__vector_3+0x2f6>
     60e:	14 c0       	rjmp	.+40     	; 0x638 <__vector_3+0x346>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     610:	6f 81       	ldd	r22, Y+7	; 0x07
     612:	78 85       	ldd	r23, Y+8	; 0x08
     614:	89 85       	ldd	r24, Y+9	; 0x09
     616:	9a 85       	ldd	r25, Y+10	; 0x0a
     618:	0e 94 40 03 	call	0x680	; 0x680 <__fixunssfsi>
     61c:	dc 01       	movw	r26, r24
     61e:	cb 01       	movw	r24, r22
     620:	9e 83       	std	Y+6, r25	; 0x06
     622:	8d 83       	std	Y+5, r24	; 0x05
     624:	8d 81       	ldd	r24, Y+5	; 0x05
     626:	9e 81       	ldd	r25, Y+6	; 0x06
     628:	9a 83       	std	Y+2, r25	; 0x02
     62a:	89 83       	std	Y+1, r24	; 0x01
     62c:	89 81       	ldd	r24, Y+1	; 0x01
     62e:	9a 81       	ldd	r25, Y+2	; 0x02
     630:	01 97       	sbiw	r24, 0x01	; 1
     632:	f1 f7       	brne	.-4      	; 0x630 <__vector_3+0x33e>
     634:	9a 83       	std	Y+2, r25	; 0x02
     636:	89 83       	std	Y+1, r24	; 0x01
        _delay_ms(500);
        PORTC &= ~_BV(motorPin);
     638:	a8 e2       	ldi	r26, 0x28	; 40
     63a:	b0 e0       	ldi	r27, 0x00	; 0
     63c:	e8 e2       	ldi	r30, 0x28	; 40
     63e:	f0 e0       	ldi	r31, 0x00	; 0
     640:	80 81       	ld	r24, Z
     642:	8f 7e       	andi	r24, 0xEF	; 239
     644:	8c 93       	st	X, r24
    }
}
     646:	aa 96       	adiw	r28, 0x2a	; 42
     648:	de bf       	out	0x3e, r29	; 62
     64a:	cd bf       	out	0x3d, r28	; 61
     64c:	cf 91       	pop	r28
     64e:	df 91       	pop	r29
     650:	ff 91       	pop	r31
     652:	ef 91       	pop	r30
     654:	bf 91       	pop	r27
     656:	af 91       	pop	r26
     658:	9f 91       	pop	r25
     65a:	8f 91       	pop	r24
     65c:	7f 91       	pop	r23
     65e:	6f 91       	pop	r22
     660:	5f 91       	pop	r21
     662:	4f 91       	pop	r20
     664:	3f 91       	pop	r19
     666:	2f 91       	pop	r18
     668:	0f 90       	pop	r0
     66a:	0f be       	out	0x3f, r0	; 63
     66c:	0f 90       	pop	r0
     66e:	1f 90       	pop	r1
     670:	18 95       	reti

00000672 <main>:

int main(void)
{
     672:	df 93       	push	r29
     674:	cf 93       	push	r28
     676:	cd b7       	in	r28, 0x3d	; 61
     678:	de b7       	in	r29, 0x3e	; 62
    init();
     67a:	0e 94 4b 00 	call	0x96	; 0x96 <init>
     67e:	ff cf       	rjmp	.-2      	; 0x67e <main+0xc>

00000680 <__fixunssfsi>:
     680:	ef 92       	push	r14
     682:	ff 92       	push	r15
     684:	0f 93       	push	r16
     686:	1f 93       	push	r17
     688:	7b 01       	movw	r14, r22
     68a:	8c 01       	movw	r16, r24
     68c:	20 e0       	ldi	r18, 0x00	; 0
     68e:	30 e0       	ldi	r19, 0x00	; 0
     690:	40 e0       	ldi	r20, 0x00	; 0
     692:	5f e4       	ldi	r21, 0x4F	; 79
     694:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <__gesf2>
     698:	88 23       	and	r24, r24
     69a:	8c f0       	brlt	.+34     	; 0x6be <__fixunssfsi+0x3e>
     69c:	c8 01       	movw	r24, r16
     69e:	b7 01       	movw	r22, r14
     6a0:	20 e0       	ldi	r18, 0x00	; 0
     6a2:	30 e0       	ldi	r19, 0x00	; 0
     6a4:	40 e0       	ldi	r20, 0x00	; 0
     6a6:	5f e4       	ldi	r21, 0x4F	; 79
     6a8:	0e 94 b8 04 	call	0x970	; 0x970 <__subsf3>
     6ac:	0e 94 aa 07 	call	0xf54	; 0xf54 <__fixsfsi>
     6b0:	9b 01       	movw	r18, r22
     6b2:	ac 01       	movw	r20, r24
     6b4:	20 50       	subi	r18, 0x00	; 0
     6b6:	30 40       	sbci	r19, 0x00	; 0
     6b8:	40 40       	sbci	r20, 0x00	; 0
     6ba:	50 48       	sbci	r21, 0x80	; 128
     6bc:	06 c0       	rjmp	.+12     	; 0x6ca <__fixunssfsi+0x4a>
     6be:	c8 01       	movw	r24, r16
     6c0:	b7 01       	movw	r22, r14
     6c2:	0e 94 aa 07 	call	0xf54	; 0xf54 <__fixsfsi>
     6c6:	9b 01       	movw	r18, r22
     6c8:	ac 01       	movw	r20, r24
     6ca:	b9 01       	movw	r22, r18
     6cc:	ca 01       	movw	r24, r20
     6ce:	1f 91       	pop	r17
     6d0:	0f 91       	pop	r16
     6d2:	ff 90       	pop	r15
     6d4:	ef 90       	pop	r14
     6d6:	08 95       	ret

000006d8 <_fpadd_parts>:
     6d8:	a0 e0       	ldi	r26, 0x00	; 0
     6da:	b0 e0       	ldi	r27, 0x00	; 0
     6dc:	e2 e7       	ldi	r30, 0x72	; 114
     6de:	f3 e0       	ldi	r31, 0x03	; 3
     6e0:	0c 94 f3 09 	jmp	0x13e6	; 0x13e6 <__prologue_saves__>
     6e4:	dc 01       	movw	r26, r24
     6e6:	2b 01       	movw	r4, r22
     6e8:	fa 01       	movw	r30, r20
     6ea:	9c 91       	ld	r25, X
     6ec:	92 30       	cpi	r25, 0x02	; 2
     6ee:	08 f4       	brcc	.+2      	; 0x6f2 <_fpadd_parts+0x1a>
     6f0:	39 c1       	rjmp	.+626    	; 0x964 <__stack+0x65>
     6f2:	eb 01       	movw	r28, r22
     6f4:	88 81       	ld	r24, Y
     6f6:	82 30       	cpi	r24, 0x02	; 2
     6f8:	08 f4       	brcc	.+2      	; 0x6fc <_fpadd_parts+0x24>
     6fa:	33 c1       	rjmp	.+614    	; 0x962 <__stack+0x63>
     6fc:	94 30       	cpi	r25, 0x04	; 4
     6fe:	69 f4       	brne	.+26     	; 0x71a <_fpadd_parts+0x42>
     700:	84 30       	cpi	r24, 0x04	; 4
     702:	09 f0       	breq	.+2      	; 0x706 <_fpadd_parts+0x2e>
     704:	2f c1       	rjmp	.+606    	; 0x964 <__stack+0x65>
     706:	11 96       	adiw	r26, 0x01	; 1
     708:	9c 91       	ld	r25, X
     70a:	11 97       	sbiw	r26, 0x01	; 1
     70c:	89 81       	ldd	r24, Y+1	; 0x01
     70e:	98 17       	cp	r25, r24
     710:	09 f4       	brne	.+2      	; 0x714 <_fpadd_parts+0x3c>
     712:	28 c1       	rjmp	.+592    	; 0x964 <__stack+0x65>
     714:	a0 e0       	ldi	r26, 0x00	; 0
     716:	b1 e0       	ldi	r27, 0x01	; 1
     718:	25 c1       	rjmp	.+586    	; 0x964 <__stack+0x65>
     71a:	84 30       	cpi	r24, 0x04	; 4
     71c:	09 f4       	brne	.+2      	; 0x720 <_fpadd_parts+0x48>
     71e:	21 c1       	rjmp	.+578    	; 0x962 <__stack+0x63>
     720:	82 30       	cpi	r24, 0x02	; 2
     722:	a9 f4       	brne	.+42     	; 0x74e <_fpadd_parts+0x76>
     724:	92 30       	cpi	r25, 0x02	; 2
     726:	09 f0       	breq	.+2      	; 0x72a <_fpadd_parts+0x52>
     728:	1d c1       	rjmp	.+570    	; 0x964 <__stack+0x65>
     72a:	9a 01       	movw	r18, r20
     72c:	ad 01       	movw	r20, r26
     72e:	88 e0       	ldi	r24, 0x08	; 8
     730:	ea 01       	movw	r28, r20
     732:	09 90       	ld	r0, Y+
     734:	ae 01       	movw	r20, r28
     736:	e9 01       	movw	r28, r18
     738:	09 92       	st	Y+, r0
     73a:	9e 01       	movw	r18, r28
     73c:	81 50       	subi	r24, 0x01	; 1
     73e:	c1 f7       	brne	.-16     	; 0x730 <_fpadd_parts+0x58>
     740:	e2 01       	movw	r28, r4
     742:	89 81       	ldd	r24, Y+1	; 0x01
     744:	11 96       	adiw	r26, 0x01	; 1
     746:	9c 91       	ld	r25, X
     748:	89 23       	and	r24, r25
     74a:	81 83       	std	Z+1, r24	; 0x01
     74c:	08 c1       	rjmp	.+528    	; 0x95e <__stack+0x5f>
     74e:	92 30       	cpi	r25, 0x02	; 2
     750:	09 f4       	brne	.+2      	; 0x754 <_fpadd_parts+0x7c>
     752:	07 c1       	rjmp	.+526    	; 0x962 <__stack+0x63>
     754:	12 96       	adiw	r26, 0x02	; 2
     756:	2d 90       	ld	r2, X+
     758:	3c 90       	ld	r3, X
     75a:	13 97       	sbiw	r26, 0x03	; 3
     75c:	eb 01       	movw	r28, r22
     75e:	8a 81       	ldd	r24, Y+2	; 0x02
     760:	9b 81       	ldd	r25, Y+3	; 0x03
     762:	14 96       	adiw	r26, 0x04	; 4
     764:	ad 90       	ld	r10, X+
     766:	bd 90       	ld	r11, X+
     768:	cd 90       	ld	r12, X+
     76a:	dc 90       	ld	r13, X
     76c:	17 97       	sbiw	r26, 0x07	; 7
     76e:	ec 80       	ldd	r14, Y+4	; 0x04
     770:	fd 80       	ldd	r15, Y+5	; 0x05
     772:	0e 81       	ldd	r16, Y+6	; 0x06
     774:	1f 81       	ldd	r17, Y+7	; 0x07
     776:	91 01       	movw	r18, r2
     778:	28 1b       	sub	r18, r24
     77a:	39 0b       	sbc	r19, r25
     77c:	b9 01       	movw	r22, r18
     77e:	37 ff       	sbrs	r19, 7
     780:	04 c0       	rjmp	.+8      	; 0x78a <_fpadd_parts+0xb2>
     782:	66 27       	eor	r22, r22
     784:	77 27       	eor	r23, r23
     786:	62 1b       	sub	r22, r18
     788:	73 0b       	sbc	r23, r19
     78a:	60 32       	cpi	r22, 0x20	; 32
     78c:	71 05       	cpc	r23, r1
     78e:	0c f0       	brlt	.+2      	; 0x792 <_fpadd_parts+0xba>
     790:	61 c0       	rjmp	.+194    	; 0x854 <_fpadd_parts+0x17c>
     792:	12 16       	cp	r1, r18
     794:	13 06       	cpc	r1, r19
     796:	6c f5       	brge	.+90     	; 0x7f2 <_fpadd_parts+0x11a>
     798:	37 01       	movw	r6, r14
     79a:	48 01       	movw	r8, r16
     79c:	06 2e       	mov	r0, r22
     79e:	04 c0       	rjmp	.+8      	; 0x7a8 <_fpadd_parts+0xd0>
     7a0:	96 94       	lsr	r9
     7a2:	87 94       	ror	r8
     7a4:	77 94       	ror	r7
     7a6:	67 94       	ror	r6
     7a8:	0a 94       	dec	r0
     7aa:	d2 f7       	brpl	.-12     	; 0x7a0 <_fpadd_parts+0xc8>
     7ac:	21 e0       	ldi	r18, 0x01	; 1
     7ae:	30 e0       	ldi	r19, 0x00	; 0
     7b0:	40 e0       	ldi	r20, 0x00	; 0
     7b2:	50 e0       	ldi	r21, 0x00	; 0
     7b4:	04 c0       	rjmp	.+8      	; 0x7be <_fpadd_parts+0xe6>
     7b6:	22 0f       	add	r18, r18
     7b8:	33 1f       	adc	r19, r19
     7ba:	44 1f       	adc	r20, r20
     7bc:	55 1f       	adc	r21, r21
     7be:	6a 95       	dec	r22
     7c0:	d2 f7       	brpl	.-12     	; 0x7b6 <_fpadd_parts+0xde>
     7c2:	21 50       	subi	r18, 0x01	; 1
     7c4:	30 40       	sbci	r19, 0x00	; 0
     7c6:	40 40       	sbci	r20, 0x00	; 0
     7c8:	50 40       	sbci	r21, 0x00	; 0
     7ca:	2e 21       	and	r18, r14
     7cc:	3f 21       	and	r19, r15
     7ce:	40 23       	and	r20, r16
     7d0:	51 23       	and	r21, r17
     7d2:	21 15       	cp	r18, r1
     7d4:	31 05       	cpc	r19, r1
     7d6:	41 05       	cpc	r20, r1
     7d8:	51 05       	cpc	r21, r1
     7da:	21 f0       	breq	.+8      	; 0x7e4 <_fpadd_parts+0x10c>
     7dc:	21 e0       	ldi	r18, 0x01	; 1
     7de:	30 e0       	ldi	r19, 0x00	; 0
     7e0:	40 e0       	ldi	r20, 0x00	; 0
     7e2:	50 e0       	ldi	r21, 0x00	; 0
     7e4:	79 01       	movw	r14, r18
     7e6:	8a 01       	movw	r16, r20
     7e8:	e6 28       	or	r14, r6
     7ea:	f7 28       	or	r15, r7
     7ec:	08 29       	or	r16, r8
     7ee:	19 29       	or	r17, r9
     7f0:	3c c0       	rjmp	.+120    	; 0x86a <_fpadd_parts+0x192>
     7f2:	23 2b       	or	r18, r19
     7f4:	d1 f1       	breq	.+116    	; 0x86a <_fpadd_parts+0x192>
     7f6:	26 0e       	add	r2, r22
     7f8:	37 1e       	adc	r3, r23
     7fa:	35 01       	movw	r6, r10
     7fc:	46 01       	movw	r8, r12
     7fe:	06 2e       	mov	r0, r22
     800:	04 c0       	rjmp	.+8      	; 0x80a <_fpadd_parts+0x132>
     802:	96 94       	lsr	r9
     804:	87 94       	ror	r8
     806:	77 94       	ror	r7
     808:	67 94       	ror	r6
     80a:	0a 94       	dec	r0
     80c:	d2 f7       	brpl	.-12     	; 0x802 <_fpadd_parts+0x12a>
     80e:	21 e0       	ldi	r18, 0x01	; 1
     810:	30 e0       	ldi	r19, 0x00	; 0
     812:	40 e0       	ldi	r20, 0x00	; 0
     814:	50 e0       	ldi	r21, 0x00	; 0
     816:	04 c0       	rjmp	.+8      	; 0x820 <_fpadd_parts+0x148>
     818:	22 0f       	add	r18, r18
     81a:	33 1f       	adc	r19, r19
     81c:	44 1f       	adc	r20, r20
     81e:	55 1f       	adc	r21, r21
     820:	6a 95       	dec	r22
     822:	d2 f7       	brpl	.-12     	; 0x818 <_fpadd_parts+0x140>
     824:	21 50       	subi	r18, 0x01	; 1
     826:	30 40       	sbci	r19, 0x00	; 0
     828:	40 40       	sbci	r20, 0x00	; 0
     82a:	50 40       	sbci	r21, 0x00	; 0
     82c:	2a 21       	and	r18, r10
     82e:	3b 21       	and	r19, r11
     830:	4c 21       	and	r20, r12
     832:	5d 21       	and	r21, r13
     834:	21 15       	cp	r18, r1
     836:	31 05       	cpc	r19, r1
     838:	41 05       	cpc	r20, r1
     83a:	51 05       	cpc	r21, r1
     83c:	21 f0       	breq	.+8      	; 0x846 <_fpadd_parts+0x16e>
     83e:	21 e0       	ldi	r18, 0x01	; 1
     840:	30 e0       	ldi	r19, 0x00	; 0
     842:	40 e0       	ldi	r20, 0x00	; 0
     844:	50 e0       	ldi	r21, 0x00	; 0
     846:	59 01       	movw	r10, r18
     848:	6a 01       	movw	r12, r20
     84a:	a6 28       	or	r10, r6
     84c:	b7 28       	or	r11, r7
     84e:	c8 28       	or	r12, r8
     850:	d9 28       	or	r13, r9
     852:	0b c0       	rjmp	.+22     	; 0x86a <_fpadd_parts+0x192>
     854:	82 15       	cp	r24, r2
     856:	93 05       	cpc	r25, r3
     858:	2c f0       	brlt	.+10     	; 0x864 <_fpadd_parts+0x18c>
     85a:	1c 01       	movw	r2, r24
     85c:	aa 24       	eor	r10, r10
     85e:	bb 24       	eor	r11, r11
     860:	65 01       	movw	r12, r10
     862:	03 c0       	rjmp	.+6      	; 0x86a <_fpadd_parts+0x192>
     864:	ee 24       	eor	r14, r14
     866:	ff 24       	eor	r15, r15
     868:	87 01       	movw	r16, r14
     86a:	11 96       	adiw	r26, 0x01	; 1
     86c:	9c 91       	ld	r25, X
     86e:	d2 01       	movw	r26, r4
     870:	11 96       	adiw	r26, 0x01	; 1
     872:	8c 91       	ld	r24, X
     874:	98 17       	cp	r25, r24
     876:	09 f4       	brne	.+2      	; 0x87a <_fpadd_parts+0x1a2>
     878:	45 c0       	rjmp	.+138    	; 0x904 <__stack+0x5>
     87a:	99 23       	and	r25, r25
     87c:	39 f0       	breq	.+14     	; 0x88c <_fpadd_parts+0x1b4>
     87e:	a8 01       	movw	r20, r16
     880:	97 01       	movw	r18, r14
     882:	2a 19       	sub	r18, r10
     884:	3b 09       	sbc	r19, r11
     886:	4c 09       	sbc	r20, r12
     888:	5d 09       	sbc	r21, r13
     88a:	06 c0       	rjmp	.+12     	; 0x898 <_fpadd_parts+0x1c0>
     88c:	a6 01       	movw	r20, r12
     88e:	95 01       	movw	r18, r10
     890:	2e 19       	sub	r18, r14
     892:	3f 09       	sbc	r19, r15
     894:	40 0b       	sbc	r20, r16
     896:	51 0b       	sbc	r21, r17
     898:	57 fd       	sbrc	r21, 7
     89a:	08 c0       	rjmp	.+16     	; 0x8ac <_fpadd_parts+0x1d4>
     89c:	11 82       	std	Z+1, r1	; 0x01
     89e:	33 82       	std	Z+3, r3	; 0x03
     8a0:	22 82       	std	Z+2, r2	; 0x02
     8a2:	24 83       	std	Z+4, r18	; 0x04
     8a4:	35 83       	std	Z+5, r19	; 0x05
     8a6:	46 83       	std	Z+6, r20	; 0x06
     8a8:	57 83       	std	Z+7, r21	; 0x07
     8aa:	1d c0       	rjmp	.+58     	; 0x8e6 <_fpadd_parts+0x20e>
     8ac:	81 e0       	ldi	r24, 0x01	; 1
     8ae:	81 83       	std	Z+1, r24	; 0x01
     8b0:	33 82       	std	Z+3, r3	; 0x03
     8b2:	22 82       	std	Z+2, r2	; 0x02
     8b4:	88 27       	eor	r24, r24
     8b6:	99 27       	eor	r25, r25
     8b8:	dc 01       	movw	r26, r24
     8ba:	82 1b       	sub	r24, r18
     8bc:	93 0b       	sbc	r25, r19
     8be:	a4 0b       	sbc	r26, r20
     8c0:	b5 0b       	sbc	r27, r21
     8c2:	84 83       	std	Z+4, r24	; 0x04
     8c4:	95 83       	std	Z+5, r25	; 0x05
     8c6:	a6 83       	std	Z+6, r26	; 0x06
     8c8:	b7 83       	std	Z+7, r27	; 0x07
     8ca:	0d c0       	rjmp	.+26     	; 0x8e6 <_fpadd_parts+0x20e>
     8cc:	22 0f       	add	r18, r18
     8ce:	33 1f       	adc	r19, r19
     8d0:	44 1f       	adc	r20, r20
     8d2:	55 1f       	adc	r21, r21
     8d4:	24 83       	std	Z+4, r18	; 0x04
     8d6:	35 83       	std	Z+5, r19	; 0x05
     8d8:	46 83       	std	Z+6, r20	; 0x06
     8da:	57 83       	std	Z+7, r21	; 0x07
     8dc:	82 81       	ldd	r24, Z+2	; 0x02
     8de:	93 81       	ldd	r25, Z+3	; 0x03
     8e0:	01 97       	sbiw	r24, 0x01	; 1
     8e2:	93 83       	std	Z+3, r25	; 0x03
     8e4:	82 83       	std	Z+2, r24	; 0x02
     8e6:	24 81       	ldd	r18, Z+4	; 0x04
     8e8:	35 81       	ldd	r19, Z+5	; 0x05
     8ea:	46 81       	ldd	r20, Z+6	; 0x06
     8ec:	57 81       	ldd	r21, Z+7	; 0x07
     8ee:	da 01       	movw	r26, r20
     8f0:	c9 01       	movw	r24, r18
     8f2:	01 97       	sbiw	r24, 0x01	; 1
     8f4:	a1 09       	sbc	r26, r1
     8f6:	b1 09       	sbc	r27, r1
     8f8:	8f 5f       	subi	r24, 0xFF	; 255
     8fa:	9f 4f       	sbci	r25, 0xFF	; 255
     8fc:	af 4f       	sbci	r26, 0xFF	; 255
     8fe:	bf 43       	sbci	r27, 0x3F	; 63
     900:	28 f3       	brcs	.-54     	; 0x8cc <_fpadd_parts+0x1f4>
     902:	0b c0       	rjmp	.+22     	; 0x91a <__stack+0x1b>
     904:	91 83       	std	Z+1, r25	; 0x01
     906:	33 82       	std	Z+3, r3	; 0x03
     908:	22 82       	std	Z+2, r2	; 0x02
     90a:	ea 0c       	add	r14, r10
     90c:	fb 1c       	adc	r15, r11
     90e:	0c 1d       	adc	r16, r12
     910:	1d 1d       	adc	r17, r13
     912:	e4 82       	std	Z+4, r14	; 0x04
     914:	f5 82       	std	Z+5, r15	; 0x05
     916:	06 83       	std	Z+6, r16	; 0x06
     918:	17 83       	std	Z+7, r17	; 0x07
     91a:	83 e0       	ldi	r24, 0x03	; 3
     91c:	80 83       	st	Z, r24
     91e:	24 81       	ldd	r18, Z+4	; 0x04
     920:	35 81       	ldd	r19, Z+5	; 0x05
     922:	46 81       	ldd	r20, Z+6	; 0x06
     924:	57 81       	ldd	r21, Z+7	; 0x07
     926:	57 ff       	sbrs	r21, 7
     928:	1a c0       	rjmp	.+52     	; 0x95e <__stack+0x5f>
     92a:	c9 01       	movw	r24, r18
     92c:	aa 27       	eor	r26, r26
     92e:	97 fd       	sbrc	r25, 7
     930:	a0 95       	com	r26
     932:	ba 2f       	mov	r27, r26
     934:	81 70       	andi	r24, 0x01	; 1
     936:	90 70       	andi	r25, 0x00	; 0
     938:	a0 70       	andi	r26, 0x00	; 0
     93a:	b0 70       	andi	r27, 0x00	; 0
     93c:	56 95       	lsr	r21
     93e:	47 95       	ror	r20
     940:	37 95       	ror	r19
     942:	27 95       	ror	r18
     944:	82 2b       	or	r24, r18
     946:	93 2b       	or	r25, r19
     948:	a4 2b       	or	r26, r20
     94a:	b5 2b       	or	r27, r21
     94c:	84 83       	std	Z+4, r24	; 0x04
     94e:	95 83       	std	Z+5, r25	; 0x05
     950:	a6 83       	std	Z+6, r26	; 0x06
     952:	b7 83       	std	Z+7, r27	; 0x07
     954:	82 81       	ldd	r24, Z+2	; 0x02
     956:	93 81       	ldd	r25, Z+3	; 0x03
     958:	01 96       	adiw	r24, 0x01	; 1
     95a:	93 83       	std	Z+3, r25	; 0x03
     95c:	82 83       	std	Z+2, r24	; 0x02
     95e:	df 01       	movw	r26, r30
     960:	01 c0       	rjmp	.+2      	; 0x964 <__stack+0x65>
     962:	d2 01       	movw	r26, r4
     964:	cd 01       	movw	r24, r26
     966:	cd b7       	in	r28, 0x3d	; 61
     968:	de b7       	in	r29, 0x3e	; 62
     96a:	e2 e1       	ldi	r30, 0x12	; 18
     96c:	0c 94 0f 0a 	jmp	0x141e	; 0x141e <__epilogue_restores__>

00000970 <__subsf3>:
     970:	a0 e2       	ldi	r26, 0x20	; 32
     972:	b0 e0       	ldi	r27, 0x00	; 0
     974:	ee eb       	ldi	r30, 0xBE	; 190
     976:	f4 e0       	ldi	r31, 0x04	; 4
     978:	0c 94 ff 09 	jmp	0x13fe	; 0x13fe <__prologue_saves__+0x18>
     97c:	69 83       	std	Y+1, r22	; 0x01
     97e:	7a 83       	std	Y+2, r23	; 0x02
     980:	8b 83       	std	Y+3, r24	; 0x03
     982:	9c 83       	std	Y+4, r25	; 0x04
     984:	2d 83       	std	Y+5, r18	; 0x05
     986:	3e 83       	std	Y+6, r19	; 0x06
     988:	4f 83       	std	Y+7, r20	; 0x07
     98a:	58 87       	std	Y+8, r21	; 0x08
     98c:	e9 e0       	ldi	r30, 0x09	; 9
     98e:	ee 2e       	mov	r14, r30
     990:	f1 2c       	mov	r15, r1
     992:	ec 0e       	add	r14, r28
     994:	fd 1e       	adc	r15, r29
     996:	ce 01       	movw	r24, r28
     998:	01 96       	adiw	r24, 0x01	; 1
     99a:	b7 01       	movw	r22, r14
     99c:	0e 94 22 09 	call	0x1244	; 0x1244 <__unpack_f>
     9a0:	8e 01       	movw	r16, r28
     9a2:	0f 5e       	subi	r16, 0xEF	; 239
     9a4:	1f 4f       	sbci	r17, 0xFF	; 255
     9a6:	ce 01       	movw	r24, r28
     9a8:	05 96       	adiw	r24, 0x05	; 5
     9aa:	b8 01       	movw	r22, r16
     9ac:	0e 94 22 09 	call	0x1244	; 0x1244 <__unpack_f>
     9b0:	8a 89       	ldd	r24, Y+18	; 0x12
     9b2:	91 e0       	ldi	r25, 0x01	; 1
     9b4:	89 27       	eor	r24, r25
     9b6:	8a 8b       	std	Y+18, r24	; 0x12
     9b8:	c7 01       	movw	r24, r14
     9ba:	b8 01       	movw	r22, r16
     9bc:	ae 01       	movw	r20, r28
     9be:	47 5e       	subi	r20, 0xE7	; 231
     9c0:	5f 4f       	sbci	r21, 0xFF	; 255
     9c2:	0e 94 6c 03 	call	0x6d8	; 0x6d8 <_fpadd_parts>
     9c6:	0e 94 4d 08 	call	0x109a	; 0x109a <__pack_f>
     9ca:	a0 96       	adiw	r28, 0x20	; 32
     9cc:	e6 e0       	ldi	r30, 0x06	; 6
     9ce:	0c 94 1b 0a 	jmp	0x1436	; 0x1436 <__epilogue_restores__+0x18>

000009d2 <__addsf3>:
     9d2:	a0 e2       	ldi	r26, 0x20	; 32
     9d4:	b0 e0       	ldi	r27, 0x00	; 0
     9d6:	ef ee       	ldi	r30, 0xEF	; 239
     9d8:	f4 e0       	ldi	r31, 0x04	; 4
     9da:	0c 94 ff 09 	jmp	0x13fe	; 0x13fe <__prologue_saves__+0x18>
     9de:	69 83       	std	Y+1, r22	; 0x01
     9e0:	7a 83       	std	Y+2, r23	; 0x02
     9e2:	8b 83       	std	Y+3, r24	; 0x03
     9e4:	9c 83       	std	Y+4, r25	; 0x04
     9e6:	2d 83       	std	Y+5, r18	; 0x05
     9e8:	3e 83       	std	Y+6, r19	; 0x06
     9ea:	4f 83       	std	Y+7, r20	; 0x07
     9ec:	58 87       	std	Y+8, r21	; 0x08
     9ee:	f9 e0       	ldi	r31, 0x09	; 9
     9f0:	ef 2e       	mov	r14, r31
     9f2:	f1 2c       	mov	r15, r1
     9f4:	ec 0e       	add	r14, r28
     9f6:	fd 1e       	adc	r15, r29
     9f8:	ce 01       	movw	r24, r28
     9fa:	01 96       	adiw	r24, 0x01	; 1
     9fc:	b7 01       	movw	r22, r14
     9fe:	0e 94 22 09 	call	0x1244	; 0x1244 <__unpack_f>
     a02:	8e 01       	movw	r16, r28
     a04:	0f 5e       	subi	r16, 0xEF	; 239
     a06:	1f 4f       	sbci	r17, 0xFF	; 255
     a08:	ce 01       	movw	r24, r28
     a0a:	05 96       	adiw	r24, 0x05	; 5
     a0c:	b8 01       	movw	r22, r16
     a0e:	0e 94 22 09 	call	0x1244	; 0x1244 <__unpack_f>
     a12:	c7 01       	movw	r24, r14
     a14:	b8 01       	movw	r22, r16
     a16:	ae 01       	movw	r20, r28
     a18:	47 5e       	subi	r20, 0xE7	; 231
     a1a:	5f 4f       	sbci	r21, 0xFF	; 255
     a1c:	0e 94 6c 03 	call	0x6d8	; 0x6d8 <_fpadd_parts>
     a20:	0e 94 4d 08 	call	0x109a	; 0x109a <__pack_f>
     a24:	a0 96       	adiw	r28, 0x20	; 32
     a26:	e6 e0       	ldi	r30, 0x06	; 6
     a28:	0c 94 1b 0a 	jmp	0x1436	; 0x1436 <__epilogue_restores__+0x18>

00000a2c <__mulsf3>:
     a2c:	a0 e2       	ldi	r26, 0x20	; 32
     a2e:	b0 e0       	ldi	r27, 0x00	; 0
     a30:	ec e1       	ldi	r30, 0x1C	; 28
     a32:	f5 e0       	ldi	r31, 0x05	; 5
     a34:	0c 94 f3 09 	jmp	0x13e6	; 0x13e6 <__prologue_saves__>
     a38:	69 83       	std	Y+1, r22	; 0x01
     a3a:	7a 83       	std	Y+2, r23	; 0x02
     a3c:	8b 83       	std	Y+3, r24	; 0x03
     a3e:	9c 83       	std	Y+4, r25	; 0x04
     a40:	2d 83       	std	Y+5, r18	; 0x05
     a42:	3e 83       	std	Y+6, r19	; 0x06
     a44:	4f 83       	std	Y+7, r20	; 0x07
     a46:	58 87       	std	Y+8, r21	; 0x08
     a48:	ce 01       	movw	r24, r28
     a4a:	01 96       	adiw	r24, 0x01	; 1
     a4c:	be 01       	movw	r22, r28
     a4e:	67 5f       	subi	r22, 0xF7	; 247
     a50:	7f 4f       	sbci	r23, 0xFF	; 255
     a52:	0e 94 22 09 	call	0x1244	; 0x1244 <__unpack_f>
     a56:	ce 01       	movw	r24, r28
     a58:	05 96       	adiw	r24, 0x05	; 5
     a5a:	be 01       	movw	r22, r28
     a5c:	6f 5e       	subi	r22, 0xEF	; 239
     a5e:	7f 4f       	sbci	r23, 0xFF	; 255
     a60:	0e 94 22 09 	call	0x1244	; 0x1244 <__unpack_f>
     a64:	99 85       	ldd	r25, Y+9	; 0x09
     a66:	92 30       	cpi	r25, 0x02	; 2
     a68:	88 f0       	brcs	.+34     	; 0xa8c <__mulsf3+0x60>
     a6a:	89 89       	ldd	r24, Y+17	; 0x11
     a6c:	82 30       	cpi	r24, 0x02	; 2
     a6e:	c8 f0       	brcs	.+50     	; 0xaa2 <__mulsf3+0x76>
     a70:	94 30       	cpi	r25, 0x04	; 4
     a72:	19 f4       	brne	.+6      	; 0xa7a <__mulsf3+0x4e>
     a74:	82 30       	cpi	r24, 0x02	; 2
     a76:	51 f4       	brne	.+20     	; 0xa8c <__mulsf3+0x60>
     a78:	04 c0       	rjmp	.+8      	; 0xa82 <__mulsf3+0x56>
     a7a:	84 30       	cpi	r24, 0x04	; 4
     a7c:	29 f4       	brne	.+10     	; 0xa88 <__mulsf3+0x5c>
     a7e:	92 30       	cpi	r25, 0x02	; 2
     a80:	81 f4       	brne	.+32     	; 0xaa2 <__mulsf3+0x76>
     a82:	80 e0       	ldi	r24, 0x00	; 0
     a84:	91 e0       	ldi	r25, 0x01	; 1
     a86:	c6 c0       	rjmp	.+396    	; 0xc14 <__mulsf3+0x1e8>
     a88:	92 30       	cpi	r25, 0x02	; 2
     a8a:	49 f4       	brne	.+18     	; 0xa9e <__mulsf3+0x72>
     a8c:	20 e0       	ldi	r18, 0x00	; 0
     a8e:	9a 85       	ldd	r25, Y+10	; 0x0a
     a90:	8a 89       	ldd	r24, Y+18	; 0x12
     a92:	98 13       	cpse	r25, r24
     a94:	21 e0       	ldi	r18, 0x01	; 1
     a96:	2a 87       	std	Y+10, r18	; 0x0a
     a98:	ce 01       	movw	r24, r28
     a9a:	09 96       	adiw	r24, 0x09	; 9
     a9c:	bb c0       	rjmp	.+374    	; 0xc14 <__mulsf3+0x1e8>
     a9e:	82 30       	cpi	r24, 0x02	; 2
     aa0:	49 f4       	brne	.+18     	; 0xab4 <__mulsf3+0x88>
     aa2:	20 e0       	ldi	r18, 0x00	; 0
     aa4:	9a 85       	ldd	r25, Y+10	; 0x0a
     aa6:	8a 89       	ldd	r24, Y+18	; 0x12
     aa8:	98 13       	cpse	r25, r24
     aaa:	21 e0       	ldi	r18, 0x01	; 1
     aac:	2a 8b       	std	Y+18, r18	; 0x12
     aae:	ce 01       	movw	r24, r28
     ab0:	41 96       	adiw	r24, 0x11	; 17
     ab2:	b0 c0       	rjmp	.+352    	; 0xc14 <__mulsf3+0x1e8>
     ab4:	2d 84       	ldd	r2, Y+13	; 0x0d
     ab6:	3e 84       	ldd	r3, Y+14	; 0x0e
     ab8:	4f 84       	ldd	r4, Y+15	; 0x0f
     aba:	58 88       	ldd	r5, Y+16	; 0x10
     abc:	6d 88       	ldd	r6, Y+21	; 0x15
     abe:	7e 88       	ldd	r7, Y+22	; 0x16
     ac0:	8f 88       	ldd	r8, Y+23	; 0x17
     ac2:	98 8c       	ldd	r9, Y+24	; 0x18
     ac4:	ee 24       	eor	r14, r14
     ac6:	ff 24       	eor	r15, r15
     ac8:	87 01       	movw	r16, r14
     aca:	aa 24       	eor	r10, r10
     acc:	bb 24       	eor	r11, r11
     ace:	65 01       	movw	r12, r10
     ad0:	40 e0       	ldi	r20, 0x00	; 0
     ad2:	50 e0       	ldi	r21, 0x00	; 0
     ad4:	60 e0       	ldi	r22, 0x00	; 0
     ad6:	70 e0       	ldi	r23, 0x00	; 0
     ad8:	e0 e0       	ldi	r30, 0x00	; 0
     ada:	f0 e0       	ldi	r31, 0x00	; 0
     adc:	c1 01       	movw	r24, r2
     ade:	81 70       	andi	r24, 0x01	; 1
     ae0:	90 70       	andi	r25, 0x00	; 0
     ae2:	89 2b       	or	r24, r25
     ae4:	e9 f0       	breq	.+58     	; 0xb20 <__mulsf3+0xf4>
     ae6:	e6 0c       	add	r14, r6
     ae8:	f7 1c       	adc	r15, r7
     aea:	08 1d       	adc	r16, r8
     aec:	19 1d       	adc	r17, r9
     aee:	9a 01       	movw	r18, r20
     af0:	ab 01       	movw	r20, r22
     af2:	2a 0d       	add	r18, r10
     af4:	3b 1d       	adc	r19, r11
     af6:	4c 1d       	adc	r20, r12
     af8:	5d 1d       	adc	r21, r13
     afa:	80 e0       	ldi	r24, 0x00	; 0
     afc:	90 e0       	ldi	r25, 0x00	; 0
     afe:	a0 e0       	ldi	r26, 0x00	; 0
     b00:	b0 e0       	ldi	r27, 0x00	; 0
     b02:	e6 14       	cp	r14, r6
     b04:	f7 04       	cpc	r15, r7
     b06:	08 05       	cpc	r16, r8
     b08:	19 05       	cpc	r17, r9
     b0a:	20 f4       	brcc	.+8      	; 0xb14 <__mulsf3+0xe8>
     b0c:	81 e0       	ldi	r24, 0x01	; 1
     b0e:	90 e0       	ldi	r25, 0x00	; 0
     b10:	a0 e0       	ldi	r26, 0x00	; 0
     b12:	b0 e0       	ldi	r27, 0x00	; 0
     b14:	ba 01       	movw	r22, r20
     b16:	a9 01       	movw	r20, r18
     b18:	48 0f       	add	r20, r24
     b1a:	59 1f       	adc	r21, r25
     b1c:	6a 1f       	adc	r22, r26
     b1e:	7b 1f       	adc	r23, r27
     b20:	aa 0c       	add	r10, r10
     b22:	bb 1c       	adc	r11, r11
     b24:	cc 1c       	adc	r12, r12
     b26:	dd 1c       	adc	r13, r13
     b28:	97 fe       	sbrs	r9, 7
     b2a:	08 c0       	rjmp	.+16     	; 0xb3c <__mulsf3+0x110>
     b2c:	81 e0       	ldi	r24, 0x01	; 1
     b2e:	90 e0       	ldi	r25, 0x00	; 0
     b30:	a0 e0       	ldi	r26, 0x00	; 0
     b32:	b0 e0       	ldi	r27, 0x00	; 0
     b34:	a8 2a       	or	r10, r24
     b36:	b9 2a       	or	r11, r25
     b38:	ca 2a       	or	r12, r26
     b3a:	db 2a       	or	r13, r27
     b3c:	31 96       	adiw	r30, 0x01	; 1
     b3e:	e0 32       	cpi	r30, 0x20	; 32
     b40:	f1 05       	cpc	r31, r1
     b42:	49 f0       	breq	.+18     	; 0xb56 <__mulsf3+0x12a>
     b44:	66 0c       	add	r6, r6
     b46:	77 1c       	adc	r7, r7
     b48:	88 1c       	adc	r8, r8
     b4a:	99 1c       	adc	r9, r9
     b4c:	56 94       	lsr	r5
     b4e:	47 94       	ror	r4
     b50:	37 94       	ror	r3
     b52:	27 94       	ror	r2
     b54:	c3 cf       	rjmp	.-122    	; 0xadc <__mulsf3+0xb0>
     b56:	fa 85       	ldd	r31, Y+10	; 0x0a
     b58:	ea 89       	ldd	r30, Y+18	; 0x12
     b5a:	2b 89       	ldd	r18, Y+19	; 0x13
     b5c:	3c 89       	ldd	r19, Y+20	; 0x14
     b5e:	8b 85       	ldd	r24, Y+11	; 0x0b
     b60:	9c 85       	ldd	r25, Y+12	; 0x0c
     b62:	28 0f       	add	r18, r24
     b64:	39 1f       	adc	r19, r25
     b66:	2e 5f       	subi	r18, 0xFE	; 254
     b68:	3f 4f       	sbci	r19, 0xFF	; 255
     b6a:	17 c0       	rjmp	.+46     	; 0xb9a <__mulsf3+0x16e>
     b6c:	ca 01       	movw	r24, r20
     b6e:	81 70       	andi	r24, 0x01	; 1
     b70:	90 70       	andi	r25, 0x00	; 0
     b72:	89 2b       	or	r24, r25
     b74:	61 f0       	breq	.+24     	; 0xb8e <__mulsf3+0x162>
     b76:	16 95       	lsr	r17
     b78:	07 95       	ror	r16
     b7a:	f7 94       	ror	r15
     b7c:	e7 94       	ror	r14
     b7e:	80 e0       	ldi	r24, 0x00	; 0
     b80:	90 e0       	ldi	r25, 0x00	; 0
     b82:	a0 e0       	ldi	r26, 0x00	; 0
     b84:	b0 e8       	ldi	r27, 0x80	; 128
     b86:	e8 2a       	or	r14, r24
     b88:	f9 2a       	or	r15, r25
     b8a:	0a 2b       	or	r16, r26
     b8c:	1b 2b       	or	r17, r27
     b8e:	76 95       	lsr	r23
     b90:	67 95       	ror	r22
     b92:	57 95       	ror	r21
     b94:	47 95       	ror	r20
     b96:	2f 5f       	subi	r18, 0xFF	; 255
     b98:	3f 4f       	sbci	r19, 0xFF	; 255
     b9a:	77 fd       	sbrc	r23, 7
     b9c:	e7 cf       	rjmp	.-50     	; 0xb6c <__mulsf3+0x140>
     b9e:	0c c0       	rjmp	.+24     	; 0xbb8 <__mulsf3+0x18c>
     ba0:	44 0f       	add	r20, r20
     ba2:	55 1f       	adc	r21, r21
     ba4:	66 1f       	adc	r22, r22
     ba6:	77 1f       	adc	r23, r23
     ba8:	17 fd       	sbrc	r17, 7
     baa:	41 60       	ori	r20, 0x01	; 1
     bac:	ee 0c       	add	r14, r14
     bae:	ff 1c       	adc	r15, r15
     bb0:	00 1f       	adc	r16, r16
     bb2:	11 1f       	adc	r17, r17
     bb4:	21 50       	subi	r18, 0x01	; 1
     bb6:	30 40       	sbci	r19, 0x00	; 0
     bb8:	40 30       	cpi	r20, 0x00	; 0
     bba:	90 e0       	ldi	r25, 0x00	; 0
     bbc:	59 07       	cpc	r21, r25
     bbe:	90 e0       	ldi	r25, 0x00	; 0
     bc0:	69 07       	cpc	r22, r25
     bc2:	90 e4       	ldi	r25, 0x40	; 64
     bc4:	79 07       	cpc	r23, r25
     bc6:	60 f3       	brcs	.-40     	; 0xba0 <__mulsf3+0x174>
     bc8:	2b 8f       	std	Y+27, r18	; 0x1b
     bca:	3c 8f       	std	Y+28, r19	; 0x1c
     bcc:	db 01       	movw	r26, r22
     bce:	ca 01       	movw	r24, r20
     bd0:	8f 77       	andi	r24, 0x7F	; 127
     bd2:	90 70       	andi	r25, 0x00	; 0
     bd4:	a0 70       	andi	r26, 0x00	; 0
     bd6:	b0 70       	andi	r27, 0x00	; 0
     bd8:	80 34       	cpi	r24, 0x40	; 64
     bda:	91 05       	cpc	r25, r1
     bdc:	a1 05       	cpc	r26, r1
     bde:	b1 05       	cpc	r27, r1
     be0:	61 f4       	brne	.+24     	; 0xbfa <__mulsf3+0x1ce>
     be2:	47 fd       	sbrc	r20, 7
     be4:	0a c0       	rjmp	.+20     	; 0xbfa <__mulsf3+0x1ce>
     be6:	e1 14       	cp	r14, r1
     be8:	f1 04       	cpc	r15, r1
     bea:	01 05       	cpc	r16, r1
     bec:	11 05       	cpc	r17, r1
     bee:	29 f0       	breq	.+10     	; 0xbfa <__mulsf3+0x1ce>
     bf0:	40 5c       	subi	r20, 0xC0	; 192
     bf2:	5f 4f       	sbci	r21, 0xFF	; 255
     bf4:	6f 4f       	sbci	r22, 0xFF	; 255
     bf6:	7f 4f       	sbci	r23, 0xFF	; 255
     bf8:	40 78       	andi	r20, 0x80	; 128
     bfa:	1a 8e       	std	Y+26, r1	; 0x1a
     bfc:	fe 17       	cp	r31, r30
     bfe:	11 f0       	breq	.+4      	; 0xc04 <__mulsf3+0x1d8>
     c00:	81 e0       	ldi	r24, 0x01	; 1
     c02:	8a 8f       	std	Y+26, r24	; 0x1a
     c04:	4d 8f       	std	Y+29, r20	; 0x1d
     c06:	5e 8f       	std	Y+30, r21	; 0x1e
     c08:	6f 8f       	std	Y+31, r22	; 0x1f
     c0a:	78 a3       	std	Y+32, r23	; 0x20
     c0c:	83 e0       	ldi	r24, 0x03	; 3
     c0e:	89 8f       	std	Y+25, r24	; 0x19
     c10:	ce 01       	movw	r24, r28
     c12:	49 96       	adiw	r24, 0x19	; 25
     c14:	0e 94 4d 08 	call	0x109a	; 0x109a <__pack_f>
     c18:	a0 96       	adiw	r28, 0x20	; 32
     c1a:	e2 e1       	ldi	r30, 0x12	; 18
     c1c:	0c 94 0f 0a 	jmp	0x141e	; 0x141e <__epilogue_restores__>

00000c20 <__divsf3>:
     c20:	a8 e1       	ldi	r26, 0x18	; 24
     c22:	b0 e0       	ldi	r27, 0x00	; 0
     c24:	e6 e1       	ldi	r30, 0x16	; 22
     c26:	f6 e0       	ldi	r31, 0x06	; 6
     c28:	0c 94 fb 09 	jmp	0x13f6	; 0x13f6 <__prologue_saves__+0x10>
     c2c:	69 83       	std	Y+1, r22	; 0x01
     c2e:	7a 83       	std	Y+2, r23	; 0x02
     c30:	8b 83       	std	Y+3, r24	; 0x03
     c32:	9c 83       	std	Y+4, r25	; 0x04
     c34:	2d 83       	std	Y+5, r18	; 0x05
     c36:	3e 83       	std	Y+6, r19	; 0x06
     c38:	4f 83       	std	Y+7, r20	; 0x07
     c3a:	58 87       	std	Y+8, r21	; 0x08
     c3c:	b9 e0       	ldi	r27, 0x09	; 9
     c3e:	eb 2e       	mov	r14, r27
     c40:	f1 2c       	mov	r15, r1
     c42:	ec 0e       	add	r14, r28
     c44:	fd 1e       	adc	r15, r29
     c46:	ce 01       	movw	r24, r28
     c48:	01 96       	adiw	r24, 0x01	; 1
     c4a:	b7 01       	movw	r22, r14
     c4c:	0e 94 22 09 	call	0x1244	; 0x1244 <__unpack_f>
     c50:	8e 01       	movw	r16, r28
     c52:	0f 5e       	subi	r16, 0xEF	; 239
     c54:	1f 4f       	sbci	r17, 0xFF	; 255
     c56:	ce 01       	movw	r24, r28
     c58:	05 96       	adiw	r24, 0x05	; 5
     c5a:	b8 01       	movw	r22, r16
     c5c:	0e 94 22 09 	call	0x1244	; 0x1244 <__unpack_f>
     c60:	29 85       	ldd	r18, Y+9	; 0x09
     c62:	22 30       	cpi	r18, 0x02	; 2
     c64:	08 f4       	brcc	.+2      	; 0xc68 <__divsf3+0x48>
     c66:	7e c0       	rjmp	.+252    	; 0xd64 <__divsf3+0x144>
     c68:	39 89       	ldd	r19, Y+17	; 0x11
     c6a:	32 30       	cpi	r19, 0x02	; 2
     c6c:	10 f4       	brcc	.+4      	; 0xc72 <__divsf3+0x52>
     c6e:	b8 01       	movw	r22, r16
     c70:	7c c0       	rjmp	.+248    	; 0xd6a <__divsf3+0x14a>
     c72:	8a 85       	ldd	r24, Y+10	; 0x0a
     c74:	9a 89       	ldd	r25, Y+18	; 0x12
     c76:	89 27       	eor	r24, r25
     c78:	8a 87       	std	Y+10, r24	; 0x0a
     c7a:	24 30       	cpi	r18, 0x04	; 4
     c7c:	11 f0       	breq	.+4      	; 0xc82 <__divsf3+0x62>
     c7e:	22 30       	cpi	r18, 0x02	; 2
     c80:	31 f4       	brne	.+12     	; 0xc8e <__divsf3+0x6e>
     c82:	23 17       	cp	r18, r19
     c84:	09 f0       	breq	.+2      	; 0xc88 <__divsf3+0x68>
     c86:	6e c0       	rjmp	.+220    	; 0xd64 <__divsf3+0x144>
     c88:	60 e0       	ldi	r22, 0x00	; 0
     c8a:	71 e0       	ldi	r23, 0x01	; 1
     c8c:	6e c0       	rjmp	.+220    	; 0xd6a <__divsf3+0x14a>
     c8e:	34 30       	cpi	r19, 0x04	; 4
     c90:	39 f4       	brne	.+14     	; 0xca0 <__divsf3+0x80>
     c92:	1d 86       	std	Y+13, r1	; 0x0d
     c94:	1e 86       	std	Y+14, r1	; 0x0e
     c96:	1f 86       	std	Y+15, r1	; 0x0f
     c98:	18 8a       	std	Y+16, r1	; 0x10
     c9a:	1c 86       	std	Y+12, r1	; 0x0c
     c9c:	1b 86       	std	Y+11, r1	; 0x0b
     c9e:	04 c0       	rjmp	.+8      	; 0xca8 <__divsf3+0x88>
     ca0:	32 30       	cpi	r19, 0x02	; 2
     ca2:	21 f4       	brne	.+8      	; 0xcac <__divsf3+0x8c>
     ca4:	84 e0       	ldi	r24, 0x04	; 4
     ca6:	89 87       	std	Y+9, r24	; 0x09
     ca8:	b7 01       	movw	r22, r14
     caa:	5f c0       	rjmp	.+190    	; 0xd6a <__divsf3+0x14a>
     cac:	2b 85       	ldd	r18, Y+11	; 0x0b
     cae:	3c 85       	ldd	r19, Y+12	; 0x0c
     cb0:	8b 89       	ldd	r24, Y+19	; 0x13
     cb2:	9c 89       	ldd	r25, Y+20	; 0x14
     cb4:	28 1b       	sub	r18, r24
     cb6:	39 0b       	sbc	r19, r25
     cb8:	3c 87       	std	Y+12, r19	; 0x0c
     cba:	2b 87       	std	Y+11, r18	; 0x0b
     cbc:	ed 84       	ldd	r14, Y+13	; 0x0d
     cbe:	fe 84       	ldd	r15, Y+14	; 0x0e
     cc0:	0f 85       	ldd	r16, Y+15	; 0x0f
     cc2:	18 89       	ldd	r17, Y+16	; 0x10
     cc4:	ad 88       	ldd	r10, Y+21	; 0x15
     cc6:	be 88       	ldd	r11, Y+22	; 0x16
     cc8:	cf 88       	ldd	r12, Y+23	; 0x17
     cca:	d8 8c       	ldd	r13, Y+24	; 0x18
     ccc:	ea 14       	cp	r14, r10
     cce:	fb 04       	cpc	r15, r11
     cd0:	0c 05       	cpc	r16, r12
     cd2:	1d 05       	cpc	r17, r13
     cd4:	40 f4       	brcc	.+16     	; 0xce6 <__divsf3+0xc6>
     cd6:	ee 0c       	add	r14, r14
     cd8:	ff 1c       	adc	r15, r15
     cda:	00 1f       	adc	r16, r16
     cdc:	11 1f       	adc	r17, r17
     cde:	21 50       	subi	r18, 0x01	; 1
     ce0:	30 40       	sbci	r19, 0x00	; 0
     ce2:	3c 87       	std	Y+12, r19	; 0x0c
     ce4:	2b 87       	std	Y+11, r18	; 0x0b
     ce6:	20 e0       	ldi	r18, 0x00	; 0
     ce8:	30 e0       	ldi	r19, 0x00	; 0
     cea:	40 e0       	ldi	r20, 0x00	; 0
     cec:	50 e0       	ldi	r21, 0x00	; 0
     cee:	80 e0       	ldi	r24, 0x00	; 0
     cf0:	90 e0       	ldi	r25, 0x00	; 0
     cf2:	a0 e0       	ldi	r26, 0x00	; 0
     cf4:	b0 e4       	ldi	r27, 0x40	; 64
     cf6:	60 e0       	ldi	r22, 0x00	; 0
     cf8:	70 e0       	ldi	r23, 0x00	; 0
     cfa:	ea 14       	cp	r14, r10
     cfc:	fb 04       	cpc	r15, r11
     cfe:	0c 05       	cpc	r16, r12
     d00:	1d 05       	cpc	r17, r13
     d02:	40 f0       	brcs	.+16     	; 0xd14 <__divsf3+0xf4>
     d04:	28 2b       	or	r18, r24
     d06:	39 2b       	or	r19, r25
     d08:	4a 2b       	or	r20, r26
     d0a:	5b 2b       	or	r21, r27
     d0c:	ea 18       	sub	r14, r10
     d0e:	fb 08       	sbc	r15, r11
     d10:	0c 09       	sbc	r16, r12
     d12:	1d 09       	sbc	r17, r13
     d14:	b6 95       	lsr	r27
     d16:	a7 95       	ror	r26
     d18:	97 95       	ror	r25
     d1a:	87 95       	ror	r24
     d1c:	ee 0c       	add	r14, r14
     d1e:	ff 1c       	adc	r15, r15
     d20:	00 1f       	adc	r16, r16
     d22:	11 1f       	adc	r17, r17
     d24:	6f 5f       	subi	r22, 0xFF	; 255
     d26:	7f 4f       	sbci	r23, 0xFF	; 255
     d28:	6f 31       	cpi	r22, 0x1F	; 31
     d2a:	71 05       	cpc	r23, r1
     d2c:	31 f7       	brne	.-52     	; 0xcfa <__divsf3+0xda>
     d2e:	da 01       	movw	r26, r20
     d30:	c9 01       	movw	r24, r18
     d32:	8f 77       	andi	r24, 0x7F	; 127
     d34:	90 70       	andi	r25, 0x00	; 0
     d36:	a0 70       	andi	r26, 0x00	; 0
     d38:	b0 70       	andi	r27, 0x00	; 0
     d3a:	80 34       	cpi	r24, 0x40	; 64
     d3c:	91 05       	cpc	r25, r1
     d3e:	a1 05       	cpc	r26, r1
     d40:	b1 05       	cpc	r27, r1
     d42:	61 f4       	brne	.+24     	; 0xd5c <__divsf3+0x13c>
     d44:	27 fd       	sbrc	r18, 7
     d46:	0a c0       	rjmp	.+20     	; 0xd5c <__divsf3+0x13c>
     d48:	e1 14       	cp	r14, r1
     d4a:	f1 04       	cpc	r15, r1
     d4c:	01 05       	cpc	r16, r1
     d4e:	11 05       	cpc	r17, r1
     d50:	29 f0       	breq	.+10     	; 0xd5c <__divsf3+0x13c>
     d52:	20 5c       	subi	r18, 0xC0	; 192
     d54:	3f 4f       	sbci	r19, 0xFF	; 255
     d56:	4f 4f       	sbci	r20, 0xFF	; 255
     d58:	5f 4f       	sbci	r21, 0xFF	; 255
     d5a:	20 78       	andi	r18, 0x80	; 128
     d5c:	2d 87       	std	Y+13, r18	; 0x0d
     d5e:	3e 87       	std	Y+14, r19	; 0x0e
     d60:	4f 87       	std	Y+15, r20	; 0x0f
     d62:	58 8b       	std	Y+16, r21	; 0x10
     d64:	be 01       	movw	r22, r28
     d66:	67 5f       	subi	r22, 0xF7	; 247
     d68:	7f 4f       	sbci	r23, 0xFF	; 255
     d6a:	cb 01       	movw	r24, r22
     d6c:	0e 94 4d 08 	call	0x109a	; 0x109a <__pack_f>
     d70:	68 96       	adiw	r28, 0x18	; 24
     d72:	ea e0       	ldi	r30, 0x0A	; 10
     d74:	0c 94 17 0a 	jmp	0x142e	; 0x142e <__epilogue_restores__+0x10>

00000d78 <__gtsf2>:
     d78:	a8 e1       	ldi	r26, 0x18	; 24
     d7a:	b0 e0       	ldi	r27, 0x00	; 0
     d7c:	e2 ec       	ldi	r30, 0xC2	; 194
     d7e:	f6 e0       	ldi	r31, 0x06	; 6
     d80:	0c 94 ff 09 	jmp	0x13fe	; 0x13fe <__prologue_saves__+0x18>
     d84:	69 83       	std	Y+1, r22	; 0x01
     d86:	7a 83       	std	Y+2, r23	; 0x02
     d88:	8b 83       	std	Y+3, r24	; 0x03
     d8a:	9c 83       	std	Y+4, r25	; 0x04
     d8c:	2d 83       	std	Y+5, r18	; 0x05
     d8e:	3e 83       	std	Y+6, r19	; 0x06
     d90:	4f 83       	std	Y+7, r20	; 0x07
     d92:	58 87       	std	Y+8, r21	; 0x08
     d94:	89 e0       	ldi	r24, 0x09	; 9
     d96:	e8 2e       	mov	r14, r24
     d98:	f1 2c       	mov	r15, r1
     d9a:	ec 0e       	add	r14, r28
     d9c:	fd 1e       	adc	r15, r29
     d9e:	ce 01       	movw	r24, r28
     da0:	01 96       	adiw	r24, 0x01	; 1
     da2:	b7 01       	movw	r22, r14
     da4:	0e 94 22 09 	call	0x1244	; 0x1244 <__unpack_f>
     da8:	8e 01       	movw	r16, r28
     daa:	0f 5e       	subi	r16, 0xEF	; 239
     dac:	1f 4f       	sbci	r17, 0xFF	; 255
     dae:	ce 01       	movw	r24, r28
     db0:	05 96       	adiw	r24, 0x05	; 5
     db2:	b8 01       	movw	r22, r16
     db4:	0e 94 22 09 	call	0x1244	; 0x1244 <__unpack_f>
     db8:	89 85       	ldd	r24, Y+9	; 0x09
     dba:	82 30       	cpi	r24, 0x02	; 2
     dbc:	40 f0       	brcs	.+16     	; 0xdce <__gtsf2+0x56>
     dbe:	89 89       	ldd	r24, Y+17	; 0x11
     dc0:	82 30       	cpi	r24, 0x02	; 2
     dc2:	28 f0       	brcs	.+10     	; 0xdce <__gtsf2+0x56>
     dc4:	c7 01       	movw	r24, r14
     dc6:	b8 01       	movw	r22, r16
     dc8:	0e 94 9a 09 	call	0x1334	; 0x1334 <__fpcmp_parts_f>
     dcc:	01 c0       	rjmp	.+2      	; 0xdd0 <__gtsf2+0x58>
     dce:	8f ef       	ldi	r24, 0xFF	; 255
     dd0:	68 96       	adiw	r28, 0x18	; 24
     dd2:	e6 e0       	ldi	r30, 0x06	; 6
     dd4:	0c 94 1b 0a 	jmp	0x1436	; 0x1436 <__epilogue_restores__+0x18>

00000dd8 <__gesf2>:
     dd8:	a8 e1       	ldi	r26, 0x18	; 24
     dda:	b0 e0       	ldi	r27, 0x00	; 0
     ddc:	e2 ef       	ldi	r30, 0xF2	; 242
     dde:	f6 e0       	ldi	r31, 0x06	; 6
     de0:	0c 94 ff 09 	jmp	0x13fe	; 0x13fe <__prologue_saves__+0x18>
     de4:	69 83       	std	Y+1, r22	; 0x01
     de6:	7a 83       	std	Y+2, r23	; 0x02
     de8:	8b 83       	std	Y+3, r24	; 0x03
     dea:	9c 83       	std	Y+4, r25	; 0x04
     dec:	2d 83       	std	Y+5, r18	; 0x05
     dee:	3e 83       	std	Y+6, r19	; 0x06
     df0:	4f 83       	std	Y+7, r20	; 0x07
     df2:	58 87       	std	Y+8, r21	; 0x08
     df4:	89 e0       	ldi	r24, 0x09	; 9
     df6:	e8 2e       	mov	r14, r24
     df8:	f1 2c       	mov	r15, r1
     dfa:	ec 0e       	add	r14, r28
     dfc:	fd 1e       	adc	r15, r29
     dfe:	ce 01       	movw	r24, r28
     e00:	01 96       	adiw	r24, 0x01	; 1
     e02:	b7 01       	movw	r22, r14
     e04:	0e 94 22 09 	call	0x1244	; 0x1244 <__unpack_f>
     e08:	8e 01       	movw	r16, r28
     e0a:	0f 5e       	subi	r16, 0xEF	; 239
     e0c:	1f 4f       	sbci	r17, 0xFF	; 255
     e0e:	ce 01       	movw	r24, r28
     e10:	05 96       	adiw	r24, 0x05	; 5
     e12:	b8 01       	movw	r22, r16
     e14:	0e 94 22 09 	call	0x1244	; 0x1244 <__unpack_f>
     e18:	89 85       	ldd	r24, Y+9	; 0x09
     e1a:	82 30       	cpi	r24, 0x02	; 2
     e1c:	40 f0       	brcs	.+16     	; 0xe2e <__gesf2+0x56>
     e1e:	89 89       	ldd	r24, Y+17	; 0x11
     e20:	82 30       	cpi	r24, 0x02	; 2
     e22:	28 f0       	brcs	.+10     	; 0xe2e <__gesf2+0x56>
     e24:	c7 01       	movw	r24, r14
     e26:	b8 01       	movw	r22, r16
     e28:	0e 94 9a 09 	call	0x1334	; 0x1334 <__fpcmp_parts_f>
     e2c:	01 c0       	rjmp	.+2      	; 0xe30 <__gesf2+0x58>
     e2e:	8f ef       	ldi	r24, 0xFF	; 255
     e30:	68 96       	adiw	r28, 0x18	; 24
     e32:	e6 e0       	ldi	r30, 0x06	; 6
     e34:	0c 94 1b 0a 	jmp	0x1436	; 0x1436 <__epilogue_restores__+0x18>

00000e38 <__ltsf2>:
     e38:	a8 e1       	ldi	r26, 0x18	; 24
     e3a:	b0 e0       	ldi	r27, 0x00	; 0
     e3c:	e2 e2       	ldi	r30, 0x22	; 34
     e3e:	f7 e0       	ldi	r31, 0x07	; 7
     e40:	0c 94 ff 09 	jmp	0x13fe	; 0x13fe <__prologue_saves__+0x18>
     e44:	69 83       	std	Y+1, r22	; 0x01
     e46:	7a 83       	std	Y+2, r23	; 0x02
     e48:	8b 83       	std	Y+3, r24	; 0x03
     e4a:	9c 83       	std	Y+4, r25	; 0x04
     e4c:	2d 83       	std	Y+5, r18	; 0x05
     e4e:	3e 83       	std	Y+6, r19	; 0x06
     e50:	4f 83       	std	Y+7, r20	; 0x07
     e52:	58 87       	std	Y+8, r21	; 0x08
     e54:	89 e0       	ldi	r24, 0x09	; 9
     e56:	e8 2e       	mov	r14, r24
     e58:	f1 2c       	mov	r15, r1
     e5a:	ec 0e       	add	r14, r28
     e5c:	fd 1e       	adc	r15, r29
     e5e:	ce 01       	movw	r24, r28
     e60:	01 96       	adiw	r24, 0x01	; 1
     e62:	b7 01       	movw	r22, r14
     e64:	0e 94 22 09 	call	0x1244	; 0x1244 <__unpack_f>
     e68:	8e 01       	movw	r16, r28
     e6a:	0f 5e       	subi	r16, 0xEF	; 239
     e6c:	1f 4f       	sbci	r17, 0xFF	; 255
     e6e:	ce 01       	movw	r24, r28
     e70:	05 96       	adiw	r24, 0x05	; 5
     e72:	b8 01       	movw	r22, r16
     e74:	0e 94 22 09 	call	0x1244	; 0x1244 <__unpack_f>
     e78:	89 85       	ldd	r24, Y+9	; 0x09
     e7a:	82 30       	cpi	r24, 0x02	; 2
     e7c:	40 f0       	brcs	.+16     	; 0xe8e <__ltsf2+0x56>
     e7e:	89 89       	ldd	r24, Y+17	; 0x11
     e80:	82 30       	cpi	r24, 0x02	; 2
     e82:	28 f0       	brcs	.+10     	; 0xe8e <__ltsf2+0x56>
     e84:	c7 01       	movw	r24, r14
     e86:	b8 01       	movw	r22, r16
     e88:	0e 94 9a 09 	call	0x1334	; 0x1334 <__fpcmp_parts_f>
     e8c:	01 c0       	rjmp	.+2      	; 0xe90 <__ltsf2+0x58>
     e8e:	81 e0       	ldi	r24, 0x01	; 1
     e90:	68 96       	adiw	r28, 0x18	; 24
     e92:	e6 e0       	ldi	r30, 0x06	; 6
     e94:	0c 94 1b 0a 	jmp	0x1436	; 0x1436 <__epilogue_restores__+0x18>

00000e98 <__floatsisf>:
     e98:	a8 e0       	ldi	r26, 0x08	; 8
     e9a:	b0 e0       	ldi	r27, 0x00	; 0
     e9c:	e2 e5       	ldi	r30, 0x52	; 82
     e9e:	f7 e0       	ldi	r31, 0x07	; 7
     ea0:	0c 94 fc 09 	jmp	0x13f8	; 0x13f8 <__prologue_saves__+0x12>
     ea4:	9b 01       	movw	r18, r22
     ea6:	ac 01       	movw	r20, r24
     ea8:	83 e0       	ldi	r24, 0x03	; 3
     eaa:	89 83       	std	Y+1, r24	; 0x01
     eac:	da 01       	movw	r26, r20
     eae:	c9 01       	movw	r24, r18
     eb0:	88 27       	eor	r24, r24
     eb2:	b7 fd       	sbrc	r27, 7
     eb4:	83 95       	inc	r24
     eb6:	99 27       	eor	r25, r25
     eb8:	aa 27       	eor	r26, r26
     eba:	bb 27       	eor	r27, r27
     ebc:	b8 2e       	mov	r11, r24
     ebe:	21 15       	cp	r18, r1
     ec0:	31 05       	cpc	r19, r1
     ec2:	41 05       	cpc	r20, r1
     ec4:	51 05       	cpc	r21, r1
     ec6:	19 f4       	brne	.+6      	; 0xece <__floatsisf+0x36>
     ec8:	82 e0       	ldi	r24, 0x02	; 2
     eca:	89 83       	std	Y+1, r24	; 0x01
     ecc:	3a c0       	rjmp	.+116    	; 0xf42 <__floatsisf+0xaa>
     ece:	88 23       	and	r24, r24
     ed0:	a9 f0       	breq	.+42     	; 0xefc <__floatsisf+0x64>
     ed2:	20 30       	cpi	r18, 0x00	; 0
     ed4:	80 e0       	ldi	r24, 0x00	; 0
     ed6:	38 07       	cpc	r19, r24
     ed8:	80 e0       	ldi	r24, 0x00	; 0
     eda:	48 07       	cpc	r20, r24
     edc:	80 e8       	ldi	r24, 0x80	; 128
     ede:	58 07       	cpc	r21, r24
     ee0:	29 f4       	brne	.+10     	; 0xeec <__floatsisf+0x54>
     ee2:	60 e0       	ldi	r22, 0x00	; 0
     ee4:	70 e0       	ldi	r23, 0x00	; 0
     ee6:	80 e0       	ldi	r24, 0x00	; 0
     ee8:	9f ec       	ldi	r25, 0xCF	; 207
     eea:	30 c0       	rjmp	.+96     	; 0xf4c <__floatsisf+0xb4>
     eec:	ee 24       	eor	r14, r14
     eee:	ff 24       	eor	r15, r15
     ef0:	87 01       	movw	r16, r14
     ef2:	e2 1a       	sub	r14, r18
     ef4:	f3 0a       	sbc	r15, r19
     ef6:	04 0b       	sbc	r16, r20
     ef8:	15 0b       	sbc	r17, r21
     efa:	02 c0       	rjmp	.+4      	; 0xf00 <__floatsisf+0x68>
     efc:	79 01       	movw	r14, r18
     efe:	8a 01       	movw	r16, r20
     f00:	8e e1       	ldi	r24, 0x1E	; 30
     f02:	c8 2e       	mov	r12, r24
     f04:	d1 2c       	mov	r13, r1
     f06:	dc 82       	std	Y+4, r13	; 0x04
     f08:	cb 82       	std	Y+3, r12	; 0x03
     f0a:	ed 82       	std	Y+5, r14	; 0x05
     f0c:	fe 82       	std	Y+6, r15	; 0x06
     f0e:	0f 83       	std	Y+7, r16	; 0x07
     f10:	18 87       	std	Y+8, r17	; 0x08
     f12:	c8 01       	movw	r24, r16
     f14:	b7 01       	movw	r22, r14
     f16:	0e 94 fe 07 	call	0xffc	; 0xffc <__clzsi2>
     f1a:	01 97       	sbiw	r24, 0x01	; 1
     f1c:	18 16       	cp	r1, r24
     f1e:	19 06       	cpc	r1, r25
     f20:	84 f4       	brge	.+32     	; 0xf42 <__floatsisf+0xaa>
     f22:	08 2e       	mov	r0, r24
     f24:	04 c0       	rjmp	.+8      	; 0xf2e <__floatsisf+0x96>
     f26:	ee 0c       	add	r14, r14
     f28:	ff 1c       	adc	r15, r15
     f2a:	00 1f       	adc	r16, r16
     f2c:	11 1f       	adc	r17, r17
     f2e:	0a 94       	dec	r0
     f30:	d2 f7       	brpl	.-12     	; 0xf26 <__floatsisf+0x8e>
     f32:	ed 82       	std	Y+5, r14	; 0x05
     f34:	fe 82       	std	Y+6, r15	; 0x06
     f36:	0f 83       	std	Y+7, r16	; 0x07
     f38:	18 87       	std	Y+8, r17	; 0x08
     f3a:	c8 1a       	sub	r12, r24
     f3c:	d9 0a       	sbc	r13, r25
     f3e:	dc 82       	std	Y+4, r13	; 0x04
     f40:	cb 82       	std	Y+3, r12	; 0x03
     f42:	ba 82       	std	Y+2, r11	; 0x02
     f44:	ce 01       	movw	r24, r28
     f46:	01 96       	adiw	r24, 0x01	; 1
     f48:	0e 94 4d 08 	call	0x109a	; 0x109a <__pack_f>
     f4c:	28 96       	adiw	r28, 0x08	; 8
     f4e:	e9 e0       	ldi	r30, 0x09	; 9
     f50:	0c 94 18 0a 	jmp	0x1430	; 0x1430 <__epilogue_restores__+0x12>

00000f54 <__fixsfsi>:
     f54:	ac e0       	ldi	r26, 0x0C	; 12
     f56:	b0 e0       	ldi	r27, 0x00	; 0
     f58:	e0 eb       	ldi	r30, 0xB0	; 176
     f5a:	f7 e0       	ldi	r31, 0x07	; 7
     f5c:	0c 94 03 0a 	jmp	0x1406	; 0x1406 <__prologue_saves__+0x20>
     f60:	69 83       	std	Y+1, r22	; 0x01
     f62:	7a 83       	std	Y+2, r23	; 0x02
     f64:	8b 83       	std	Y+3, r24	; 0x03
     f66:	9c 83       	std	Y+4, r25	; 0x04
     f68:	ce 01       	movw	r24, r28
     f6a:	01 96       	adiw	r24, 0x01	; 1
     f6c:	be 01       	movw	r22, r28
     f6e:	6b 5f       	subi	r22, 0xFB	; 251
     f70:	7f 4f       	sbci	r23, 0xFF	; 255
     f72:	0e 94 22 09 	call	0x1244	; 0x1244 <__unpack_f>
     f76:	8d 81       	ldd	r24, Y+5	; 0x05
     f78:	82 30       	cpi	r24, 0x02	; 2
     f7a:	61 f1       	breq	.+88     	; 0xfd4 <__fixsfsi+0x80>
     f7c:	82 30       	cpi	r24, 0x02	; 2
     f7e:	50 f1       	brcs	.+84     	; 0xfd4 <__fixsfsi+0x80>
     f80:	84 30       	cpi	r24, 0x04	; 4
     f82:	21 f4       	brne	.+8      	; 0xf8c <__fixsfsi+0x38>
     f84:	8e 81       	ldd	r24, Y+6	; 0x06
     f86:	88 23       	and	r24, r24
     f88:	51 f1       	breq	.+84     	; 0xfde <__fixsfsi+0x8a>
     f8a:	2e c0       	rjmp	.+92     	; 0xfe8 <__fixsfsi+0x94>
     f8c:	2f 81       	ldd	r18, Y+7	; 0x07
     f8e:	38 85       	ldd	r19, Y+8	; 0x08
     f90:	37 fd       	sbrc	r19, 7
     f92:	20 c0       	rjmp	.+64     	; 0xfd4 <__fixsfsi+0x80>
     f94:	6e 81       	ldd	r22, Y+6	; 0x06
     f96:	2f 31       	cpi	r18, 0x1F	; 31
     f98:	31 05       	cpc	r19, r1
     f9a:	1c f0       	brlt	.+6      	; 0xfa2 <__fixsfsi+0x4e>
     f9c:	66 23       	and	r22, r22
     f9e:	f9 f0       	breq	.+62     	; 0xfde <__fixsfsi+0x8a>
     fa0:	23 c0       	rjmp	.+70     	; 0xfe8 <__fixsfsi+0x94>
     fa2:	8e e1       	ldi	r24, 0x1E	; 30
     fa4:	90 e0       	ldi	r25, 0x00	; 0
     fa6:	82 1b       	sub	r24, r18
     fa8:	93 0b       	sbc	r25, r19
     faa:	29 85       	ldd	r18, Y+9	; 0x09
     fac:	3a 85       	ldd	r19, Y+10	; 0x0a
     fae:	4b 85       	ldd	r20, Y+11	; 0x0b
     fb0:	5c 85       	ldd	r21, Y+12	; 0x0c
     fb2:	04 c0       	rjmp	.+8      	; 0xfbc <__fixsfsi+0x68>
     fb4:	56 95       	lsr	r21
     fb6:	47 95       	ror	r20
     fb8:	37 95       	ror	r19
     fba:	27 95       	ror	r18
     fbc:	8a 95       	dec	r24
     fbe:	d2 f7       	brpl	.-12     	; 0xfb4 <__fixsfsi+0x60>
     fc0:	66 23       	and	r22, r22
     fc2:	b1 f0       	breq	.+44     	; 0xff0 <__fixsfsi+0x9c>
     fc4:	50 95       	com	r21
     fc6:	40 95       	com	r20
     fc8:	30 95       	com	r19
     fca:	21 95       	neg	r18
     fcc:	3f 4f       	sbci	r19, 0xFF	; 255
     fce:	4f 4f       	sbci	r20, 0xFF	; 255
     fd0:	5f 4f       	sbci	r21, 0xFF	; 255
     fd2:	0e c0       	rjmp	.+28     	; 0xff0 <__fixsfsi+0x9c>
     fd4:	20 e0       	ldi	r18, 0x00	; 0
     fd6:	30 e0       	ldi	r19, 0x00	; 0
     fd8:	40 e0       	ldi	r20, 0x00	; 0
     fda:	50 e0       	ldi	r21, 0x00	; 0
     fdc:	09 c0       	rjmp	.+18     	; 0xff0 <__fixsfsi+0x9c>
     fde:	2f ef       	ldi	r18, 0xFF	; 255
     fe0:	3f ef       	ldi	r19, 0xFF	; 255
     fe2:	4f ef       	ldi	r20, 0xFF	; 255
     fe4:	5f e7       	ldi	r21, 0x7F	; 127
     fe6:	04 c0       	rjmp	.+8      	; 0xff0 <__fixsfsi+0x9c>
     fe8:	20 e0       	ldi	r18, 0x00	; 0
     fea:	30 e0       	ldi	r19, 0x00	; 0
     fec:	40 e0       	ldi	r20, 0x00	; 0
     fee:	50 e8       	ldi	r21, 0x80	; 128
     ff0:	b9 01       	movw	r22, r18
     ff2:	ca 01       	movw	r24, r20
     ff4:	2c 96       	adiw	r28, 0x0c	; 12
     ff6:	e2 e0       	ldi	r30, 0x02	; 2
     ff8:	0c 94 1f 0a 	jmp	0x143e	; 0x143e <__epilogue_restores__+0x20>

00000ffc <__clzsi2>:
     ffc:	ef 92       	push	r14
     ffe:	ff 92       	push	r15
    1000:	0f 93       	push	r16
    1002:	1f 93       	push	r17
    1004:	7b 01       	movw	r14, r22
    1006:	8c 01       	movw	r16, r24
    1008:	80 e0       	ldi	r24, 0x00	; 0
    100a:	e8 16       	cp	r14, r24
    100c:	80 e0       	ldi	r24, 0x00	; 0
    100e:	f8 06       	cpc	r15, r24
    1010:	81 e0       	ldi	r24, 0x01	; 1
    1012:	08 07       	cpc	r16, r24
    1014:	80 e0       	ldi	r24, 0x00	; 0
    1016:	18 07       	cpc	r17, r24
    1018:	88 f4       	brcc	.+34     	; 0x103c <__clzsi2+0x40>
    101a:	8f ef       	ldi	r24, 0xFF	; 255
    101c:	e8 16       	cp	r14, r24
    101e:	f1 04       	cpc	r15, r1
    1020:	01 05       	cpc	r16, r1
    1022:	11 05       	cpc	r17, r1
    1024:	31 f0       	breq	.+12     	; 0x1032 <__clzsi2+0x36>
    1026:	28 f0       	brcs	.+10     	; 0x1032 <__clzsi2+0x36>
    1028:	88 e0       	ldi	r24, 0x08	; 8
    102a:	90 e0       	ldi	r25, 0x00	; 0
    102c:	a0 e0       	ldi	r26, 0x00	; 0
    102e:	b0 e0       	ldi	r27, 0x00	; 0
    1030:	17 c0       	rjmp	.+46     	; 0x1060 <__clzsi2+0x64>
    1032:	80 e0       	ldi	r24, 0x00	; 0
    1034:	90 e0       	ldi	r25, 0x00	; 0
    1036:	a0 e0       	ldi	r26, 0x00	; 0
    1038:	b0 e0       	ldi	r27, 0x00	; 0
    103a:	12 c0       	rjmp	.+36     	; 0x1060 <__clzsi2+0x64>
    103c:	80 e0       	ldi	r24, 0x00	; 0
    103e:	e8 16       	cp	r14, r24
    1040:	80 e0       	ldi	r24, 0x00	; 0
    1042:	f8 06       	cpc	r15, r24
    1044:	80 e0       	ldi	r24, 0x00	; 0
    1046:	08 07       	cpc	r16, r24
    1048:	81 e0       	ldi	r24, 0x01	; 1
    104a:	18 07       	cpc	r17, r24
    104c:	28 f0       	brcs	.+10     	; 0x1058 <__clzsi2+0x5c>
    104e:	88 e1       	ldi	r24, 0x18	; 24
    1050:	90 e0       	ldi	r25, 0x00	; 0
    1052:	a0 e0       	ldi	r26, 0x00	; 0
    1054:	b0 e0       	ldi	r27, 0x00	; 0
    1056:	04 c0       	rjmp	.+8      	; 0x1060 <__clzsi2+0x64>
    1058:	80 e1       	ldi	r24, 0x10	; 16
    105a:	90 e0       	ldi	r25, 0x00	; 0
    105c:	a0 e0       	ldi	r26, 0x00	; 0
    105e:	b0 e0       	ldi	r27, 0x00	; 0
    1060:	20 e2       	ldi	r18, 0x20	; 32
    1062:	30 e0       	ldi	r19, 0x00	; 0
    1064:	40 e0       	ldi	r20, 0x00	; 0
    1066:	50 e0       	ldi	r21, 0x00	; 0
    1068:	28 1b       	sub	r18, r24
    106a:	39 0b       	sbc	r19, r25
    106c:	4a 0b       	sbc	r20, r26
    106e:	5b 0b       	sbc	r21, r27
    1070:	04 c0       	rjmp	.+8      	; 0x107a <__clzsi2+0x7e>
    1072:	16 95       	lsr	r17
    1074:	07 95       	ror	r16
    1076:	f7 94       	ror	r15
    1078:	e7 94       	ror	r14
    107a:	8a 95       	dec	r24
    107c:	d2 f7       	brpl	.-12     	; 0x1072 <__clzsi2+0x76>
    107e:	f7 01       	movw	r30, r14
    1080:	e8 5f       	subi	r30, 0xF8	; 248
    1082:	fe 4f       	sbci	r31, 0xFE	; 254
    1084:	80 81       	ld	r24, Z
    1086:	28 1b       	sub	r18, r24
    1088:	31 09       	sbc	r19, r1
    108a:	41 09       	sbc	r20, r1
    108c:	51 09       	sbc	r21, r1
    108e:	c9 01       	movw	r24, r18
    1090:	1f 91       	pop	r17
    1092:	0f 91       	pop	r16
    1094:	ff 90       	pop	r15
    1096:	ef 90       	pop	r14
    1098:	08 95       	ret

0000109a <__pack_f>:
    109a:	df 92       	push	r13
    109c:	ef 92       	push	r14
    109e:	ff 92       	push	r15
    10a0:	0f 93       	push	r16
    10a2:	1f 93       	push	r17
    10a4:	fc 01       	movw	r30, r24
    10a6:	e4 80       	ldd	r14, Z+4	; 0x04
    10a8:	f5 80       	ldd	r15, Z+5	; 0x05
    10aa:	06 81       	ldd	r16, Z+6	; 0x06
    10ac:	17 81       	ldd	r17, Z+7	; 0x07
    10ae:	d1 80       	ldd	r13, Z+1	; 0x01
    10b0:	80 81       	ld	r24, Z
    10b2:	82 30       	cpi	r24, 0x02	; 2
    10b4:	48 f4       	brcc	.+18     	; 0x10c8 <__pack_f+0x2e>
    10b6:	80 e0       	ldi	r24, 0x00	; 0
    10b8:	90 e0       	ldi	r25, 0x00	; 0
    10ba:	a0 e1       	ldi	r26, 0x10	; 16
    10bc:	b0 e0       	ldi	r27, 0x00	; 0
    10be:	e8 2a       	or	r14, r24
    10c0:	f9 2a       	or	r15, r25
    10c2:	0a 2b       	or	r16, r26
    10c4:	1b 2b       	or	r17, r27
    10c6:	a5 c0       	rjmp	.+330    	; 0x1212 <__pack_f+0x178>
    10c8:	84 30       	cpi	r24, 0x04	; 4
    10ca:	09 f4       	brne	.+2      	; 0x10ce <__pack_f+0x34>
    10cc:	9f c0       	rjmp	.+318    	; 0x120c <__pack_f+0x172>
    10ce:	82 30       	cpi	r24, 0x02	; 2
    10d0:	21 f4       	brne	.+8      	; 0x10da <__pack_f+0x40>
    10d2:	ee 24       	eor	r14, r14
    10d4:	ff 24       	eor	r15, r15
    10d6:	87 01       	movw	r16, r14
    10d8:	05 c0       	rjmp	.+10     	; 0x10e4 <__pack_f+0x4a>
    10da:	e1 14       	cp	r14, r1
    10dc:	f1 04       	cpc	r15, r1
    10de:	01 05       	cpc	r16, r1
    10e0:	11 05       	cpc	r17, r1
    10e2:	19 f4       	brne	.+6      	; 0x10ea <__pack_f+0x50>
    10e4:	e0 e0       	ldi	r30, 0x00	; 0
    10e6:	f0 e0       	ldi	r31, 0x00	; 0
    10e8:	96 c0       	rjmp	.+300    	; 0x1216 <__pack_f+0x17c>
    10ea:	62 81       	ldd	r22, Z+2	; 0x02
    10ec:	73 81       	ldd	r23, Z+3	; 0x03
    10ee:	9f ef       	ldi	r25, 0xFF	; 255
    10f0:	62 38       	cpi	r22, 0x82	; 130
    10f2:	79 07       	cpc	r23, r25
    10f4:	0c f0       	brlt	.+2      	; 0x10f8 <__pack_f+0x5e>
    10f6:	5b c0       	rjmp	.+182    	; 0x11ae <__pack_f+0x114>
    10f8:	22 e8       	ldi	r18, 0x82	; 130
    10fa:	3f ef       	ldi	r19, 0xFF	; 255
    10fc:	26 1b       	sub	r18, r22
    10fe:	37 0b       	sbc	r19, r23
    1100:	2a 31       	cpi	r18, 0x1A	; 26
    1102:	31 05       	cpc	r19, r1
    1104:	2c f0       	brlt	.+10     	; 0x1110 <__pack_f+0x76>
    1106:	20 e0       	ldi	r18, 0x00	; 0
    1108:	30 e0       	ldi	r19, 0x00	; 0
    110a:	40 e0       	ldi	r20, 0x00	; 0
    110c:	50 e0       	ldi	r21, 0x00	; 0
    110e:	2a c0       	rjmp	.+84     	; 0x1164 <__pack_f+0xca>
    1110:	b8 01       	movw	r22, r16
    1112:	a7 01       	movw	r20, r14
    1114:	02 2e       	mov	r0, r18
    1116:	04 c0       	rjmp	.+8      	; 0x1120 <__pack_f+0x86>
    1118:	76 95       	lsr	r23
    111a:	67 95       	ror	r22
    111c:	57 95       	ror	r21
    111e:	47 95       	ror	r20
    1120:	0a 94       	dec	r0
    1122:	d2 f7       	brpl	.-12     	; 0x1118 <__pack_f+0x7e>
    1124:	81 e0       	ldi	r24, 0x01	; 1
    1126:	90 e0       	ldi	r25, 0x00	; 0
    1128:	a0 e0       	ldi	r26, 0x00	; 0
    112a:	b0 e0       	ldi	r27, 0x00	; 0
    112c:	04 c0       	rjmp	.+8      	; 0x1136 <__pack_f+0x9c>
    112e:	88 0f       	add	r24, r24
    1130:	99 1f       	adc	r25, r25
    1132:	aa 1f       	adc	r26, r26
    1134:	bb 1f       	adc	r27, r27
    1136:	2a 95       	dec	r18
    1138:	d2 f7       	brpl	.-12     	; 0x112e <__pack_f+0x94>
    113a:	01 97       	sbiw	r24, 0x01	; 1
    113c:	a1 09       	sbc	r26, r1
    113e:	b1 09       	sbc	r27, r1
    1140:	8e 21       	and	r24, r14
    1142:	9f 21       	and	r25, r15
    1144:	a0 23       	and	r26, r16
    1146:	b1 23       	and	r27, r17
    1148:	00 97       	sbiw	r24, 0x00	; 0
    114a:	a1 05       	cpc	r26, r1
    114c:	b1 05       	cpc	r27, r1
    114e:	21 f0       	breq	.+8      	; 0x1158 <__pack_f+0xbe>
    1150:	81 e0       	ldi	r24, 0x01	; 1
    1152:	90 e0       	ldi	r25, 0x00	; 0
    1154:	a0 e0       	ldi	r26, 0x00	; 0
    1156:	b0 e0       	ldi	r27, 0x00	; 0
    1158:	9a 01       	movw	r18, r20
    115a:	ab 01       	movw	r20, r22
    115c:	28 2b       	or	r18, r24
    115e:	39 2b       	or	r19, r25
    1160:	4a 2b       	or	r20, r26
    1162:	5b 2b       	or	r21, r27
    1164:	da 01       	movw	r26, r20
    1166:	c9 01       	movw	r24, r18
    1168:	8f 77       	andi	r24, 0x7F	; 127
    116a:	90 70       	andi	r25, 0x00	; 0
    116c:	a0 70       	andi	r26, 0x00	; 0
    116e:	b0 70       	andi	r27, 0x00	; 0
    1170:	80 34       	cpi	r24, 0x40	; 64
    1172:	91 05       	cpc	r25, r1
    1174:	a1 05       	cpc	r26, r1
    1176:	b1 05       	cpc	r27, r1
    1178:	39 f4       	brne	.+14     	; 0x1188 <__pack_f+0xee>
    117a:	27 ff       	sbrs	r18, 7
    117c:	09 c0       	rjmp	.+18     	; 0x1190 <__pack_f+0xf6>
    117e:	20 5c       	subi	r18, 0xC0	; 192
    1180:	3f 4f       	sbci	r19, 0xFF	; 255
    1182:	4f 4f       	sbci	r20, 0xFF	; 255
    1184:	5f 4f       	sbci	r21, 0xFF	; 255
    1186:	04 c0       	rjmp	.+8      	; 0x1190 <__pack_f+0xf6>
    1188:	21 5c       	subi	r18, 0xC1	; 193
    118a:	3f 4f       	sbci	r19, 0xFF	; 255
    118c:	4f 4f       	sbci	r20, 0xFF	; 255
    118e:	5f 4f       	sbci	r21, 0xFF	; 255
    1190:	e0 e0       	ldi	r30, 0x00	; 0
    1192:	f0 e0       	ldi	r31, 0x00	; 0
    1194:	20 30       	cpi	r18, 0x00	; 0
    1196:	a0 e0       	ldi	r26, 0x00	; 0
    1198:	3a 07       	cpc	r19, r26
    119a:	a0 e0       	ldi	r26, 0x00	; 0
    119c:	4a 07       	cpc	r20, r26
    119e:	a0 e4       	ldi	r26, 0x40	; 64
    11a0:	5a 07       	cpc	r21, r26
    11a2:	10 f0       	brcs	.+4      	; 0x11a8 <__pack_f+0x10e>
    11a4:	e1 e0       	ldi	r30, 0x01	; 1
    11a6:	f0 e0       	ldi	r31, 0x00	; 0
    11a8:	79 01       	movw	r14, r18
    11aa:	8a 01       	movw	r16, r20
    11ac:	27 c0       	rjmp	.+78     	; 0x11fc <__pack_f+0x162>
    11ae:	60 38       	cpi	r22, 0x80	; 128
    11b0:	71 05       	cpc	r23, r1
    11b2:	64 f5       	brge	.+88     	; 0x120c <__pack_f+0x172>
    11b4:	fb 01       	movw	r30, r22
    11b6:	e1 58       	subi	r30, 0x81	; 129
    11b8:	ff 4f       	sbci	r31, 0xFF	; 255
    11ba:	d8 01       	movw	r26, r16
    11bc:	c7 01       	movw	r24, r14
    11be:	8f 77       	andi	r24, 0x7F	; 127
    11c0:	90 70       	andi	r25, 0x00	; 0
    11c2:	a0 70       	andi	r26, 0x00	; 0
    11c4:	b0 70       	andi	r27, 0x00	; 0
    11c6:	80 34       	cpi	r24, 0x40	; 64
    11c8:	91 05       	cpc	r25, r1
    11ca:	a1 05       	cpc	r26, r1
    11cc:	b1 05       	cpc	r27, r1
    11ce:	39 f4       	brne	.+14     	; 0x11de <__pack_f+0x144>
    11d0:	e7 fe       	sbrs	r14, 7
    11d2:	0d c0       	rjmp	.+26     	; 0x11ee <__pack_f+0x154>
    11d4:	80 e4       	ldi	r24, 0x40	; 64
    11d6:	90 e0       	ldi	r25, 0x00	; 0
    11d8:	a0 e0       	ldi	r26, 0x00	; 0
    11da:	b0 e0       	ldi	r27, 0x00	; 0
    11dc:	04 c0       	rjmp	.+8      	; 0x11e6 <__pack_f+0x14c>
    11de:	8f e3       	ldi	r24, 0x3F	; 63
    11e0:	90 e0       	ldi	r25, 0x00	; 0
    11e2:	a0 e0       	ldi	r26, 0x00	; 0
    11e4:	b0 e0       	ldi	r27, 0x00	; 0
    11e6:	e8 0e       	add	r14, r24
    11e8:	f9 1e       	adc	r15, r25
    11ea:	0a 1f       	adc	r16, r26
    11ec:	1b 1f       	adc	r17, r27
    11ee:	17 ff       	sbrs	r17, 7
    11f0:	05 c0       	rjmp	.+10     	; 0x11fc <__pack_f+0x162>
    11f2:	16 95       	lsr	r17
    11f4:	07 95       	ror	r16
    11f6:	f7 94       	ror	r15
    11f8:	e7 94       	ror	r14
    11fa:	31 96       	adiw	r30, 0x01	; 1
    11fc:	87 e0       	ldi	r24, 0x07	; 7
    11fe:	16 95       	lsr	r17
    1200:	07 95       	ror	r16
    1202:	f7 94       	ror	r15
    1204:	e7 94       	ror	r14
    1206:	8a 95       	dec	r24
    1208:	d1 f7       	brne	.-12     	; 0x11fe <__pack_f+0x164>
    120a:	05 c0       	rjmp	.+10     	; 0x1216 <__pack_f+0x17c>
    120c:	ee 24       	eor	r14, r14
    120e:	ff 24       	eor	r15, r15
    1210:	87 01       	movw	r16, r14
    1212:	ef ef       	ldi	r30, 0xFF	; 255
    1214:	f0 e0       	ldi	r31, 0x00	; 0
    1216:	6e 2f       	mov	r22, r30
    1218:	67 95       	ror	r22
    121a:	66 27       	eor	r22, r22
    121c:	67 95       	ror	r22
    121e:	90 2f       	mov	r25, r16
    1220:	9f 77       	andi	r25, 0x7F	; 127
    1222:	d7 94       	ror	r13
    1224:	dd 24       	eor	r13, r13
    1226:	d7 94       	ror	r13
    1228:	8e 2f       	mov	r24, r30
    122a:	86 95       	lsr	r24
    122c:	49 2f       	mov	r20, r25
    122e:	46 2b       	or	r20, r22
    1230:	58 2f       	mov	r21, r24
    1232:	5d 29       	or	r21, r13
    1234:	b7 01       	movw	r22, r14
    1236:	ca 01       	movw	r24, r20
    1238:	1f 91       	pop	r17
    123a:	0f 91       	pop	r16
    123c:	ff 90       	pop	r15
    123e:	ef 90       	pop	r14
    1240:	df 90       	pop	r13
    1242:	08 95       	ret

00001244 <__unpack_f>:
    1244:	fc 01       	movw	r30, r24
    1246:	db 01       	movw	r26, r22
    1248:	40 81       	ld	r20, Z
    124a:	51 81       	ldd	r21, Z+1	; 0x01
    124c:	22 81       	ldd	r18, Z+2	; 0x02
    124e:	62 2f       	mov	r22, r18
    1250:	6f 77       	andi	r22, 0x7F	; 127
    1252:	70 e0       	ldi	r23, 0x00	; 0
    1254:	22 1f       	adc	r18, r18
    1256:	22 27       	eor	r18, r18
    1258:	22 1f       	adc	r18, r18
    125a:	93 81       	ldd	r25, Z+3	; 0x03
    125c:	89 2f       	mov	r24, r25
    125e:	88 0f       	add	r24, r24
    1260:	82 2b       	or	r24, r18
    1262:	28 2f       	mov	r18, r24
    1264:	30 e0       	ldi	r19, 0x00	; 0
    1266:	99 1f       	adc	r25, r25
    1268:	99 27       	eor	r25, r25
    126a:	99 1f       	adc	r25, r25
    126c:	11 96       	adiw	r26, 0x01	; 1
    126e:	9c 93       	st	X, r25
    1270:	11 97       	sbiw	r26, 0x01	; 1
    1272:	21 15       	cp	r18, r1
    1274:	31 05       	cpc	r19, r1
    1276:	a9 f5       	brne	.+106    	; 0x12e2 <__unpack_f+0x9e>
    1278:	41 15       	cp	r20, r1
    127a:	51 05       	cpc	r21, r1
    127c:	61 05       	cpc	r22, r1
    127e:	71 05       	cpc	r23, r1
    1280:	11 f4       	brne	.+4      	; 0x1286 <__unpack_f+0x42>
    1282:	82 e0       	ldi	r24, 0x02	; 2
    1284:	37 c0       	rjmp	.+110    	; 0x12f4 <__unpack_f+0xb0>
    1286:	82 e8       	ldi	r24, 0x82	; 130
    1288:	9f ef       	ldi	r25, 0xFF	; 255
    128a:	13 96       	adiw	r26, 0x03	; 3
    128c:	9c 93       	st	X, r25
    128e:	8e 93       	st	-X, r24
    1290:	12 97       	sbiw	r26, 0x02	; 2
    1292:	9a 01       	movw	r18, r20
    1294:	ab 01       	movw	r20, r22
    1296:	67 e0       	ldi	r22, 0x07	; 7
    1298:	22 0f       	add	r18, r18
    129a:	33 1f       	adc	r19, r19
    129c:	44 1f       	adc	r20, r20
    129e:	55 1f       	adc	r21, r21
    12a0:	6a 95       	dec	r22
    12a2:	d1 f7       	brne	.-12     	; 0x1298 <__unpack_f+0x54>
    12a4:	83 e0       	ldi	r24, 0x03	; 3
    12a6:	8c 93       	st	X, r24
    12a8:	0d c0       	rjmp	.+26     	; 0x12c4 <__unpack_f+0x80>
    12aa:	22 0f       	add	r18, r18
    12ac:	33 1f       	adc	r19, r19
    12ae:	44 1f       	adc	r20, r20
    12b0:	55 1f       	adc	r21, r21
    12b2:	12 96       	adiw	r26, 0x02	; 2
    12b4:	8d 91       	ld	r24, X+
    12b6:	9c 91       	ld	r25, X
    12b8:	13 97       	sbiw	r26, 0x03	; 3
    12ba:	01 97       	sbiw	r24, 0x01	; 1
    12bc:	13 96       	adiw	r26, 0x03	; 3
    12be:	9c 93       	st	X, r25
    12c0:	8e 93       	st	-X, r24
    12c2:	12 97       	sbiw	r26, 0x02	; 2
    12c4:	20 30       	cpi	r18, 0x00	; 0
    12c6:	80 e0       	ldi	r24, 0x00	; 0
    12c8:	38 07       	cpc	r19, r24
    12ca:	80 e0       	ldi	r24, 0x00	; 0
    12cc:	48 07       	cpc	r20, r24
    12ce:	80 e4       	ldi	r24, 0x40	; 64
    12d0:	58 07       	cpc	r21, r24
    12d2:	58 f3       	brcs	.-42     	; 0x12aa <__unpack_f+0x66>
    12d4:	14 96       	adiw	r26, 0x04	; 4
    12d6:	2d 93       	st	X+, r18
    12d8:	3d 93       	st	X+, r19
    12da:	4d 93       	st	X+, r20
    12dc:	5c 93       	st	X, r21
    12de:	17 97       	sbiw	r26, 0x07	; 7
    12e0:	08 95       	ret
    12e2:	2f 3f       	cpi	r18, 0xFF	; 255
    12e4:	31 05       	cpc	r19, r1
    12e6:	79 f4       	brne	.+30     	; 0x1306 <__unpack_f+0xc2>
    12e8:	41 15       	cp	r20, r1
    12ea:	51 05       	cpc	r21, r1
    12ec:	61 05       	cpc	r22, r1
    12ee:	71 05       	cpc	r23, r1
    12f0:	19 f4       	brne	.+6      	; 0x12f8 <__unpack_f+0xb4>
    12f2:	84 e0       	ldi	r24, 0x04	; 4
    12f4:	8c 93       	st	X, r24
    12f6:	08 95       	ret
    12f8:	64 ff       	sbrs	r22, 4
    12fa:	03 c0       	rjmp	.+6      	; 0x1302 <__unpack_f+0xbe>
    12fc:	81 e0       	ldi	r24, 0x01	; 1
    12fe:	8c 93       	st	X, r24
    1300:	12 c0       	rjmp	.+36     	; 0x1326 <__unpack_f+0xe2>
    1302:	1c 92       	st	X, r1
    1304:	10 c0       	rjmp	.+32     	; 0x1326 <__unpack_f+0xe2>
    1306:	2f 57       	subi	r18, 0x7F	; 127
    1308:	30 40       	sbci	r19, 0x00	; 0
    130a:	13 96       	adiw	r26, 0x03	; 3
    130c:	3c 93       	st	X, r19
    130e:	2e 93       	st	-X, r18
    1310:	12 97       	sbiw	r26, 0x02	; 2
    1312:	83 e0       	ldi	r24, 0x03	; 3
    1314:	8c 93       	st	X, r24
    1316:	87 e0       	ldi	r24, 0x07	; 7
    1318:	44 0f       	add	r20, r20
    131a:	55 1f       	adc	r21, r21
    131c:	66 1f       	adc	r22, r22
    131e:	77 1f       	adc	r23, r23
    1320:	8a 95       	dec	r24
    1322:	d1 f7       	brne	.-12     	; 0x1318 <__unpack_f+0xd4>
    1324:	70 64       	ori	r23, 0x40	; 64
    1326:	14 96       	adiw	r26, 0x04	; 4
    1328:	4d 93       	st	X+, r20
    132a:	5d 93       	st	X+, r21
    132c:	6d 93       	st	X+, r22
    132e:	7c 93       	st	X, r23
    1330:	17 97       	sbiw	r26, 0x07	; 7
    1332:	08 95       	ret

00001334 <__fpcmp_parts_f>:
    1334:	1f 93       	push	r17
    1336:	dc 01       	movw	r26, r24
    1338:	fb 01       	movw	r30, r22
    133a:	9c 91       	ld	r25, X
    133c:	92 30       	cpi	r25, 0x02	; 2
    133e:	08 f4       	brcc	.+2      	; 0x1342 <__fpcmp_parts_f+0xe>
    1340:	47 c0       	rjmp	.+142    	; 0x13d0 <__fpcmp_parts_f+0x9c>
    1342:	80 81       	ld	r24, Z
    1344:	82 30       	cpi	r24, 0x02	; 2
    1346:	08 f4       	brcc	.+2      	; 0x134a <__fpcmp_parts_f+0x16>
    1348:	43 c0       	rjmp	.+134    	; 0x13d0 <__fpcmp_parts_f+0x9c>
    134a:	94 30       	cpi	r25, 0x04	; 4
    134c:	51 f4       	brne	.+20     	; 0x1362 <__fpcmp_parts_f+0x2e>
    134e:	11 96       	adiw	r26, 0x01	; 1
    1350:	1c 91       	ld	r17, X
    1352:	84 30       	cpi	r24, 0x04	; 4
    1354:	99 f5       	brne	.+102    	; 0x13bc <__fpcmp_parts_f+0x88>
    1356:	81 81       	ldd	r24, Z+1	; 0x01
    1358:	68 2f       	mov	r22, r24
    135a:	70 e0       	ldi	r23, 0x00	; 0
    135c:	61 1b       	sub	r22, r17
    135e:	71 09       	sbc	r23, r1
    1360:	3f c0       	rjmp	.+126    	; 0x13e0 <__fpcmp_parts_f+0xac>
    1362:	84 30       	cpi	r24, 0x04	; 4
    1364:	21 f0       	breq	.+8      	; 0x136e <__fpcmp_parts_f+0x3a>
    1366:	92 30       	cpi	r25, 0x02	; 2
    1368:	31 f4       	brne	.+12     	; 0x1376 <__fpcmp_parts_f+0x42>
    136a:	82 30       	cpi	r24, 0x02	; 2
    136c:	b9 f1       	breq	.+110    	; 0x13dc <__fpcmp_parts_f+0xa8>
    136e:	81 81       	ldd	r24, Z+1	; 0x01
    1370:	88 23       	and	r24, r24
    1372:	89 f1       	breq	.+98     	; 0x13d6 <__fpcmp_parts_f+0xa2>
    1374:	2d c0       	rjmp	.+90     	; 0x13d0 <__fpcmp_parts_f+0x9c>
    1376:	11 96       	adiw	r26, 0x01	; 1
    1378:	1c 91       	ld	r17, X
    137a:	11 97       	sbiw	r26, 0x01	; 1
    137c:	82 30       	cpi	r24, 0x02	; 2
    137e:	f1 f0       	breq	.+60     	; 0x13bc <__fpcmp_parts_f+0x88>
    1380:	81 81       	ldd	r24, Z+1	; 0x01
    1382:	18 17       	cp	r17, r24
    1384:	d9 f4       	brne	.+54     	; 0x13bc <__fpcmp_parts_f+0x88>
    1386:	12 96       	adiw	r26, 0x02	; 2
    1388:	2d 91       	ld	r18, X+
    138a:	3c 91       	ld	r19, X
    138c:	13 97       	sbiw	r26, 0x03	; 3
    138e:	82 81       	ldd	r24, Z+2	; 0x02
    1390:	93 81       	ldd	r25, Z+3	; 0x03
    1392:	82 17       	cp	r24, r18
    1394:	93 07       	cpc	r25, r19
    1396:	94 f0       	brlt	.+36     	; 0x13bc <__fpcmp_parts_f+0x88>
    1398:	28 17       	cp	r18, r24
    139a:	39 07       	cpc	r19, r25
    139c:	bc f0       	brlt	.+46     	; 0x13cc <__fpcmp_parts_f+0x98>
    139e:	14 96       	adiw	r26, 0x04	; 4
    13a0:	8d 91       	ld	r24, X+
    13a2:	9d 91       	ld	r25, X+
    13a4:	0d 90       	ld	r0, X+
    13a6:	bc 91       	ld	r27, X
    13a8:	a0 2d       	mov	r26, r0
    13aa:	24 81       	ldd	r18, Z+4	; 0x04
    13ac:	35 81       	ldd	r19, Z+5	; 0x05
    13ae:	46 81       	ldd	r20, Z+6	; 0x06
    13b0:	57 81       	ldd	r21, Z+7	; 0x07
    13b2:	28 17       	cp	r18, r24
    13b4:	39 07       	cpc	r19, r25
    13b6:	4a 07       	cpc	r20, r26
    13b8:	5b 07       	cpc	r21, r27
    13ba:	18 f4       	brcc	.+6      	; 0x13c2 <__fpcmp_parts_f+0x8e>
    13bc:	11 23       	and	r17, r17
    13be:	41 f0       	breq	.+16     	; 0x13d0 <__fpcmp_parts_f+0x9c>
    13c0:	0a c0       	rjmp	.+20     	; 0x13d6 <__fpcmp_parts_f+0xa2>
    13c2:	82 17       	cp	r24, r18
    13c4:	93 07       	cpc	r25, r19
    13c6:	a4 07       	cpc	r26, r20
    13c8:	b5 07       	cpc	r27, r21
    13ca:	40 f4       	brcc	.+16     	; 0x13dc <__fpcmp_parts_f+0xa8>
    13cc:	11 23       	and	r17, r17
    13ce:	19 f0       	breq	.+6      	; 0x13d6 <__fpcmp_parts_f+0xa2>
    13d0:	61 e0       	ldi	r22, 0x01	; 1
    13d2:	70 e0       	ldi	r23, 0x00	; 0
    13d4:	05 c0       	rjmp	.+10     	; 0x13e0 <__fpcmp_parts_f+0xac>
    13d6:	6f ef       	ldi	r22, 0xFF	; 255
    13d8:	7f ef       	ldi	r23, 0xFF	; 255
    13da:	02 c0       	rjmp	.+4      	; 0x13e0 <__fpcmp_parts_f+0xac>
    13dc:	60 e0       	ldi	r22, 0x00	; 0
    13de:	70 e0       	ldi	r23, 0x00	; 0
    13e0:	cb 01       	movw	r24, r22
    13e2:	1f 91       	pop	r17
    13e4:	08 95       	ret

000013e6 <__prologue_saves__>:
    13e6:	2f 92       	push	r2
    13e8:	3f 92       	push	r3
    13ea:	4f 92       	push	r4
    13ec:	5f 92       	push	r5
    13ee:	6f 92       	push	r6
    13f0:	7f 92       	push	r7
    13f2:	8f 92       	push	r8
    13f4:	9f 92       	push	r9
    13f6:	af 92       	push	r10
    13f8:	bf 92       	push	r11
    13fa:	cf 92       	push	r12
    13fc:	df 92       	push	r13
    13fe:	ef 92       	push	r14
    1400:	ff 92       	push	r15
    1402:	0f 93       	push	r16
    1404:	1f 93       	push	r17
    1406:	cf 93       	push	r28
    1408:	df 93       	push	r29
    140a:	cd b7       	in	r28, 0x3d	; 61
    140c:	de b7       	in	r29, 0x3e	; 62
    140e:	ca 1b       	sub	r28, r26
    1410:	db 0b       	sbc	r29, r27
    1412:	0f b6       	in	r0, 0x3f	; 63
    1414:	f8 94       	cli
    1416:	de bf       	out	0x3e, r29	; 62
    1418:	0f be       	out	0x3f, r0	; 63
    141a:	cd bf       	out	0x3d, r28	; 61
    141c:	09 94       	ijmp

0000141e <__epilogue_restores__>:
    141e:	2a 88       	ldd	r2, Y+18	; 0x12
    1420:	39 88       	ldd	r3, Y+17	; 0x11
    1422:	48 88       	ldd	r4, Y+16	; 0x10
    1424:	5f 84       	ldd	r5, Y+15	; 0x0f
    1426:	6e 84       	ldd	r6, Y+14	; 0x0e
    1428:	7d 84       	ldd	r7, Y+13	; 0x0d
    142a:	8c 84       	ldd	r8, Y+12	; 0x0c
    142c:	9b 84       	ldd	r9, Y+11	; 0x0b
    142e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1430:	b9 84       	ldd	r11, Y+9	; 0x09
    1432:	c8 84       	ldd	r12, Y+8	; 0x08
    1434:	df 80       	ldd	r13, Y+7	; 0x07
    1436:	ee 80       	ldd	r14, Y+6	; 0x06
    1438:	fd 80       	ldd	r15, Y+5	; 0x05
    143a:	0c 81       	ldd	r16, Y+4	; 0x04
    143c:	1b 81       	ldd	r17, Y+3	; 0x03
    143e:	aa 81       	ldd	r26, Y+2	; 0x02
    1440:	b9 81       	ldd	r27, Y+1	; 0x01
    1442:	ce 0f       	add	r28, r30
    1444:	d1 1d       	adc	r29, r1
    1446:	0f b6       	in	r0, 0x3f	; 63
    1448:	f8 94       	cli
    144a:	de bf       	out	0x3e, r29	; 62
    144c:	0f be       	out	0x3f, r0	; 63
    144e:	cd bf       	out	0x3d, r28	; 61
    1450:	ed 01       	movw	r28, r26
    1452:	08 95       	ret

00001454 <_exit>:
    1454:	f8 94       	cli

00001456 <__stop_program>:
    1456:	ff cf       	rjmp	.-2      	; 0x1456 <__stop_program>
