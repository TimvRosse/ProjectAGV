
bin\Debug\ProjectAGV_Uno.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000108  00800100  00001fb8  0000206c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001fb8  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800208  00800208  00002174  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  00002174  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .debug_aranges 000001c0  00000000  00000000  00002177  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000002c9  00000000  00000000  00002337  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002b5c  00000000  00000000  00002600  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001517  00000000  00000000  0000515c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001ae5  00000000  00000000  00006673  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000280  00000000  00000000  00008158  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000440  00000000  00000000  000083d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009ce  00000000  00000000  00008818  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  000091e6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 94 01 	jmp	0x328	; 0x328 <__vector_3>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 64 03 	jmp	0x6c8	; 0x6c8 <__vector_13>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
      74:	12 e0       	ldi	r17, 0x02	; 2
      76:	a8 e0       	ldi	r26, 0x08	; 8
      78:	b2 e0       	ldi	r27, 0x02	; 2
      7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
      7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
      7e:	ae 30       	cpi	r26, 0x0E	; 14
      80:	b1 07       	cpc	r27, r17
      82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>

00000084 <__do_copy_data>:
      84:	12 e0       	ldi	r17, 0x02	; 2
      86:	a0 e0       	ldi	r26, 0x00	; 0
      88:	b1 e0       	ldi	r27, 0x01	; 1
      8a:	e8 eb       	ldi	r30, 0xB8	; 184
      8c:	ff e1       	ldi	r31, 0x1F	; 31
      8e:	02 c0       	rjmp	.+4      	; 0x94 <.do_copy_data_start>

00000090 <.do_copy_data_loop>:
      90:	05 90       	lpm	r0, Z+
      92:	0d 92       	st	X+, r0

00000094 <.do_copy_data_start>:
      94:	a8 30       	cpi	r26, 0x08	; 8
      96:	b1 07       	cpc	r27, r17
      98:	d9 f7       	brne	.-10     	; 0x90 <.do_copy_data_loop>
      9a:	0e 94 4e 07 	call	0xe9c	; 0xe9c <main>
      9e:	0c 94 da 0f 	jmp	0x1fb4	; 0x1fb4 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <init>:
volatile int aanwaarde = 0;
long int timer;


void init(void)
{
      a6:	df 93       	push	r29
      a8:	cf 93       	push	r28
      aa:	cd b7       	in	r28, 0x3d	; 61
      ac:	de b7       	in	r29, 0x3e	; 62
    //DDR Reg:
    DDRC |= _BV(motorPin);
      ae:	a7 e2       	ldi	r26, 0x27	; 39
      b0:	b0 e0       	ldi	r27, 0x00	; 0
      b2:	e7 e2       	ldi	r30, 0x27	; 39
      b4:	f0 e0       	ldi	r31, 0x00	; 0
      b6:	80 81       	ld	r24, Z
      b8:	84 60       	ori	r24, 0x04	; 4
      ba:	8c 93       	st	X, r24
    DDRC |= _BV(bochtPin);
      bc:	a7 e2       	ldi	r26, 0x27	; 39
      be:	b0 e0       	ldi	r27, 0x00	; 0
      c0:	e7 e2       	ldi	r30, 0x27	; 39
      c2:	f0 e0       	ldi	r31, 0x00	; 0
      c4:	80 81       	ld	r24, Z
      c6:	88 60       	ori	r24, 0x08	; 8
      c8:	8c 93       	st	X, r24
    DDRD |= _BV(buzzerPin);
      ca:	aa e2       	ldi	r26, 0x2A	; 42
      cc:	b0 e0       	ldi	r27, 0x00	; 0
      ce:	ea e2       	ldi	r30, 0x2A	; 42
      d0:	f0 e0       	ldi	r31, 0x00	; 0
      d2:	80 81       	ld	r24, Z
      d4:	82 60       	ori	r24, 0x02	; 2
      d6:	8c 93       	st	X, r24
    DDRD |= (1<<trig);
      d8:	aa e2       	ldi	r26, 0x2A	; 42
      da:	b0 e0       	ldi	r27, 0x00	; 0
      dc:	ea e2       	ldi	r30, 0x2A	; 42
      de:	f0 e0       	ldi	r31, 0x00	; 0
      e0:	80 81       	ld	r24, Z
      e2:	81 60       	ori	r24, 0x01	; 1
      e4:	8c 93       	st	X, r24

    //init pins:
    PORTB |= _BV(IrSen1);
      e6:	a5 e2       	ldi	r26, 0x25	; 37
      e8:	b0 e0       	ldi	r27, 0x00	; 0
      ea:	e5 e2       	ldi	r30, 0x25	; 37
      ec:	f0 e0       	ldi	r31, 0x00	; 0
      ee:	80 81       	ld	r24, Z
      f0:	82 60       	ori	r24, 0x02	; 2
      f2:	8c 93       	st	X, r24
    PORTB |= _BV(IrSen2);
      f4:	a5 e2       	ldi	r26, 0x25	; 37
      f6:	b0 e0       	ldi	r27, 0x00	; 0
      f8:	e5 e2       	ldi	r30, 0x25	; 37
      fa:	f0 e0       	ldi	r31, 0x00	; 0
      fc:	80 81       	ld	r24, Z
      fe:	84 60       	ori	r24, 0x04	; 4
     100:	8c 93       	st	X, r24

    //init PCINT
    PCICR |= (1 << PCIE0);
     102:	a8 e6       	ldi	r26, 0x68	; 104
     104:	b0 e0       	ldi	r27, 0x00	; 0
     106:	e8 e6       	ldi	r30, 0x68	; 104
     108:	f0 e0       	ldi	r31, 0x00	; 0
     10a:	80 81       	ld	r24, Z
     10c:	81 60       	ori	r24, 0x01	; 1
     10e:	8c 93       	st	X, r24
    PCMSK0 |= ((1 << IrSen1) | (1 << IrSen2));
     110:	ab e6       	ldi	r26, 0x6B	; 107
     112:	b0 e0       	ldi	r27, 0x00	; 0
     114:	eb e6       	ldi	r30, 0x6B	; 107
     116:	f0 e0       	ldi	r31, 0x00	; 0
     118:	80 81       	ld	r24, Z
     11a:	86 60       	ori	r24, 0x06	; 6
     11c:	8c 93       	st	X, r24

    //timer1 init
    TIMSK1 |= TOIE1;
     11e:	af e6       	ldi	r26, 0x6F	; 111
     120:	b0 e0       	ldi	r27, 0x00	; 0
     122:	ef e6       	ldi	r30, 0x6F	; 111
     124:	f0 e0       	ldi	r31, 0x00	; 0
     126:	80 81       	ld	r24, Z
     128:	8c 93       	st	X, r24
    TCCR1A = 0;
     12a:	e0 e8       	ldi	r30, 0x80	; 128
     12c:	f0 e0       	ldi	r31, 0x00	; 0
     12e:	10 82       	st	Z, r1

    //timer0 init
    TCCR0A = 0;
     130:	e4 e4       	ldi	r30, 0x44	; 68
     132:	f0 e0       	ldi	r31, 0x00	; 0
     134:	10 82       	st	Z, r1


    //init interrupt
    sei();
     136:	78 94       	sei
}
     138:	cf 91       	pop	r28
     13a:	df 91       	pop	r29
     13c:	08 95       	ret

0000013e <buzzer>:

void buzzer(int freq, int aantal)
{
     13e:	df 93       	push	r29
     140:	cf 93       	push	r28
     142:	cd b7       	in	r28, 0x3d	; 61
     144:	de b7       	in	r29, 0x3e	; 62
     146:	6e 97       	sbiw	r28, 0x1e	; 30
     148:	0f b6       	in	r0, 0x3f	; 63
     14a:	f8 94       	cli
     14c:	de bf       	out	0x3e, r29	; 62
     14e:	0f be       	out	0x3f, r0	; 63
     150:	cd bf       	out	0x3d, r28	; 61
     152:	9c 8f       	std	Y+28, r25	; 0x1c
     154:	8b 8f       	std	Y+27, r24	; 0x1b
     156:	7e 8f       	std	Y+30, r23	; 0x1e
     158:	6d 8f       	std	Y+29, r22	; 0x1d
    for(int i = 0; i < aantal; i++)
     15a:	1a 8e       	std	Y+26, r1	; 0x1a
     15c:	19 8e       	std	Y+25, r1	; 0x19
     15e:	d3 c0       	rjmp	.+422    	; 0x306 <buzzer+0x1c8>
    {
        PORTD ^= _BV(buzzerPin);
     160:	ab e2       	ldi	r26, 0x2B	; 43
     162:	b0 e0       	ldi	r27, 0x00	; 0
     164:	eb e2       	ldi	r30, 0x2B	; 43
     166:	f0 e0       	ldi	r31, 0x00	; 0
     168:	90 81       	ld	r25, Z
     16a:	82 e0       	ldi	r24, 0x02	; 2
     16c:	89 27       	eor	r24, r25
     16e:	8c 93       	st	X, r24
        _delay_us(freq);
     170:	8b 8d       	ldd	r24, Y+27	; 0x1b
     172:	9c 8d       	ldd	r25, Y+28	; 0x1c
     174:	aa 27       	eor	r26, r26
     176:	97 fd       	sbrc	r25, 7
     178:	a0 95       	com	r26
     17a:	ba 2f       	mov	r27, r26
     17c:	bc 01       	movw	r22, r24
     17e:	cd 01       	movw	r24, r26
     180:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <__floatsisf>
     184:	dc 01       	movw	r26, r24
     186:	cb 01       	movw	r24, r22
     188:	8d 8b       	std	Y+21, r24	; 0x15
     18a:	9e 8b       	std	Y+22, r25	; 0x16
     18c:	af 8b       	std	Y+23, r26	; 0x17
     18e:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     190:	6d 89       	ldd	r22, Y+21	; 0x15
     192:	7e 89       	ldd	r23, Y+22	; 0x16
     194:	8f 89       	ldd	r24, Y+23	; 0x17
     196:	98 8d       	ldd	r25, Y+24	; 0x18
     198:	2b ea       	ldi	r18, 0xAB	; 171
     19a:	3a ea       	ldi	r19, 0xAA	; 170
     19c:	4a ea       	ldi	r20, 0xAA	; 170
     19e:	50 e4       	ldi	r21, 0x40	; 64
     1a0:	0e 94 a7 0a 	call	0x154e	; 0x154e <__mulsf3>
     1a4:	dc 01       	movw	r26, r24
     1a6:	cb 01       	movw	r24, r22
     1a8:	89 8b       	std	Y+17, r24	; 0x11
     1aa:	9a 8b       	std	Y+18, r25	; 0x12
     1ac:	ab 8b       	std	Y+19, r26	; 0x13
     1ae:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
     1b0:	69 89       	ldd	r22, Y+17	; 0x11
     1b2:	7a 89       	ldd	r23, Y+18	; 0x12
     1b4:	8b 89       	ldd	r24, Y+19	; 0x13
     1b6:	9c 89       	ldd	r25, Y+20	; 0x14
     1b8:	20 e0       	ldi	r18, 0x00	; 0
     1ba:	30 e0       	ldi	r19, 0x00	; 0
     1bc:	40 e8       	ldi	r20, 0x80	; 128
     1be:	5f e3       	ldi	r21, 0x3F	; 63
     1c0:	0e 94 ad 0c 	call	0x195a	; 0x195a <__ltsf2>
     1c4:	88 23       	and	r24, r24
     1c6:	1c f4       	brge	.+6      	; 0x1ce <buzzer+0x90>
		__ticks = 1;
     1c8:	81 e0       	ldi	r24, 0x01	; 1
     1ca:	88 8b       	std	Y+16, r24	; 0x10
     1cc:	91 c0       	rjmp	.+290    	; 0x2f0 <buzzer+0x1b2>
	else if (__tmp > 255)
     1ce:	69 89       	ldd	r22, Y+17	; 0x11
     1d0:	7a 89       	ldd	r23, Y+18	; 0x12
     1d2:	8b 89       	ldd	r24, Y+19	; 0x13
     1d4:	9c 89       	ldd	r25, Y+20	; 0x14
     1d6:	20 e0       	ldi	r18, 0x00	; 0
     1d8:	30 e0       	ldi	r19, 0x00	; 0
     1da:	4f e7       	ldi	r20, 0x7F	; 127
     1dc:	53 e4       	ldi	r21, 0x43	; 67
     1de:	0e 94 4d 0c 	call	0x189a	; 0x189a <__gtsf2>
     1e2:	18 16       	cp	r1, r24
     1e4:	0c f0       	brlt	.+2      	; 0x1e8 <buzzer+0xaa>
     1e6:	7b c0       	rjmp	.+246    	; 0x2de <buzzer+0x1a0>
	{
		_delay_ms(__us / 1000.0);
     1e8:	6d 89       	ldd	r22, Y+21	; 0x15
     1ea:	7e 89       	ldd	r23, Y+22	; 0x16
     1ec:	8f 89       	ldd	r24, Y+23	; 0x17
     1ee:	98 8d       	ldd	r25, Y+24	; 0x18
     1f0:	20 e0       	ldi	r18, 0x00	; 0
     1f2:	30 e0       	ldi	r19, 0x00	; 0
     1f4:	4a e7       	ldi	r20, 0x7A	; 122
     1f6:	54 e4       	ldi	r21, 0x44	; 68
     1f8:	0e 94 a1 0b 	call	0x1742	; 0x1742 <__divsf3>
     1fc:	dc 01       	movw	r26, r24
     1fe:	cb 01       	movw	r24, r22
     200:	8c 87       	std	Y+12, r24	; 0x0c
     202:	9d 87       	std	Y+13, r25	; 0x0d
     204:	ae 87       	std	Y+14, r26	; 0x0e
     206:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     208:	6c 85       	ldd	r22, Y+12	; 0x0c
     20a:	7d 85       	ldd	r23, Y+13	; 0x0d
     20c:	8e 85       	ldd	r24, Y+14	; 0x0e
     20e:	9f 85       	ldd	r25, Y+15	; 0x0f
     210:	20 e0       	ldi	r18, 0x00	; 0
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	4a e7       	ldi	r20, 0x7A	; 122
     216:	55 e4       	ldi	r21, 0x45	; 69
     218:	0e 94 a7 0a 	call	0x154e	; 0x154e <__mulsf3>
     21c:	dc 01       	movw	r26, r24
     21e:	cb 01       	movw	r24, r22
     220:	88 87       	std	Y+8, r24	; 0x08
     222:	99 87       	std	Y+9, r25	; 0x09
     224:	aa 87       	std	Y+10, r26	; 0x0a
     226:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
     228:	68 85       	ldd	r22, Y+8	; 0x08
     22a:	79 85       	ldd	r23, Y+9	; 0x09
     22c:	8a 85       	ldd	r24, Y+10	; 0x0a
     22e:	9b 85       	ldd	r25, Y+11	; 0x0b
     230:	20 e0       	ldi	r18, 0x00	; 0
     232:	30 e0       	ldi	r19, 0x00	; 0
     234:	40 e8       	ldi	r20, 0x80	; 128
     236:	5f e3       	ldi	r21, 0x3F	; 63
     238:	0e 94 ad 0c 	call	0x195a	; 0x195a <__ltsf2>
     23c:	88 23       	and	r24, r24
     23e:	2c f4       	brge	.+10     	; 0x24a <buzzer+0x10c>
		__ticks = 1;
     240:	81 e0       	ldi	r24, 0x01	; 1
     242:	90 e0       	ldi	r25, 0x00	; 0
     244:	9f 83       	std	Y+7, r25	; 0x07
     246:	8e 83       	std	Y+6, r24	; 0x06
     248:	3f c0       	rjmp	.+126    	; 0x2c8 <buzzer+0x18a>
	else if (__tmp > 65535)
     24a:	68 85       	ldd	r22, Y+8	; 0x08
     24c:	79 85       	ldd	r23, Y+9	; 0x09
     24e:	8a 85       	ldd	r24, Y+10	; 0x0a
     250:	9b 85       	ldd	r25, Y+11	; 0x0b
     252:	20 e0       	ldi	r18, 0x00	; 0
     254:	3f ef       	ldi	r19, 0xFF	; 255
     256:	4f e7       	ldi	r20, 0x7F	; 127
     258:	57 e4       	ldi	r21, 0x47	; 71
     25a:	0e 94 4d 0c 	call	0x189a	; 0x189a <__gtsf2>
     25e:	18 16       	cp	r1, r24
     260:	4c f5       	brge	.+82     	; 0x2b4 <buzzer+0x176>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     262:	6c 85       	ldd	r22, Y+12	; 0x0c
     264:	7d 85       	ldd	r23, Y+13	; 0x0d
     266:	8e 85       	ldd	r24, Y+14	; 0x0e
     268:	9f 85       	ldd	r25, Y+15	; 0x0f
     26a:	20 e0       	ldi	r18, 0x00	; 0
     26c:	30 e0       	ldi	r19, 0x00	; 0
     26e:	40 e2       	ldi	r20, 0x20	; 32
     270:	51 e4       	ldi	r21, 0x41	; 65
     272:	0e 94 a7 0a 	call	0x154e	; 0x154e <__mulsf3>
     276:	dc 01       	movw	r26, r24
     278:	cb 01       	movw	r24, r22
     27a:	bc 01       	movw	r22, r24
     27c:	cd 01       	movw	r24, r26
     27e:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <__fixunssfsi>
     282:	dc 01       	movw	r26, r24
     284:	cb 01       	movw	r24, r22
     286:	9f 83       	std	Y+7, r25	; 0x07
     288:	8e 83       	std	Y+6, r24	; 0x06
     28a:	0f c0       	rjmp	.+30     	; 0x2aa <buzzer+0x16c>
     28c:	80 e9       	ldi	r24, 0x90	; 144
     28e:	91 e0       	ldi	r25, 0x01	; 1
     290:	9d 83       	std	Y+5, r25	; 0x05
     292:	8c 83       	std	Y+4, r24	; 0x04
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     294:	8c 81       	ldd	r24, Y+4	; 0x04
     296:	9d 81       	ldd	r25, Y+5	; 0x05
     298:	01 97       	sbiw	r24, 0x01	; 1
     29a:	f1 f7       	brne	.-4      	; 0x298 <buzzer+0x15a>
     29c:	9d 83       	std	Y+5, r25	; 0x05
     29e:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     2a0:	8e 81       	ldd	r24, Y+6	; 0x06
     2a2:	9f 81       	ldd	r25, Y+7	; 0x07
     2a4:	01 97       	sbiw	r24, 0x01	; 1
     2a6:	9f 83       	std	Y+7, r25	; 0x07
     2a8:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     2aa:	8e 81       	ldd	r24, Y+6	; 0x06
     2ac:	9f 81       	ldd	r25, Y+7	; 0x07
     2ae:	00 97       	sbiw	r24, 0x00	; 0
     2b0:	69 f7       	brne	.-38     	; 0x28c <buzzer+0x14e>
     2b2:	24 c0       	rjmp	.+72     	; 0x2fc <buzzer+0x1be>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     2b4:	68 85       	ldd	r22, Y+8	; 0x08
     2b6:	79 85       	ldd	r23, Y+9	; 0x09
     2b8:	8a 85       	ldd	r24, Y+10	; 0x0a
     2ba:	9b 85       	ldd	r25, Y+11	; 0x0b
     2bc:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <__fixunssfsi>
     2c0:	dc 01       	movw	r26, r24
     2c2:	cb 01       	movw	r24, r22
     2c4:	9f 83       	std	Y+7, r25	; 0x07
     2c6:	8e 83       	std	Y+6, r24	; 0x06
     2c8:	8e 81       	ldd	r24, Y+6	; 0x06
     2ca:	9f 81       	ldd	r25, Y+7	; 0x07
     2cc:	9b 83       	std	Y+3, r25	; 0x03
     2ce:	8a 83       	std	Y+2, r24	; 0x02
     2d0:	8a 81       	ldd	r24, Y+2	; 0x02
     2d2:	9b 81       	ldd	r25, Y+3	; 0x03
     2d4:	01 97       	sbiw	r24, 0x01	; 1
     2d6:	f1 f7       	brne	.-4      	; 0x2d4 <buzzer+0x196>
     2d8:	9b 83       	std	Y+3, r25	; 0x03
     2da:	8a 83       	std	Y+2, r24	; 0x02
     2dc:	0f c0       	rjmp	.+30     	; 0x2fc <buzzer+0x1be>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     2de:	69 89       	ldd	r22, Y+17	; 0x11
     2e0:	7a 89       	ldd	r23, Y+18	; 0x12
     2e2:	8b 89       	ldd	r24, Y+19	; 0x13
     2e4:	9c 89       	ldd	r25, Y+20	; 0x14
     2e6:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <__fixunssfsi>
     2ea:	dc 01       	movw	r26, r24
     2ec:	cb 01       	movw	r24, r22
     2ee:	88 8b       	std	Y+16, r24	; 0x10
     2f0:	88 89       	ldd	r24, Y+16	; 0x10
     2f2:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     2f4:	89 81       	ldd	r24, Y+1	; 0x01
     2f6:	8a 95       	dec	r24
     2f8:	f1 f7       	brne	.-4      	; 0x2f6 <buzzer+0x1b8>
     2fa:	89 83       	std	Y+1, r24	; 0x01
    sei();
}

void buzzer(int freq, int aantal)
{
    for(int i = 0; i < aantal; i++)
     2fc:	89 8d       	ldd	r24, Y+25	; 0x19
     2fe:	9a 8d       	ldd	r25, Y+26	; 0x1a
     300:	01 96       	adiw	r24, 0x01	; 1
     302:	9a 8f       	std	Y+26, r25	; 0x1a
     304:	89 8f       	std	Y+25, r24	; 0x19
     306:	29 8d       	ldd	r18, Y+25	; 0x19
     308:	3a 8d       	ldd	r19, Y+26	; 0x1a
     30a:	8d 8d       	ldd	r24, Y+29	; 0x1d
     30c:	9e 8d       	ldd	r25, Y+30	; 0x1e
     30e:	28 17       	cp	r18, r24
     310:	39 07       	cpc	r19, r25
     312:	0c f4       	brge	.+2      	; 0x316 <buzzer+0x1d8>
     314:	25 cf       	rjmp	.-438    	; 0x160 <buzzer+0x22>
    {
        PORTD ^= _BV(buzzerPin);
        _delay_us(freq);

    }
}
     316:	6e 96       	adiw	r28, 0x1e	; 30
     318:	0f b6       	in	r0, 0x3f	; 63
     31a:	f8 94       	cli
     31c:	de bf       	out	0x3e, r29	; 62
     31e:	0f be       	out	0x3f, r0	; 63
     320:	cd bf       	out	0x3d, r28	; 61
     322:	cf 91       	pop	r28
     324:	df 91       	pop	r29
     326:	08 95       	ret

00000328 <__vector_3>:

ISR(PCINT0_vect) //IR sensoren interrupt
{
     328:	1f 92       	push	r1
     32a:	0f 92       	push	r0
     32c:	0f b6       	in	r0, 0x3f	; 63
     32e:	0f 92       	push	r0
     330:	11 24       	eor	r1, r1
     332:	2f 93       	push	r18
     334:	3f 93       	push	r19
     336:	4f 93       	push	r20
     338:	5f 93       	push	r21
     33a:	6f 93       	push	r22
     33c:	7f 93       	push	r23
     33e:	8f 93       	push	r24
     340:	9f 93       	push	r25
     342:	af 93       	push	r26
     344:	bf 93       	push	r27
     346:	ef 93       	push	r30
     348:	ff 93       	push	r31
     34a:	df 93       	push	r29
     34c:	cf 93       	push	r28
     34e:	cd b7       	in	r28, 0x3d	; 61
     350:	de b7       	in	r29, 0x3e	; 62
     352:	aa 97       	sbiw	r28, 0x2a	; 42
     354:	de bf       	out	0x3e, r29	; 62
     356:	cd bf       	out	0x3d, r28	; 61
     358:	80 e0       	ldi	r24, 0x00	; 0
     35a:	90 e0       	ldi	r25, 0x00	; 0
     35c:	a8 ec       	ldi	r26, 0xC8	; 200
     35e:	b1 e4       	ldi	r27, 0x41	; 65
     360:	8f a3       	std	Y+39, r24	; 0x27
     362:	98 a7       	std	Y+40, r25	; 0x28
     364:	a9 a7       	std	Y+41, r26	; 0x29
     366:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     368:	6f a1       	ldd	r22, Y+39	; 0x27
     36a:	78 a5       	ldd	r23, Y+40	; 0x28
     36c:	89 a5       	ldd	r24, Y+41	; 0x29
     36e:	9a a5       	ldd	r25, Y+42	; 0x2a
     370:	20 e0       	ldi	r18, 0x00	; 0
     372:	30 e0       	ldi	r19, 0x00	; 0
     374:	4a e7       	ldi	r20, 0x7A	; 122
     376:	55 e4       	ldi	r21, 0x45	; 69
     378:	0e 94 a7 0a 	call	0x154e	; 0x154e <__mulsf3>
     37c:	dc 01       	movw	r26, r24
     37e:	cb 01       	movw	r24, r22
     380:	8b a3       	std	Y+35, r24	; 0x23
     382:	9c a3       	std	Y+36, r25	; 0x24
     384:	ad a3       	std	Y+37, r26	; 0x25
     386:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     388:	6b a1       	ldd	r22, Y+35	; 0x23
     38a:	7c a1       	ldd	r23, Y+36	; 0x24
     38c:	8d a1       	ldd	r24, Y+37	; 0x25
     38e:	9e a1       	ldd	r25, Y+38	; 0x26
     390:	20 e0       	ldi	r18, 0x00	; 0
     392:	30 e0       	ldi	r19, 0x00	; 0
     394:	40 e8       	ldi	r20, 0x80	; 128
     396:	5f e3       	ldi	r21, 0x3F	; 63
     398:	0e 94 ad 0c 	call	0x195a	; 0x195a <__ltsf2>
     39c:	88 23       	and	r24, r24
     39e:	2c f4       	brge	.+10     	; 0x3aa <__vector_3+0x82>
		__ticks = 1;
     3a0:	81 e0       	ldi	r24, 0x01	; 1
     3a2:	90 e0       	ldi	r25, 0x00	; 0
     3a4:	9a a3       	std	Y+34, r25	; 0x22
     3a6:	89 a3       	std	Y+33, r24	; 0x21
     3a8:	3f c0       	rjmp	.+126    	; 0x428 <__vector_3+0x100>
	else if (__tmp > 65535)
     3aa:	6b a1       	ldd	r22, Y+35	; 0x23
     3ac:	7c a1       	ldd	r23, Y+36	; 0x24
     3ae:	8d a1       	ldd	r24, Y+37	; 0x25
     3b0:	9e a1       	ldd	r25, Y+38	; 0x26
     3b2:	20 e0       	ldi	r18, 0x00	; 0
     3b4:	3f ef       	ldi	r19, 0xFF	; 255
     3b6:	4f e7       	ldi	r20, 0x7F	; 127
     3b8:	57 e4       	ldi	r21, 0x47	; 71
     3ba:	0e 94 4d 0c 	call	0x189a	; 0x189a <__gtsf2>
     3be:	18 16       	cp	r1, r24
     3c0:	4c f5       	brge	.+82     	; 0x414 <__vector_3+0xec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     3c2:	6f a1       	ldd	r22, Y+39	; 0x27
     3c4:	78 a5       	ldd	r23, Y+40	; 0x28
     3c6:	89 a5       	ldd	r24, Y+41	; 0x29
     3c8:	9a a5       	ldd	r25, Y+42	; 0x2a
     3ca:	20 e0       	ldi	r18, 0x00	; 0
     3cc:	30 e0       	ldi	r19, 0x00	; 0
     3ce:	40 e2       	ldi	r20, 0x20	; 32
     3d0:	51 e4       	ldi	r21, 0x41	; 65
     3d2:	0e 94 a7 0a 	call	0x154e	; 0x154e <__mulsf3>
     3d6:	dc 01       	movw	r26, r24
     3d8:	cb 01       	movw	r24, r22
     3da:	bc 01       	movw	r22, r24
     3dc:	cd 01       	movw	r24, r26
     3de:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <__fixunssfsi>
     3e2:	dc 01       	movw	r26, r24
     3e4:	cb 01       	movw	r24, r22
     3e6:	9a a3       	std	Y+34, r25	; 0x22
     3e8:	89 a3       	std	Y+33, r24	; 0x21
     3ea:	0f c0       	rjmp	.+30     	; 0x40a <__vector_3+0xe2>
     3ec:	80 e9       	ldi	r24, 0x90	; 144
     3ee:	91 e0       	ldi	r25, 0x01	; 1
     3f0:	98 a3       	std	Y+32, r25	; 0x20
     3f2:	8f 8f       	std	Y+31, r24	; 0x1f
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     3f4:	8f 8d       	ldd	r24, Y+31	; 0x1f
     3f6:	98 a1       	ldd	r25, Y+32	; 0x20
     3f8:	01 97       	sbiw	r24, 0x01	; 1
     3fa:	f1 f7       	brne	.-4      	; 0x3f8 <__vector_3+0xd0>
     3fc:	98 a3       	std	Y+32, r25	; 0x20
     3fe:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     400:	89 a1       	ldd	r24, Y+33	; 0x21
     402:	9a a1       	ldd	r25, Y+34	; 0x22
     404:	01 97       	sbiw	r24, 0x01	; 1
     406:	9a a3       	std	Y+34, r25	; 0x22
     408:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     40a:	89 a1       	ldd	r24, Y+33	; 0x21
     40c:	9a a1       	ldd	r25, Y+34	; 0x22
     40e:	00 97       	sbiw	r24, 0x00	; 0
     410:	69 f7       	brne	.-38     	; 0x3ec <__vector_3+0xc4>
     412:	14 c0       	rjmp	.+40     	; 0x43c <__vector_3+0x114>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     414:	6b a1       	ldd	r22, Y+35	; 0x23
     416:	7c a1       	ldd	r23, Y+36	; 0x24
     418:	8d a1       	ldd	r24, Y+37	; 0x25
     41a:	9e a1       	ldd	r25, Y+38	; 0x26
     41c:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <__fixunssfsi>
     420:	dc 01       	movw	r26, r24
     422:	cb 01       	movw	r24, r22
     424:	9a a3       	std	Y+34, r25	; 0x22
     426:	89 a3       	std	Y+33, r24	; 0x21
     428:	89 a1       	ldd	r24, Y+33	; 0x21
     42a:	9a a1       	ldd	r25, Y+34	; 0x22
     42c:	9e 8f       	std	Y+30, r25	; 0x1e
     42e:	8d 8f       	std	Y+29, r24	; 0x1d
     430:	8d 8d       	ldd	r24, Y+29	; 0x1d
     432:	9e 8d       	ldd	r25, Y+30	; 0x1e
     434:	01 97       	sbiw	r24, 0x01	; 1
     436:	f1 f7       	brne	.-4      	; 0x434 <__vector_3+0x10c>
     438:	9e 8f       	std	Y+30, r25	; 0x1e
     43a:	8d 8f       	std	Y+29, r24	; 0x1d
    _delay_ms(25);
    if(bit_is_clear(PINB, IrSen1))
     43c:	e3 e2       	ldi	r30, 0x23	; 35
     43e:	f0 e0       	ldi	r31, 0x00	; 0
     440:	80 81       	ld	r24, Z
     442:	88 2f       	mov	r24, r24
     444:	90 e0       	ldi	r25, 0x00	; 0
     446:	82 70       	andi	r24, 0x02	; 2
     448:	90 70       	andi	r25, 0x00	; 0
     44a:	00 97       	sbiw	r24, 0x00	; 0
     44c:	09 f0       	breq	.+2      	; 0x450 <__vector_3+0x128>
     44e:	8e c0       	rjmp	.+284    	; 0x56c <__vector_3+0x244>
    {
        if(aanwaarde != 1)
     450:	80 91 08 02 	lds	r24, 0x0208
     454:	90 91 09 02 	lds	r25, 0x0209
     458:	81 30       	cpi	r24, 0x01	; 1
     45a:	91 05       	cpc	r25, r1
     45c:	09 f4       	brne	.+2      	; 0x460 <__vector_3+0x138>
     45e:	86 c0       	rjmp	.+268    	; 0x56c <__vector_3+0x244>
        {
            PORTC |= _BV(motorPin);
     460:	a8 e2       	ldi	r26, 0x28	; 40
     462:	b0 e0       	ldi	r27, 0x00	; 0
     464:	e8 e2       	ldi	r30, 0x28	; 40
     466:	f0 e0       	ldi	r31, 0x00	; 0
     468:	80 81       	ld	r24, Z
     46a:	84 60       	ori	r24, 0x04	; 4
     46c:	8c 93       	st	X, r24
            buzzer(350, 1000);
     46e:	8e e5       	ldi	r24, 0x5E	; 94
     470:	91 e0       	ldi	r25, 0x01	; 1
     472:	68 ee       	ldi	r22, 0xE8	; 232
     474:	73 e0       	ldi	r23, 0x03	; 3
     476:	0e 94 9f 00 	call	0x13e	; 0x13e <buzzer>
     47a:	80 e0       	ldi	r24, 0x00	; 0
     47c:	90 e0       	ldi	r25, 0x00	; 0
     47e:	aa ef       	ldi	r26, 0xFA	; 250
     480:	b3 e4       	ldi	r27, 0x43	; 67
     482:	89 8f       	std	Y+25, r24	; 0x19
     484:	9a 8f       	std	Y+26, r25	; 0x1a
     486:	ab 8f       	std	Y+27, r26	; 0x1b
     488:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     48a:	69 8d       	ldd	r22, Y+25	; 0x19
     48c:	7a 8d       	ldd	r23, Y+26	; 0x1a
     48e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     490:	9c 8d       	ldd	r25, Y+28	; 0x1c
     492:	20 e0       	ldi	r18, 0x00	; 0
     494:	30 e0       	ldi	r19, 0x00	; 0
     496:	4a e7       	ldi	r20, 0x7A	; 122
     498:	55 e4       	ldi	r21, 0x45	; 69
     49a:	0e 94 a7 0a 	call	0x154e	; 0x154e <__mulsf3>
     49e:	dc 01       	movw	r26, r24
     4a0:	cb 01       	movw	r24, r22
     4a2:	8d 8b       	std	Y+21, r24	; 0x15
     4a4:	9e 8b       	std	Y+22, r25	; 0x16
     4a6:	af 8b       	std	Y+23, r26	; 0x17
     4a8:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     4aa:	6d 89       	ldd	r22, Y+21	; 0x15
     4ac:	7e 89       	ldd	r23, Y+22	; 0x16
     4ae:	8f 89       	ldd	r24, Y+23	; 0x17
     4b0:	98 8d       	ldd	r25, Y+24	; 0x18
     4b2:	20 e0       	ldi	r18, 0x00	; 0
     4b4:	30 e0       	ldi	r19, 0x00	; 0
     4b6:	40 e8       	ldi	r20, 0x80	; 128
     4b8:	5f e3       	ldi	r21, 0x3F	; 63
     4ba:	0e 94 ad 0c 	call	0x195a	; 0x195a <__ltsf2>
     4be:	88 23       	and	r24, r24
     4c0:	2c f4       	brge	.+10     	; 0x4cc <__vector_3+0x1a4>
		__ticks = 1;
     4c2:	81 e0       	ldi	r24, 0x01	; 1
     4c4:	90 e0       	ldi	r25, 0x00	; 0
     4c6:	9c 8b       	std	Y+20, r25	; 0x14
     4c8:	8b 8b       	std	Y+19, r24	; 0x13
     4ca:	3f c0       	rjmp	.+126    	; 0x54a <__vector_3+0x222>
	else if (__tmp > 65535)
     4cc:	6d 89       	ldd	r22, Y+21	; 0x15
     4ce:	7e 89       	ldd	r23, Y+22	; 0x16
     4d0:	8f 89       	ldd	r24, Y+23	; 0x17
     4d2:	98 8d       	ldd	r25, Y+24	; 0x18
     4d4:	20 e0       	ldi	r18, 0x00	; 0
     4d6:	3f ef       	ldi	r19, 0xFF	; 255
     4d8:	4f e7       	ldi	r20, 0x7F	; 127
     4da:	57 e4       	ldi	r21, 0x47	; 71
     4dc:	0e 94 4d 0c 	call	0x189a	; 0x189a <__gtsf2>
     4e0:	18 16       	cp	r1, r24
     4e2:	4c f5       	brge	.+82     	; 0x536 <__vector_3+0x20e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     4e4:	69 8d       	ldd	r22, Y+25	; 0x19
     4e6:	7a 8d       	ldd	r23, Y+26	; 0x1a
     4e8:	8b 8d       	ldd	r24, Y+27	; 0x1b
     4ea:	9c 8d       	ldd	r25, Y+28	; 0x1c
     4ec:	20 e0       	ldi	r18, 0x00	; 0
     4ee:	30 e0       	ldi	r19, 0x00	; 0
     4f0:	40 e2       	ldi	r20, 0x20	; 32
     4f2:	51 e4       	ldi	r21, 0x41	; 65
     4f4:	0e 94 a7 0a 	call	0x154e	; 0x154e <__mulsf3>
     4f8:	dc 01       	movw	r26, r24
     4fa:	cb 01       	movw	r24, r22
     4fc:	bc 01       	movw	r22, r24
     4fe:	cd 01       	movw	r24, r26
     500:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <__fixunssfsi>
     504:	dc 01       	movw	r26, r24
     506:	cb 01       	movw	r24, r22
     508:	9c 8b       	std	Y+20, r25	; 0x14
     50a:	8b 8b       	std	Y+19, r24	; 0x13
     50c:	0f c0       	rjmp	.+30     	; 0x52c <__vector_3+0x204>
     50e:	80 e9       	ldi	r24, 0x90	; 144
     510:	91 e0       	ldi	r25, 0x01	; 1
     512:	9a 8b       	std	Y+18, r25	; 0x12
     514:	89 8b       	std	Y+17, r24	; 0x11
     516:	89 89       	ldd	r24, Y+17	; 0x11
     518:	9a 89       	ldd	r25, Y+18	; 0x12
     51a:	01 97       	sbiw	r24, 0x01	; 1
     51c:	f1 f7       	brne	.-4      	; 0x51a <__vector_3+0x1f2>
     51e:	9a 8b       	std	Y+18, r25	; 0x12
     520:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     522:	8b 89       	ldd	r24, Y+19	; 0x13
     524:	9c 89       	ldd	r25, Y+20	; 0x14
     526:	01 97       	sbiw	r24, 0x01	; 1
     528:	9c 8b       	std	Y+20, r25	; 0x14
     52a:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     52c:	8b 89       	ldd	r24, Y+19	; 0x13
     52e:	9c 89       	ldd	r25, Y+20	; 0x14
     530:	00 97       	sbiw	r24, 0x00	; 0
     532:	69 f7       	brne	.-38     	; 0x50e <__vector_3+0x1e6>
     534:	14 c0       	rjmp	.+40     	; 0x55e <__vector_3+0x236>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     536:	6d 89       	ldd	r22, Y+21	; 0x15
     538:	7e 89       	ldd	r23, Y+22	; 0x16
     53a:	8f 89       	ldd	r24, Y+23	; 0x17
     53c:	98 8d       	ldd	r25, Y+24	; 0x18
     53e:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <__fixunssfsi>
     542:	dc 01       	movw	r26, r24
     544:	cb 01       	movw	r24, r22
     546:	9c 8b       	std	Y+20, r25	; 0x14
     548:	8b 8b       	std	Y+19, r24	; 0x13
     54a:	8b 89       	ldd	r24, Y+19	; 0x13
     54c:	9c 89       	ldd	r25, Y+20	; 0x14
     54e:	98 8b       	std	Y+16, r25	; 0x10
     550:	8f 87       	std	Y+15, r24	; 0x0f
     552:	8f 85       	ldd	r24, Y+15	; 0x0f
     554:	98 89       	ldd	r25, Y+16	; 0x10
     556:	01 97       	sbiw	r24, 0x01	; 1
     558:	f1 f7       	brne	.-4      	; 0x556 <__vector_3+0x22e>
     55a:	98 8b       	std	Y+16, r25	; 0x10
     55c:	8f 87       	std	Y+15, r24	; 0x0f
            _delay_ms(500);
            PORTC &= ~_BV(motorPin);
     55e:	a8 e2       	ldi	r26, 0x28	; 40
     560:	b0 e0       	ldi	r27, 0x00	; 0
     562:	e8 e2       	ldi	r30, 0x28	; 40
     564:	f0 e0       	ldi	r31, 0x00	; 0
     566:	80 81       	ld	r24, Z
     568:	8b 7f       	andi	r24, 0xFB	; 251
     56a:	8c 93       	st	X, r24
        }

    }
    if(bit_is_clear(PINB, IrSen2))
     56c:	e3 e2       	ldi	r30, 0x23	; 35
     56e:	f0 e0       	ldi	r31, 0x00	; 0
     570:	80 81       	ld	r24, Z
     572:	88 2f       	mov	r24, r24
     574:	90 e0       	ldi	r25, 0x00	; 0
     576:	84 70       	andi	r24, 0x04	; 4
     578:	90 70       	andi	r25, 0x00	; 0
     57a:	00 97       	sbiw	r24, 0x00	; 0
     57c:	09 f0       	breq	.+2      	; 0x580 <__vector_3+0x258>
     57e:	8e c0       	rjmp	.+284    	; 0x69c <__vector_3+0x374>
    {
        if(aanwaarde != 2)
     580:	80 91 08 02 	lds	r24, 0x0208
     584:	90 91 09 02 	lds	r25, 0x0209
     588:	82 30       	cpi	r24, 0x02	; 2
     58a:	91 05       	cpc	r25, r1
     58c:	09 f4       	brne	.+2      	; 0x590 <__vector_3+0x268>
     58e:	86 c0       	rjmp	.+268    	; 0x69c <__vector_3+0x374>
        {
            PORTC |= _BV(motorPin);
     590:	a8 e2       	ldi	r26, 0x28	; 40
     592:	b0 e0       	ldi	r27, 0x00	; 0
     594:	e8 e2       	ldi	r30, 0x28	; 40
     596:	f0 e0       	ldi	r31, 0x00	; 0
     598:	80 81       	ld	r24, Z
     59a:	84 60       	ori	r24, 0x04	; 4
     59c:	8c 93       	st	X, r24
            buzzer(350, 1000);
     59e:	8e e5       	ldi	r24, 0x5E	; 94
     5a0:	91 e0       	ldi	r25, 0x01	; 1
     5a2:	68 ee       	ldi	r22, 0xE8	; 232
     5a4:	73 e0       	ldi	r23, 0x03	; 3
     5a6:	0e 94 9f 00 	call	0x13e	; 0x13e <buzzer>
     5aa:	80 e0       	ldi	r24, 0x00	; 0
     5ac:	90 e0       	ldi	r25, 0x00	; 0
     5ae:	aa ef       	ldi	r26, 0xFA	; 250
     5b0:	b3 e4       	ldi	r27, 0x43	; 67
     5b2:	8b 87       	std	Y+11, r24	; 0x0b
     5b4:	9c 87       	std	Y+12, r25	; 0x0c
     5b6:	ad 87       	std	Y+13, r26	; 0x0d
     5b8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     5ba:	6b 85       	ldd	r22, Y+11	; 0x0b
     5bc:	7c 85       	ldd	r23, Y+12	; 0x0c
     5be:	8d 85       	ldd	r24, Y+13	; 0x0d
     5c0:	9e 85       	ldd	r25, Y+14	; 0x0e
     5c2:	20 e0       	ldi	r18, 0x00	; 0
     5c4:	30 e0       	ldi	r19, 0x00	; 0
     5c6:	4a e7       	ldi	r20, 0x7A	; 122
     5c8:	55 e4       	ldi	r21, 0x45	; 69
     5ca:	0e 94 a7 0a 	call	0x154e	; 0x154e <__mulsf3>
     5ce:	dc 01       	movw	r26, r24
     5d0:	cb 01       	movw	r24, r22
     5d2:	8f 83       	std	Y+7, r24	; 0x07
     5d4:	98 87       	std	Y+8, r25	; 0x08
     5d6:	a9 87       	std	Y+9, r26	; 0x09
     5d8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     5da:	6f 81       	ldd	r22, Y+7	; 0x07
     5dc:	78 85       	ldd	r23, Y+8	; 0x08
     5de:	89 85       	ldd	r24, Y+9	; 0x09
     5e0:	9a 85       	ldd	r25, Y+10	; 0x0a
     5e2:	20 e0       	ldi	r18, 0x00	; 0
     5e4:	30 e0       	ldi	r19, 0x00	; 0
     5e6:	40 e8       	ldi	r20, 0x80	; 128
     5e8:	5f e3       	ldi	r21, 0x3F	; 63
     5ea:	0e 94 ad 0c 	call	0x195a	; 0x195a <__ltsf2>
     5ee:	88 23       	and	r24, r24
     5f0:	2c f4       	brge	.+10     	; 0x5fc <__vector_3+0x2d4>
		__ticks = 1;
     5f2:	81 e0       	ldi	r24, 0x01	; 1
     5f4:	90 e0       	ldi	r25, 0x00	; 0
     5f6:	9e 83       	std	Y+6, r25	; 0x06
     5f8:	8d 83       	std	Y+5, r24	; 0x05
     5fa:	3f c0       	rjmp	.+126    	; 0x67a <__vector_3+0x352>
	else if (__tmp > 65535)
     5fc:	6f 81       	ldd	r22, Y+7	; 0x07
     5fe:	78 85       	ldd	r23, Y+8	; 0x08
     600:	89 85       	ldd	r24, Y+9	; 0x09
     602:	9a 85       	ldd	r25, Y+10	; 0x0a
     604:	20 e0       	ldi	r18, 0x00	; 0
     606:	3f ef       	ldi	r19, 0xFF	; 255
     608:	4f e7       	ldi	r20, 0x7F	; 127
     60a:	57 e4       	ldi	r21, 0x47	; 71
     60c:	0e 94 4d 0c 	call	0x189a	; 0x189a <__gtsf2>
     610:	18 16       	cp	r1, r24
     612:	4c f5       	brge	.+82     	; 0x666 <__vector_3+0x33e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     614:	6b 85       	ldd	r22, Y+11	; 0x0b
     616:	7c 85       	ldd	r23, Y+12	; 0x0c
     618:	8d 85       	ldd	r24, Y+13	; 0x0d
     61a:	9e 85       	ldd	r25, Y+14	; 0x0e
     61c:	20 e0       	ldi	r18, 0x00	; 0
     61e:	30 e0       	ldi	r19, 0x00	; 0
     620:	40 e2       	ldi	r20, 0x20	; 32
     622:	51 e4       	ldi	r21, 0x41	; 65
     624:	0e 94 a7 0a 	call	0x154e	; 0x154e <__mulsf3>
     628:	dc 01       	movw	r26, r24
     62a:	cb 01       	movw	r24, r22
     62c:	bc 01       	movw	r22, r24
     62e:	cd 01       	movw	r24, r26
     630:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <__fixunssfsi>
     634:	dc 01       	movw	r26, r24
     636:	cb 01       	movw	r24, r22
     638:	9e 83       	std	Y+6, r25	; 0x06
     63a:	8d 83       	std	Y+5, r24	; 0x05
     63c:	0f c0       	rjmp	.+30     	; 0x65c <__vector_3+0x334>
     63e:	80 e9       	ldi	r24, 0x90	; 144
     640:	91 e0       	ldi	r25, 0x01	; 1
     642:	9c 83       	std	Y+4, r25	; 0x04
     644:	8b 83       	std	Y+3, r24	; 0x03
     646:	8b 81       	ldd	r24, Y+3	; 0x03
     648:	9c 81       	ldd	r25, Y+4	; 0x04
     64a:	01 97       	sbiw	r24, 0x01	; 1
     64c:	f1 f7       	brne	.-4      	; 0x64a <__vector_3+0x322>
     64e:	9c 83       	std	Y+4, r25	; 0x04
     650:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     652:	8d 81       	ldd	r24, Y+5	; 0x05
     654:	9e 81       	ldd	r25, Y+6	; 0x06
     656:	01 97       	sbiw	r24, 0x01	; 1
     658:	9e 83       	std	Y+6, r25	; 0x06
     65a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     65c:	8d 81       	ldd	r24, Y+5	; 0x05
     65e:	9e 81       	ldd	r25, Y+6	; 0x06
     660:	00 97       	sbiw	r24, 0x00	; 0
     662:	69 f7       	brne	.-38     	; 0x63e <__vector_3+0x316>
     664:	14 c0       	rjmp	.+40     	; 0x68e <__vector_3+0x366>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     666:	6f 81       	ldd	r22, Y+7	; 0x07
     668:	78 85       	ldd	r23, Y+8	; 0x08
     66a:	89 85       	ldd	r24, Y+9	; 0x09
     66c:	9a 85       	ldd	r25, Y+10	; 0x0a
     66e:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <__fixunssfsi>
     672:	dc 01       	movw	r26, r24
     674:	cb 01       	movw	r24, r22
     676:	9e 83       	std	Y+6, r25	; 0x06
     678:	8d 83       	std	Y+5, r24	; 0x05
     67a:	8d 81       	ldd	r24, Y+5	; 0x05
     67c:	9e 81       	ldd	r25, Y+6	; 0x06
     67e:	9a 83       	std	Y+2, r25	; 0x02
     680:	89 83       	std	Y+1, r24	; 0x01
     682:	89 81       	ldd	r24, Y+1	; 0x01
     684:	9a 81       	ldd	r25, Y+2	; 0x02
     686:	01 97       	sbiw	r24, 0x01	; 1
     688:	f1 f7       	brne	.-4      	; 0x686 <__vector_3+0x35e>
     68a:	9a 83       	std	Y+2, r25	; 0x02
     68c:	89 83       	std	Y+1, r24	; 0x01
            _delay_ms(500);
            PORTC &= ~_BV(motorPin);
     68e:	a8 e2       	ldi	r26, 0x28	; 40
     690:	b0 e0       	ldi	r27, 0x00	; 0
     692:	e8 e2       	ldi	r30, 0x28	; 40
     694:	f0 e0       	ldi	r31, 0x00	; 0
     696:	80 81       	ld	r24, Z
     698:	8b 7f       	andi	r24, 0xFB	; 251
     69a:	8c 93       	st	X, r24
        }

    }
}
     69c:	aa 96       	adiw	r28, 0x2a	; 42
     69e:	de bf       	out	0x3e, r29	; 62
     6a0:	cd bf       	out	0x3d, r28	; 61
     6a2:	cf 91       	pop	r28
     6a4:	df 91       	pop	r29
     6a6:	ff 91       	pop	r31
     6a8:	ef 91       	pop	r30
     6aa:	bf 91       	pop	r27
     6ac:	af 91       	pop	r26
     6ae:	9f 91       	pop	r25
     6b0:	8f 91       	pop	r24
     6b2:	7f 91       	pop	r23
     6b4:	6f 91       	pop	r22
     6b6:	5f 91       	pop	r21
     6b8:	4f 91       	pop	r20
     6ba:	3f 91       	pop	r19
     6bc:	2f 91       	pop	r18
     6be:	0f 90       	pop	r0
     6c0:	0f be       	out	0x3f, r0	; 63
     6c2:	0f 90       	pop	r0
     6c4:	1f 90       	pop	r1
     6c6:	18 95       	reti

000006c8 <__vector_13>:

ISR(TIMER1_OVF_vect) //timer1 overflow interrupt
{
     6c8:	1f 92       	push	r1
     6ca:	0f 92       	push	r0
     6cc:	0f b6       	in	r0, 0x3f	; 63
     6ce:	0f 92       	push	r0
     6d0:	11 24       	eor	r1, r1
     6d2:	8f 93       	push	r24
     6d4:	9f 93       	push	r25
     6d6:	af 93       	push	r26
     6d8:	bf 93       	push	r27
     6da:	df 93       	push	r29
     6dc:	cf 93       	push	r28
     6de:	cd b7       	in	r28, 0x3d	; 61
     6e0:	de b7       	in	r29, 0x3e	; 62
    timer++;
     6e2:	80 91 0a 02 	lds	r24, 0x020A
     6e6:	90 91 0b 02 	lds	r25, 0x020B
     6ea:	a0 91 0c 02 	lds	r26, 0x020C
     6ee:	b0 91 0d 02 	lds	r27, 0x020D
     6f2:	01 96       	adiw	r24, 0x01	; 1
     6f4:	a1 1d       	adc	r26, r1
     6f6:	b1 1d       	adc	r27, r1
     6f8:	80 93 0a 02 	sts	0x020A, r24
     6fc:	90 93 0b 02 	sts	0x020B, r25
     700:	a0 93 0c 02 	sts	0x020C, r26
     704:	b0 93 0d 02 	sts	0x020D, r27
}
     708:	cf 91       	pop	r28
     70a:	df 91       	pop	r29
     70c:	bf 91       	pop	r27
     70e:	af 91       	pop	r26
     710:	9f 91       	pop	r25
     712:	8f 91       	pop	r24
     714:	0f 90       	pop	r0
     716:	0f be       	out	0x3f, r0	; 63
     718:	0f 90       	pop	r0
     71a:	1f 90       	pop	r1
     71c:	18 95       	reti

0000071e <functie1>:

void functie1 (void) //links uit
{
     71e:	df 93       	push	r29
     720:	cf 93       	push	r28
     722:	cd b7       	in	r28, 0x3d	; 61
     724:	de b7       	in	r29, 0x3e	; 62
    aanwaarde = 2;
     726:	82 e0       	ldi	r24, 0x02	; 2
     728:	90 e0       	ldi	r25, 0x00	; 0
     72a:	90 93 09 02 	sts	0x0209, r25
     72e:	80 93 08 02 	sts	0x0208, r24
}
     732:	cf 91       	pop	r28
     734:	df 91       	pop	r29
     736:	08 95       	ret

00000738 <functie2>:

void functie2 (void) // rechts uit
{
     738:	df 93       	push	r29
     73a:	cf 93       	push	r28
     73c:	cd b7       	in	r28, 0x3d	; 61
     73e:	de b7       	in	r29, 0x3e	; 62
    aanwaarde = 1;
     740:	81 e0       	ldi	r24, 0x01	; 1
     742:	90 e0       	ldi	r25, 0x00	; 0
     744:	90 93 09 02 	sts	0x0209, r25
     748:	80 93 08 02 	sts	0x0208, r24
}
     74c:	cf 91       	pop	r28
     74e:	df 91       	pop	r29
     750:	08 95       	ret

00000752 <functie3>:

void functie3 (void) // geen IR uit
{
     752:	df 93       	push	r29
     754:	cf 93       	push	r28
     756:	cd b7       	in	r28, 0x3d	; 61
     758:	de b7       	in	r29, 0x3e	; 62
    aanwaarde = 0;
     75a:	10 92 09 02 	sts	0x0209, r1
     75e:	10 92 08 02 	sts	0x0208, r1
}
     762:	cf 91       	pop	r28
     764:	df 91       	pop	r29
     766:	08 95       	ret

00000768 <functie4>:

void functie4 (void) //bochtL
{
     768:	df 93       	push	r29
     76a:	cf 93       	push	r28
     76c:	cd b7       	in	r28, 0x3d	; 61
     76e:	de b7       	in	r29, 0x3e	; 62
     770:	6e 97       	sbiw	r28, 0x1e	; 30
     772:	0f b6       	in	r0, 0x3f	; 63
     774:	f8 94       	cli
     776:	de bf       	out	0x3e, r29	; 62
     778:	0f be       	out	0x3f, r0	; 63
     77a:	cd bf       	out	0x3d, r28	; 61
    PORTC |= _BV(bochtPin);
     77c:	a8 e2       	ldi	r26, 0x28	; 40
     77e:	b0 e0       	ldi	r27, 0x00	; 0
     780:	e8 e2       	ldi	r30, 0x28	; 40
     782:	f0 e0       	ldi	r31, 0x00	; 0
     784:	80 81       	ld	r24, Z
     786:	88 60       	ori	r24, 0x08	; 8
     788:	8c 93       	st	X, r24
     78a:	80 e0       	ldi	r24, 0x00	; 0
     78c:	90 e0       	ldi	r25, 0x00	; 0
     78e:	a0 ea       	ldi	r26, 0xA0	; 160
     790:	b0 e4       	ldi	r27, 0x40	; 64
     792:	89 8f       	std	Y+25, r24	; 0x19
     794:	9a 8f       	std	Y+26, r25	; 0x1a
     796:	ab 8f       	std	Y+27, r26	; 0x1b
     798:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     79a:	69 8d       	ldd	r22, Y+25	; 0x19
     79c:	7a 8d       	ldd	r23, Y+26	; 0x1a
     79e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     7a0:	9c 8d       	ldd	r25, Y+28	; 0x1c
     7a2:	20 e0       	ldi	r18, 0x00	; 0
     7a4:	30 e0       	ldi	r19, 0x00	; 0
     7a6:	4a e7       	ldi	r20, 0x7A	; 122
     7a8:	55 e4       	ldi	r21, 0x45	; 69
     7aa:	0e 94 a7 0a 	call	0x154e	; 0x154e <__mulsf3>
     7ae:	dc 01       	movw	r26, r24
     7b0:	cb 01       	movw	r24, r22
     7b2:	8d 8b       	std	Y+21, r24	; 0x15
     7b4:	9e 8b       	std	Y+22, r25	; 0x16
     7b6:	af 8b       	std	Y+23, r26	; 0x17
     7b8:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     7ba:	6d 89       	ldd	r22, Y+21	; 0x15
     7bc:	7e 89       	ldd	r23, Y+22	; 0x16
     7be:	8f 89       	ldd	r24, Y+23	; 0x17
     7c0:	98 8d       	ldd	r25, Y+24	; 0x18
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e8       	ldi	r20, 0x80	; 128
     7c8:	5f e3       	ldi	r21, 0x3F	; 63
     7ca:	0e 94 ad 0c 	call	0x195a	; 0x195a <__ltsf2>
     7ce:	88 23       	and	r24, r24
     7d0:	2c f4       	brge	.+10     	; 0x7dc <functie4+0x74>
		__ticks = 1;
     7d2:	81 e0       	ldi	r24, 0x01	; 1
     7d4:	90 e0       	ldi	r25, 0x00	; 0
     7d6:	9c 8b       	std	Y+20, r25	; 0x14
     7d8:	8b 8b       	std	Y+19, r24	; 0x13
     7da:	3f c0       	rjmp	.+126    	; 0x85a <functie4+0xf2>
	else if (__tmp > 65535)
     7dc:	6d 89       	ldd	r22, Y+21	; 0x15
     7de:	7e 89       	ldd	r23, Y+22	; 0x16
     7e0:	8f 89       	ldd	r24, Y+23	; 0x17
     7e2:	98 8d       	ldd	r25, Y+24	; 0x18
     7e4:	20 e0       	ldi	r18, 0x00	; 0
     7e6:	3f ef       	ldi	r19, 0xFF	; 255
     7e8:	4f e7       	ldi	r20, 0x7F	; 127
     7ea:	57 e4       	ldi	r21, 0x47	; 71
     7ec:	0e 94 4d 0c 	call	0x189a	; 0x189a <__gtsf2>
     7f0:	18 16       	cp	r1, r24
     7f2:	4c f5       	brge	.+82     	; 0x846 <functie4+0xde>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     7f4:	69 8d       	ldd	r22, Y+25	; 0x19
     7f6:	7a 8d       	ldd	r23, Y+26	; 0x1a
     7f8:	8b 8d       	ldd	r24, Y+27	; 0x1b
     7fa:	9c 8d       	ldd	r25, Y+28	; 0x1c
     7fc:	20 e0       	ldi	r18, 0x00	; 0
     7fe:	30 e0       	ldi	r19, 0x00	; 0
     800:	40 e2       	ldi	r20, 0x20	; 32
     802:	51 e4       	ldi	r21, 0x41	; 65
     804:	0e 94 a7 0a 	call	0x154e	; 0x154e <__mulsf3>
     808:	dc 01       	movw	r26, r24
     80a:	cb 01       	movw	r24, r22
     80c:	bc 01       	movw	r22, r24
     80e:	cd 01       	movw	r24, r26
     810:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <__fixunssfsi>
     814:	dc 01       	movw	r26, r24
     816:	cb 01       	movw	r24, r22
     818:	9c 8b       	std	Y+20, r25	; 0x14
     81a:	8b 8b       	std	Y+19, r24	; 0x13
     81c:	0f c0       	rjmp	.+30     	; 0x83c <functie4+0xd4>
     81e:	80 e9       	ldi	r24, 0x90	; 144
     820:	91 e0       	ldi	r25, 0x01	; 1
     822:	9a 8b       	std	Y+18, r25	; 0x12
     824:	89 8b       	std	Y+17, r24	; 0x11
     826:	89 89       	ldd	r24, Y+17	; 0x11
     828:	9a 89       	ldd	r25, Y+18	; 0x12
     82a:	01 97       	sbiw	r24, 0x01	; 1
     82c:	f1 f7       	brne	.-4      	; 0x82a <functie4+0xc2>
     82e:	9a 8b       	std	Y+18, r25	; 0x12
     830:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     832:	8b 89       	ldd	r24, Y+19	; 0x13
     834:	9c 89       	ldd	r25, Y+20	; 0x14
     836:	01 97       	sbiw	r24, 0x01	; 1
     838:	9c 8b       	std	Y+20, r25	; 0x14
     83a:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     83c:	8b 89       	ldd	r24, Y+19	; 0x13
     83e:	9c 89       	ldd	r25, Y+20	; 0x14
     840:	00 97       	sbiw	r24, 0x00	; 0
     842:	69 f7       	brne	.-38     	; 0x81e <functie4+0xb6>
     844:	14 c0       	rjmp	.+40     	; 0x86e <functie4+0x106>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     846:	6d 89       	ldd	r22, Y+21	; 0x15
     848:	7e 89       	ldd	r23, Y+22	; 0x16
     84a:	8f 89       	ldd	r24, Y+23	; 0x17
     84c:	98 8d       	ldd	r25, Y+24	; 0x18
     84e:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <__fixunssfsi>
     852:	dc 01       	movw	r26, r24
     854:	cb 01       	movw	r24, r22
     856:	9c 8b       	std	Y+20, r25	; 0x14
     858:	8b 8b       	std	Y+19, r24	; 0x13
     85a:	8b 89       	ldd	r24, Y+19	; 0x13
     85c:	9c 89       	ldd	r25, Y+20	; 0x14
     85e:	98 8b       	std	Y+16, r25	; 0x10
     860:	8f 87       	std	Y+15, r24	; 0x0f
     862:	8f 85       	ldd	r24, Y+15	; 0x0f
     864:	98 89       	ldd	r25, Y+16	; 0x10
     866:	01 97       	sbiw	r24, 0x01	; 1
     868:	f1 f7       	brne	.-4      	; 0x866 <functie4+0xfe>
     86a:	98 8b       	std	Y+16, r25	; 0x10
     86c:	8f 87       	std	Y+15, r24	; 0x0f
    _delay_ms(5);
    PORTC &= ~_BV(bochtPin);
     86e:	a8 e2       	ldi	r26, 0x28	; 40
     870:	b0 e0       	ldi	r27, 0x00	; 0
     872:	e8 e2       	ldi	r30, 0x28	; 40
     874:	f0 e0       	ldi	r31, 0x00	; 0
     876:	80 81       	ld	r24, Z
     878:	87 7f       	andi	r24, 0xF7	; 247
     87a:	8c 93       	st	X, r24

    for(int i = 0; i < 10; i++)
     87c:	1e 8e       	std	Y+30, r1	; 0x1e
     87e:	1d 8e       	std	Y+29, r1	; 0x1d
     880:	7d c0       	rjmp	.+250    	; 0x97c <__stack+0x7d>
    {
        buzzer(350, 1000);
     882:	8e e5       	ldi	r24, 0x5E	; 94
     884:	91 e0       	ldi	r25, 0x01	; 1
     886:	68 ee       	ldi	r22, 0xE8	; 232
     888:	73 e0       	ldi	r23, 0x03	; 3
     88a:	0e 94 9f 00 	call	0x13e	; 0x13e <buzzer>
     88e:	80 e0       	ldi	r24, 0x00	; 0
     890:	90 e0       	ldi	r25, 0x00	; 0
     892:	aa e7       	ldi	r26, 0x7A	; 122
     894:	b3 e4       	ldi	r27, 0x43	; 67
     896:	8b 87       	std	Y+11, r24	; 0x0b
     898:	9c 87       	std	Y+12, r25	; 0x0c
     89a:	ad 87       	std	Y+13, r26	; 0x0d
     89c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     89e:	6b 85       	ldd	r22, Y+11	; 0x0b
     8a0:	7c 85       	ldd	r23, Y+12	; 0x0c
     8a2:	8d 85       	ldd	r24, Y+13	; 0x0d
     8a4:	9e 85       	ldd	r25, Y+14	; 0x0e
     8a6:	20 e0       	ldi	r18, 0x00	; 0
     8a8:	30 e0       	ldi	r19, 0x00	; 0
     8aa:	4a e7       	ldi	r20, 0x7A	; 122
     8ac:	55 e4       	ldi	r21, 0x45	; 69
     8ae:	0e 94 a7 0a 	call	0x154e	; 0x154e <__mulsf3>
     8b2:	dc 01       	movw	r26, r24
     8b4:	cb 01       	movw	r24, r22
     8b6:	8f 83       	std	Y+7, r24	; 0x07
     8b8:	98 87       	std	Y+8, r25	; 0x08
     8ba:	a9 87       	std	Y+9, r26	; 0x09
     8bc:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     8be:	6f 81       	ldd	r22, Y+7	; 0x07
     8c0:	78 85       	ldd	r23, Y+8	; 0x08
     8c2:	89 85       	ldd	r24, Y+9	; 0x09
     8c4:	9a 85       	ldd	r25, Y+10	; 0x0a
     8c6:	20 e0       	ldi	r18, 0x00	; 0
     8c8:	30 e0       	ldi	r19, 0x00	; 0
     8ca:	40 e8       	ldi	r20, 0x80	; 128
     8cc:	5f e3       	ldi	r21, 0x3F	; 63
     8ce:	0e 94 ad 0c 	call	0x195a	; 0x195a <__ltsf2>
     8d2:	88 23       	and	r24, r24
     8d4:	2c f4       	brge	.+10     	; 0x8e0 <functie4+0x178>
		__ticks = 1;
     8d6:	81 e0       	ldi	r24, 0x01	; 1
     8d8:	90 e0       	ldi	r25, 0x00	; 0
     8da:	9e 83       	std	Y+6, r25	; 0x06
     8dc:	8d 83       	std	Y+5, r24	; 0x05
     8de:	3f c0       	rjmp	.+126    	; 0x95e <__stack+0x5f>
	else if (__tmp > 65535)
     8e0:	6f 81       	ldd	r22, Y+7	; 0x07
     8e2:	78 85       	ldd	r23, Y+8	; 0x08
     8e4:	89 85       	ldd	r24, Y+9	; 0x09
     8e6:	9a 85       	ldd	r25, Y+10	; 0x0a
     8e8:	20 e0       	ldi	r18, 0x00	; 0
     8ea:	3f ef       	ldi	r19, 0xFF	; 255
     8ec:	4f e7       	ldi	r20, 0x7F	; 127
     8ee:	57 e4       	ldi	r21, 0x47	; 71
     8f0:	0e 94 4d 0c 	call	0x189a	; 0x189a <__gtsf2>
     8f4:	18 16       	cp	r1, r24
     8f6:	4c f5       	brge	.+82     	; 0x94a <__stack+0x4b>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     8f8:	6b 85       	ldd	r22, Y+11	; 0x0b
     8fa:	7c 85       	ldd	r23, Y+12	; 0x0c
     8fc:	8d 85       	ldd	r24, Y+13	; 0x0d
     8fe:	9e 85       	ldd	r25, Y+14	; 0x0e
     900:	20 e0       	ldi	r18, 0x00	; 0
     902:	30 e0       	ldi	r19, 0x00	; 0
     904:	40 e2       	ldi	r20, 0x20	; 32
     906:	51 e4       	ldi	r21, 0x41	; 65
     908:	0e 94 a7 0a 	call	0x154e	; 0x154e <__mulsf3>
     90c:	dc 01       	movw	r26, r24
     90e:	cb 01       	movw	r24, r22
     910:	bc 01       	movw	r22, r24
     912:	cd 01       	movw	r24, r26
     914:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <__fixunssfsi>
     918:	dc 01       	movw	r26, r24
     91a:	cb 01       	movw	r24, r22
     91c:	9e 83       	std	Y+6, r25	; 0x06
     91e:	8d 83       	std	Y+5, r24	; 0x05
     920:	0f c0       	rjmp	.+30     	; 0x940 <__stack+0x41>
     922:	80 e9       	ldi	r24, 0x90	; 144
     924:	91 e0       	ldi	r25, 0x01	; 1
     926:	9c 83       	std	Y+4, r25	; 0x04
     928:	8b 83       	std	Y+3, r24	; 0x03
     92a:	8b 81       	ldd	r24, Y+3	; 0x03
     92c:	9c 81       	ldd	r25, Y+4	; 0x04
     92e:	01 97       	sbiw	r24, 0x01	; 1
     930:	f1 f7       	brne	.-4      	; 0x92e <__stack+0x2f>
     932:	9c 83       	std	Y+4, r25	; 0x04
     934:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     936:	8d 81       	ldd	r24, Y+5	; 0x05
     938:	9e 81       	ldd	r25, Y+6	; 0x06
     93a:	01 97       	sbiw	r24, 0x01	; 1
     93c:	9e 83       	std	Y+6, r25	; 0x06
     93e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     940:	8d 81       	ldd	r24, Y+5	; 0x05
     942:	9e 81       	ldd	r25, Y+6	; 0x06
     944:	00 97       	sbiw	r24, 0x00	; 0
     946:	69 f7       	brne	.-38     	; 0x922 <__stack+0x23>
     948:	14 c0       	rjmp	.+40     	; 0x972 <__stack+0x73>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     94a:	6f 81       	ldd	r22, Y+7	; 0x07
     94c:	78 85       	ldd	r23, Y+8	; 0x08
     94e:	89 85       	ldd	r24, Y+9	; 0x09
     950:	9a 85       	ldd	r25, Y+10	; 0x0a
     952:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <__fixunssfsi>
     956:	dc 01       	movw	r26, r24
     958:	cb 01       	movw	r24, r22
     95a:	9e 83       	std	Y+6, r25	; 0x06
     95c:	8d 83       	std	Y+5, r24	; 0x05
     95e:	8d 81       	ldd	r24, Y+5	; 0x05
     960:	9e 81       	ldd	r25, Y+6	; 0x06
     962:	9a 83       	std	Y+2, r25	; 0x02
     964:	89 83       	std	Y+1, r24	; 0x01
     966:	89 81       	ldd	r24, Y+1	; 0x01
     968:	9a 81       	ldd	r25, Y+2	; 0x02
     96a:	01 97       	sbiw	r24, 0x01	; 1
     96c:	f1 f7       	brne	.-4      	; 0x96a <__stack+0x6b>
     96e:	9a 83       	std	Y+2, r25	; 0x02
     970:	89 83       	std	Y+1, r24	; 0x01
{
    PORTC |= _BV(bochtPin);
    _delay_ms(5);
    PORTC &= ~_BV(bochtPin);

    for(int i = 0; i < 10; i++)
     972:	8d 8d       	ldd	r24, Y+29	; 0x1d
     974:	9e 8d       	ldd	r25, Y+30	; 0x1e
     976:	01 96       	adiw	r24, 0x01	; 1
     978:	9e 8f       	std	Y+30, r25	; 0x1e
     97a:	8d 8f       	std	Y+29, r24	; 0x1d
     97c:	8d 8d       	ldd	r24, Y+29	; 0x1d
     97e:	9e 8d       	ldd	r25, Y+30	; 0x1e
     980:	8a 30       	cpi	r24, 0x0A	; 10
     982:	91 05       	cpc	r25, r1
     984:	0c f4       	brge	.+2      	; 0x988 <__stack+0x89>
     986:	7d cf       	rjmp	.-262    	; 0x882 <functie4+0x11a>
    {
        buzzer(350, 1000);
        _delay_ms(250);
    }
}
     988:	6e 96       	adiw	r28, 0x1e	; 30
     98a:	0f b6       	in	r0, 0x3f	; 63
     98c:	f8 94       	cli
     98e:	de bf       	out	0x3e, r29	; 62
     990:	0f be       	out	0x3f, r0	; 63
     992:	cd bf       	out	0x3d, r28	; 61
     994:	cf 91       	pop	r28
     996:	df 91       	pop	r29
     998:	08 95       	ret

0000099a <functie5>:

void functie5 (void) //bochtR
{
     99a:	df 93       	push	r29
     99c:	cf 93       	push	r28
     99e:	cd b7       	in	r28, 0x3d	; 61
     9a0:	de b7       	in	r29, 0x3e	; 62
     9a2:	6e 97       	sbiw	r28, 0x1e	; 30
     9a4:	0f b6       	in	r0, 0x3f	; 63
     9a6:	f8 94       	cli
     9a8:	de bf       	out	0x3e, r29	; 62
     9aa:	0f be       	out	0x3f, r0	; 63
     9ac:	cd bf       	out	0x3d, r28	; 61
    PORTC |= _BV(bochtPinL);
     9ae:	a8 e2       	ldi	r26, 0x28	; 40
     9b0:	b0 e0       	ldi	r27, 0x00	; 0
     9b2:	e8 e2       	ldi	r30, 0x28	; 40
     9b4:	f0 e0       	ldi	r31, 0x00	; 0
     9b6:	80 81       	ld	r24, Z
     9b8:	82 60       	ori	r24, 0x02	; 2
     9ba:	8c 93       	st	X, r24
     9bc:	80 e0       	ldi	r24, 0x00	; 0
     9be:	90 e0       	ldi	r25, 0x00	; 0
     9c0:	a0 ea       	ldi	r26, 0xA0	; 160
     9c2:	b0 e4       	ldi	r27, 0x40	; 64
     9c4:	89 8f       	std	Y+25, r24	; 0x19
     9c6:	9a 8f       	std	Y+26, r25	; 0x1a
     9c8:	ab 8f       	std	Y+27, r26	; 0x1b
     9ca:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     9cc:	69 8d       	ldd	r22, Y+25	; 0x19
     9ce:	7a 8d       	ldd	r23, Y+26	; 0x1a
     9d0:	8b 8d       	ldd	r24, Y+27	; 0x1b
     9d2:	9c 8d       	ldd	r25, Y+28	; 0x1c
     9d4:	20 e0       	ldi	r18, 0x00	; 0
     9d6:	30 e0       	ldi	r19, 0x00	; 0
     9d8:	4a e7       	ldi	r20, 0x7A	; 122
     9da:	55 e4       	ldi	r21, 0x45	; 69
     9dc:	0e 94 a7 0a 	call	0x154e	; 0x154e <__mulsf3>
     9e0:	dc 01       	movw	r26, r24
     9e2:	cb 01       	movw	r24, r22
     9e4:	8d 8b       	std	Y+21, r24	; 0x15
     9e6:	9e 8b       	std	Y+22, r25	; 0x16
     9e8:	af 8b       	std	Y+23, r26	; 0x17
     9ea:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     9ec:	6d 89       	ldd	r22, Y+21	; 0x15
     9ee:	7e 89       	ldd	r23, Y+22	; 0x16
     9f0:	8f 89       	ldd	r24, Y+23	; 0x17
     9f2:	98 8d       	ldd	r25, Y+24	; 0x18
     9f4:	20 e0       	ldi	r18, 0x00	; 0
     9f6:	30 e0       	ldi	r19, 0x00	; 0
     9f8:	40 e8       	ldi	r20, 0x80	; 128
     9fa:	5f e3       	ldi	r21, 0x3F	; 63
     9fc:	0e 94 ad 0c 	call	0x195a	; 0x195a <__ltsf2>
     a00:	88 23       	and	r24, r24
     a02:	2c f4       	brge	.+10     	; 0xa0e <functie5+0x74>
		__ticks = 1;
     a04:	81 e0       	ldi	r24, 0x01	; 1
     a06:	90 e0       	ldi	r25, 0x00	; 0
     a08:	9c 8b       	std	Y+20, r25	; 0x14
     a0a:	8b 8b       	std	Y+19, r24	; 0x13
     a0c:	3f c0       	rjmp	.+126    	; 0xa8c <functie5+0xf2>
	else if (__tmp > 65535)
     a0e:	6d 89       	ldd	r22, Y+21	; 0x15
     a10:	7e 89       	ldd	r23, Y+22	; 0x16
     a12:	8f 89       	ldd	r24, Y+23	; 0x17
     a14:	98 8d       	ldd	r25, Y+24	; 0x18
     a16:	20 e0       	ldi	r18, 0x00	; 0
     a18:	3f ef       	ldi	r19, 0xFF	; 255
     a1a:	4f e7       	ldi	r20, 0x7F	; 127
     a1c:	57 e4       	ldi	r21, 0x47	; 71
     a1e:	0e 94 4d 0c 	call	0x189a	; 0x189a <__gtsf2>
     a22:	18 16       	cp	r1, r24
     a24:	4c f5       	brge	.+82     	; 0xa78 <functie5+0xde>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     a26:	69 8d       	ldd	r22, Y+25	; 0x19
     a28:	7a 8d       	ldd	r23, Y+26	; 0x1a
     a2a:	8b 8d       	ldd	r24, Y+27	; 0x1b
     a2c:	9c 8d       	ldd	r25, Y+28	; 0x1c
     a2e:	20 e0       	ldi	r18, 0x00	; 0
     a30:	30 e0       	ldi	r19, 0x00	; 0
     a32:	40 e2       	ldi	r20, 0x20	; 32
     a34:	51 e4       	ldi	r21, 0x41	; 65
     a36:	0e 94 a7 0a 	call	0x154e	; 0x154e <__mulsf3>
     a3a:	dc 01       	movw	r26, r24
     a3c:	cb 01       	movw	r24, r22
     a3e:	bc 01       	movw	r22, r24
     a40:	cd 01       	movw	r24, r26
     a42:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <__fixunssfsi>
     a46:	dc 01       	movw	r26, r24
     a48:	cb 01       	movw	r24, r22
     a4a:	9c 8b       	std	Y+20, r25	; 0x14
     a4c:	8b 8b       	std	Y+19, r24	; 0x13
     a4e:	0f c0       	rjmp	.+30     	; 0xa6e <functie5+0xd4>
     a50:	80 e9       	ldi	r24, 0x90	; 144
     a52:	91 e0       	ldi	r25, 0x01	; 1
     a54:	9a 8b       	std	Y+18, r25	; 0x12
     a56:	89 8b       	std	Y+17, r24	; 0x11
     a58:	89 89       	ldd	r24, Y+17	; 0x11
     a5a:	9a 89       	ldd	r25, Y+18	; 0x12
     a5c:	01 97       	sbiw	r24, 0x01	; 1
     a5e:	f1 f7       	brne	.-4      	; 0xa5c <functie5+0xc2>
     a60:	9a 8b       	std	Y+18, r25	; 0x12
     a62:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     a64:	8b 89       	ldd	r24, Y+19	; 0x13
     a66:	9c 89       	ldd	r25, Y+20	; 0x14
     a68:	01 97       	sbiw	r24, 0x01	; 1
     a6a:	9c 8b       	std	Y+20, r25	; 0x14
     a6c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     a6e:	8b 89       	ldd	r24, Y+19	; 0x13
     a70:	9c 89       	ldd	r25, Y+20	; 0x14
     a72:	00 97       	sbiw	r24, 0x00	; 0
     a74:	69 f7       	brne	.-38     	; 0xa50 <functie5+0xb6>
     a76:	14 c0       	rjmp	.+40     	; 0xaa0 <functie5+0x106>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     a78:	6d 89       	ldd	r22, Y+21	; 0x15
     a7a:	7e 89       	ldd	r23, Y+22	; 0x16
     a7c:	8f 89       	ldd	r24, Y+23	; 0x17
     a7e:	98 8d       	ldd	r25, Y+24	; 0x18
     a80:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <__fixunssfsi>
     a84:	dc 01       	movw	r26, r24
     a86:	cb 01       	movw	r24, r22
     a88:	9c 8b       	std	Y+20, r25	; 0x14
     a8a:	8b 8b       	std	Y+19, r24	; 0x13
     a8c:	8b 89       	ldd	r24, Y+19	; 0x13
     a8e:	9c 89       	ldd	r25, Y+20	; 0x14
     a90:	98 8b       	std	Y+16, r25	; 0x10
     a92:	8f 87       	std	Y+15, r24	; 0x0f
     a94:	8f 85       	ldd	r24, Y+15	; 0x0f
     a96:	98 89       	ldd	r25, Y+16	; 0x10
     a98:	01 97       	sbiw	r24, 0x01	; 1
     a9a:	f1 f7       	brne	.-4      	; 0xa98 <functie5+0xfe>
     a9c:	98 8b       	std	Y+16, r25	; 0x10
     a9e:	8f 87       	std	Y+15, r24	; 0x0f
    _delay_ms(5);
    PORTC &= ~_BV(bochtPinL);
     aa0:	a8 e2       	ldi	r26, 0x28	; 40
     aa2:	b0 e0       	ldi	r27, 0x00	; 0
     aa4:	e8 e2       	ldi	r30, 0x28	; 40
     aa6:	f0 e0       	ldi	r31, 0x00	; 0
     aa8:	80 81       	ld	r24, Z
     aaa:	8d 7f       	andi	r24, 0xFD	; 253
     aac:	8c 93       	st	X, r24

    for(int i = 0; i < 10; i++)
     aae:	1e 8e       	std	Y+30, r1	; 0x1e
     ab0:	1d 8e       	std	Y+29, r1	; 0x1d
     ab2:	7d c0       	rjmp	.+250    	; 0xbae <functie5+0x214>
    {
        buzzer(350, 1000);
     ab4:	8e e5       	ldi	r24, 0x5E	; 94
     ab6:	91 e0       	ldi	r25, 0x01	; 1
     ab8:	68 ee       	ldi	r22, 0xE8	; 232
     aba:	73 e0       	ldi	r23, 0x03	; 3
     abc:	0e 94 9f 00 	call	0x13e	; 0x13e <buzzer>
     ac0:	80 e0       	ldi	r24, 0x00	; 0
     ac2:	90 e0       	ldi	r25, 0x00	; 0
     ac4:	aa e7       	ldi	r26, 0x7A	; 122
     ac6:	b3 e4       	ldi	r27, 0x43	; 67
     ac8:	8b 87       	std	Y+11, r24	; 0x0b
     aca:	9c 87       	std	Y+12, r25	; 0x0c
     acc:	ad 87       	std	Y+13, r26	; 0x0d
     ace:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     ad0:	6b 85       	ldd	r22, Y+11	; 0x0b
     ad2:	7c 85       	ldd	r23, Y+12	; 0x0c
     ad4:	8d 85       	ldd	r24, Y+13	; 0x0d
     ad6:	9e 85       	ldd	r25, Y+14	; 0x0e
     ad8:	20 e0       	ldi	r18, 0x00	; 0
     ada:	30 e0       	ldi	r19, 0x00	; 0
     adc:	4a e7       	ldi	r20, 0x7A	; 122
     ade:	55 e4       	ldi	r21, 0x45	; 69
     ae0:	0e 94 a7 0a 	call	0x154e	; 0x154e <__mulsf3>
     ae4:	dc 01       	movw	r26, r24
     ae6:	cb 01       	movw	r24, r22
     ae8:	8f 83       	std	Y+7, r24	; 0x07
     aea:	98 87       	std	Y+8, r25	; 0x08
     aec:	a9 87       	std	Y+9, r26	; 0x09
     aee:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     af0:	6f 81       	ldd	r22, Y+7	; 0x07
     af2:	78 85       	ldd	r23, Y+8	; 0x08
     af4:	89 85       	ldd	r24, Y+9	; 0x09
     af6:	9a 85       	ldd	r25, Y+10	; 0x0a
     af8:	20 e0       	ldi	r18, 0x00	; 0
     afa:	30 e0       	ldi	r19, 0x00	; 0
     afc:	40 e8       	ldi	r20, 0x80	; 128
     afe:	5f e3       	ldi	r21, 0x3F	; 63
     b00:	0e 94 ad 0c 	call	0x195a	; 0x195a <__ltsf2>
     b04:	88 23       	and	r24, r24
     b06:	2c f4       	brge	.+10     	; 0xb12 <functie5+0x178>
		__ticks = 1;
     b08:	81 e0       	ldi	r24, 0x01	; 1
     b0a:	90 e0       	ldi	r25, 0x00	; 0
     b0c:	9e 83       	std	Y+6, r25	; 0x06
     b0e:	8d 83       	std	Y+5, r24	; 0x05
     b10:	3f c0       	rjmp	.+126    	; 0xb90 <functie5+0x1f6>
	else if (__tmp > 65535)
     b12:	6f 81       	ldd	r22, Y+7	; 0x07
     b14:	78 85       	ldd	r23, Y+8	; 0x08
     b16:	89 85       	ldd	r24, Y+9	; 0x09
     b18:	9a 85       	ldd	r25, Y+10	; 0x0a
     b1a:	20 e0       	ldi	r18, 0x00	; 0
     b1c:	3f ef       	ldi	r19, 0xFF	; 255
     b1e:	4f e7       	ldi	r20, 0x7F	; 127
     b20:	57 e4       	ldi	r21, 0x47	; 71
     b22:	0e 94 4d 0c 	call	0x189a	; 0x189a <__gtsf2>
     b26:	18 16       	cp	r1, r24
     b28:	4c f5       	brge	.+82     	; 0xb7c <functie5+0x1e2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     b2a:	6b 85       	ldd	r22, Y+11	; 0x0b
     b2c:	7c 85       	ldd	r23, Y+12	; 0x0c
     b2e:	8d 85       	ldd	r24, Y+13	; 0x0d
     b30:	9e 85       	ldd	r25, Y+14	; 0x0e
     b32:	20 e0       	ldi	r18, 0x00	; 0
     b34:	30 e0       	ldi	r19, 0x00	; 0
     b36:	40 e2       	ldi	r20, 0x20	; 32
     b38:	51 e4       	ldi	r21, 0x41	; 65
     b3a:	0e 94 a7 0a 	call	0x154e	; 0x154e <__mulsf3>
     b3e:	dc 01       	movw	r26, r24
     b40:	cb 01       	movw	r24, r22
     b42:	bc 01       	movw	r22, r24
     b44:	cd 01       	movw	r24, r26
     b46:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <__fixunssfsi>
     b4a:	dc 01       	movw	r26, r24
     b4c:	cb 01       	movw	r24, r22
     b4e:	9e 83       	std	Y+6, r25	; 0x06
     b50:	8d 83       	std	Y+5, r24	; 0x05
     b52:	0f c0       	rjmp	.+30     	; 0xb72 <functie5+0x1d8>
     b54:	80 e9       	ldi	r24, 0x90	; 144
     b56:	91 e0       	ldi	r25, 0x01	; 1
     b58:	9c 83       	std	Y+4, r25	; 0x04
     b5a:	8b 83       	std	Y+3, r24	; 0x03
     b5c:	8b 81       	ldd	r24, Y+3	; 0x03
     b5e:	9c 81       	ldd	r25, Y+4	; 0x04
     b60:	01 97       	sbiw	r24, 0x01	; 1
     b62:	f1 f7       	brne	.-4      	; 0xb60 <functie5+0x1c6>
     b64:	9c 83       	std	Y+4, r25	; 0x04
     b66:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     b68:	8d 81       	ldd	r24, Y+5	; 0x05
     b6a:	9e 81       	ldd	r25, Y+6	; 0x06
     b6c:	01 97       	sbiw	r24, 0x01	; 1
     b6e:	9e 83       	std	Y+6, r25	; 0x06
     b70:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     b72:	8d 81       	ldd	r24, Y+5	; 0x05
     b74:	9e 81       	ldd	r25, Y+6	; 0x06
     b76:	00 97       	sbiw	r24, 0x00	; 0
     b78:	69 f7       	brne	.-38     	; 0xb54 <functie5+0x1ba>
     b7a:	14 c0       	rjmp	.+40     	; 0xba4 <functie5+0x20a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     b7c:	6f 81       	ldd	r22, Y+7	; 0x07
     b7e:	78 85       	ldd	r23, Y+8	; 0x08
     b80:	89 85       	ldd	r24, Y+9	; 0x09
     b82:	9a 85       	ldd	r25, Y+10	; 0x0a
     b84:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <__fixunssfsi>
     b88:	dc 01       	movw	r26, r24
     b8a:	cb 01       	movw	r24, r22
     b8c:	9e 83       	std	Y+6, r25	; 0x06
     b8e:	8d 83       	std	Y+5, r24	; 0x05
     b90:	8d 81       	ldd	r24, Y+5	; 0x05
     b92:	9e 81       	ldd	r25, Y+6	; 0x06
     b94:	9a 83       	std	Y+2, r25	; 0x02
     b96:	89 83       	std	Y+1, r24	; 0x01
     b98:	89 81       	ldd	r24, Y+1	; 0x01
     b9a:	9a 81       	ldd	r25, Y+2	; 0x02
     b9c:	01 97       	sbiw	r24, 0x01	; 1
     b9e:	f1 f7       	brne	.-4      	; 0xb9c <functie5+0x202>
     ba0:	9a 83       	std	Y+2, r25	; 0x02
     ba2:	89 83       	std	Y+1, r24	; 0x01
{
    PORTC |= _BV(bochtPinL);
    _delay_ms(5);
    PORTC &= ~_BV(bochtPinL);

    for(int i = 0; i < 10; i++)
     ba4:	8d 8d       	ldd	r24, Y+29	; 0x1d
     ba6:	9e 8d       	ldd	r25, Y+30	; 0x1e
     ba8:	01 96       	adiw	r24, 0x01	; 1
     baa:	9e 8f       	std	Y+30, r25	; 0x1e
     bac:	8d 8f       	std	Y+29, r24	; 0x1d
     bae:	8d 8d       	ldd	r24, Y+29	; 0x1d
     bb0:	9e 8d       	ldd	r25, Y+30	; 0x1e
     bb2:	8a 30       	cpi	r24, 0x0A	; 10
     bb4:	91 05       	cpc	r25, r1
     bb6:	0c f4       	brge	.+2      	; 0xbba <functie5+0x220>
     bb8:	7d cf       	rjmp	.-262    	; 0xab4 <functie5+0x11a>
    {
        buzzer(350, 1000);
        _delay_ms(250);
    }
}
     bba:	6e 96       	adiw	r28, 0x1e	; 30
     bbc:	0f b6       	in	r0, 0x3f	; 63
     bbe:	f8 94       	cli
     bc0:	de bf       	out	0x3e, r29	; 62
     bc2:	0f be       	out	0x3f, r0	; 63
     bc4:	cd bf       	out	0x3d, r28	; 61
     bc6:	cf 91       	pop	r28
     bc8:	df 91       	pop	r29
     bca:	08 95       	ret

00000bcc <ultrasoneAfstand>:

int ultrasoneAfstand(void)
{
     bcc:	ef 92       	push	r14
     bce:	ff 92       	push	r15
     bd0:	0f 93       	push	r16
     bd2:	1f 93       	push	r17
     bd4:	df 93       	push	r29
     bd6:	cf 93       	push	r28
     bd8:	cd b7       	in	r28, 0x3d	; 61
     bda:	de b7       	in	r29, 0x3e	; 62
     bdc:	a0 97       	sbiw	r28, 0x20	; 32
     bde:	0f b6       	in	r0, 0x3f	; 63
     be0:	f8 94       	cli
     be2:	de bf       	out	0x3e, r29	; 62
     be4:	0f be       	out	0x3f, r0	; 63
     be6:	cd bf       	out	0x3d, r28	; 61

    long count;
	double distance;

    PORTD |= (1<<trig);
     be8:	ab e2       	ldi	r26, 0x2B	; 43
     bea:	b0 e0       	ldi	r27, 0x00	; 0
     bec:	eb e2       	ldi	r30, 0x2B	; 43
     bee:	f0 e0       	ldi	r31, 0x00	; 0
     bf0:	80 81       	ld	r24, Z
     bf2:	81 60       	ori	r24, 0x01	; 1
     bf4:	8c 93       	st	X, r24
     bf6:	80 e0       	ldi	r24, 0x00	; 0
     bf8:	90 e0       	ldi	r25, 0x00	; 0
     bfa:	a0 e2       	ldi	r26, 0x20	; 32
     bfc:	b1 e4       	ldi	r27, 0x41	; 65
     bfe:	8d 8b       	std	Y+21, r24	; 0x15
     c00:	9e 8b       	std	Y+22, r25	; 0x16
     c02:	af 8b       	std	Y+23, r26	; 0x17
     c04:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     c06:	6d 89       	ldd	r22, Y+21	; 0x15
     c08:	7e 89       	ldd	r23, Y+22	; 0x16
     c0a:	8f 89       	ldd	r24, Y+23	; 0x17
     c0c:	98 8d       	ldd	r25, Y+24	; 0x18
     c0e:	2b ea       	ldi	r18, 0xAB	; 171
     c10:	3a ea       	ldi	r19, 0xAA	; 170
     c12:	4a ea       	ldi	r20, 0xAA	; 170
     c14:	50 e4       	ldi	r21, 0x40	; 64
     c16:	0e 94 a7 0a 	call	0x154e	; 0x154e <__mulsf3>
     c1a:	dc 01       	movw	r26, r24
     c1c:	cb 01       	movw	r24, r22
     c1e:	89 8b       	std	Y+17, r24	; 0x11
     c20:	9a 8b       	std	Y+18, r25	; 0x12
     c22:	ab 8b       	std	Y+19, r26	; 0x13
     c24:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
     c26:	69 89       	ldd	r22, Y+17	; 0x11
     c28:	7a 89       	ldd	r23, Y+18	; 0x12
     c2a:	8b 89       	ldd	r24, Y+19	; 0x13
     c2c:	9c 89       	ldd	r25, Y+20	; 0x14
     c2e:	20 e0       	ldi	r18, 0x00	; 0
     c30:	30 e0       	ldi	r19, 0x00	; 0
     c32:	40 e8       	ldi	r20, 0x80	; 128
     c34:	5f e3       	ldi	r21, 0x3F	; 63
     c36:	0e 94 ad 0c 	call	0x195a	; 0x195a <__ltsf2>
     c3a:	88 23       	and	r24, r24
     c3c:	1c f4       	brge	.+6      	; 0xc44 <ultrasoneAfstand+0x78>
		__ticks = 1;
     c3e:	81 e0       	ldi	r24, 0x01	; 1
     c40:	88 8b       	std	Y+16, r24	; 0x10
     c42:	91 c0       	rjmp	.+290    	; 0xd66 <ultrasoneAfstand+0x19a>
	else if (__tmp > 255)
     c44:	69 89       	ldd	r22, Y+17	; 0x11
     c46:	7a 89       	ldd	r23, Y+18	; 0x12
     c48:	8b 89       	ldd	r24, Y+19	; 0x13
     c4a:	9c 89       	ldd	r25, Y+20	; 0x14
     c4c:	20 e0       	ldi	r18, 0x00	; 0
     c4e:	30 e0       	ldi	r19, 0x00	; 0
     c50:	4f e7       	ldi	r20, 0x7F	; 127
     c52:	53 e4       	ldi	r21, 0x43	; 67
     c54:	0e 94 4d 0c 	call	0x189a	; 0x189a <__gtsf2>
     c58:	18 16       	cp	r1, r24
     c5a:	0c f0       	brlt	.+2      	; 0xc5e <ultrasoneAfstand+0x92>
     c5c:	7b c0       	rjmp	.+246    	; 0xd54 <ultrasoneAfstand+0x188>
	{
		_delay_ms(__us / 1000.0);
     c5e:	6d 89       	ldd	r22, Y+21	; 0x15
     c60:	7e 89       	ldd	r23, Y+22	; 0x16
     c62:	8f 89       	ldd	r24, Y+23	; 0x17
     c64:	98 8d       	ldd	r25, Y+24	; 0x18
     c66:	20 e0       	ldi	r18, 0x00	; 0
     c68:	30 e0       	ldi	r19, 0x00	; 0
     c6a:	4a e7       	ldi	r20, 0x7A	; 122
     c6c:	54 e4       	ldi	r21, 0x44	; 68
     c6e:	0e 94 a1 0b 	call	0x1742	; 0x1742 <__divsf3>
     c72:	dc 01       	movw	r26, r24
     c74:	cb 01       	movw	r24, r22
     c76:	8c 87       	std	Y+12, r24	; 0x0c
     c78:	9d 87       	std	Y+13, r25	; 0x0d
     c7a:	ae 87       	std	Y+14, r26	; 0x0e
     c7c:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     c7e:	6c 85       	ldd	r22, Y+12	; 0x0c
     c80:	7d 85       	ldd	r23, Y+13	; 0x0d
     c82:	8e 85       	ldd	r24, Y+14	; 0x0e
     c84:	9f 85       	ldd	r25, Y+15	; 0x0f
     c86:	20 e0       	ldi	r18, 0x00	; 0
     c88:	30 e0       	ldi	r19, 0x00	; 0
     c8a:	4a e7       	ldi	r20, 0x7A	; 122
     c8c:	55 e4       	ldi	r21, 0x45	; 69
     c8e:	0e 94 a7 0a 	call	0x154e	; 0x154e <__mulsf3>
     c92:	dc 01       	movw	r26, r24
     c94:	cb 01       	movw	r24, r22
     c96:	88 87       	std	Y+8, r24	; 0x08
     c98:	99 87       	std	Y+9, r25	; 0x09
     c9a:	aa 87       	std	Y+10, r26	; 0x0a
     c9c:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
     c9e:	68 85       	ldd	r22, Y+8	; 0x08
     ca0:	79 85       	ldd	r23, Y+9	; 0x09
     ca2:	8a 85       	ldd	r24, Y+10	; 0x0a
     ca4:	9b 85       	ldd	r25, Y+11	; 0x0b
     ca6:	20 e0       	ldi	r18, 0x00	; 0
     ca8:	30 e0       	ldi	r19, 0x00	; 0
     caa:	40 e8       	ldi	r20, 0x80	; 128
     cac:	5f e3       	ldi	r21, 0x3F	; 63
     cae:	0e 94 ad 0c 	call	0x195a	; 0x195a <__ltsf2>
     cb2:	88 23       	and	r24, r24
     cb4:	2c f4       	brge	.+10     	; 0xcc0 <ultrasoneAfstand+0xf4>
		__ticks = 1;
     cb6:	81 e0       	ldi	r24, 0x01	; 1
     cb8:	90 e0       	ldi	r25, 0x00	; 0
     cba:	9f 83       	std	Y+7, r25	; 0x07
     cbc:	8e 83       	std	Y+6, r24	; 0x06
     cbe:	3f c0       	rjmp	.+126    	; 0xd3e <ultrasoneAfstand+0x172>
	else if (__tmp > 65535)
     cc0:	68 85       	ldd	r22, Y+8	; 0x08
     cc2:	79 85       	ldd	r23, Y+9	; 0x09
     cc4:	8a 85       	ldd	r24, Y+10	; 0x0a
     cc6:	9b 85       	ldd	r25, Y+11	; 0x0b
     cc8:	20 e0       	ldi	r18, 0x00	; 0
     cca:	3f ef       	ldi	r19, 0xFF	; 255
     ccc:	4f e7       	ldi	r20, 0x7F	; 127
     cce:	57 e4       	ldi	r21, 0x47	; 71
     cd0:	0e 94 4d 0c 	call	0x189a	; 0x189a <__gtsf2>
     cd4:	18 16       	cp	r1, r24
     cd6:	4c f5       	brge	.+82     	; 0xd2a <ultrasoneAfstand+0x15e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     cd8:	6c 85       	ldd	r22, Y+12	; 0x0c
     cda:	7d 85       	ldd	r23, Y+13	; 0x0d
     cdc:	8e 85       	ldd	r24, Y+14	; 0x0e
     cde:	9f 85       	ldd	r25, Y+15	; 0x0f
     ce0:	20 e0       	ldi	r18, 0x00	; 0
     ce2:	30 e0       	ldi	r19, 0x00	; 0
     ce4:	40 e2       	ldi	r20, 0x20	; 32
     ce6:	51 e4       	ldi	r21, 0x41	; 65
     ce8:	0e 94 a7 0a 	call	0x154e	; 0x154e <__mulsf3>
     cec:	dc 01       	movw	r26, r24
     cee:	cb 01       	movw	r24, r22
     cf0:	bc 01       	movw	r22, r24
     cf2:	cd 01       	movw	r24, r26
     cf4:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <__fixunssfsi>
     cf8:	dc 01       	movw	r26, r24
     cfa:	cb 01       	movw	r24, r22
     cfc:	9f 83       	std	Y+7, r25	; 0x07
     cfe:	8e 83       	std	Y+6, r24	; 0x06
     d00:	0f c0       	rjmp	.+30     	; 0xd20 <ultrasoneAfstand+0x154>
     d02:	80 e9       	ldi	r24, 0x90	; 144
     d04:	91 e0       	ldi	r25, 0x01	; 1
     d06:	9d 83       	std	Y+5, r25	; 0x05
     d08:	8c 83       	std	Y+4, r24	; 0x04
     d0a:	8c 81       	ldd	r24, Y+4	; 0x04
     d0c:	9d 81       	ldd	r25, Y+5	; 0x05
     d0e:	01 97       	sbiw	r24, 0x01	; 1
     d10:	f1 f7       	brne	.-4      	; 0xd0e <ultrasoneAfstand+0x142>
     d12:	9d 83       	std	Y+5, r25	; 0x05
     d14:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     d16:	8e 81       	ldd	r24, Y+6	; 0x06
     d18:	9f 81       	ldd	r25, Y+7	; 0x07
     d1a:	01 97       	sbiw	r24, 0x01	; 1
     d1c:	9f 83       	std	Y+7, r25	; 0x07
     d1e:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     d20:	8e 81       	ldd	r24, Y+6	; 0x06
     d22:	9f 81       	ldd	r25, Y+7	; 0x07
     d24:	00 97       	sbiw	r24, 0x00	; 0
     d26:	69 f7       	brne	.-38     	; 0xd02 <ultrasoneAfstand+0x136>
     d28:	24 c0       	rjmp	.+72     	; 0xd72 <ultrasoneAfstand+0x1a6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     d2a:	68 85       	ldd	r22, Y+8	; 0x08
     d2c:	79 85       	ldd	r23, Y+9	; 0x09
     d2e:	8a 85       	ldd	r24, Y+10	; 0x0a
     d30:	9b 85       	ldd	r25, Y+11	; 0x0b
     d32:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <__fixunssfsi>
     d36:	dc 01       	movw	r26, r24
     d38:	cb 01       	movw	r24, r22
     d3a:	9f 83       	std	Y+7, r25	; 0x07
     d3c:	8e 83       	std	Y+6, r24	; 0x06
     d3e:	8e 81       	ldd	r24, Y+6	; 0x06
     d40:	9f 81       	ldd	r25, Y+7	; 0x07
     d42:	9b 83       	std	Y+3, r25	; 0x03
     d44:	8a 83       	std	Y+2, r24	; 0x02
     d46:	8a 81       	ldd	r24, Y+2	; 0x02
     d48:	9b 81       	ldd	r25, Y+3	; 0x03
     d4a:	01 97       	sbiw	r24, 0x01	; 1
     d4c:	f1 f7       	brne	.-4      	; 0xd4a <ultrasoneAfstand+0x17e>
     d4e:	9b 83       	std	Y+3, r25	; 0x03
     d50:	8a 83       	std	Y+2, r24	; 0x02
     d52:	0f c0       	rjmp	.+30     	; 0xd72 <ultrasoneAfstand+0x1a6>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     d54:	69 89       	ldd	r22, Y+17	; 0x11
     d56:	7a 89       	ldd	r23, Y+18	; 0x12
     d58:	8b 89       	ldd	r24, Y+19	; 0x13
     d5a:	9c 89       	ldd	r25, Y+20	; 0x14
     d5c:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <__fixunssfsi>
     d60:	dc 01       	movw	r26, r24
     d62:	cb 01       	movw	r24, r22
     d64:	88 8b       	std	Y+16, r24	; 0x10
     d66:	88 89       	ldd	r24, Y+16	; 0x10
     d68:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     d6a:	89 81       	ldd	r24, Y+1	; 0x01
     d6c:	8a 95       	dec	r24
     d6e:	f1 f7       	brne	.-4      	; 0xd6c <ultrasoneAfstand+0x1a0>
     d70:	89 83       	std	Y+1, r24	; 0x01
    _delay_us (10);
    PORTD &= ~(1<<trig);
     d72:	ab e2       	ldi	r26, 0x2B	; 43
     d74:	b0 e0       	ldi	r27, 0x00	; 0
     d76:	eb e2       	ldi	r30, 0x2B	; 43
     d78:	f0 e0       	ldi	r31, 0x00	; 0
     d7a:	80 81       	ld	r24, Z
     d7c:	8e 7f       	andi	r24, 0xFE	; 254
     d7e:	8c 93       	st	X, r24
    TCNT1 = 0;
     d80:	e4 e8       	ldi	r30, 0x84	; 132
     d82:	f0 e0       	ldi	r31, 0x00	; 0
     d84:	11 82       	std	Z+1, r1	; 0x01
     d86:	10 82       	st	Z, r1
    timer = 0;
     d88:	10 92 0a 02 	sts	0x020A, r1
     d8c:	10 92 0b 02 	sts	0x020B, r1
     d90:	10 92 0c 02 	sts	0x020C, r1
     d94:	10 92 0d 02 	sts	0x020D, r1
    TIFR1 = 1<<ICF1;
     d98:	e6 e3       	ldi	r30, 0x36	; 54
     d9a:	f0 e0       	ldi	r31, 0x00	; 0
     d9c:	80 e2       	ldi	r24, 0x20	; 32
     d9e:	80 83       	st	Z, r24
    TIFR1 = 1<<TOV1;
     da0:	e6 e3       	ldi	r30, 0x36	; 54
     da2:	f0 e0       	ldi	r31, 0x00	; 0
     da4:	81 e0       	ldi	r24, 0x01	; 1
     da6:	80 83       	st	Z, r24
    TCCR1B = 0x41;
     da8:	e1 e8       	ldi	r30, 0x81	; 129
     daa:	f0 e0       	ldi	r31, 0x00	; 0
     dac:	81 e4       	ldi	r24, 0x41	; 65
     dae:	80 83       	st	Z, r24

    while ((TIFR1 & (1 << ICF1)) == 0);/* Wait for rising edge */
     db0:	e6 e3       	ldi	r30, 0x36	; 54
     db2:	f0 e0       	ldi	r31, 0x00	; 0
     db4:	80 81       	ld	r24, Z
     db6:	88 2f       	mov	r24, r24
     db8:	90 e0       	ldi	r25, 0x00	; 0
     dba:	80 72       	andi	r24, 0x20	; 32
     dbc:	90 70       	andi	r25, 0x00	; 0
     dbe:	00 97       	sbiw	r24, 0x00	; 0
     dc0:	b9 f3       	breq	.-18     	; 0xdb0 <ultrasoneAfstand+0x1e4>
		TCNT1 = 0;	/* Clear Timer counter */
     dc2:	e4 e8       	ldi	r30, 0x84	; 132
     dc4:	f0 e0       	ldi	r31, 0x00	; 0
     dc6:	11 82       	std	Z+1, r1	; 0x01
     dc8:	10 82       	st	Z, r1
		TCCR1B = 0x01;	/* Capture on falling edge, No prescaler */
     dca:	e1 e8       	ldi	r30, 0x81	; 129
     dcc:	f0 e0       	ldi	r31, 0x00	; 0
     dce:	81 e0       	ldi	r24, 0x01	; 1
     dd0:	80 83       	st	Z, r24
		TIFR1 = 1<<ICF1;	/* Clear ICP flag (Input Capture flag) */
     dd2:	e6 e3       	ldi	r30, 0x36	; 54
     dd4:	f0 e0       	ldi	r31, 0x00	; 0
     dd6:	80 e2       	ldi	r24, 0x20	; 32
     dd8:	80 83       	st	Z, r24
		TIFR1 = 1<<TOV1;	/* Clear Timer Overflow flag */
     dda:	e6 e3       	ldi	r30, 0x36	; 54
     ddc:	f0 e0       	ldi	r31, 0x00	; 0
     dde:	81 e0       	ldi	r24, 0x01	; 1
     de0:	80 83       	st	Z, r24
		timer = 0;/* Clear Timer overflow count */
     de2:	10 92 0a 02 	sts	0x020A, r1
     de6:	10 92 0b 02 	sts	0x020B, r1
     dea:	10 92 0c 02 	sts	0x020C, r1
     dee:	10 92 0d 02 	sts	0x020D, r1

    while ((TIFR1 & (1 << ICF1)) == 0);/* Wait for falling edge */
     df2:	e6 e3       	ldi	r30, 0x36	; 54
     df4:	f0 e0       	ldi	r31, 0x00	; 0
     df6:	80 81       	ld	r24, Z
     df8:	88 2f       	mov	r24, r24
     dfa:	90 e0       	ldi	r25, 0x00	; 0
     dfc:	80 72       	andi	r24, 0x20	; 32
     dfe:	90 70       	andi	r25, 0x00	; 0
     e00:	00 97       	sbiw	r24, 0x00	; 0
     e02:	b9 f3       	breq	.-18     	; 0xdf2 <ultrasoneAfstand+0x226>
		count = ICR1 + (65535 * timer);	/* Take count */
     e04:	e6 e8       	ldi	r30, 0x86	; 134
     e06:	f0 e0       	ldi	r31, 0x00	; 0
     e08:	80 81       	ld	r24, Z
     e0a:	91 81       	ldd	r25, Z+1	; 0x01
     e0c:	7c 01       	movw	r14, r24
     e0e:	00 e0       	ldi	r16, 0x00	; 0
     e10:	10 e0       	ldi	r17, 0x00	; 0
     e12:	80 91 0a 02 	lds	r24, 0x020A
     e16:	90 91 0b 02 	lds	r25, 0x020B
     e1a:	a0 91 0c 02 	lds	r26, 0x020C
     e1e:	b0 91 0d 02 	lds	r27, 0x020D
     e22:	2f ef       	ldi	r18, 0xFF	; 255
     e24:	3f ef       	ldi	r19, 0xFF	; 255
     e26:	40 e0       	ldi	r20, 0x00	; 0
     e28:	50 e0       	ldi	r21, 0x00	; 0
     e2a:	bc 01       	movw	r22, r24
     e2c:	cd 01       	movw	r24, r26
     e2e:	0e 94 84 0f 	call	0x1f08	; 0x1f08 <__mulsi3>
     e32:	dc 01       	movw	r26, r24
     e34:	cb 01       	movw	r24, r22
     e36:	8e 0d       	add	r24, r14
     e38:	9f 1d       	adc	r25, r15
     e3a:	a0 1f       	adc	r26, r16
     e3c:	b1 1f       	adc	r27, r17
     e3e:	8d 8f       	std	Y+29, r24	; 0x1d
     e40:	9e 8f       	std	Y+30, r25	; 0x1e
     e42:	af 8f       	std	Y+31, r26	; 0x1f
     e44:	b8 a3       	std	Y+32, r27	; 0x20
		/* 16MHz Timer freq, sound speed =343 m/s */
		distance = (double)count / 93.294; // in cm
     e46:	6d 8d       	ldd	r22, Y+29	; 0x1d
     e48:	7e 8d       	ldd	r23, Y+30	; 0x1e
     e4a:	8f 8d       	ldd	r24, Y+31	; 0x1f
     e4c:	98 a1       	ldd	r25, Y+32	; 0x20
     e4e:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <__floatsisf>
     e52:	dc 01       	movw	r26, r24
     e54:	cb 01       	movw	r24, r22
     e56:	bc 01       	movw	r22, r24
     e58:	cd 01       	movw	r24, r26
     e5a:	27 e8       	ldi	r18, 0x87	; 135
     e5c:	36 e9       	ldi	r19, 0x96	; 150
     e5e:	4a eb       	ldi	r20, 0xBA	; 186
     e60:	52 e4       	ldi	r21, 0x42	; 66
     e62:	0e 94 a1 0b 	call	0x1742	; 0x1742 <__divsf3>
     e66:	dc 01       	movw	r26, r24
     e68:	cb 01       	movw	r24, r22
     e6a:	89 8f       	std	Y+25, r24	; 0x19
     e6c:	9a 8f       	std	Y+26, r25	; 0x1a
     e6e:	ab 8f       	std	Y+27, r26	; 0x1b
     e70:	bc 8f       	std	Y+28, r27	; 0x1c
    return(distance);
     e72:	69 8d       	ldd	r22, Y+25	; 0x19
     e74:	7a 8d       	ldd	r23, Y+26	; 0x1a
     e76:	8b 8d       	ldd	r24, Y+27	; 0x1b
     e78:	9c 8d       	ldd	r25, Y+28	; 0x1c
     e7a:	0e 94 3b 0d 	call	0x1a76	; 0x1a76 <__fixsfsi>
     e7e:	dc 01       	movw	r26, r24
     e80:	cb 01       	movw	r24, r22
}
     e82:	a0 96       	adiw	r28, 0x20	; 32
     e84:	0f b6       	in	r0, 0x3f	; 63
     e86:	f8 94       	cli
     e88:	de bf       	out	0x3e, r29	; 62
     e8a:	0f be       	out	0x3f, r0	; 63
     e8c:	cd bf       	out	0x3d, r28	; 61
     e8e:	cf 91       	pop	r28
     e90:	df 91       	pop	r29
     e92:	1f 91       	pop	r17
     e94:	0f 91       	pop	r16
     e96:	ff 90       	pop	r15
     e98:	ef 90       	pop	r14
     e9a:	08 95       	ret

00000e9c <main>:


int main(void)
{
     e9c:	df 93       	push	r29
     e9e:	cf 93       	push	r28
     ea0:	cd b7       	in	r28, 0x3d	; 61
     ea2:	de b7       	in	r29, 0x3e	; 62
     ea4:	aa 97       	sbiw	r28, 0x2a	; 42
     ea6:	0f b6       	in	r0, 0x3f	; 63
     ea8:	f8 94       	cli
     eaa:	de bf       	out	0x3e, r29	; 62
     eac:	0f be       	out	0x3f, r0	; 63
     eae:	cd bf       	out	0x3d, r28	; 61
    init();
     eb0:	0e 94 53 00 	call	0xa6	; 0xa6 <init>

    while(1)
    {


        if(ultrasoneAfstand() < 150) //eerste meting, minder precies
     eb4:	0e 94 e6 05 	call	0xbcc	; 0xbcc <ultrasoneAfstand>
     eb8:	86 39       	cpi	r24, 0x96	; 150
     eba:	91 05       	cpc	r25, r1
     ebc:	dc f7       	brge	.-10     	; 0xeb4 <main+0x18>
     ebe:	80 e0       	ldi	r24, 0x00	; 0
     ec0:	90 e0       	ldi	r25, 0x00	; 0
     ec2:	a8 ec       	ldi	r26, 0xC8	; 200
     ec4:	b1 e4       	ldi	r27, 0x41	; 65
     ec6:	8f a3       	std	Y+39, r24	; 0x27
     ec8:	98 a7       	std	Y+40, r25	; 0x28
     eca:	a9 a7       	std	Y+41, r26	; 0x29
     ecc:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     ece:	6f a1       	ldd	r22, Y+39	; 0x27
     ed0:	78 a5       	ldd	r23, Y+40	; 0x28
     ed2:	89 a5       	ldd	r24, Y+41	; 0x29
     ed4:	9a a5       	ldd	r25, Y+42	; 0x2a
     ed6:	20 e0       	ldi	r18, 0x00	; 0
     ed8:	30 e0       	ldi	r19, 0x00	; 0
     eda:	4a e7       	ldi	r20, 0x7A	; 122
     edc:	55 e4       	ldi	r21, 0x45	; 69
     ede:	0e 94 a7 0a 	call	0x154e	; 0x154e <__mulsf3>
     ee2:	dc 01       	movw	r26, r24
     ee4:	cb 01       	movw	r24, r22
     ee6:	8b a3       	std	Y+35, r24	; 0x23
     ee8:	9c a3       	std	Y+36, r25	; 0x24
     eea:	ad a3       	std	Y+37, r26	; 0x25
     eec:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     eee:	6b a1       	ldd	r22, Y+35	; 0x23
     ef0:	7c a1       	ldd	r23, Y+36	; 0x24
     ef2:	8d a1       	ldd	r24, Y+37	; 0x25
     ef4:	9e a1       	ldd	r25, Y+38	; 0x26
     ef6:	20 e0       	ldi	r18, 0x00	; 0
     ef8:	30 e0       	ldi	r19, 0x00	; 0
     efa:	40 e8       	ldi	r20, 0x80	; 128
     efc:	5f e3       	ldi	r21, 0x3F	; 63
     efe:	0e 94 ad 0c 	call	0x195a	; 0x195a <__ltsf2>
     f02:	88 23       	and	r24, r24
     f04:	2c f4       	brge	.+10     	; 0xf10 <main+0x74>
		__ticks = 1;
     f06:	81 e0       	ldi	r24, 0x01	; 1
     f08:	90 e0       	ldi	r25, 0x00	; 0
     f0a:	9a a3       	std	Y+34, r25	; 0x22
     f0c:	89 a3       	std	Y+33, r24	; 0x21
     f0e:	3f c0       	rjmp	.+126    	; 0xf8e <main+0xf2>
	else if (__tmp > 65535)
     f10:	6b a1       	ldd	r22, Y+35	; 0x23
     f12:	7c a1       	ldd	r23, Y+36	; 0x24
     f14:	8d a1       	ldd	r24, Y+37	; 0x25
     f16:	9e a1       	ldd	r25, Y+38	; 0x26
     f18:	20 e0       	ldi	r18, 0x00	; 0
     f1a:	3f ef       	ldi	r19, 0xFF	; 255
     f1c:	4f e7       	ldi	r20, 0x7F	; 127
     f1e:	57 e4       	ldi	r21, 0x47	; 71
     f20:	0e 94 4d 0c 	call	0x189a	; 0x189a <__gtsf2>
     f24:	18 16       	cp	r1, r24
     f26:	4c f5       	brge	.+82     	; 0xf7a <main+0xde>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     f28:	6f a1       	ldd	r22, Y+39	; 0x27
     f2a:	78 a5       	ldd	r23, Y+40	; 0x28
     f2c:	89 a5       	ldd	r24, Y+41	; 0x29
     f2e:	9a a5       	ldd	r25, Y+42	; 0x2a
     f30:	20 e0       	ldi	r18, 0x00	; 0
     f32:	30 e0       	ldi	r19, 0x00	; 0
     f34:	40 e2       	ldi	r20, 0x20	; 32
     f36:	51 e4       	ldi	r21, 0x41	; 65
     f38:	0e 94 a7 0a 	call	0x154e	; 0x154e <__mulsf3>
     f3c:	dc 01       	movw	r26, r24
     f3e:	cb 01       	movw	r24, r22
     f40:	bc 01       	movw	r22, r24
     f42:	cd 01       	movw	r24, r26
     f44:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <__fixunssfsi>
     f48:	dc 01       	movw	r26, r24
     f4a:	cb 01       	movw	r24, r22
     f4c:	9a a3       	std	Y+34, r25	; 0x22
     f4e:	89 a3       	std	Y+33, r24	; 0x21
     f50:	0f c0       	rjmp	.+30     	; 0xf70 <main+0xd4>
     f52:	80 e9       	ldi	r24, 0x90	; 144
     f54:	91 e0       	ldi	r25, 0x01	; 1
     f56:	98 a3       	std	Y+32, r25	; 0x20
     f58:	8f 8f       	std	Y+31, r24	; 0x1f
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     f5a:	8f 8d       	ldd	r24, Y+31	; 0x1f
     f5c:	98 a1       	ldd	r25, Y+32	; 0x20
     f5e:	01 97       	sbiw	r24, 0x01	; 1
     f60:	f1 f7       	brne	.-4      	; 0xf5e <main+0xc2>
     f62:	98 a3       	std	Y+32, r25	; 0x20
     f64:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f66:	89 a1       	ldd	r24, Y+33	; 0x21
     f68:	9a a1       	ldd	r25, Y+34	; 0x22
     f6a:	01 97       	sbiw	r24, 0x01	; 1
     f6c:	9a a3       	std	Y+34, r25	; 0x22
     f6e:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f70:	89 a1       	ldd	r24, Y+33	; 0x21
     f72:	9a a1       	ldd	r25, Y+34	; 0x22
     f74:	00 97       	sbiw	r24, 0x00	; 0
     f76:	69 f7       	brne	.-38     	; 0xf52 <main+0xb6>
     f78:	14 c0       	rjmp	.+40     	; 0xfa2 <main+0x106>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     f7a:	6b a1       	ldd	r22, Y+35	; 0x23
     f7c:	7c a1       	ldd	r23, Y+36	; 0x24
     f7e:	8d a1       	ldd	r24, Y+37	; 0x25
     f80:	9e a1       	ldd	r25, Y+38	; 0x26
     f82:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <__fixunssfsi>
     f86:	dc 01       	movw	r26, r24
     f88:	cb 01       	movw	r24, r22
     f8a:	9a a3       	std	Y+34, r25	; 0x22
     f8c:	89 a3       	std	Y+33, r24	; 0x21
     f8e:	89 a1       	ldd	r24, Y+33	; 0x21
     f90:	9a a1       	ldd	r25, Y+34	; 0x22
     f92:	9e 8f       	std	Y+30, r25	; 0x1e
     f94:	8d 8f       	std	Y+29, r24	; 0x1d
     f96:	8d 8d       	ldd	r24, Y+29	; 0x1d
     f98:	9e 8d       	ldd	r25, Y+30	; 0x1e
     f9a:	01 97       	sbiw	r24, 0x01	; 1
     f9c:	f1 f7       	brne	.-4      	; 0xf9a <main+0xfe>
     f9e:	9e 8f       	std	Y+30, r25	; 0x1e
     fa0:	8d 8f       	std	Y+29, r24	; 0x1d
        {
            _delay_ms(25);
            if(ultrasoneAfstand() < 100) //debounce afstandsmeting
     fa2:	0e 94 e6 05 	call	0xbcc	; 0xbcc <ultrasoneAfstand>
     fa6:	84 36       	cpi	r24, 0x64	; 100
     fa8:	91 05       	cpc	r25, r1
     faa:	0c f0       	brlt	.+2      	; 0xfae <main+0x112>
     fac:	83 cf       	rjmp	.-250    	; 0xeb4 <main+0x18>
            {
                PORTC |= _BV(motorPin);
     fae:	a8 e2       	ldi	r26, 0x28	; 40
     fb0:	b0 e0       	ldi	r27, 0x00	; 0
     fb2:	e8 e2       	ldi	r30, 0x28	; 40
     fb4:	f0 e0       	ldi	r31, 0x00	; 0
     fb6:	80 81       	ld	r24, Z
     fb8:	84 60       	ori	r24, 0x04	; 4
     fba:	8c 93       	st	X, r24
     fbc:	80 e0       	ldi	r24, 0x00	; 0
     fbe:	90 e0       	ldi	r25, 0x00	; 0
     fc0:	aa e7       	ldi	r26, 0x7A	; 122
     fc2:	b4 e4       	ldi	r27, 0x44	; 68
     fc4:	89 8f       	std	Y+25, r24	; 0x19
     fc6:	9a 8f       	std	Y+26, r25	; 0x1a
     fc8:	ab 8f       	std	Y+27, r26	; 0x1b
     fca:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     fcc:	69 8d       	ldd	r22, Y+25	; 0x19
     fce:	7a 8d       	ldd	r23, Y+26	; 0x1a
     fd0:	8b 8d       	ldd	r24, Y+27	; 0x1b
     fd2:	9c 8d       	ldd	r25, Y+28	; 0x1c
     fd4:	20 e0       	ldi	r18, 0x00	; 0
     fd6:	30 e0       	ldi	r19, 0x00	; 0
     fd8:	4a e7       	ldi	r20, 0x7A	; 122
     fda:	55 e4       	ldi	r21, 0x45	; 69
     fdc:	0e 94 a7 0a 	call	0x154e	; 0x154e <__mulsf3>
     fe0:	dc 01       	movw	r26, r24
     fe2:	cb 01       	movw	r24, r22
     fe4:	8d 8b       	std	Y+21, r24	; 0x15
     fe6:	9e 8b       	std	Y+22, r25	; 0x16
     fe8:	af 8b       	std	Y+23, r26	; 0x17
     fea:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     fec:	6d 89       	ldd	r22, Y+21	; 0x15
     fee:	7e 89       	ldd	r23, Y+22	; 0x16
     ff0:	8f 89       	ldd	r24, Y+23	; 0x17
     ff2:	98 8d       	ldd	r25, Y+24	; 0x18
     ff4:	20 e0       	ldi	r18, 0x00	; 0
     ff6:	30 e0       	ldi	r19, 0x00	; 0
     ff8:	40 e8       	ldi	r20, 0x80	; 128
     ffa:	5f e3       	ldi	r21, 0x3F	; 63
     ffc:	0e 94 ad 0c 	call	0x195a	; 0x195a <__ltsf2>
    1000:	88 23       	and	r24, r24
    1002:	2c f4       	brge	.+10     	; 0x100e <main+0x172>
		__ticks = 1;
    1004:	81 e0       	ldi	r24, 0x01	; 1
    1006:	90 e0       	ldi	r25, 0x00	; 0
    1008:	9c 8b       	std	Y+20, r25	; 0x14
    100a:	8b 8b       	std	Y+19, r24	; 0x13
    100c:	3f c0       	rjmp	.+126    	; 0x108c <main+0x1f0>
	else if (__tmp > 65535)
    100e:	6d 89       	ldd	r22, Y+21	; 0x15
    1010:	7e 89       	ldd	r23, Y+22	; 0x16
    1012:	8f 89       	ldd	r24, Y+23	; 0x17
    1014:	98 8d       	ldd	r25, Y+24	; 0x18
    1016:	20 e0       	ldi	r18, 0x00	; 0
    1018:	3f ef       	ldi	r19, 0xFF	; 255
    101a:	4f e7       	ldi	r20, 0x7F	; 127
    101c:	57 e4       	ldi	r21, 0x47	; 71
    101e:	0e 94 4d 0c 	call	0x189a	; 0x189a <__gtsf2>
    1022:	18 16       	cp	r1, r24
    1024:	4c f5       	brge	.+82     	; 0x1078 <main+0x1dc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1026:	69 8d       	ldd	r22, Y+25	; 0x19
    1028:	7a 8d       	ldd	r23, Y+26	; 0x1a
    102a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    102c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    102e:	20 e0       	ldi	r18, 0x00	; 0
    1030:	30 e0       	ldi	r19, 0x00	; 0
    1032:	40 e2       	ldi	r20, 0x20	; 32
    1034:	51 e4       	ldi	r21, 0x41	; 65
    1036:	0e 94 a7 0a 	call	0x154e	; 0x154e <__mulsf3>
    103a:	dc 01       	movw	r26, r24
    103c:	cb 01       	movw	r24, r22
    103e:	bc 01       	movw	r22, r24
    1040:	cd 01       	movw	r24, r26
    1042:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <__fixunssfsi>
    1046:	dc 01       	movw	r26, r24
    1048:	cb 01       	movw	r24, r22
    104a:	9c 8b       	std	Y+20, r25	; 0x14
    104c:	8b 8b       	std	Y+19, r24	; 0x13
    104e:	0f c0       	rjmp	.+30     	; 0x106e <main+0x1d2>
    1050:	80 e9       	ldi	r24, 0x90	; 144
    1052:	91 e0       	ldi	r25, 0x01	; 1
    1054:	9a 8b       	std	Y+18, r25	; 0x12
    1056:	89 8b       	std	Y+17, r24	; 0x11
    1058:	89 89       	ldd	r24, Y+17	; 0x11
    105a:	9a 89       	ldd	r25, Y+18	; 0x12
    105c:	01 97       	sbiw	r24, 0x01	; 1
    105e:	f1 f7       	brne	.-4      	; 0x105c <main+0x1c0>
    1060:	9a 8b       	std	Y+18, r25	; 0x12
    1062:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1064:	8b 89       	ldd	r24, Y+19	; 0x13
    1066:	9c 89       	ldd	r25, Y+20	; 0x14
    1068:	01 97       	sbiw	r24, 0x01	; 1
    106a:	9c 8b       	std	Y+20, r25	; 0x14
    106c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    106e:	8b 89       	ldd	r24, Y+19	; 0x13
    1070:	9c 89       	ldd	r25, Y+20	; 0x14
    1072:	00 97       	sbiw	r24, 0x00	; 0
    1074:	69 f7       	brne	.-38     	; 0x1050 <main+0x1b4>
    1076:	87 c0       	rjmp	.+270    	; 0x1186 <main+0x2ea>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1078:	6d 89       	ldd	r22, Y+21	; 0x15
    107a:	7e 89       	ldd	r23, Y+22	; 0x16
    107c:	8f 89       	ldd	r24, Y+23	; 0x17
    107e:	98 8d       	ldd	r25, Y+24	; 0x18
    1080:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <__fixunssfsi>
    1084:	dc 01       	movw	r26, r24
    1086:	cb 01       	movw	r24, r22
    1088:	9c 8b       	std	Y+20, r25	; 0x14
    108a:	8b 8b       	std	Y+19, r24	; 0x13
    108c:	8b 89       	ldd	r24, Y+19	; 0x13
    108e:	9c 89       	ldd	r25, Y+20	; 0x14
    1090:	98 8b       	std	Y+16, r25	; 0x10
    1092:	8f 87       	std	Y+15, r24	; 0x0f
    1094:	8f 85       	ldd	r24, Y+15	; 0x0f
    1096:	98 89       	ldd	r25, Y+16	; 0x10
    1098:	01 97       	sbiw	r24, 0x01	; 1
    109a:	f1 f7       	brne	.-4      	; 0x1098 <main+0x1fc>
    109c:	98 8b       	std	Y+16, r25	; 0x10
    109e:	8f 87       	std	Y+15, r24	; 0x0f
    10a0:	72 c0       	rjmp	.+228    	; 0x1186 <main+0x2ea>
                _delay_ms(1000);
                while(ultrasoneAfstand() < 100) //zolang er nog iets voor staat stil blijven staan
    10a2:	80 e0       	ldi	r24, 0x00	; 0
    10a4:	90 e0       	ldi	r25, 0x00	; 0
    10a6:	a8 ec       	ldi	r26, 0xC8	; 200
    10a8:	b2 e4       	ldi	r27, 0x42	; 66
    10aa:	8b 87       	std	Y+11, r24	; 0x0b
    10ac:	9c 87       	std	Y+12, r25	; 0x0c
    10ae:	ad 87       	std	Y+13, r26	; 0x0d
    10b0:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    10b2:	6b 85       	ldd	r22, Y+11	; 0x0b
    10b4:	7c 85       	ldd	r23, Y+12	; 0x0c
    10b6:	8d 85       	ldd	r24, Y+13	; 0x0d
    10b8:	9e 85       	ldd	r25, Y+14	; 0x0e
    10ba:	20 e0       	ldi	r18, 0x00	; 0
    10bc:	30 e0       	ldi	r19, 0x00	; 0
    10be:	4a e7       	ldi	r20, 0x7A	; 122
    10c0:	55 e4       	ldi	r21, 0x45	; 69
    10c2:	0e 94 a7 0a 	call	0x154e	; 0x154e <__mulsf3>
    10c6:	dc 01       	movw	r26, r24
    10c8:	cb 01       	movw	r24, r22
    10ca:	8f 83       	std	Y+7, r24	; 0x07
    10cc:	98 87       	std	Y+8, r25	; 0x08
    10ce:	a9 87       	std	Y+9, r26	; 0x09
    10d0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    10d2:	6f 81       	ldd	r22, Y+7	; 0x07
    10d4:	78 85       	ldd	r23, Y+8	; 0x08
    10d6:	89 85       	ldd	r24, Y+9	; 0x09
    10d8:	9a 85       	ldd	r25, Y+10	; 0x0a
    10da:	20 e0       	ldi	r18, 0x00	; 0
    10dc:	30 e0       	ldi	r19, 0x00	; 0
    10de:	40 e8       	ldi	r20, 0x80	; 128
    10e0:	5f e3       	ldi	r21, 0x3F	; 63
    10e2:	0e 94 ad 0c 	call	0x195a	; 0x195a <__ltsf2>
    10e6:	88 23       	and	r24, r24
    10e8:	2c f4       	brge	.+10     	; 0x10f4 <main+0x258>
		__ticks = 1;
    10ea:	81 e0       	ldi	r24, 0x01	; 1
    10ec:	90 e0       	ldi	r25, 0x00	; 0
    10ee:	9e 83       	std	Y+6, r25	; 0x06
    10f0:	8d 83       	std	Y+5, r24	; 0x05
    10f2:	3f c0       	rjmp	.+126    	; 0x1172 <main+0x2d6>
	else if (__tmp > 65535)
    10f4:	6f 81       	ldd	r22, Y+7	; 0x07
    10f6:	78 85       	ldd	r23, Y+8	; 0x08
    10f8:	89 85       	ldd	r24, Y+9	; 0x09
    10fa:	9a 85       	ldd	r25, Y+10	; 0x0a
    10fc:	20 e0       	ldi	r18, 0x00	; 0
    10fe:	3f ef       	ldi	r19, 0xFF	; 255
    1100:	4f e7       	ldi	r20, 0x7F	; 127
    1102:	57 e4       	ldi	r21, 0x47	; 71
    1104:	0e 94 4d 0c 	call	0x189a	; 0x189a <__gtsf2>
    1108:	18 16       	cp	r1, r24
    110a:	4c f5       	brge	.+82     	; 0x115e <main+0x2c2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    110c:	6b 85       	ldd	r22, Y+11	; 0x0b
    110e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1110:	8d 85       	ldd	r24, Y+13	; 0x0d
    1112:	9e 85       	ldd	r25, Y+14	; 0x0e
    1114:	20 e0       	ldi	r18, 0x00	; 0
    1116:	30 e0       	ldi	r19, 0x00	; 0
    1118:	40 e2       	ldi	r20, 0x20	; 32
    111a:	51 e4       	ldi	r21, 0x41	; 65
    111c:	0e 94 a7 0a 	call	0x154e	; 0x154e <__mulsf3>
    1120:	dc 01       	movw	r26, r24
    1122:	cb 01       	movw	r24, r22
    1124:	bc 01       	movw	r22, r24
    1126:	cd 01       	movw	r24, r26
    1128:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <__fixunssfsi>
    112c:	dc 01       	movw	r26, r24
    112e:	cb 01       	movw	r24, r22
    1130:	9e 83       	std	Y+6, r25	; 0x06
    1132:	8d 83       	std	Y+5, r24	; 0x05
    1134:	0f c0       	rjmp	.+30     	; 0x1154 <main+0x2b8>
    1136:	80 e9       	ldi	r24, 0x90	; 144
    1138:	91 e0       	ldi	r25, 0x01	; 1
    113a:	9c 83       	std	Y+4, r25	; 0x04
    113c:	8b 83       	std	Y+3, r24	; 0x03
    113e:	8b 81       	ldd	r24, Y+3	; 0x03
    1140:	9c 81       	ldd	r25, Y+4	; 0x04
    1142:	01 97       	sbiw	r24, 0x01	; 1
    1144:	f1 f7       	brne	.-4      	; 0x1142 <main+0x2a6>
    1146:	9c 83       	std	Y+4, r25	; 0x04
    1148:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    114a:	8d 81       	ldd	r24, Y+5	; 0x05
    114c:	9e 81       	ldd	r25, Y+6	; 0x06
    114e:	01 97       	sbiw	r24, 0x01	; 1
    1150:	9e 83       	std	Y+6, r25	; 0x06
    1152:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1154:	8d 81       	ldd	r24, Y+5	; 0x05
    1156:	9e 81       	ldd	r25, Y+6	; 0x06
    1158:	00 97       	sbiw	r24, 0x00	; 0
    115a:	69 f7       	brne	.-38     	; 0x1136 <main+0x29a>
    115c:	14 c0       	rjmp	.+40     	; 0x1186 <main+0x2ea>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    115e:	6f 81       	ldd	r22, Y+7	; 0x07
    1160:	78 85       	ldd	r23, Y+8	; 0x08
    1162:	89 85       	ldd	r24, Y+9	; 0x09
    1164:	9a 85       	ldd	r25, Y+10	; 0x0a
    1166:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <__fixunssfsi>
    116a:	dc 01       	movw	r26, r24
    116c:	cb 01       	movw	r24, r22
    116e:	9e 83       	std	Y+6, r25	; 0x06
    1170:	8d 83       	std	Y+5, r24	; 0x05
    1172:	8d 81       	ldd	r24, Y+5	; 0x05
    1174:	9e 81       	ldd	r25, Y+6	; 0x06
    1176:	9a 83       	std	Y+2, r25	; 0x02
    1178:	89 83       	std	Y+1, r24	; 0x01
    117a:	89 81       	ldd	r24, Y+1	; 0x01
    117c:	9a 81       	ldd	r25, Y+2	; 0x02
    117e:	01 97       	sbiw	r24, 0x01	; 1
    1180:	f1 f7       	brne	.-4      	; 0x117e <main+0x2e2>
    1182:	9a 83       	std	Y+2, r25	; 0x02
    1184:	89 83       	std	Y+1, r24	; 0x01
    1186:	0e 94 e6 05 	call	0xbcc	; 0xbcc <ultrasoneAfstand>
    118a:	84 36       	cpi	r24, 0x64	; 100
    118c:	91 05       	cpc	r25, r1
    118e:	0c f4       	brge	.+2      	; 0x1192 <main+0x2f6>
    1190:	88 cf       	rjmp	.-240    	; 0x10a2 <main+0x206>
                {
                    _delay_ms(100);
                }

                    PORTC &= ~_BV(motorPin); //verder rijden na verwijderen obstakel
    1192:	a8 e2       	ldi	r26, 0x28	; 40
    1194:	b0 e0       	ldi	r27, 0x00	; 0
    1196:	e8 e2       	ldi	r30, 0x28	; 40
    1198:	f0 e0       	ldi	r31, 0x00	; 0
    119a:	80 81       	ld	r24, Z
    119c:	8b 7f       	andi	r24, 0xFB	; 251
    119e:	8c 93       	st	X, r24
    11a0:	89 ce       	rjmp	.-750    	; 0xeb4 <main+0x18>

000011a2 <__fixunssfsi>:
    11a2:	ef 92       	push	r14
    11a4:	ff 92       	push	r15
    11a6:	0f 93       	push	r16
    11a8:	1f 93       	push	r17
    11aa:	7b 01       	movw	r14, r22
    11ac:	8c 01       	movw	r16, r24
    11ae:	20 e0       	ldi	r18, 0x00	; 0
    11b0:	30 e0       	ldi	r19, 0x00	; 0
    11b2:	40 e0       	ldi	r20, 0x00	; 0
    11b4:	5f e4       	ldi	r21, 0x4F	; 79
    11b6:	0e 94 7d 0c 	call	0x18fa	; 0x18fa <__gesf2>
    11ba:	88 23       	and	r24, r24
    11bc:	8c f0       	brlt	.+34     	; 0x11e0 <__fixunssfsi+0x3e>
    11be:	c8 01       	movw	r24, r16
    11c0:	b7 01       	movw	r22, r14
    11c2:	20 e0       	ldi	r18, 0x00	; 0
    11c4:	30 e0       	ldi	r19, 0x00	; 0
    11c6:	40 e0       	ldi	r20, 0x00	; 0
    11c8:	5f e4       	ldi	r21, 0x4F	; 79
    11ca:	0e 94 49 0a 	call	0x1492	; 0x1492 <__subsf3>
    11ce:	0e 94 3b 0d 	call	0x1a76	; 0x1a76 <__fixsfsi>
    11d2:	9b 01       	movw	r18, r22
    11d4:	ac 01       	movw	r20, r24
    11d6:	20 50       	subi	r18, 0x00	; 0
    11d8:	30 40       	sbci	r19, 0x00	; 0
    11da:	40 40       	sbci	r20, 0x00	; 0
    11dc:	50 48       	sbci	r21, 0x80	; 128
    11de:	06 c0       	rjmp	.+12     	; 0x11ec <__fixunssfsi+0x4a>
    11e0:	c8 01       	movw	r24, r16
    11e2:	b7 01       	movw	r22, r14
    11e4:	0e 94 3b 0d 	call	0x1a76	; 0x1a76 <__fixsfsi>
    11e8:	9b 01       	movw	r18, r22
    11ea:	ac 01       	movw	r20, r24
    11ec:	b9 01       	movw	r22, r18
    11ee:	ca 01       	movw	r24, r20
    11f0:	1f 91       	pop	r17
    11f2:	0f 91       	pop	r16
    11f4:	ff 90       	pop	r15
    11f6:	ef 90       	pop	r14
    11f8:	08 95       	ret

000011fa <_fpadd_parts>:
    11fa:	a0 e0       	ldi	r26, 0x00	; 0
    11fc:	b0 e0       	ldi	r27, 0x00	; 0
    11fe:	e3 e0       	ldi	r30, 0x03	; 3
    1200:	f9 e0       	ldi	r31, 0x09	; 9
    1202:	0c 94 a3 0f 	jmp	0x1f46	; 0x1f46 <__prologue_saves__>
    1206:	dc 01       	movw	r26, r24
    1208:	2b 01       	movw	r4, r22
    120a:	fa 01       	movw	r30, r20
    120c:	9c 91       	ld	r25, X
    120e:	92 30       	cpi	r25, 0x02	; 2
    1210:	08 f4       	brcc	.+2      	; 0x1214 <_fpadd_parts+0x1a>
    1212:	39 c1       	rjmp	.+626    	; 0x1486 <_fpadd_parts+0x28c>
    1214:	eb 01       	movw	r28, r22
    1216:	88 81       	ld	r24, Y
    1218:	82 30       	cpi	r24, 0x02	; 2
    121a:	08 f4       	brcc	.+2      	; 0x121e <_fpadd_parts+0x24>
    121c:	33 c1       	rjmp	.+614    	; 0x1484 <_fpadd_parts+0x28a>
    121e:	94 30       	cpi	r25, 0x04	; 4
    1220:	69 f4       	brne	.+26     	; 0x123c <_fpadd_parts+0x42>
    1222:	84 30       	cpi	r24, 0x04	; 4
    1224:	09 f0       	breq	.+2      	; 0x1228 <_fpadd_parts+0x2e>
    1226:	2f c1       	rjmp	.+606    	; 0x1486 <_fpadd_parts+0x28c>
    1228:	11 96       	adiw	r26, 0x01	; 1
    122a:	9c 91       	ld	r25, X
    122c:	11 97       	sbiw	r26, 0x01	; 1
    122e:	89 81       	ldd	r24, Y+1	; 0x01
    1230:	98 17       	cp	r25, r24
    1232:	09 f4       	brne	.+2      	; 0x1236 <_fpadd_parts+0x3c>
    1234:	28 c1       	rjmp	.+592    	; 0x1486 <_fpadd_parts+0x28c>
    1236:	a0 e0       	ldi	r26, 0x00	; 0
    1238:	b1 e0       	ldi	r27, 0x01	; 1
    123a:	25 c1       	rjmp	.+586    	; 0x1486 <_fpadd_parts+0x28c>
    123c:	84 30       	cpi	r24, 0x04	; 4
    123e:	09 f4       	brne	.+2      	; 0x1242 <_fpadd_parts+0x48>
    1240:	21 c1       	rjmp	.+578    	; 0x1484 <_fpadd_parts+0x28a>
    1242:	82 30       	cpi	r24, 0x02	; 2
    1244:	a9 f4       	brne	.+42     	; 0x1270 <_fpadd_parts+0x76>
    1246:	92 30       	cpi	r25, 0x02	; 2
    1248:	09 f0       	breq	.+2      	; 0x124c <_fpadd_parts+0x52>
    124a:	1d c1       	rjmp	.+570    	; 0x1486 <_fpadd_parts+0x28c>
    124c:	9a 01       	movw	r18, r20
    124e:	ad 01       	movw	r20, r26
    1250:	88 e0       	ldi	r24, 0x08	; 8
    1252:	ea 01       	movw	r28, r20
    1254:	09 90       	ld	r0, Y+
    1256:	ae 01       	movw	r20, r28
    1258:	e9 01       	movw	r28, r18
    125a:	09 92       	st	Y+, r0
    125c:	9e 01       	movw	r18, r28
    125e:	81 50       	subi	r24, 0x01	; 1
    1260:	c1 f7       	brne	.-16     	; 0x1252 <_fpadd_parts+0x58>
    1262:	e2 01       	movw	r28, r4
    1264:	89 81       	ldd	r24, Y+1	; 0x01
    1266:	11 96       	adiw	r26, 0x01	; 1
    1268:	9c 91       	ld	r25, X
    126a:	89 23       	and	r24, r25
    126c:	81 83       	std	Z+1, r24	; 0x01
    126e:	08 c1       	rjmp	.+528    	; 0x1480 <_fpadd_parts+0x286>
    1270:	92 30       	cpi	r25, 0x02	; 2
    1272:	09 f4       	brne	.+2      	; 0x1276 <_fpadd_parts+0x7c>
    1274:	07 c1       	rjmp	.+526    	; 0x1484 <_fpadd_parts+0x28a>
    1276:	12 96       	adiw	r26, 0x02	; 2
    1278:	2d 90       	ld	r2, X+
    127a:	3c 90       	ld	r3, X
    127c:	13 97       	sbiw	r26, 0x03	; 3
    127e:	eb 01       	movw	r28, r22
    1280:	8a 81       	ldd	r24, Y+2	; 0x02
    1282:	9b 81       	ldd	r25, Y+3	; 0x03
    1284:	14 96       	adiw	r26, 0x04	; 4
    1286:	ad 90       	ld	r10, X+
    1288:	bd 90       	ld	r11, X+
    128a:	cd 90       	ld	r12, X+
    128c:	dc 90       	ld	r13, X
    128e:	17 97       	sbiw	r26, 0x07	; 7
    1290:	ec 80       	ldd	r14, Y+4	; 0x04
    1292:	fd 80       	ldd	r15, Y+5	; 0x05
    1294:	0e 81       	ldd	r16, Y+6	; 0x06
    1296:	1f 81       	ldd	r17, Y+7	; 0x07
    1298:	91 01       	movw	r18, r2
    129a:	28 1b       	sub	r18, r24
    129c:	39 0b       	sbc	r19, r25
    129e:	b9 01       	movw	r22, r18
    12a0:	37 ff       	sbrs	r19, 7
    12a2:	04 c0       	rjmp	.+8      	; 0x12ac <_fpadd_parts+0xb2>
    12a4:	66 27       	eor	r22, r22
    12a6:	77 27       	eor	r23, r23
    12a8:	62 1b       	sub	r22, r18
    12aa:	73 0b       	sbc	r23, r19
    12ac:	60 32       	cpi	r22, 0x20	; 32
    12ae:	71 05       	cpc	r23, r1
    12b0:	0c f0       	brlt	.+2      	; 0x12b4 <_fpadd_parts+0xba>
    12b2:	61 c0       	rjmp	.+194    	; 0x1376 <_fpadd_parts+0x17c>
    12b4:	12 16       	cp	r1, r18
    12b6:	13 06       	cpc	r1, r19
    12b8:	6c f5       	brge	.+90     	; 0x1314 <_fpadd_parts+0x11a>
    12ba:	37 01       	movw	r6, r14
    12bc:	48 01       	movw	r8, r16
    12be:	06 2e       	mov	r0, r22
    12c0:	04 c0       	rjmp	.+8      	; 0x12ca <_fpadd_parts+0xd0>
    12c2:	96 94       	lsr	r9
    12c4:	87 94       	ror	r8
    12c6:	77 94       	ror	r7
    12c8:	67 94       	ror	r6
    12ca:	0a 94       	dec	r0
    12cc:	d2 f7       	brpl	.-12     	; 0x12c2 <_fpadd_parts+0xc8>
    12ce:	21 e0       	ldi	r18, 0x01	; 1
    12d0:	30 e0       	ldi	r19, 0x00	; 0
    12d2:	40 e0       	ldi	r20, 0x00	; 0
    12d4:	50 e0       	ldi	r21, 0x00	; 0
    12d6:	04 c0       	rjmp	.+8      	; 0x12e0 <_fpadd_parts+0xe6>
    12d8:	22 0f       	add	r18, r18
    12da:	33 1f       	adc	r19, r19
    12dc:	44 1f       	adc	r20, r20
    12de:	55 1f       	adc	r21, r21
    12e0:	6a 95       	dec	r22
    12e2:	d2 f7       	brpl	.-12     	; 0x12d8 <_fpadd_parts+0xde>
    12e4:	21 50       	subi	r18, 0x01	; 1
    12e6:	30 40       	sbci	r19, 0x00	; 0
    12e8:	40 40       	sbci	r20, 0x00	; 0
    12ea:	50 40       	sbci	r21, 0x00	; 0
    12ec:	2e 21       	and	r18, r14
    12ee:	3f 21       	and	r19, r15
    12f0:	40 23       	and	r20, r16
    12f2:	51 23       	and	r21, r17
    12f4:	21 15       	cp	r18, r1
    12f6:	31 05       	cpc	r19, r1
    12f8:	41 05       	cpc	r20, r1
    12fa:	51 05       	cpc	r21, r1
    12fc:	21 f0       	breq	.+8      	; 0x1306 <_fpadd_parts+0x10c>
    12fe:	21 e0       	ldi	r18, 0x01	; 1
    1300:	30 e0       	ldi	r19, 0x00	; 0
    1302:	40 e0       	ldi	r20, 0x00	; 0
    1304:	50 e0       	ldi	r21, 0x00	; 0
    1306:	79 01       	movw	r14, r18
    1308:	8a 01       	movw	r16, r20
    130a:	e6 28       	or	r14, r6
    130c:	f7 28       	or	r15, r7
    130e:	08 29       	or	r16, r8
    1310:	19 29       	or	r17, r9
    1312:	3c c0       	rjmp	.+120    	; 0x138c <_fpadd_parts+0x192>
    1314:	23 2b       	or	r18, r19
    1316:	d1 f1       	breq	.+116    	; 0x138c <_fpadd_parts+0x192>
    1318:	26 0e       	add	r2, r22
    131a:	37 1e       	adc	r3, r23
    131c:	35 01       	movw	r6, r10
    131e:	46 01       	movw	r8, r12
    1320:	06 2e       	mov	r0, r22
    1322:	04 c0       	rjmp	.+8      	; 0x132c <_fpadd_parts+0x132>
    1324:	96 94       	lsr	r9
    1326:	87 94       	ror	r8
    1328:	77 94       	ror	r7
    132a:	67 94       	ror	r6
    132c:	0a 94       	dec	r0
    132e:	d2 f7       	brpl	.-12     	; 0x1324 <_fpadd_parts+0x12a>
    1330:	21 e0       	ldi	r18, 0x01	; 1
    1332:	30 e0       	ldi	r19, 0x00	; 0
    1334:	40 e0       	ldi	r20, 0x00	; 0
    1336:	50 e0       	ldi	r21, 0x00	; 0
    1338:	04 c0       	rjmp	.+8      	; 0x1342 <_fpadd_parts+0x148>
    133a:	22 0f       	add	r18, r18
    133c:	33 1f       	adc	r19, r19
    133e:	44 1f       	adc	r20, r20
    1340:	55 1f       	adc	r21, r21
    1342:	6a 95       	dec	r22
    1344:	d2 f7       	brpl	.-12     	; 0x133a <_fpadd_parts+0x140>
    1346:	21 50       	subi	r18, 0x01	; 1
    1348:	30 40       	sbci	r19, 0x00	; 0
    134a:	40 40       	sbci	r20, 0x00	; 0
    134c:	50 40       	sbci	r21, 0x00	; 0
    134e:	2a 21       	and	r18, r10
    1350:	3b 21       	and	r19, r11
    1352:	4c 21       	and	r20, r12
    1354:	5d 21       	and	r21, r13
    1356:	21 15       	cp	r18, r1
    1358:	31 05       	cpc	r19, r1
    135a:	41 05       	cpc	r20, r1
    135c:	51 05       	cpc	r21, r1
    135e:	21 f0       	breq	.+8      	; 0x1368 <_fpadd_parts+0x16e>
    1360:	21 e0       	ldi	r18, 0x01	; 1
    1362:	30 e0       	ldi	r19, 0x00	; 0
    1364:	40 e0       	ldi	r20, 0x00	; 0
    1366:	50 e0       	ldi	r21, 0x00	; 0
    1368:	59 01       	movw	r10, r18
    136a:	6a 01       	movw	r12, r20
    136c:	a6 28       	or	r10, r6
    136e:	b7 28       	or	r11, r7
    1370:	c8 28       	or	r12, r8
    1372:	d9 28       	or	r13, r9
    1374:	0b c0       	rjmp	.+22     	; 0x138c <_fpadd_parts+0x192>
    1376:	82 15       	cp	r24, r2
    1378:	93 05       	cpc	r25, r3
    137a:	2c f0       	brlt	.+10     	; 0x1386 <_fpadd_parts+0x18c>
    137c:	1c 01       	movw	r2, r24
    137e:	aa 24       	eor	r10, r10
    1380:	bb 24       	eor	r11, r11
    1382:	65 01       	movw	r12, r10
    1384:	03 c0       	rjmp	.+6      	; 0x138c <_fpadd_parts+0x192>
    1386:	ee 24       	eor	r14, r14
    1388:	ff 24       	eor	r15, r15
    138a:	87 01       	movw	r16, r14
    138c:	11 96       	adiw	r26, 0x01	; 1
    138e:	9c 91       	ld	r25, X
    1390:	d2 01       	movw	r26, r4
    1392:	11 96       	adiw	r26, 0x01	; 1
    1394:	8c 91       	ld	r24, X
    1396:	98 17       	cp	r25, r24
    1398:	09 f4       	brne	.+2      	; 0x139c <_fpadd_parts+0x1a2>
    139a:	45 c0       	rjmp	.+138    	; 0x1426 <_fpadd_parts+0x22c>
    139c:	99 23       	and	r25, r25
    139e:	39 f0       	breq	.+14     	; 0x13ae <_fpadd_parts+0x1b4>
    13a0:	a8 01       	movw	r20, r16
    13a2:	97 01       	movw	r18, r14
    13a4:	2a 19       	sub	r18, r10
    13a6:	3b 09       	sbc	r19, r11
    13a8:	4c 09       	sbc	r20, r12
    13aa:	5d 09       	sbc	r21, r13
    13ac:	06 c0       	rjmp	.+12     	; 0x13ba <_fpadd_parts+0x1c0>
    13ae:	a6 01       	movw	r20, r12
    13b0:	95 01       	movw	r18, r10
    13b2:	2e 19       	sub	r18, r14
    13b4:	3f 09       	sbc	r19, r15
    13b6:	40 0b       	sbc	r20, r16
    13b8:	51 0b       	sbc	r21, r17
    13ba:	57 fd       	sbrc	r21, 7
    13bc:	08 c0       	rjmp	.+16     	; 0x13ce <_fpadd_parts+0x1d4>
    13be:	11 82       	std	Z+1, r1	; 0x01
    13c0:	33 82       	std	Z+3, r3	; 0x03
    13c2:	22 82       	std	Z+2, r2	; 0x02
    13c4:	24 83       	std	Z+4, r18	; 0x04
    13c6:	35 83       	std	Z+5, r19	; 0x05
    13c8:	46 83       	std	Z+6, r20	; 0x06
    13ca:	57 83       	std	Z+7, r21	; 0x07
    13cc:	1d c0       	rjmp	.+58     	; 0x1408 <_fpadd_parts+0x20e>
    13ce:	81 e0       	ldi	r24, 0x01	; 1
    13d0:	81 83       	std	Z+1, r24	; 0x01
    13d2:	33 82       	std	Z+3, r3	; 0x03
    13d4:	22 82       	std	Z+2, r2	; 0x02
    13d6:	88 27       	eor	r24, r24
    13d8:	99 27       	eor	r25, r25
    13da:	dc 01       	movw	r26, r24
    13dc:	82 1b       	sub	r24, r18
    13de:	93 0b       	sbc	r25, r19
    13e0:	a4 0b       	sbc	r26, r20
    13e2:	b5 0b       	sbc	r27, r21
    13e4:	84 83       	std	Z+4, r24	; 0x04
    13e6:	95 83       	std	Z+5, r25	; 0x05
    13e8:	a6 83       	std	Z+6, r26	; 0x06
    13ea:	b7 83       	std	Z+7, r27	; 0x07
    13ec:	0d c0       	rjmp	.+26     	; 0x1408 <_fpadd_parts+0x20e>
    13ee:	22 0f       	add	r18, r18
    13f0:	33 1f       	adc	r19, r19
    13f2:	44 1f       	adc	r20, r20
    13f4:	55 1f       	adc	r21, r21
    13f6:	24 83       	std	Z+4, r18	; 0x04
    13f8:	35 83       	std	Z+5, r19	; 0x05
    13fa:	46 83       	std	Z+6, r20	; 0x06
    13fc:	57 83       	std	Z+7, r21	; 0x07
    13fe:	82 81       	ldd	r24, Z+2	; 0x02
    1400:	93 81       	ldd	r25, Z+3	; 0x03
    1402:	01 97       	sbiw	r24, 0x01	; 1
    1404:	93 83       	std	Z+3, r25	; 0x03
    1406:	82 83       	std	Z+2, r24	; 0x02
    1408:	24 81       	ldd	r18, Z+4	; 0x04
    140a:	35 81       	ldd	r19, Z+5	; 0x05
    140c:	46 81       	ldd	r20, Z+6	; 0x06
    140e:	57 81       	ldd	r21, Z+7	; 0x07
    1410:	da 01       	movw	r26, r20
    1412:	c9 01       	movw	r24, r18
    1414:	01 97       	sbiw	r24, 0x01	; 1
    1416:	a1 09       	sbc	r26, r1
    1418:	b1 09       	sbc	r27, r1
    141a:	8f 5f       	subi	r24, 0xFF	; 255
    141c:	9f 4f       	sbci	r25, 0xFF	; 255
    141e:	af 4f       	sbci	r26, 0xFF	; 255
    1420:	bf 43       	sbci	r27, 0x3F	; 63
    1422:	28 f3       	brcs	.-54     	; 0x13ee <_fpadd_parts+0x1f4>
    1424:	0b c0       	rjmp	.+22     	; 0x143c <_fpadd_parts+0x242>
    1426:	91 83       	std	Z+1, r25	; 0x01
    1428:	33 82       	std	Z+3, r3	; 0x03
    142a:	22 82       	std	Z+2, r2	; 0x02
    142c:	ea 0c       	add	r14, r10
    142e:	fb 1c       	adc	r15, r11
    1430:	0c 1d       	adc	r16, r12
    1432:	1d 1d       	adc	r17, r13
    1434:	e4 82       	std	Z+4, r14	; 0x04
    1436:	f5 82       	std	Z+5, r15	; 0x05
    1438:	06 83       	std	Z+6, r16	; 0x06
    143a:	17 83       	std	Z+7, r17	; 0x07
    143c:	83 e0       	ldi	r24, 0x03	; 3
    143e:	80 83       	st	Z, r24
    1440:	24 81       	ldd	r18, Z+4	; 0x04
    1442:	35 81       	ldd	r19, Z+5	; 0x05
    1444:	46 81       	ldd	r20, Z+6	; 0x06
    1446:	57 81       	ldd	r21, Z+7	; 0x07
    1448:	57 ff       	sbrs	r21, 7
    144a:	1a c0       	rjmp	.+52     	; 0x1480 <_fpadd_parts+0x286>
    144c:	c9 01       	movw	r24, r18
    144e:	aa 27       	eor	r26, r26
    1450:	97 fd       	sbrc	r25, 7
    1452:	a0 95       	com	r26
    1454:	ba 2f       	mov	r27, r26
    1456:	81 70       	andi	r24, 0x01	; 1
    1458:	90 70       	andi	r25, 0x00	; 0
    145a:	a0 70       	andi	r26, 0x00	; 0
    145c:	b0 70       	andi	r27, 0x00	; 0
    145e:	56 95       	lsr	r21
    1460:	47 95       	ror	r20
    1462:	37 95       	ror	r19
    1464:	27 95       	ror	r18
    1466:	82 2b       	or	r24, r18
    1468:	93 2b       	or	r25, r19
    146a:	a4 2b       	or	r26, r20
    146c:	b5 2b       	or	r27, r21
    146e:	84 83       	std	Z+4, r24	; 0x04
    1470:	95 83       	std	Z+5, r25	; 0x05
    1472:	a6 83       	std	Z+6, r26	; 0x06
    1474:	b7 83       	std	Z+7, r27	; 0x07
    1476:	82 81       	ldd	r24, Z+2	; 0x02
    1478:	93 81       	ldd	r25, Z+3	; 0x03
    147a:	01 96       	adiw	r24, 0x01	; 1
    147c:	93 83       	std	Z+3, r25	; 0x03
    147e:	82 83       	std	Z+2, r24	; 0x02
    1480:	df 01       	movw	r26, r30
    1482:	01 c0       	rjmp	.+2      	; 0x1486 <_fpadd_parts+0x28c>
    1484:	d2 01       	movw	r26, r4
    1486:	cd 01       	movw	r24, r26
    1488:	cd b7       	in	r28, 0x3d	; 61
    148a:	de b7       	in	r29, 0x3e	; 62
    148c:	e2 e1       	ldi	r30, 0x12	; 18
    148e:	0c 94 bf 0f 	jmp	0x1f7e	; 0x1f7e <__epilogue_restores__>

00001492 <__subsf3>:
    1492:	a0 e2       	ldi	r26, 0x20	; 32
    1494:	b0 e0       	ldi	r27, 0x00	; 0
    1496:	ef e4       	ldi	r30, 0x4F	; 79
    1498:	fa e0       	ldi	r31, 0x0A	; 10
    149a:	0c 94 af 0f 	jmp	0x1f5e	; 0x1f5e <__prologue_saves__+0x18>
    149e:	69 83       	std	Y+1, r22	; 0x01
    14a0:	7a 83       	std	Y+2, r23	; 0x02
    14a2:	8b 83       	std	Y+3, r24	; 0x03
    14a4:	9c 83       	std	Y+4, r25	; 0x04
    14a6:	2d 83       	std	Y+5, r18	; 0x05
    14a8:	3e 83       	std	Y+6, r19	; 0x06
    14aa:	4f 83       	std	Y+7, r20	; 0x07
    14ac:	58 87       	std	Y+8, r21	; 0x08
    14ae:	e9 e0       	ldi	r30, 0x09	; 9
    14b0:	ee 2e       	mov	r14, r30
    14b2:	f1 2c       	mov	r15, r1
    14b4:	ec 0e       	add	r14, r28
    14b6:	fd 1e       	adc	r15, r29
    14b8:	ce 01       	movw	r24, r28
    14ba:	01 96       	adiw	r24, 0x01	; 1
    14bc:	b7 01       	movw	r22, r14
    14be:	0e 94 b3 0e 	call	0x1d66	; 0x1d66 <__unpack_f>
    14c2:	8e 01       	movw	r16, r28
    14c4:	0f 5e       	subi	r16, 0xEF	; 239
    14c6:	1f 4f       	sbci	r17, 0xFF	; 255
    14c8:	ce 01       	movw	r24, r28
    14ca:	05 96       	adiw	r24, 0x05	; 5
    14cc:	b8 01       	movw	r22, r16
    14ce:	0e 94 b3 0e 	call	0x1d66	; 0x1d66 <__unpack_f>
    14d2:	8a 89       	ldd	r24, Y+18	; 0x12
    14d4:	91 e0       	ldi	r25, 0x01	; 1
    14d6:	89 27       	eor	r24, r25
    14d8:	8a 8b       	std	Y+18, r24	; 0x12
    14da:	c7 01       	movw	r24, r14
    14dc:	b8 01       	movw	r22, r16
    14de:	ae 01       	movw	r20, r28
    14e0:	47 5e       	subi	r20, 0xE7	; 231
    14e2:	5f 4f       	sbci	r21, 0xFF	; 255
    14e4:	0e 94 fd 08 	call	0x11fa	; 0x11fa <_fpadd_parts>
    14e8:	0e 94 de 0d 	call	0x1bbc	; 0x1bbc <__pack_f>
    14ec:	a0 96       	adiw	r28, 0x20	; 32
    14ee:	e6 e0       	ldi	r30, 0x06	; 6
    14f0:	0c 94 cb 0f 	jmp	0x1f96	; 0x1f96 <__epilogue_restores__+0x18>

000014f4 <__addsf3>:
    14f4:	a0 e2       	ldi	r26, 0x20	; 32
    14f6:	b0 e0       	ldi	r27, 0x00	; 0
    14f8:	e0 e8       	ldi	r30, 0x80	; 128
    14fa:	fa e0       	ldi	r31, 0x0A	; 10
    14fc:	0c 94 af 0f 	jmp	0x1f5e	; 0x1f5e <__prologue_saves__+0x18>
    1500:	69 83       	std	Y+1, r22	; 0x01
    1502:	7a 83       	std	Y+2, r23	; 0x02
    1504:	8b 83       	std	Y+3, r24	; 0x03
    1506:	9c 83       	std	Y+4, r25	; 0x04
    1508:	2d 83       	std	Y+5, r18	; 0x05
    150a:	3e 83       	std	Y+6, r19	; 0x06
    150c:	4f 83       	std	Y+7, r20	; 0x07
    150e:	58 87       	std	Y+8, r21	; 0x08
    1510:	f9 e0       	ldi	r31, 0x09	; 9
    1512:	ef 2e       	mov	r14, r31
    1514:	f1 2c       	mov	r15, r1
    1516:	ec 0e       	add	r14, r28
    1518:	fd 1e       	adc	r15, r29
    151a:	ce 01       	movw	r24, r28
    151c:	01 96       	adiw	r24, 0x01	; 1
    151e:	b7 01       	movw	r22, r14
    1520:	0e 94 b3 0e 	call	0x1d66	; 0x1d66 <__unpack_f>
    1524:	8e 01       	movw	r16, r28
    1526:	0f 5e       	subi	r16, 0xEF	; 239
    1528:	1f 4f       	sbci	r17, 0xFF	; 255
    152a:	ce 01       	movw	r24, r28
    152c:	05 96       	adiw	r24, 0x05	; 5
    152e:	b8 01       	movw	r22, r16
    1530:	0e 94 b3 0e 	call	0x1d66	; 0x1d66 <__unpack_f>
    1534:	c7 01       	movw	r24, r14
    1536:	b8 01       	movw	r22, r16
    1538:	ae 01       	movw	r20, r28
    153a:	47 5e       	subi	r20, 0xE7	; 231
    153c:	5f 4f       	sbci	r21, 0xFF	; 255
    153e:	0e 94 fd 08 	call	0x11fa	; 0x11fa <_fpadd_parts>
    1542:	0e 94 de 0d 	call	0x1bbc	; 0x1bbc <__pack_f>
    1546:	a0 96       	adiw	r28, 0x20	; 32
    1548:	e6 e0       	ldi	r30, 0x06	; 6
    154a:	0c 94 cb 0f 	jmp	0x1f96	; 0x1f96 <__epilogue_restores__+0x18>

0000154e <__mulsf3>:
    154e:	a0 e2       	ldi	r26, 0x20	; 32
    1550:	b0 e0       	ldi	r27, 0x00	; 0
    1552:	ed ea       	ldi	r30, 0xAD	; 173
    1554:	fa e0       	ldi	r31, 0x0A	; 10
    1556:	0c 94 a3 0f 	jmp	0x1f46	; 0x1f46 <__prologue_saves__>
    155a:	69 83       	std	Y+1, r22	; 0x01
    155c:	7a 83       	std	Y+2, r23	; 0x02
    155e:	8b 83       	std	Y+3, r24	; 0x03
    1560:	9c 83       	std	Y+4, r25	; 0x04
    1562:	2d 83       	std	Y+5, r18	; 0x05
    1564:	3e 83       	std	Y+6, r19	; 0x06
    1566:	4f 83       	std	Y+7, r20	; 0x07
    1568:	58 87       	std	Y+8, r21	; 0x08
    156a:	ce 01       	movw	r24, r28
    156c:	01 96       	adiw	r24, 0x01	; 1
    156e:	be 01       	movw	r22, r28
    1570:	67 5f       	subi	r22, 0xF7	; 247
    1572:	7f 4f       	sbci	r23, 0xFF	; 255
    1574:	0e 94 b3 0e 	call	0x1d66	; 0x1d66 <__unpack_f>
    1578:	ce 01       	movw	r24, r28
    157a:	05 96       	adiw	r24, 0x05	; 5
    157c:	be 01       	movw	r22, r28
    157e:	6f 5e       	subi	r22, 0xEF	; 239
    1580:	7f 4f       	sbci	r23, 0xFF	; 255
    1582:	0e 94 b3 0e 	call	0x1d66	; 0x1d66 <__unpack_f>
    1586:	99 85       	ldd	r25, Y+9	; 0x09
    1588:	92 30       	cpi	r25, 0x02	; 2
    158a:	88 f0       	brcs	.+34     	; 0x15ae <__mulsf3+0x60>
    158c:	89 89       	ldd	r24, Y+17	; 0x11
    158e:	82 30       	cpi	r24, 0x02	; 2
    1590:	c8 f0       	brcs	.+50     	; 0x15c4 <__mulsf3+0x76>
    1592:	94 30       	cpi	r25, 0x04	; 4
    1594:	19 f4       	brne	.+6      	; 0x159c <__mulsf3+0x4e>
    1596:	82 30       	cpi	r24, 0x02	; 2
    1598:	51 f4       	brne	.+20     	; 0x15ae <__mulsf3+0x60>
    159a:	04 c0       	rjmp	.+8      	; 0x15a4 <__mulsf3+0x56>
    159c:	84 30       	cpi	r24, 0x04	; 4
    159e:	29 f4       	brne	.+10     	; 0x15aa <__mulsf3+0x5c>
    15a0:	92 30       	cpi	r25, 0x02	; 2
    15a2:	81 f4       	brne	.+32     	; 0x15c4 <__mulsf3+0x76>
    15a4:	80 e0       	ldi	r24, 0x00	; 0
    15a6:	91 e0       	ldi	r25, 0x01	; 1
    15a8:	c6 c0       	rjmp	.+396    	; 0x1736 <__mulsf3+0x1e8>
    15aa:	92 30       	cpi	r25, 0x02	; 2
    15ac:	49 f4       	brne	.+18     	; 0x15c0 <__mulsf3+0x72>
    15ae:	20 e0       	ldi	r18, 0x00	; 0
    15b0:	9a 85       	ldd	r25, Y+10	; 0x0a
    15b2:	8a 89       	ldd	r24, Y+18	; 0x12
    15b4:	98 13       	cpse	r25, r24
    15b6:	21 e0       	ldi	r18, 0x01	; 1
    15b8:	2a 87       	std	Y+10, r18	; 0x0a
    15ba:	ce 01       	movw	r24, r28
    15bc:	09 96       	adiw	r24, 0x09	; 9
    15be:	bb c0       	rjmp	.+374    	; 0x1736 <__mulsf3+0x1e8>
    15c0:	82 30       	cpi	r24, 0x02	; 2
    15c2:	49 f4       	brne	.+18     	; 0x15d6 <__mulsf3+0x88>
    15c4:	20 e0       	ldi	r18, 0x00	; 0
    15c6:	9a 85       	ldd	r25, Y+10	; 0x0a
    15c8:	8a 89       	ldd	r24, Y+18	; 0x12
    15ca:	98 13       	cpse	r25, r24
    15cc:	21 e0       	ldi	r18, 0x01	; 1
    15ce:	2a 8b       	std	Y+18, r18	; 0x12
    15d0:	ce 01       	movw	r24, r28
    15d2:	41 96       	adiw	r24, 0x11	; 17
    15d4:	b0 c0       	rjmp	.+352    	; 0x1736 <__mulsf3+0x1e8>
    15d6:	2d 84       	ldd	r2, Y+13	; 0x0d
    15d8:	3e 84       	ldd	r3, Y+14	; 0x0e
    15da:	4f 84       	ldd	r4, Y+15	; 0x0f
    15dc:	58 88       	ldd	r5, Y+16	; 0x10
    15de:	6d 88       	ldd	r6, Y+21	; 0x15
    15e0:	7e 88       	ldd	r7, Y+22	; 0x16
    15e2:	8f 88       	ldd	r8, Y+23	; 0x17
    15e4:	98 8c       	ldd	r9, Y+24	; 0x18
    15e6:	ee 24       	eor	r14, r14
    15e8:	ff 24       	eor	r15, r15
    15ea:	87 01       	movw	r16, r14
    15ec:	aa 24       	eor	r10, r10
    15ee:	bb 24       	eor	r11, r11
    15f0:	65 01       	movw	r12, r10
    15f2:	40 e0       	ldi	r20, 0x00	; 0
    15f4:	50 e0       	ldi	r21, 0x00	; 0
    15f6:	60 e0       	ldi	r22, 0x00	; 0
    15f8:	70 e0       	ldi	r23, 0x00	; 0
    15fa:	e0 e0       	ldi	r30, 0x00	; 0
    15fc:	f0 e0       	ldi	r31, 0x00	; 0
    15fe:	c1 01       	movw	r24, r2
    1600:	81 70       	andi	r24, 0x01	; 1
    1602:	90 70       	andi	r25, 0x00	; 0
    1604:	89 2b       	or	r24, r25
    1606:	e9 f0       	breq	.+58     	; 0x1642 <__mulsf3+0xf4>
    1608:	e6 0c       	add	r14, r6
    160a:	f7 1c       	adc	r15, r7
    160c:	08 1d       	adc	r16, r8
    160e:	19 1d       	adc	r17, r9
    1610:	9a 01       	movw	r18, r20
    1612:	ab 01       	movw	r20, r22
    1614:	2a 0d       	add	r18, r10
    1616:	3b 1d       	adc	r19, r11
    1618:	4c 1d       	adc	r20, r12
    161a:	5d 1d       	adc	r21, r13
    161c:	80 e0       	ldi	r24, 0x00	; 0
    161e:	90 e0       	ldi	r25, 0x00	; 0
    1620:	a0 e0       	ldi	r26, 0x00	; 0
    1622:	b0 e0       	ldi	r27, 0x00	; 0
    1624:	e6 14       	cp	r14, r6
    1626:	f7 04       	cpc	r15, r7
    1628:	08 05       	cpc	r16, r8
    162a:	19 05       	cpc	r17, r9
    162c:	20 f4       	brcc	.+8      	; 0x1636 <__mulsf3+0xe8>
    162e:	81 e0       	ldi	r24, 0x01	; 1
    1630:	90 e0       	ldi	r25, 0x00	; 0
    1632:	a0 e0       	ldi	r26, 0x00	; 0
    1634:	b0 e0       	ldi	r27, 0x00	; 0
    1636:	ba 01       	movw	r22, r20
    1638:	a9 01       	movw	r20, r18
    163a:	48 0f       	add	r20, r24
    163c:	59 1f       	adc	r21, r25
    163e:	6a 1f       	adc	r22, r26
    1640:	7b 1f       	adc	r23, r27
    1642:	aa 0c       	add	r10, r10
    1644:	bb 1c       	adc	r11, r11
    1646:	cc 1c       	adc	r12, r12
    1648:	dd 1c       	adc	r13, r13
    164a:	97 fe       	sbrs	r9, 7
    164c:	08 c0       	rjmp	.+16     	; 0x165e <__mulsf3+0x110>
    164e:	81 e0       	ldi	r24, 0x01	; 1
    1650:	90 e0       	ldi	r25, 0x00	; 0
    1652:	a0 e0       	ldi	r26, 0x00	; 0
    1654:	b0 e0       	ldi	r27, 0x00	; 0
    1656:	a8 2a       	or	r10, r24
    1658:	b9 2a       	or	r11, r25
    165a:	ca 2a       	or	r12, r26
    165c:	db 2a       	or	r13, r27
    165e:	31 96       	adiw	r30, 0x01	; 1
    1660:	e0 32       	cpi	r30, 0x20	; 32
    1662:	f1 05       	cpc	r31, r1
    1664:	49 f0       	breq	.+18     	; 0x1678 <__mulsf3+0x12a>
    1666:	66 0c       	add	r6, r6
    1668:	77 1c       	adc	r7, r7
    166a:	88 1c       	adc	r8, r8
    166c:	99 1c       	adc	r9, r9
    166e:	56 94       	lsr	r5
    1670:	47 94       	ror	r4
    1672:	37 94       	ror	r3
    1674:	27 94       	ror	r2
    1676:	c3 cf       	rjmp	.-122    	; 0x15fe <__mulsf3+0xb0>
    1678:	fa 85       	ldd	r31, Y+10	; 0x0a
    167a:	ea 89       	ldd	r30, Y+18	; 0x12
    167c:	2b 89       	ldd	r18, Y+19	; 0x13
    167e:	3c 89       	ldd	r19, Y+20	; 0x14
    1680:	8b 85       	ldd	r24, Y+11	; 0x0b
    1682:	9c 85       	ldd	r25, Y+12	; 0x0c
    1684:	28 0f       	add	r18, r24
    1686:	39 1f       	adc	r19, r25
    1688:	2e 5f       	subi	r18, 0xFE	; 254
    168a:	3f 4f       	sbci	r19, 0xFF	; 255
    168c:	17 c0       	rjmp	.+46     	; 0x16bc <__mulsf3+0x16e>
    168e:	ca 01       	movw	r24, r20
    1690:	81 70       	andi	r24, 0x01	; 1
    1692:	90 70       	andi	r25, 0x00	; 0
    1694:	89 2b       	or	r24, r25
    1696:	61 f0       	breq	.+24     	; 0x16b0 <__mulsf3+0x162>
    1698:	16 95       	lsr	r17
    169a:	07 95       	ror	r16
    169c:	f7 94       	ror	r15
    169e:	e7 94       	ror	r14
    16a0:	80 e0       	ldi	r24, 0x00	; 0
    16a2:	90 e0       	ldi	r25, 0x00	; 0
    16a4:	a0 e0       	ldi	r26, 0x00	; 0
    16a6:	b0 e8       	ldi	r27, 0x80	; 128
    16a8:	e8 2a       	or	r14, r24
    16aa:	f9 2a       	or	r15, r25
    16ac:	0a 2b       	or	r16, r26
    16ae:	1b 2b       	or	r17, r27
    16b0:	76 95       	lsr	r23
    16b2:	67 95       	ror	r22
    16b4:	57 95       	ror	r21
    16b6:	47 95       	ror	r20
    16b8:	2f 5f       	subi	r18, 0xFF	; 255
    16ba:	3f 4f       	sbci	r19, 0xFF	; 255
    16bc:	77 fd       	sbrc	r23, 7
    16be:	e7 cf       	rjmp	.-50     	; 0x168e <__mulsf3+0x140>
    16c0:	0c c0       	rjmp	.+24     	; 0x16da <__mulsf3+0x18c>
    16c2:	44 0f       	add	r20, r20
    16c4:	55 1f       	adc	r21, r21
    16c6:	66 1f       	adc	r22, r22
    16c8:	77 1f       	adc	r23, r23
    16ca:	17 fd       	sbrc	r17, 7
    16cc:	41 60       	ori	r20, 0x01	; 1
    16ce:	ee 0c       	add	r14, r14
    16d0:	ff 1c       	adc	r15, r15
    16d2:	00 1f       	adc	r16, r16
    16d4:	11 1f       	adc	r17, r17
    16d6:	21 50       	subi	r18, 0x01	; 1
    16d8:	30 40       	sbci	r19, 0x00	; 0
    16da:	40 30       	cpi	r20, 0x00	; 0
    16dc:	90 e0       	ldi	r25, 0x00	; 0
    16de:	59 07       	cpc	r21, r25
    16e0:	90 e0       	ldi	r25, 0x00	; 0
    16e2:	69 07       	cpc	r22, r25
    16e4:	90 e4       	ldi	r25, 0x40	; 64
    16e6:	79 07       	cpc	r23, r25
    16e8:	60 f3       	brcs	.-40     	; 0x16c2 <__mulsf3+0x174>
    16ea:	2b 8f       	std	Y+27, r18	; 0x1b
    16ec:	3c 8f       	std	Y+28, r19	; 0x1c
    16ee:	db 01       	movw	r26, r22
    16f0:	ca 01       	movw	r24, r20
    16f2:	8f 77       	andi	r24, 0x7F	; 127
    16f4:	90 70       	andi	r25, 0x00	; 0
    16f6:	a0 70       	andi	r26, 0x00	; 0
    16f8:	b0 70       	andi	r27, 0x00	; 0
    16fa:	80 34       	cpi	r24, 0x40	; 64
    16fc:	91 05       	cpc	r25, r1
    16fe:	a1 05       	cpc	r26, r1
    1700:	b1 05       	cpc	r27, r1
    1702:	61 f4       	brne	.+24     	; 0x171c <__mulsf3+0x1ce>
    1704:	47 fd       	sbrc	r20, 7
    1706:	0a c0       	rjmp	.+20     	; 0x171c <__mulsf3+0x1ce>
    1708:	e1 14       	cp	r14, r1
    170a:	f1 04       	cpc	r15, r1
    170c:	01 05       	cpc	r16, r1
    170e:	11 05       	cpc	r17, r1
    1710:	29 f0       	breq	.+10     	; 0x171c <__mulsf3+0x1ce>
    1712:	40 5c       	subi	r20, 0xC0	; 192
    1714:	5f 4f       	sbci	r21, 0xFF	; 255
    1716:	6f 4f       	sbci	r22, 0xFF	; 255
    1718:	7f 4f       	sbci	r23, 0xFF	; 255
    171a:	40 78       	andi	r20, 0x80	; 128
    171c:	1a 8e       	std	Y+26, r1	; 0x1a
    171e:	fe 17       	cp	r31, r30
    1720:	11 f0       	breq	.+4      	; 0x1726 <__mulsf3+0x1d8>
    1722:	81 e0       	ldi	r24, 0x01	; 1
    1724:	8a 8f       	std	Y+26, r24	; 0x1a
    1726:	4d 8f       	std	Y+29, r20	; 0x1d
    1728:	5e 8f       	std	Y+30, r21	; 0x1e
    172a:	6f 8f       	std	Y+31, r22	; 0x1f
    172c:	78 a3       	std	Y+32, r23	; 0x20
    172e:	83 e0       	ldi	r24, 0x03	; 3
    1730:	89 8f       	std	Y+25, r24	; 0x19
    1732:	ce 01       	movw	r24, r28
    1734:	49 96       	adiw	r24, 0x19	; 25
    1736:	0e 94 de 0d 	call	0x1bbc	; 0x1bbc <__pack_f>
    173a:	a0 96       	adiw	r28, 0x20	; 32
    173c:	e2 e1       	ldi	r30, 0x12	; 18
    173e:	0c 94 bf 0f 	jmp	0x1f7e	; 0x1f7e <__epilogue_restores__>

00001742 <__divsf3>:
    1742:	a8 e1       	ldi	r26, 0x18	; 24
    1744:	b0 e0       	ldi	r27, 0x00	; 0
    1746:	e7 ea       	ldi	r30, 0xA7	; 167
    1748:	fb e0       	ldi	r31, 0x0B	; 11
    174a:	0c 94 ab 0f 	jmp	0x1f56	; 0x1f56 <__prologue_saves__+0x10>
    174e:	69 83       	std	Y+1, r22	; 0x01
    1750:	7a 83       	std	Y+2, r23	; 0x02
    1752:	8b 83       	std	Y+3, r24	; 0x03
    1754:	9c 83       	std	Y+4, r25	; 0x04
    1756:	2d 83       	std	Y+5, r18	; 0x05
    1758:	3e 83       	std	Y+6, r19	; 0x06
    175a:	4f 83       	std	Y+7, r20	; 0x07
    175c:	58 87       	std	Y+8, r21	; 0x08
    175e:	b9 e0       	ldi	r27, 0x09	; 9
    1760:	eb 2e       	mov	r14, r27
    1762:	f1 2c       	mov	r15, r1
    1764:	ec 0e       	add	r14, r28
    1766:	fd 1e       	adc	r15, r29
    1768:	ce 01       	movw	r24, r28
    176a:	01 96       	adiw	r24, 0x01	; 1
    176c:	b7 01       	movw	r22, r14
    176e:	0e 94 b3 0e 	call	0x1d66	; 0x1d66 <__unpack_f>
    1772:	8e 01       	movw	r16, r28
    1774:	0f 5e       	subi	r16, 0xEF	; 239
    1776:	1f 4f       	sbci	r17, 0xFF	; 255
    1778:	ce 01       	movw	r24, r28
    177a:	05 96       	adiw	r24, 0x05	; 5
    177c:	b8 01       	movw	r22, r16
    177e:	0e 94 b3 0e 	call	0x1d66	; 0x1d66 <__unpack_f>
    1782:	29 85       	ldd	r18, Y+9	; 0x09
    1784:	22 30       	cpi	r18, 0x02	; 2
    1786:	08 f4       	brcc	.+2      	; 0x178a <__divsf3+0x48>
    1788:	7e c0       	rjmp	.+252    	; 0x1886 <__divsf3+0x144>
    178a:	39 89       	ldd	r19, Y+17	; 0x11
    178c:	32 30       	cpi	r19, 0x02	; 2
    178e:	10 f4       	brcc	.+4      	; 0x1794 <__divsf3+0x52>
    1790:	b8 01       	movw	r22, r16
    1792:	7c c0       	rjmp	.+248    	; 0x188c <__divsf3+0x14a>
    1794:	8a 85       	ldd	r24, Y+10	; 0x0a
    1796:	9a 89       	ldd	r25, Y+18	; 0x12
    1798:	89 27       	eor	r24, r25
    179a:	8a 87       	std	Y+10, r24	; 0x0a
    179c:	24 30       	cpi	r18, 0x04	; 4
    179e:	11 f0       	breq	.+4      	; 0x17a4 <__divsf3+0x62>
    17a0:	22 30       	cpi	r18, 0x02	; 2
    17a2:	31 f4       	brne	.+12     	; 0x17b0 <__divsf3+0x6e>
    17a4:	23 17       	cp	r18, r19
    17a6:	09 f0       	breq	.+2      	; 0x17aa <__divsf3+0x68>
    17a8:	6e c0       	rjmp	.+220    	; 0x1886 <__divsf3+0x144>
    17aa:	60 e0       	ldi	r22, 0x00	; 0
    17ac:	71 e0       	ldi	r23, 0x01	; 1
    17ae:	6e c0       	rjmp	.+220    	; 0x188c <__divsf3+0x14a>
    17b0:	34 30       	cpi	r19, 0x04	; 4
    17b2:	39 f4       	brne	.+14     	; 0x17c2 <__divsf3+0x80>
    17b4:	1d 86       	std	Y+13, r1	; 0x0d
    17b6:	1e 86       	std	Y+14, r1	; 0x0e
    17b8:	1f 86       	std	Y+15, r1	; 0x0f
    17ba:	18 8a       	std	Y+16, r1	; 0x10
    17bc:	1c 86       	std	Y+12, r1	; 0x0c
    17be:	1b 86       	std	Y+11, r1	; 0x0b
    17c0:	04 c0       	rjmp	.+8      	; 0x17ca <__divsf3+0x88>
    17c2:	32 30       	cpi	r19, 0x02	; 2
    17c4:	21 f4       	brne	.+8      	; 0x17ce <__divsf3+0x8c>
    17c6:	84 e0       	ldi	r24, 0x04	; 4
    17c8:	89 87       	std	Y+9, r24	; 0x09
    17ca:	b7 01       	movw	r22, r14
    17cc:	5f c0       	rjmp	.+190    	; 0x188c <__divsf3+0x14a>
    17ce:	2b 85       	ldd	r18, Y+11	; 0x0b
    17d0:	3c 85       	ldd	r19, Y+12	; 0x0c
    17d2:	8b 89       	ldd	r24, Y+19	; 0x13
    17d4:	9c 89       	ldd	r25, Y+20	; 0x14
    17d6:	28 1b       	sub	r18, r24
    17d8:	39 0b       	sbc	r19, r25
    17da:	3c 87       	std	Y+12, r19	; 0x0c
    17dc:	2b 87       	std	Y+11, r18	; 0x0b
    17de:	ed 84       	ldd	r14, Y+13	; 0x0d
    17e0:	fe 84       	ldd	r15, Y+14	; 0x0e
    17e2:	0f 85       	ldd	r16, Y+15	; 0x0f
    17e4:	18 89       	ldd	r17, Y+16	; 0x10
    17e6:	ad 88       	ldd	r10, Y+21	; 0x15
    17e8:	be 88       	ldd	r11, Y+22	; 0x16
    17ea:	cf 88       	ldd	r12, Y+23	; 0x17
    17ec:	d8 8c       	ldd	r13, Y+24	; 0x18
    17ee:	ea 14       	cp	r14, r10
    17f0:	fb 04       	cpc	r15, r11
    17f2:	0c 05       	cpc	r16, r12
    17f4:	1d 05       	cpc	r17, r13
    17f6:	40 f4       	brcc	.+16     	; 0x1808 <__divsf3+0xc6>
    17f8:	ee 0c       	add	r14, r14
    17fa:	ff 1c       	adc	r15, r15
    17fc:	00 1f       	adc	r16, r16
    17fe:	11 1f       	adc	r17, r17
    1800:	21 50       	subi	r18, 0x01	; 1
    1802:	30 40       	sbci	r19, 0x00	; 0
    1804:	3c 87       	std	Y+12, r19	; 0x0c
    1806:	2b 87       	std	Y+11, r18	; 0x0b
    1808:	20 e0       	ldi	r18, 0x00	; 0
    180a:	30 e0       	ldi	r19, 0x00	; 0
    180c:	40 e0       	ldi	r20, 0x00	; 0
    180e:	50 e0       	ldi	r21, 0x00	; 0
    1810:	80 e0       	ldi	r24, 0x00	; 0
    1812:	90 e0       	ldi	r25, 0x00	; 0
    1814:	a0 e0       	ldi	r26, 0x00	; 0
    1816:	b0 e4       	ldi	r27, 0x40	; 64
    1818:	60 e0       	ldi	r22, 0x00	; 0
    181a:	70 e0       	ldi	r23, 0x00	; 0
    181c:	ea 14       	cp	r14, r10
    181e:	fb 04       	cpc	r15, r11
    1820:	0c 05       	cpc	r16, r12
    1822:	1d 05       	cpc	r17, r13
    1824:	40 f0       	brcs	.+16     	; 0x1836 <__divsf3+0xf4>
    1826:	28 2b       	or	r18, r24
    1828:	39 2b       	or	r19, r25
    182a:	4a 2b       	or	r20, r26
    182c:	5b 2b       	or	r21, r27
    182e:	ea 18       	sub	r14, r10
    1830:	fb 08       	sbc	r15, r11
    1832:	0c 09       	sbc	r16, r12
    1834:	1d 09       	sbc	r17, r13
    1836:	b6 95       	lsr	r27
    1838:	a7 95       	ror	r26
    183a:	97 95       	ror	r25
    183c:	87 95       	ror	r24
    183e:	ee 0c       	add	r14, r14
    1840:	ff 1c       	adc	r15, r15
    1842:	00 1f       	adc	r16, r16
    1844:	11 1f       	adc	r17, r17
    1846:	6f 5f       	subi	r22, 0xFF	; 255
    1848:	7f 4f       	sbci	r23, 0xFF	; 255
    184a:	6f 31       	cpi	r22, 0x1F	; 31
    184c:	71 05       	cpc	r23, r1
    184e:	31 f7       	brne	.-52     	; 0x181c <__divsf3+0xda>
    1850:	da 01       	movw	r26, r20
    1852:	c9 01       	movw	r24, r18
    1854:	8f 77       	andi	r24, 0x7F	; 127
    1856:	90 70       	andi	r25, 0x00	; 0
    1858:	a0 70       	andi	r26, 0x00	; 0
    185a:	b0 70       	andi	r27, 0x00	; 0
    185c:	80 34       	cpi	r24, 0x40	; 64
    185e:	91 05       	cpc	r25, r1
    1860:	a1 05       	cpc	r26, r1
    1862:	b1 05       	cpc	r27, r1
    1864:	61 f4       	brne	.+24     	; 0x187e <__divsf3+0x13c>
    1866:	27 fd       	sbrc	r18, 7
    1868:	0a c0       	rjmp	.+20     	; 0x187e <__divsf3+0x13c>
    186a:	e1 14       	cp	r14, r1
    186c:	f1 04       	cpc	r15, r1
    186e:	01 05       	cpc	r16, r1
    1870:	11 05       	cpc	r17, r1
    1872:	29 f0       	breq	.+10     	; 0x187e <__divsf3+0x13c>
    1874:	20 5c       	subi	r18, 0xC0	; 192
    1876:	3f 4f       	sbci	r19, 0xFF	; 255
    1878:	4f 4f       	sbci	r20, 0xFF	; 255
    187a:	5f 4f       	sbci	r21, 0xFF	; 255
    187c:	20 78       	andi	r18, 0x80	; 128
    187e:	2d 87       	std	Y+13, r18	; 0x0d
    1880:	3e 87       	std	Y+14, r19	; 0x0e
    1882:	4f 87       	std	Y+15, r20	; 0x0f
    1884:	58 8b       	std	Y+16, r21	; 0x10
    1886:	be 01       	movw	r22, r28
    1888:	67 5f       	subi	r22, 0xF7	; 247
    188a:	7f 4f       	sbci	r23, 0xFF	; 255
    188c:	cb 01       	movw	r24, r22
    188e:	0e 94 de 0d 	call	0x1bbc	; 0x1bbc <__pack_f>
    1892:	68 96       	adiw	r28, 0x18	; 24
    1894:	ea e0       	ldi	r30, 0x0A	; 10
    1896:	0c 94 c7 0f 	jmp	0x1f8e	; 0x1f8e <__epilogue_restores__+0x10>

0000189a <__gtsf2>:
    189a:	a8 e1       	ldi	r26, 0x18	; 24
    189c:	b0 e0       	ldi	r27, 0x00	; 0
    189e:	e3 e5       	ldi	r30, 0x53	; 83
    18a0:	fc e0       	ldi	r31, 0x0C	; 12
    18a2:	0c 94 af 0f 	jmp	0x1f5e	; 0x1f5e <__prologue_saves__+0x18>
    18a6:	69 83       	std	Y+1, r22	; 0x01
    18a8:	7a 83       	std	Y+2, r23	; 0x02
    18aa:	8b 83       	std	Y+3, r24	; 0x03
    18ac:	9c 83       	std	Y+4, r25	; 0x04
    18ae:	2d 83       	std	Y+5, r18	; 0x05
    18b0:	3e 83       	std	Y+6, r19	; 0x06
    18b2:	4f 83       	std	Y+7, r20	; 0x07
    18b4:	58 87       	std	Y+8, r21	; 0x08
    18b6:	89 e0       	ldi	r24, 0x09	; 9
    18b8:	e8 2e       	mov	r14, r24
    18ba:	f1 2c       	mov	r15, r1
    18bc:	ec 0e       	add	r14, r28
    18be:	fd 1e       	adc	r15, r29
    18c0:	ce 01       	movw	r24, r28
    18c2:	01 96       	adiw	r24, 0x01	; 1
    18c4:	b7 01       	movw	r22, r14
    18c6:	0e 94 b3 0e 	call	0x1d66	; 0x1d66 <__unpack_f>
    18ca:	8e 01       	movw	r16, r28
    18cc:	0f 5e       	subi	r16, 0xEF	; 239
    18ce:	1f 4f       	sbci	r17, 0xFF	; 255
    18d0:	ce 01       	movw	r24, r28
    18d2:	05 96       	adiw	r24, 0x05	; 5
    18d4:	b8 01       	movw	r22, r16
    18d6:	0e 94 b3 0e 	call	0x1d66	; 0x1d66 <__unpack_f>
    18da:	89 85       	ldd	r24, Y+9	; 0x09
    18dc:	82 30       	cpi	r24, 0x02	; 2
    18de:	40 f0       	brcs	.+16     	; 0x18f0 <__gtsf2+0x56>
    18e0:	89 89       	ldd	r24, Y+17	; 0x11
    18e2:	82 30       	cpi	r24, 0x02	; 2
    18e4:	28 f0       	brcs	.+10     	; 0x18f0 <__gtsf2+0x56>
    18e6:	c7 01       	movw	r24, r14
    18e8:	b8 01       	movw	r22, r16
    18ea:	0e 94 2b 0f 	call	0x1e56	; 0x1e56 <__fpcmp_parts_f>
    18ee:	01 c0       	rjmp	.+2      	; 0x18f2 <__gtsf2+0x58>
    18f0:	8f ef       	ldi	r24, 0xFF	; 255
    18f2:	68 96       	adiw	r28, 0x18	; 24
    18f4:	e6 e0       	ldi	r30, 0x06	; 6
    18f6:	0c 94 cb 0f 	jmp	0x1f96	; 0x1f96 <__epilogue_restores__+0x18>

000018fa <__gesf2>:
    18fa:	a8 e1       	ldi	r26, 0x18	; 24
    18fc:	b0 e0       	ldi	r27, 0x00	; 0
    18fe:	e3 e8       	ldi	r30, 0x83	; 131
    1900:	fc e0       	ldi	r31, 0x0C	; 12
    1902:	0c 94 af 0f 	jmp	0x1f5e	; 0x1f5e <__prologue_saves__+0x18>
    1906:	69 83       	std	Y+1, r22	; 0x01
    1908:	7a 83       	std	Y+2, r23	; 0x02
    190a:	8b 83       	std	Y+3, r24	; 0x03
    190c:	9c 83       	std	Y+4, r25	; 0x04
    190e:	2d 83       	std	Y+5, r18	; 0x05
    1910:	3e 83       	std	Y+6, r19	; 0x06
    1912:	4f 83       	std	Y+7, r20	; 0x07
    1914:	58 87       	std	Y+8, r21	; 0x08
    1916:	89 e0       	ldi	r24, 0x09	; 9
    1918:	e8 2e       	mov	r14, r24
    191a:	f1 2c       	mov	r15, r1
    191c:	ec 0e       	add	r14, r28
    191e:	fd 1e       	adc	r15, r29
    1920:	ce 01       	movw	r24, r28
    1922:	01 96       	adiw	r24, 0x01	; 1
    1924:	b7 01       	movw	r22, r14
    1926:	0e 94 b3 0e 	call	0x1d66	; 0x1d66 <__unpack_f>
    192a:	8e 01       	movw	r16, r28
    192c:	0f 5e       	subi	r16, 0xEF	; 239
    192e:	1f 4f       	sbci	r17, 0xFF	; 255
    1930:	ce 01       	movw	r24, r28
    1932:	05 96       	adiw	r24, 0x05	; 5
    1934:	b8 01       	movw	r22, r16
    1936:	0e 94 b3 0e 	call	0x1d66	; 0x1d66 <__unpack_f>
    193a:	89 85       	ldd	r24, Y+9	; 0x09
    193c:	82 30       	cpi	r24, 0x02	; 2
    193e:	40 f0       	brcs	.+16     	; 0x1950 <__gesf2+0x56>
    1940:	89 89       	ldd	r24, Y+17	; 0x11
    1942:	82 30       	cpi	r24, 0x02	; 2
    1944:	28 f0       	brcs	.+10     	; 0x1950 <__gesf2+0x56>
    1946:	c7 01       	movw	r24, r14
    1948:	b8 01       	movw	r22, r16
    194a:	0e 94 2b 0f 	call	0x1e56	; 0x1e56 <__fpcmp_parts_f>
    194e:	01 c0       	rjmp	.+2      	; 0x1952 <__gesf2+0x58>
    1950:	8f ef       	ldi	r24, 0xFF	; 255
    1952:	68 96       	adiw	r28, 0x18	; 24
    1954:	e6 e0       	ldi	r30, 0x06	; 6
    1956:	0c 94 cb 0f 	jmp	0x1f96	; 0x1f96 <__epilogue_restores__+0x18>

0000195a <__ltsf2>:
    195a:	a8 e1       	ldi	r26, 0x18	; 24
    195c:	b0 e0       	ldi	r27, 0x00	; 0
    195e:	e3 eb       	ldi	r30, 0xB3	; 179
    1960:	fc e0       	ldi	r31, 0x0C	; 12
    1962:	0c 94 af 0f 	jmp	0x1f5e	; 0x1f5e <__prologue_saves__+0x18>
    1966:	69 83       	std	Y+1, r22	; 0x01
    1968:	7a 83       	std	Y+2, r23	; 0x02
    196a:	8b 83       	std	Y+3, r24	; 0x03
    196c:	9c 83       	std	Y+4, r25	; 0x04
    196e:	2d 83       	std	Y+5, r18	; 0x05
    1970:	3e 83       	std	Y+6, r19	; 0x06
    1972:	4f 83       	std	Y+7, r20	; 0x07
    1974:	58 87       	std	Y+8, r21	; 0x08
    1976:	89 e0       	ldi	r24, 0x09	; 9
    1978:	e8 2e       	mov	r14, r24
    197a:	f1 2c       	mov	r15, r1
    197c:	ec 0e       	add	r14, r28
    197e:	fd 1e       	adc	r15, r29
    1980:	ce 01       	movw	r24, r28
    1982:	01 96       	adiw	r24, 0x01	; 1
    1984:	b7 01       	movw	r22, r14
    1986:	0e 94 b3 0e 	call	0x1d66	; 0x1d66 <__unpack_f>
    198a:	8e 01       	movw	r16, r28
    198c:	0f 5e       	subi	r16, 0xEF	; 239
    198e:	1f 4f       	sbci	r17, 0xFF	; 255
    1990:	ce 01       	movw	r24, r28
    1992:	05 96       	adiw	r24, 0x05	; 5
    1994:	b8 01       	movw	r22, r16
    1996:	0e 94 b3 0e 	call	0x1d66	; 0x1d66 <__unpack_f>
    199a:	89 85       	ldd	r24, Y+9	; 0x09
    199c:	82 30       	cpi	r24, 0x02	; 2
    199e:	40 f0       	brcs	.+16     	; 0x19b0 <__ltsf2+0x56>
    19a0:	89 89       	ldd	r24, Y+17	; 0x11
    19a2:	82 30       	cpi	r24, 0x02	; 2
    19a4:	28 f0       	brcs	.+10     	; 0x19b0 <__ltsf2+0x56>
    19a6:	c7 01       	movw	r24, r14
    19a8:	b8 01       	movw	r22, r16
    19aa:	0e 94 2b 0f 	call	0x1e56	; 0x1e56 <__fpcmp_parts_f>
    19ae:	01 c0       	rjmp	.+2      	; 0x19b2 <__ltsf2+0x58>
    19b0:	81 e0       	ldi	r24, 0x01	; 1
    19b2:	68 96       	adiw	r28, 0x18	; 24
    19b4:	e6 e0       	ldi	r30, 0x06	; 6
    19b6:	0c 94 cb 0f 	jmp	0x1f96	; 0x1f96 <__epilogue_restores__+0x18>

000019ba <__floatsisf>:
    19ba:	a8 e0       	ldi	r26, 0x08	; 8
    19bc:	b0 e0       	ldi	r27, 0x00	; 0
    19be:	e3 ee       	ldi	r30, 0xE3	; 227
    19c0:	fc e0       	ldi	r31, 0x0C	; 12
    19c2:	0c 94 ac 0f 	jmp	0x1f58	; 0x1f58 <__prologue_saves__+0x12>
    19c6:	9b 01       	movw	r18, r22
    19c8:	ac 01       	movw	r20, r24
    19ca:	83 e0       	ldi	r24, 0x03	; 3
    19cc:	89 83       	std	Y+1, r24	; 0x01
    19ce:	da 01       	movw	r26, r20
    19d0:	c9 01       	movw	r24, r18
    19d2:	88 27       	eor	r24, r24
    19d4:	b7 fd       	sbrc	r27, 7
    19d6:	83 95       	inc	r24
    19d8:	99 27       	eor	r25, r25
    19da:	aa 27       	eor	r26, r26
    19dc:	bb 27       	eor	r27, r27
    19de:	b8 2e       	mov	r11, r24
    19e0:	21 15       	cp	r18, r1
    19e2:	31 05       	cpc	r19, r1
    19e4:	41 05       	cpc	r20, r1
    19e6:	51 05       	cpc	r21, r1
    19e8:	19 f4       	brne	.+6      	; 0x19f0 <__floatsisf+0x36>
    19ea:	82 e0       	ldi	r24, 0x02	; 2
    19ec:	89 83       	std	Y+1, r24	; 0x01
    19ee:	3a c0       	rjmp	.+116    	; 0x1a64 <__floatsisf+0xaa>
    19f0:	88 23       	and	r24, r24
    19f2:	a9 f0       	breq	.+42     	; 0x1a1e <__floatsisf+0x64>
    19f4:	20 30       	cpi	r18, 0x00	; 0
    19f6:	80 e0       	ldi	r24, 0x00	; 0
    19f8:	38 07       	cpc	r19, r24
    19fa:	80 e0       	ldi	r24, 0x00	; 0
    19fc:	48 07       	cpc	r20, r24
    19fe:	80 e8       	ldi	r24, 0x80	; 128
    1a00:	58 07       	cpc	r21, r24
    1a02:	29 f4       	brne	.+10     	; 0x1a0e <__floatsisf+0x54>
    1a04:	60 e0       	ldi	r22, 0x00	; 0
    1a06:	70 e0       	ldi	r23, 0x00	; 0
    1a08:	80 e0       	ldi	r24, 0x00	; 0
    1a0a:	9f ec       	ldi	r25, 0xCF	; 207
    1a0c:	30 c0       	rjmp	.+96     	; 0x1a6e <__floatsisf+0xb4>
    1a0e:	ee 24       	eor	r14, r14
    1a10:	ff 24       	eor	r15, r15
    1a12:	87 01       	movw	r16, r14
    1a14:	e2 1a       	sub	r14, r18
    1a16:	f3 0a       	sbc	r15, r19
    1a18:	04 0b       	sbc	r16, r20
    1a1a:	15 0b       	sbc	r17, r21
    1a1c:	02 c0       	rjmp	.+4      	; 0x1a22 <__floatsisf+0x68>
    1a1e:	79 01       	movw	r14, r18
    1a20:	8a 01       	movw	r16, r20
    1a22:	8e e1       	ldi	r24, 0x1E	; 30
    1a24:	c8 2e       	mov	r12, r24
    1a26:	d1 2c       	mov	r13, r1
    1a28:	dc 82       	std	Y+4, r13	; 0x04
    1a2a:	cb 82       	std	Y+3, r12	; 0x03
    1a2c:	ed 82       	std	Y+5, r14	; 0x05
    1a2e:	fe 82       	std	Y+6, r15	; 0x06
    1a30:	0f 83       	std	Y+7, r16	; 0x07
    1a32:	18 87       	std	Y+8, r17	; 0x08
    1a34:	c8 01       	movw	r24, r16
    1a36:	b7 01       	movw	r22, r14
    1a38:	0e 94 8f 0d 	call	0x1b1e	; 0x1b1e <__clzsi2>
    1a3c:	01 97       	sbiw	r24, 0x01	; 1
    1a3e:	18 16       	cp	r1, r24
    1a40:	19 06       	cpc	r1, r25
    1a42:	84 f4       	brge	.+32     	; 0x1a64 <__floatsisf+0xaa>
    1a44:	08 2e       	mov	r0, r24
    1a46:	04 c0       	rjmp	.+8      	; 0x1a50 <__floatsisf+0x96>
    1a48:	ee 0c       	add	r14, r14
    1a4a:	ff 1c       	adc	r15, r15
    1a4c:	00 1f       	adc	r16, r16
    1a4e:	11 1f       	adc	r17, r17
    1a50:	0a 94       	dec	r0
    1a52:	d2 f7       	brpl	.-12     	; 0x1a48 <__floatsisf+0x8e>
    1a54:	ed 82       	std	Y+5, r14	; 0x05
    1a56:	fe 82       	std	Y+6, r15	; 0x06
    1a58:	0f 83       	std	Y+7, r16	; 0x07
    1a5a:	18 87       	std	Y+8, r17	; 0x08
    1a5c:	c8 1a       	sub	r12, r24
    1a5e:	d9 0a       	sbc	r13, r25
    1a60:	dc 82       	std	Y+4, r13	; 0x04
    1a62:	cb 82       	std	Y+3, r12	; 0x03
    1a64:	ba 82       	std	Y+2, r11	; 0x02
    1a66:	ce 01       	movw	r24, r28
    1a68:	01 96       	adiw	r24, 0x01	; 1
    1a6a:	0e 94 de 0d 	call	0x1bbc	; 0x1bbc <__pack_f>
    1a6e:	28 96       	adiw	r28, 0x08	; 8
    1a70:	e9 e0       	ldi	r30, 0x09	; 9
    1a72:	0c 94 c8 0f 	jmp	0x1f90	; 0x1f90 <__epilogue_restores__+0x12>

00001a76 <__fixsfsi>:
    1a76:	ac e0       	ldi	r26, 0x0C	; 12
    1a78:	b0 e0       	ldi	r27, 0x00	; 0
    1a7a:	e1 e4       	ldi	r30, 0x41	; 65
    1a7c:	fd e0       	ldi	r31, 0x0D	; 13
    1a7e:	0c 94 b3 0f 	jmp	0x1f66	; 0x1f66 <__prologue_saves__+0x20>
    1a82:	69 83       	std	Y+1, r22	; 0x01
    1a84:	7a 83       	std	Y+2, r23	; 0x02
    1a86:	8b 83       	std	Y+3, r24	; 0x03
    1a88:	9c 83       	std	Y+4, r25	; 0x04
    1a8a:	ce 01       	movw	r24, r28
    1a8c:	01 96       	adiw	r24, 0x01	; 1
    1a8e:	be 01       	movw	r22, r28
    1a90:	6b 5f       	subi	r22, 0xFB	; 251
    1a92:	7f 4f       	sbci	r23, 0xFF	; 255
    1a94:	0e 94 b3 0e 	call	0x1d66	; 0x1d66 <__unpack_f>
    1a98:	8d 81       	ldd	r24, Y+5	; 0x05
    1a9a:	82 30       	cpi	r24, 0x02	; 2
    1a9c:	61 f1       	breq	.+88     	; 0x1af6 <__fixsfsi+0x80>
    1a9e:	82 30       	cpi	r24, 0x02	; 2
    1aa0:	50 f1       	brcs	.+84     	; 0x1af6 <__fixsfsi+0x80>
    1aa2:	84 30       	cpi	r24, 0x04	; 4
    1aa4:	21 f4       	brne	.+8      	; 0x1aae <__fixsfsi+0x38>
    1aa6:	8e 81       	ldd	r24, Y+6	; 0x06
    1aa8:	88 23       	and	r24, r24
    1aaa:	51 f1       	breq	.+84     	; 0x1b00 <__fixsfsi+0x8a>
    1aac:	2e c0       	rjmp	.+92     	; 0x1b0a <__fixsfsi+0x94>
    1aae:	2f 81       	ldd	r18, Y+7	; 0x07
    1ab0:	38 85       	ldd	r19, Y+8	; 0x08
    1ab2:	37 fd       	sbrc	r19, 7
    1ab4:	20 c0       	rjmp	.+64     	; 0x1af6 <__fixsfsi+0x80>
    1ab6:	6e 81       	ldd	r22, Y+6	; 0x06
    1ab8:	2f 31       	cpi	r18, 0x1F	; 31
    1aba:	31 05       	cpc	r19, r1
    1abc:	1c f0       	brlt	.+6      	; 0x1ac4 <__fixsfsi+0x4e>
    1abe:	66 23       	and	r22, r22
    1ac0:	f9 f0       	breq	.+62     	; 0x1b00 <__fixsfsi+0x8a>
    1ac2:	23 c0       	rjmp	.+70     	; 0x1b0a <__fixsfsi+0x94>
    1ac4:	8e e1       	ldi	r24, 0x1E	; 30
    1ac6:	90 e0       	ldi	r25, 0x00	; 0
    1ac8:	82 1b       	sub	r24, r18
    1aca:	93 0b       	sbc	r25, r19
    1acc:	29 85       	ldd	r18, Y+9	; 0x09
    1ace:	3a 85       	ldd	r19, Y+10	; 0x0a
    1ad0:	4b 85       	ldd	r20, Y+11	; 0x0b
    1ad2:	5c 85       	ldd	r21, Y+12	; 0x0c
    1ad4:	04 c0       	rjmp	.+8      	; 0x1ade <__fixsfsi+0x68>
    1ad6:	56 95       	lsr	r21
    1ad8:	47 95       	ror	r20
    1ada:	37 95       	ror	r19
    1adc:	27 95       	ror	r18
    1ade:	8a 95       	dec	r24
    1ae0:	d2 f7       	brpl	.-12     	; 0x1ad6 <__fixsfsi+0x60>
    1ae2:	66 23       	and	r22, r22
    1ae4:	b1 f0       	breq	.+44     	; 0x1b12 <__fixsfsi+0x9c>
    1ae6:	50 95       	com	r21
    1ae8:	40 95       	com	r20
    1aea:	30 95       	com	r19
    1aec:	21 95       	neg	r18
    1aee:	3f 4f       	sbci	r19, 0xFF	; 255
    1af0:	4f 4f       	sbci	r20, 0xFF	; 255
    1af2:	5f 4f       	sbci	r21, 0xFF	; 255
    1af4:	0e c0       	rjmp	.+28     	; 0x1b12 <__fixsfsi+0x9c>
    1af6:	20 e0       	ldi	r18, 0x00	; 0
    1af8:	30 e0       	ldi	r19, 0x00	; 0
    1afa:	40 e0       	ldi	r20, 0x00	; 0
    1afc:	50 e0       	ldi	r21, 0x00	; 0
    1afe:	09 c0       	rjmp	.+18     	; 0x1b12 <__fixsfsi+0x9c>
    1b00:	2f ef       	ldi	r18, 0xFF	; 255
    1b02:	3f ef       	ldi	r19, 0xFF	; 255
    1b04:	4f ef       	ldi	r20, 0xFF	; 255
    1b06:	5f e7       	ldi	r21, 0x7F	; 127
    1b08:	04 c0       	rjmp	.+8      	; 0x1b12 <__fixsfsi+0x9c>
    1b0a:	20 e0       	ldi	r18, 0x00	; 0
    1b0c:	30 e0       	ldi	r19, 0x00	; 0
    1b0e:	40 e0       	ldi	r20, 0x00	; 0
    1b10:	50 e8       	ldi	r21, 0x80	; 128
    1b12:	b9 01       	movw	r22, r18
    1b14:	ca 01       	movw	r24, r20
    1b16:	2c 96       	adiw	r28, 0x0c	; 12
    1b18:	e2 e0       	ldi	r30, 0x02	; 2
    1b1a:	0c 94 cf 0f 	jmp	0x1f9e	; 0x1f9e <__epilogue_restores__+0x20>

00001b1e <__clzsi2>:
    1b1e:	ef 92       	push	r14
    1b20:	ff 92       	push	r15
    1b22:	0f 93       	push	r16
    1b24:	1f 93       	push	r17
    1b26:	7b 01       	movw	r14, r22
    1b28:	8c 01       	movw	r16, r24
    1b2a:	80 e0       	ldi	r24, 0x00	; 0
    1b2c:	e8 16       	cp	r14, r24
    1b2e:	80 e0       	ldi	r24, 0x00	; 0
    1b30:	f8 06       	cpc	r15, r24
    1b32:	81 e0       	ldi	r24, 0x01	; 1
    1b34:	08 07       	cpc	r16, r24
    1b36:	80 e0       	ldi	r24, 0x00	; 0
    1b38:	18 07       	cpc	r17, r24
    1b3a:	88 f4       	brcc	.+34     	; 0x1b5e <__clzsi2+0x40>
    1b3c:	8f ef       	ldi	r24, 0xFF	; 255
    1b3e:	e8 16       	cp	r14, r24
    1b40:	f1 04       	cpc	r15, r1
    1b42:	01 05       	cpc	r16, r1
    1b44:	11 05       	cpc	r17, r1
    1b46:	31 f0       	breq	.+12     	; 0x1b54 <__clzsi2+0x36>
    1b48:	28 f0       	brcs	.+10     	; 0x1b54 <__clzsi2+0x36>
    1b4a:	88 e0       	ldi	r24, 0x08	; 8
    1b4c:	90 e0       	ldi	r25, 0x00	; 0
    1b4e:	a0 e0       	ldi	r26, 0x00	; 0
    1b50:	b0 e0       	ldi	r27, 0x00	; 0
    1b52:	17 c0       	rjmp	.+46     	; 0x1b82 <__clzsi2+0x64>
    1b54:	80 e0       	ldi	r24, 0x00	; 0
    1b56:	90 e0       	ldi	r25, 0x00	; 0
    1b58:	a0 e0       	ldi	r26, 0x00	; 0
    1b5a:	b0 e0       	ldi	r27, 0x00	; 0
    1b5c:	12 c0       	rjmp	.+36     	; 0x1b82 <__clzsi2+0x64>
    1b5e:	80 e0       	ldi	r24, 0x00	; 0
    1b60:	e8 16       	cp	r14, r24
    1b62:	80 e0       	ldi	r24, 0x00	; 0
    1b64:	f8 06       	cpc	r15, r24
    1b66:	80 e0       	ldi	r24, 0x00	; 0
    1b68:	08 07       	cpc	r16, r24
    1b6a:	81 e0       	ldi	r24, 0x01	; 1
    1b6c:	18 07       	cpc	r17, r24
    1b6e:	28 f0       	brcs	.+10     	; 0x1b7a <__clzsi2+0x5c>
    1b70:	88 e1       	ldi	r24, 0x18	; 24
    1b72:	90 e0       	ldi	r25, 0x00	; 0
    1b74:	a0 e0       	ldi	r26, 0x00	; 0
    1b76:	b0 e0       	ldi	r27, 0x00	; 0
    1b78:	04 c0       	rjmp	.+8      	; 0x1b82 <__clzsi2+0x64>
    1b7a:	80 e1       	ldi	r24, 0x10	; 16
    1b7c:	90 e0       	ldi	r25, 0x00	; 0
    1b7e:	a0 e0       	ldi	r26, 0x00	; 0
    1b80:	b0 e0       	ldi	r27, 0x00	; 0
    1b82:	20 e2       	ldi	r18, 0x20	; 32
    1b84:	30 e0       	ldi	r19, 0x00	; 0
    1b86:	40 e0       	ldi	r20, 0x00	; 0
    1b88:	50 e0       	ldi	r21, 0x00	; 0
    1b8a:	28 1b       	sub	r18, r24
    1b8c:	39 0b       	sbc	r19, r25
    1b8e:	4a 0b       	sbc	r20, r26
    1b90:	5b 0b       	sbc	r21, r27
    1b92:	04 c0       	rjmp	.+8      	; 0x1b9c <__clzsi2+0x7e>
    1b94:	16 95       	lsr	r17
    1b96:	07 95       	ror	r16
    1b98:	f7 94       	ror	r15
    1b9a:	e7 94       	ror	r14
    1b9c:	8a 95       	dec	r24
    1b9e:	d2 f7       	brpl	.-12     	; 0x1b94 <__clzsi2+0x76>
    1ba0:	f7 01       	movw	r30, r14
    1ba2:	e8 5f       	subi	r30, 0xF8	; 248
    1ba4:	fe 4f       	sbci	r31, 0xFE	; 254
    1ba6:	80 81       	ld	r24, Z
    1ba8:	28 1b       	sub	r18, r24
    1baa:	31 09       	sbc	r19, r1
    1bac:	41 09       	sbc	r20, r1
    1bae:	51 09       	sbc	r21, r1
    1bb0:	c9 01       	movw	r24, r18
    1bb2:	1f 91       	pop	r17
    1bb4:	0f 91       	pop	r16
    1bb6:	ff 90       	pop	r15
    1bb8:	ef 90       	pop	r14
    1bba:	08 95       	ret

00001bbc <__pack_f>:
    1bbc:	df 92       	push	r13
    1bbe:	ef 92       	push	r14
    1bc0:	ff 92       	push	r15
    1bc2:	0f 93       	push	r16
    1bc4:	1f 93       	push	r17
    1bc6:	fc 01       	movw	r30, r24
    1bc8:	e4 80       	ldd	r14, Z+4	; 0x04
    1bca:	f5 80       	ldd	r15, Z+5	; 0x05
    1bcc:	06 81       	ldd	r16, Z+6	; 0x06
    1bce:	17 81       	ldd	r17, Z+7	; 0x07
    1bd0:	d1 80       	ldd	r13, Z+1	; 0x01
    1bd2:	80 81       	ld	r24, Z
    1bd4:	82 30       	cpi	r24, 0x02	; 2
    1bd6:	48 f4       	brcc	.+18     	; 0x1bea <__pack_f+0x2e>
    1bd8:	80 e0       	ldi	r24, 0x00	; 0
    1bda:	90 e0       	ldi	r25, 0x00	; 0
    1bdc:	a0 e1       	ldi	r26, 0x10	; 16
    1bde:	b0 e0       	ldi	r27, 0x00	; 0
    1be0:	e8 2a       	or	r14, r24
    1be2:	f9 2a       	or	r15, r25
    1be4:	0a 2b       	or	r16, r26
    1be6:	1b 2b       	or	r17, r27
    1be8:	a5 c0       	rjmp	.+330    	; 0x1d34 <__pack_f+0x178>
    1bea:	84 30       	cpi	r24, 0x04	; 4
    1bec:	09 f4       	brne	.+2      	; 0x1bf0 <__pack_f+0x34>
    1bee:	9f c0       	rjmp	.+318    	; 0x1d2e <__pack_f+0x172>
    1bf0:	82 30       	cpi	r24, 0x02	; 2
    1bf2:	21 f4       	brne	.+8      	; 0x1bfc <__pack_f+0x40>
    1bf4:	ee 24       	eor	r14, r14
    1bf6:	ff 24       	eor	r15, r15
    1bf8:	87 01       	movw	r16, r14
    1bfa:	05 c0       	rjmp	.+10     	; 0x1c06 <__pack_f+0x4a>
    1bfc:	e1 14       	cp	r14, r1
    1bfe:	f1 04       	cpc	r15, r1
    1c00:	01 05       	cpc	r16, r1
    1c02:	11 05       	cpc	r17, r1
    1c04:	19 f4       	brne	.+6      	; 0x1c0c <__pack_f+0x50>
    1c06:	e0 e0       	ldi	r30, 0x00	; 0
    1c08:	f0 e0       	ldi	r31, 0x00	; 0
    1c0a:	96 c0       	rjmp	.+300    	; 0x1d38 <__pack_f+0x17c>
    1c0c:	62 81       	ldd	r22, Z+2	; 0x02
    1c0e:	73 81       	ldd	r23, Z+3	; 0x03
    1c10:	9f ef       	ldi	r25, 0xFF	; 255
    1c12:	62 38       	cpi	r22, 0x82	; 130
    1c14:	79 07       	cpc	r23, r25
    1c16:	0c f0       	brlt	.+2      	; 0x1c1a <__pack_f+0x5e>
    1c18:	5b c0       	rjmp	.+182    	; 0x1cd0 <__pack_f+0x114>
    1c1a:	22 e8       	ldi	r18, 0x82	; 130
    1c1c:	3f ef       	ldi	r19, 0xFF	; 255
    1c1e:	26 1b       	sub	r18, r22
    1c20:	37 0b       	sbc	r19, r23
    1c22:	2a 31       	cpi	r18, 0x1A	; 26
    1c24:	31 05       	cpc	r19, r1
    1c26:	2c f0       	brlt	.+10     	; 0x1c32 <__pack_f+0x76>
    1c28:	20 e0       	ldi	r18, 0x00	; 0
    1c2a:	30 e0       	ldi	r19, 0x00	; 0
    1c2c:	40 e0       	ldi	r20, 0x00	; 0
    1c2e:	50 e0       	ldi	r21, 0x00	; 0
    1c30:	2a c0       	rjmp	.+84     	; 0x1c86 <__pack_f+0xca>
    1c32:	b8 01       	movw	r22, r16
    1c34:	a7 01       	movw	r20, r14
    1c36:	02 2e       	mov	r0, r18
    1c38:	04 c0       	rjmp	.+8      	; 0x1c42 <__pack_f+0x86>
    1c3a:	76 95       	lsr	r23
    1c3c:	67 95       	ror	r22
    1c3e:	57 95       	ror	r21
    1c40:	47 95       	ror	r20
    1c42:	0a 94       	dec	r0
    1c44:	d2 f7       	brpl	.-12     	; 0x1c3a <__pack_f+0x7e>
    1c46:	81 e0       	ldi	r24, 0x01	; 1
    1c48:	90 e0       	ldi	r25, 0x00	; 0
    1c4a:	a0 e0       	ldi	r26, 0x00	; 0
    1c4c:	b0 e0       	ldi	r27, 0x00	; 0
    1c4e:	04 c0       	rjmp	.+8      	; 0x1c58 <__pack_f+0x9c>
    1c50:	88 0f       	add	r24, r24
    1c52:	99 1f       	adc	r25, r25
    1c54:	aa 1f       	adc	r26, r26
    1c56:	bb 1f       	adc	r27, r27
    1c58:	2a 95       	dec	r18
    1c5a:	d2 f7       	brpl	.-12     	; 0x1c50 <__pack_f+0x94>
    1c5c:	01 97       	sbiw	r24, 0x01	; 1
    1c5e:	a1 09       	sbc	r26, r1
    1c60:	b1 09       	sbc	r27, r1
    1c62:	8e 21       	and	r24, r14
    1c64:	9f 21       	and	r25, r15
    1c66:	a0 23       	and	r26, r16
    1c68:	b1 23       	and	r27, r17
    1c6a:	00 97       	sbiw	r24, 0x00	; 0
    1c6c:	a1 05       	cpc	r26, r1
    1c6e:	b1 05       	cpc	r27, r1
    1c70:	21 f0       	breq	.+8      	; 0x1c7a <__pack_f+0xbe>
    1c72:	81 e0       	ldi	r24, 0x01	; 1
    1c74:	90 e0       	ldi	r25, 0x00	; 0
    1c76:	a0 e0       	ldi	r26, 0x00	; 0
    1c78:	b0 e0       	ldi	r27, 0x00	; 0
    1c7a:	9a 01       	movw	r18, r20
    1c7c:	ab 01       	movw	r20, r22
    1c7e:	28 2b       	or	r18, r24
    1c80:	39 2b       	or	r19, r25
    1c82:	4a 2b       	or	r20, r26
    1c84:	5b 2b       	or	r21, r27
    1c86:	da 01       	movw	r26, r20
    1c88:	c9 01       	movw	r24, r18
    1c8a:	8f 77       	andi	r24, 0x7F	; 127
    1c8c:	90 70       	andi	r25, 0x00	; 0
    1c8e:	a0 70       	andi	r26, 0x00	; 0
    1c90:	b0 70       	andi	r27, 0x00	; 0
    1c92:	80 34       	cpi	r24, 0x40	; 64
    1c94:	91 05       	cpc	r25, r1
    1c96:	a1 05       	cpc	r26, r1
    1c98:	b1 05       	cpc	r27, r1
    1c9a:	39 f4       	brne	.+14     	; 0x1caa <__pack_f+0xee>
    1c9c:	27 ff       	sbrs	r18, 7
    1c9e:	09 c0       	rjmp	.+18     	; 0x1cb2 <__pack_f+0xf6>
    1ca0:	20 5c       	subi	r18, 0xC0	; 192
    1ca2:	3f 4f       	sbci	r19, 0xFF	; 255
    1ca4:	4f 4f       	sbci	r20, 0xFF	; 255
    1ca6:	5f 4f       	sbci	r21, 0xFF	; 255
    1ca8:	04 c0       	rjmp	.+8      	; 0x1cb2 <__pack_f+0xf6>
    1caa:	21 5c       	subi	r18, 0xC1	; 193
    1cac:	3f 4f       	sbci	r19, 0xFF	; 255
    1cae:	4f 4f       	sbci	r20, 0xFF	; 255
    1cb0:	5f 4f       	sbci	r21, 0xFF	; 255
    1cb2:	e0 e0       	ldi	r30, 0x00	; 0
    1cb4:	f0 e0       	ldi	r31, 0x00	; 0
    1cb6:	20 30       	cpi	r18, 0x00	; 0
    1cb8:	a0 e0       	ldi	r26, 0x00	; 0
    1cba:	3a 07       	cpc	r19, r26
    1cbc:	a0 e0       	ldi	r26, 0x00	; 0
    1cbe:	4a 07       	cpc	r20, r26
    1cc0:	a0 e4       	ldi	r26, 0x40	; 64
    1cc2:	5a 07       	cpc	r21, r26
    1cc4:	10 f0       	brcs	.+4      	; 0x1cca <__pack_f+0x10e>
    1cc6:	e1 e0       	ldi	r30, 0x01	; 1
    1cc8:	f0 e0       	ldi	r31, 0x00	; 0
    1cca:	79 01       	movw	r14, r18
    1ccc:	8a 01       	movw	r16, r20
    1cce:	27 c0       	rjmp	.+78     	; 0x1d1e <__pack_f+0x162>
    1cd0:	60 38       	cpi	r22, 0x80	; 128
    1cd2:	71 05       	cpc	r23, r1
    1cd4:	64 f5       	brge	.+88     	; 0x1d2e <__pack_f+0x172>
    1cd6:	fb 01       	movw	r30, r22
    1cd8:	e1 58       	subi	r30, 0x81	; 129
    1cda:	ff 4f       	sbci	r31, 0xFF	; 255
    1cdc:	d8 01       	movw	r26, r16
    1cde:	c7 01       	movw	r24, r14
    1ce0:	8f 77       	andi	r24, 0x7F	; 127
    1ce2:	90 70       	andi	r25, 0x00	; 0
    1ce4:	a0 70       	andi	r26, 0x00	; 0
    1ce6:	b0 70       	andi	r27, 0x00	; 0
    1ce8:	80 34       	cpi	r24, 0x40	; 64
    1cea:	91 05       	cpc	r25, r1
    1cec:	a1 05       	cpc	r26, r1
    1cee:	b1 05       	cpc	r27, r1
    1cf0:	39 f4       	brne	.+14     	; 0x1d00 <__pack_f+0x144>
    1cf2:	e7 fe       	sbrs	r14, 7
    1cf4:	0d c0       	rjmp	.+26     	; 0x1d10 <__pack_f+0x154>
    1cf6:	80 e4       	ldi	r24, 0x40	; 64
    1cf8:	90 e0       	ldi	r25, 0x00	; 0
    1cfa:	a0 e0       	ldi	r26, 0x00	; 0
    1cfc:	b0 e0       	ldi	r27, 0x00	; 0
    1cfe:	04 c0       	rjmp	.+8      	; 0x1d08 <__pack_f+0x14c>
    1d00:	8f e3       	ldi	r24, 0x3F	; 63
    1d02:	90 e0       	ldi	r25, 0x00	; 0
    1d04:	a0 e0       	ldi	r26, 0x00	; 0
    1d06:	b0 e0       	ldi	r27, 0x00	; 0
    1d08:	e8 0e       	add	r14, r24
    1d0a:	f9 1e       	adc	r15, r25
    1d0c:	0a 1f       	adc	r16, r26
    1d0e:	1b 1f       	adc	r17, r27
    1d10:	17 ff       	sbrs	r17, 7
    1d12:	05 c0       	rjmp	.+10     	; 0x1d1e <__pack_f+0x162>
    1d14:	16 95       	lsr	r17
    1d16:	07 95       	ror	r16
    1d18:	f7 94       	ror	r15
    1d1a:	e7 94       	ror	r14
    1d1c:	31 96       	adiw	r30, 0x01	; 1
    1d1e:	87 e0       	ldi	r24, 0x07	; 7
    1d20:	16 95       	lsr	r17
    1d22:	07 95       	ror	r16
    1d24:	f7 94       	ror	r15
    1d26:	e7 94       	ror	r14
    1d28:	8a 95       	dec	r24
    1d2a:	d1 f7       	brne	.-12     	; 0x1d20 <__pack_f+0x164>
    1d2c:	05 c0       	rjmp	.+10     	; 0x1d38 <__pack_f+0x17c>
    1d2e:	ee 24       	eor	r14, r14
    1d30:	ff 24       	eor	r15, r15
    1d32:	87 01       	movw	r16, r14
    1d34:	ef ef       	ldi	r30, 0xFF	; 255
    1d36:	f0 e0       	ldi	r31, 0x00	; 0
    1d38:	6e 2f       	mov	r22, r30
    1d3a:	67 95       	ror	r22
    1d3c:	66 27       	eor	r22, r22
    1d3e:	67 95       	ror	r22
    1d40:	90 2f       	mov	r25, r16
    1d42:	9f 77       	andi	r25, 0x7F	; 127
    1d44:	d7 94       	ror	r13
    1d46:	dd 24       	eor	r13, r13
    1d48:	d7 94       	ror	r13
    1d4a:	8e 2f       	mov	r24, r30
    1d4c:	86 95       	lsr	r24
    1d4e:	49 2f       	mov	r20, r25
    1d50:	46 2b       	or	r20, r22
    1d52:	58 2f       	mov	r21, r24
    1d54:	5d 29       	or	r21, r13
    1d56:	b7 01       	movw	r22, r14
    1d58:	ca 01       	movw	r24, r20
    1d5a:	1f 91       	pop	r17
    1d5c:	0f 91       	pop	r16
    1d5e:	ff 90       	pop	r15
    1d60:	ef 90       	pop	r14
    1d62:	df 90       	pop	r13
    1d64:	08 95       	ret

00001d66 <__unpack_f>:
    1d66:	fc 01       	movw	r30, r24
    1d68:	db 01       	movw	r26, r22
    1d6a:	40 81       	ld	r20, Z
    1d6c:	51 81       	ldd	r21, Z+1	; 0x01
    1d6e:	22 81       	ldd	r18, Z+2	; 0x02
    1d70:	62 2f       	mov	r22, r18
    1d72:	6f 77       	andi	r22, 0x7F	; 127
    1d74:	70 e0       	ldi	r23, 0x00	; 0
    1d76:	22 1f       	adc	r18, r18
    1d78:	22 27       	eor	r18, r18
    1d7a:	22 1f       	adc	r18, r18
    1d7c:	93 81       	ldd	r25, Z+3	; 0x03
    1d7e:	89 2f       	mov	r24, r25
    1d80:	88 0f       	add	r24, r24
    1d82:	82 2b       	or	r24, r18
    1d84:	28 2f       	mov	r18, r24
    1d86:	30 e0       	ldi	r19, 0x00	; 0
    1d88:	99 1f       	adc	r25, r25
    1d8a:	99 27       	eor	r25, r25
    1d8c:	99 1f       	adc	r25, r25
    1d8e:	11 96       	adiw	r26, 0x01	; 1
    1d90:	9c 93       	st	X, r25
    1d92:	11 97       	sbiw	r26, 0x01	; 1
    1d94:	21 15       	cp	r18, r1
    1d96:	31 05       	cpc	r19, r1
    1d98:	a9 f5       	brne	.+106    	; 0x1e04 <__unpack_f+0x9e>
    1d9a:	41 15       	cp	r20, r1
    1d9c:	51 05       	cpc	r21, r1
    1d9e:	61 05       	cpc	r22, r1
    1da0:	71 05       	cpc	r23, r1
    1da2:	11 f4       	brne	.+4      	; 0x1da8 <__unpack_f+0x42>
    1da4:	82 e0       	ldi	r24, 0x02	; 2
    1da6:	37 c0       	rjmp	.+110    	; 0x1e16 <__unpack_f+0xb0>
    1da8:	82 e8       	ldi	r24, 0x82	; 130
    1daa:	9f ef       	ldi	r25, 0xFF	; 255
    1dac:	13 96       	adiw	r26, 0x03	; 3
    1dae:	9c 93       	st	X, r25
    1db0:	8e 93       	st	-X, r24
    1db2:	12 97       	sbiw	r26, 0x02	; 2
    1db4:	9a 01       	movw	r18, r20
    1db6:	ab 01       	movw	r20, r22
    1db8:	67 e0       	ldi	r22, 0x07	; 7
    1dba:	22 0f       	add	r18, r18
    1dbc:	33 1f       	adc	r19, r19
    1dbe:	44 1f       	adc	r20, r20
    1dc0:	55 1f       	adc	r21, r21
    1dc2:	6a 95       	dec	r22
    1dc4:	d1 f7       	brne	.-12     	; 0x1dba <__unpack_f+0x54>
    1dc6:	83 e0       	ldi	r24, 0x03	; 3
    1dc8:	8c 93       	st	X, r24
    1dca:	0d c0       	rjmp	.+26     	; 0x1de6 <__unpack_f+0x80>
    1dcc:	22 0f       	add	r18, r18
    1dce:	33 1f       	adc	r19, r19
    1dd0:	44 1f       	adc	r20, r20
    1dd2:	55 1f       	adc	r21, r21
    1dd4:	12 96       	adiw	r26, 0x02	; 2
    1dd6:	8d 91       	ld	r24, X+
    1dd8:	9c 91       	ld	r25, X
    1dda:	13 97       	sbiw	r26, 0x03	; 3
    1ddc:	01 97       	sbiw	r24, 0x01	; 1
    1dde:	13 96       	adiw	r26, 0x03	; 3
    1de0:	9c 93       	st	X, r25
    1de2:	8e 93       	st	-X, r24
    1de4:	12 97       	sbiw	r26, 0x02	; 2
    1de6:	20 30       	cpi	r18, 0x00	; 0
    1de8:	80 e0       	ldi	r24, 0x00	; 0
    1dea:	38 07       	cpc	r19, r24
    1dec:	80 e0       	ldi	r24, 0x00	; 0
    1dee:	48 07       	cpc	r20, r24
    1df0:	80 e4       	ldi	r24, 0x40	; 64
    1df2:	58 07       	cpc	r21, r24
    1df4:	58 f3       	brcs	.-42     	; 0x1dcc <__unpack_f+0x66>
    1df6:	14 96       	adiw	r26, 0x04	; 4
    1df8:	2d 93       	st	X+, r18
    1dfa:	3d 93       	st	X+, r19
    1dfc:	4d 93       	st	X+, r20
    1dfe:	5c 93       	st	X, r21
    1e00:	17 97       	sbiw	r26, 0x07	; 7
    1e02:	08 95       	ret
    1e04:	2f 3f       	cpi	r18, 0xFF	; 255
    1e06:	31 05       	cpc	r19, r1
    1e08:	79 f4       	brne	.+30     	; 0x1e28 <__unpack_f+0xc2>
    1e0a:	41 15       	cp	r20, r1
    1e0c:	51 05       	cpc	r21, r1
    1e0e:	61 05       	cpc	r22, r1
    1e10:	71 05       	cpc	r23, r1
    1e12:	19 f4       	brne	.+6      	; 0x1e1a <__unpack_f+0xb4>
    1e14:	84 e0       	ldi	r24, 0x04	; 4
    1e16:	8c 93       	st	X, r24
    1e18:	08 95       	ret
    1e1a:	64 ff       	sbrs	r22, 4
    1e1c:	03 c0       	rjmp	.+6      	; 0x1e24 <__unpack_f+0xbe>
    1e1e:	81 e0       	ldi	r24, 0x01	; 1
    1e20:	8c 93       	st	X, r24
    1e22:	12 c0       	rjmp	.+36     	; 0x1e48 <__unpack_f+0xe2>
    1e24:	1c 92       	st	X, r1
    1e26:	10 c0       	rjmp	.+32     	; 0x1e48 <__unpack_f+0xe2>
    1e28:	2f 57       	subi	r18, 0x7F	; 127
    1e2a:	30 40       	sbci	r19, 0x00	; 0
    1e2c:	13 96       	adiw	r26, 0x03	; 3
    1e2e:	3c 93       	st	X, r19
    1e30:	2e 93       	st	-X, r18
    1e32:	12 97       	sbiw	r26, 0x02	; 2
    1e34:	83 e0       	ldi	r24, 0x03	; 3
    1e36:	8c 93       	st	X, r24
    1e38:	87 e0       	ldi	r24, 0x07	; 7
    1e3a:	44 0f       	add	r20, r20
    1e3c:	55 1f       	adc	r21, r21
    1e3e:	66 1f       	adc	r22, r22
    1e40:	77 1f       	adc	r23, r23
    1e42:	8a 95       	dec	r24
    1e44:	d1 f7       	brne	.-12     	; 0x1e3a <__unpack_f+0xd4>
    1e46:	70 64       	ori	r23, 0x40	; 64
    1e48:	14 96       	adiw	r26, 0x04	; 4
    1e4a:	4d 93       	st	X+, r20
    1e4c:	5d 93       	st	X+, r21
    1e4e:	6d 93       	st	X+, r22
    1e50:	7c 93       	st	X, r23
    1e52:	17 97       	sbiw	r26, 0x07	; 7
    1e54:	08 95       	ret

00001e56 <__fpcmp_parts_f>:
    1e56:	1f 93       	push	r17
    1e58:	dc 01       	movw	r26, r24
    1e5a:	fb 01       	movw	r30, r22
    1e5c:	9c 91       	ld	r25, X
    1e5e:	92 30       	cpi	r25, 0x02	; 2
    1e60:	08 f4       	brcc	.+2      	; 0x1e64 <__fpcmp_parts_f+0xe>
    1e62:	47 c0       	rjmp	.+142    	; 0x1ef2 <__fpcmp_parts_f+0x9c>
    1e64:	80 81       	ld	r24, Z
    1e66:	82 30       	cpi	r24, 0x02	; 2
    1e68:	08 f4       	brcc	.+2      	; 0x1e6c <__fpcmp_parts_f+0x16>
    1e6a:	43 c0       	rjmp	.+134    	; 0x1ef2 <__fpcmp_parts_f+0x9c>
    1e6c:	94 30       	cpi	r25, 0x04	; 4
    1e6e:	51 f4       	brne	.+20     	; 0x1e84 <__fpcmp_parts_f+0x2e>
    1e70:	11 96       	adiw	r26, 0x01	; 1
    1e72:	1c 91       	ld	r17, X
    1e74:	84 30       	cpi	r24, 0x04	; 4
    1e76:	99 f5       	brne	.+102    	; 0x1ede <__fpcmp_parts_f+0x88>
    1e78:	81 81       	ldd	r24, Z+1	; 0x01
    1e7a:	68 2f       	mov	r22, r24
    1e7c:	70 e0       	ldi	r23, 0x00	; 0
    1e7e:	61 1b       	sub	r22, r17
    1e80:	71 09       	sbc	r23, r1
    1e82:	3f c0       	rjmp	.+126    	; 0x1f02 <__fpcmp_parts_f+0xac>
    1e84:	84 30       	cpi	r24, 0x04	; 4
    1e86:	21 f0       	breq	.+8      	; 0x1e90 <__fpcmp_parts_f+0x3a>
    1e88:	92 30       	cpi	r25, 0x02	; 2
    1e8a:	31 f4       	brne	.+12     	; 0x1e98 <__fpcmp_parts_f+0x42>
    1e8c:	82 30       	cpi	r24, 0x02	; 2
    1e8e:	b9 f1       	breq	.+110    	; 0x1efe <__fpcmp_parts_f+0xa8>
    1e90:	81 81       	ldd	r24, Z+1	; 0x01
    1e92:	88 23       	and	r24, r24
    1e94:	89 f1       	breq	.+98     	; 0x1ef8 <__fpcmp_parts_f+0xa2>
    1e96:	2d c0       	rjmp	.+90     	; 0x1ef2 <__fpcmp_parts_f+0x9c>
    1e98:	11 96       	adiw	r26, 0x01	; 1
    1e9a:	1c 91       	ld	r17, X
    1e9c:	11 97       	sbiw	r26, 0x01	; 1
    1e9e:	82 30       	cpi	r24, 0x02	; 2
    1ea0:	f1 f0       	breq	.+60     	; 0x1ede <__fpcmp_parts_f+0x88>
    1ea2:	81 81       	ldd	r24, Z+1	; 0x01
    1ea4:	18 17       	cp	r17, r24
    1ea6:	d9 f4       	brne	.+54     	; 0x1ede <__fpcmp_parts_f+0x88>
    1ea8:	12 96       	adiw	r26, 0x02	; 2
    1eaa:	2d 91       	ld	r18, X+
    1eac:	3c 91       	ld	r19, X
    1eae:	13 97       	sbiw	r26, 0x03	; 3
    1eb0:	82 81       	ldd	r24, Z+2	; 0x02
    1eb2:	93 81       	ldd	r25, Z+3	; 0x03
    1eb4:	82 17       	cp	r24, r18
    1eb6:	93 07       	cpc	r25, r19
    1eb8:	94 f0       	brlt	.+36     	; 0x1ede <__fpcmp_parts_f+0x88>
    1eba:	28 17       	cp	r18, r24
    1ebc:	39 07       	cpc	r19, r25
    1ebe:	bc f0       	brlt	.+46     	; 0x1eee <__fpcmp_parts_f+0x98>
    1ec0:	14 96       	adiw	r26, 0x04	; 4
    1ec2:	8d 91       	ld	r24, X+
    1ec4:	9d 91       	ld	r25, X+
    1ec6:	0d 90       	ld	r0, X+
    1ec8:	bc 91       	ld	r27, X
    1eca:	a0 2d       	mov	r26, r0
    1ecc:	24 81       	ldd	r18, Z+4	; 0x04
    1ece:	35 81       	ldd	r19, Z+5	; 0x05
    1ed0:	46 81       	ldd	r20, Z+6	; 0x06
    1ed2:	57 81       	ldd	r21, Z+7	; 0x07
    1ed4:	28 17       	cp	r18, r24
    1ed6:	39 07       	cpc	r19, r25
    1ed8:	4a 07       	cpc	r20, r26
    1eda:	5b 07       	cpc	r21, r27
    1edc:	18 f4       	brcc	.+6      	; 0x1ee4 <__fpcmp_parts_f+0x8e>
    1ede:	11 23       	and	r17, r17
    1ee0:	41 f0       	breq	.+16     	; 0x1ef2 <__fpcmp_parts_f+0x9c>
    1ee2:	0a c0       	rjmp	.+20     	; 0x1ef8 <__fpcmp_parts_f+0xa2>
    1ee4:	82 17       	cp	r24, r18
    1ee6:	93 07       	cpc	r25, r19
    1ee8:	a4 07       	cpc	r26, r20
    1eea:	b5 07       	cpc	r27, r21
    1eec:	40 f4       	brcc	.+16     	; 0x1efe <__fpcmp_parts_f+0xa8>
    1eee:	11 23       	and	r17, r17
    1ef0:	19 f0       	breq	.+6      	; 0x1ef8 <__fpcmp_parts_f+0xa2>
    1ef2:	61 e0       	ldi	r22, 0x01	; 1
    1ef4:	70 e0       	ldi	r23, 0x00	; 0
    1ef6:	05 c0       	rjmp	.+10     	; 0x1f02 <__fpcmp_parts_f+0xac>
    1ef8:	6f ef       	ldi	r22, 0xFF	; 255
    1efa:	7f ef       	ldi	r23, 0xFF	; 255
    1efc:	02 c0       	rjmp	.+4      	; 0x1f02 <__fpcmp_parts_f+0xac>
    1efe:	60 e0       	ldi	r22, 0x00	; 0
    1f00:	70 e0       	ldi	r23, 0x00	; 0
    1f02:	cb 01       	movw	r24, r22
    1f04:	1f 91       	pop	r17
    1f06:	08 95       	ret

00001f08 <__mulsi3>:
    1f08:	62 9f       	mul	r22, r18
    1f0a:	d0 01       	movw	r26, r0
    1f0c:	73 9f       	mul	r23, r19
    1f0e:	f0 01       	movw	r30, r0
    1f10:	82 9f       	mul	r24, r18
    1f12:	e0 0d       	add	r30, r0
    1f14:	f1 1d       	adc	r31, r1
    1f16:	64 9f       	mul	r22, r20
    1f18:	e0 0d       	add	r30, r0
    1f1a:	f1 1d       	adc	r31, r1
    1f1c:	92 9f       	mul	r25, r18
    1f1e:	f0 0d       	add	r31, r0
    1f20:	83 9f       	mul	r24, r19
    1f22:	f0 0d       	add	r31, r0
    1f24:	74 9f       	mul	r23, r20
    1f26:	f0 0d       	add	r31, r0
    1f28:	65 9f       	mul	r22, r21
    1f2a:	f0 0d       	add	r31, r0
    1f2c:	99 27       	eor	r25, r25
    1f2e:	72 9f       	mul	r23, r18
    1f30:	b0 0d       	add	r27, r0
    1f32:	e1 1d       	adc	r30, r1
    1f34:	f9 1f       	adc	r31, r25
    1f36:	63 9f       	mul	r22, r19
    1f38:	b0 0d       	add	r27, r0
    1f3a:	e1 1d       	adc	r30, r1
    1f3c:	f9 1f       	adc	r31, r25
    1f3e:	bd 01       	movw	r22, r26
    1f40:	cf 01       	movw	r24, r30
    1f42:	11 24       	eor	r1, r1
    1f44:	08 95       	ret

00001f46 <__prologue_saves__>:
    1f46:	2f 92       	push	r2
    1f48:	3f 92       	push	r3
    1f4a:	4f 92       	push	r4
    1f4c:	5f 92       	push	r5
    1f4e:	6f 92       	push	r6
    1f50:	7f 92       	push	r7
    1f52:	8f 92       	push	r8
    1f54:	9f 92       	push	r9
    1f56:	af 92       	push	r10
    1f58:	bf 92       	push	r11
    1f5a:	cf 92       	push	r12
    1f5c:	df 92       	push	r13
    1f5e:	ef 92       	push	r14
    1f60:	ff 92       	push	r15
    1f62:	0f 93       	push	r16
    1f64:	1f 93       	push	r17
    1f66:	cf 93       	push	r28
    1f68:	df 93       	push	r29
    1f6a:	cd b7       	in	r28, 0x3d	; 61
    1f6c:	de b7       	in	r29, 0x3e	; 62
    1f6e:	ca 1b       	sub	r28, r26
    1f70:	db 0b       	sbc	r29, r27
    1f72:	0f b6       	in	r0, 0x3f	; 63
    1f74:	f8 94       	cli
    1f76:	de bf       	out	0x3e, r29	; 62
    1f78:	0f be       	out	0x3f, r0	; 63
    1f7a:	cd bf       	out	0x3d, r28	; 61
    1f7c:	09 94       	ijmp

00001f7e <__epilogue_restores__>:
    1f7e:	2a 88       	ldd	r2, Y+18	; 0x12
    1f80:	39 88       	ldd	r3, Y+17	; 0x11
    1f82:	48 88       	ldd	r4, Y+16	; 0x10
    1f84:	5f 84       	ldd	r5, Y+15	; 0x0f
    1f86:	6e 84       	ldd	r6, Y+14	; 0x0e
    1f88:	7d 84       	ldd	r7, Y+13	; 0x0d
    1f8a:	8c 84       	ldd	r8, Y+12	; 0x0c
    1f8c:	9b 84       	ldd	r9, Y+11	; 0x0b
    1f8e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1f90:	b9 84       	ldd	r11, Y+9	; 0x09
    1f92:	c8 84       	ldd	r12, Y+8	; 0x08
    1f94:	df 80       	ldd	r13, Y+7	; 0x07
    1f96:	ee 80       	ldd	r14, Y+6	; 0x06
    1f98:	fd 80       	ldd	r15, Y+5	; 0x05
    1f9a:	0c 81       	ldd	r16, Y+4	; 0x04
    1f9c:	1b 81       	ldd	r17, Y+3	; 0x03
    1f9e:	aa 81       	ldd	r26, Y+2	; 0x02
    1fa0:	b9 81       	ldd	r27, Y+1	; 0x01
    1fa2:	ce 0f       	add	r28, r30
    1fa4:	d1 1d       	adc	r29, r1
    1fa6:	0f b6       	in	r0, 0x3f	; 63
    1fa8:	f8 94       	cli
    1faa:	de bf       	out	0x3e, r29	; 62
    1fac:	0f be       	out	0x3f, r0	; 63
    1fae:	cd bf       	out	0x3d, r28	; 61
    1fb0:	ed 01       	movw	r28, r26
    1fb2:	08 95       	ret

00001fb4 <_exit>:
    1fb4:	f8 94       	cli

00001fb6 <__stop_program>:
    1fb6:	ff cf       	rjmp	.-2      	; 0x1fb6 <__stop_program>
