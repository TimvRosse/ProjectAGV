
bin\Debug\projectAGV.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000108  00800100  00001300  000013b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001300  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800208  00800208  000014bc  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  000014bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .debug_aranges 000001a0  00000000  00000000  000014bf  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000269  00000000  00000000  0000165f  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000227b  00000000  00000000  000018c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001254  00000000  00000000  00003b43  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000013ed  00000000  00000000  00004d97  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000200  00000000  00000000  00006184  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003cf  00000000  00000000  00006384  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000956  00000000  00000000  00006753  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  000070a9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
      74:	12 e0       	ldi	r17, 0x02	; 2
      76:	a8 e0       	ldi	r26, 0x08	; 8
      78:	b2 e0       	ldi	r27, 0x02	; 2
      7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
      7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
      7e:	ae 30       	cpi	r26, 0x0E	; 14
      80:	b1 07       	cpc	r27, r17
      82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>

00000084 <__do_copy_data>:
      84:	12 e0       	ldi	r17, 0x02	; 2
      86:	a0 e0       	ldi	r26, 0x00	; 0
      88:	b1 e0       	ldi	r27, 0x01	; 1
      8a:	e0 e0       	ldi	r30, 0x00	; 0
      8c:	f3 e1       	ldi	r31, 0x13	; 19
      8e:	02 c0       	rjmp	.+4      	; 0x94 <.do_copy_data_start>

00000090 <.do_copy_data_loop>:
      90:	05 90       	lpm	r0, Z+
      92:	0d 92       	st	X+, r0

00000094 <.do_copy_data_start>:
      94:	a8 30       	cpi	r26, 0x08	; 8
      96:	b1 07       	cpc	r27, r17
      98:	d9 f7       	brne	.-10     	; 0x90 <.do_copy_data_loop>
      9a:	0e 94 8b 00 	call	0x116	; 0x116 <main>
      9e:	0c 94 7e 09 	jmp	0x12fc	; 0x12fc <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <bocht>:
#define inpPinUno PC3
#define inpPinBocht PC2
#define inpPinBochtL PC4

void bocht(int dir)
{
      a6:	df 93       	push	r29
      a8:	cf 93       	push	r28
      aa:	00 d0       	rcall	.+0      	; 0xac <bocht+0x6>
      ac:	cd b7       	in	r28, 0x3d	; 61
      ae:	de b7       	in	r29, 0x3e	; 62
      b0:	9a 83       	std	Y+2, r25	; 0x02
      b2:	89 83       	std	Y+1, r24	; 0x01
    //1) 10cm naar voren rijden
    stepperGoto(97, voorruit, stepMode);
      b4:	81 e6       	ldi	r24, 0x61	; 97
      b6:	90 e0       	ldi	r25, 0x00	; 0
      b8:	60 e0       	ldi	r22, 0x00	; 0
      ba:	70 e0       	ldi	r23, 0x00	; 0
      bc:	48 e0       	ldi	r20, 0x08	; 8
      be:	50 e0       	ldi	r21, 0x00	; 0
      c0:	0e 94 00 01 	call	0x200	; 0x200 <stepperGoto>
    //2) bocht maken naar directie bocht(+- 90 graden)
    singleStepperGoTo(236,voorruit,stepMode, dir);
      c4:	29 81       	ldd	r18, Y+1	; 0x01
      c6:	3a 81       	ldd	r19, Y+2	; 0x02
      c8:	8c ee       	ldi	r24, 0xEC	; 236
      ca:	90 e0       	ldi	r25, 0x00	; 0
      cc:	60 e0       	ldi	r22, 0x00	; 0
      ce:	70 e0       	ldi	r23, 0x00	; 0
      d0:	48 e0       	ldi	r20, 0x08	; 8
      d2:	50 e0       	ldi	r21, 0x00	; 0
      d4:	0e 94 9d 01 	call	0x33a	; 0x33a <singleStepperGoTo>
    //3) afstand van middenstreep rijden
    stepperGoto(68, voorruit, stepMode);
      d8:	84 e4       	ldi	r24, 0x44	; 68
      da:	90 e0       	ldi	r25, 0x00	; 0
      dc:	60 e0       	ldi	r22, 0x00	; 0
      de:	70 e0       	ldi	r23, 0x00	; 0
      e0:	48 e0       	ldi	r20, 0x08	; 8
      e2:	50 e0       	ldi	r21, 0x00	; 0
      e4:	0e 94 00 01 	call	0x200	; 0x200 <stepperGoto>
    //4 bocht maken naar directie bocht(+- 90 graden)
    singleStepperGoTo(236,voorruit,stepMode, dir);
      e8:	29 81       	ldd	r18, Y+1	; 0x01
      ea:	3a 81       	ldd	r19, Y+2	; 0x02
      ec:	8c ee       	ldi	r24, 0xEC	; 236
      ee:	90 e0       	ldi	r25, 0x00	; 0
      f0:	60 e0       	ldi	r22, 0x00	; 0
      f2:	70 e0       	ldi	r23, 0x00	; 0
      f4:	48 e0       	ldi	r20, 0x08	; 8
      f6:	50 e0       	ldi	r21, 0x00	; 0
      f8:	0e 94 9d 01 	call	0x33a	; 0x33a <singleStepperGoTo>
    //5) laatste 10cm naar voren voor beginpositie
    stepperGoto(97, voorruit, stepMode);
      fc:	81 e6       	ldi	r24, 0x61	; 97
      fe:	90 e0       	ldi	r25, 0x00	; 0
     100:	60 e0       	ldi	r22, 0x00	; 0
     102:	70 e0       	ldi	r23, 0x00	; 0
     104:	48 e0       	ldi	r20, 0x08	; 8
     106:	50 e0       	ldi	r21, 0x00	; 0
     108:	0e 94 00 01 	call	0x200	; 0x200 <stepperGoto>
}
     10c:	0f 90       	pop	r0
     10e:	0f 90       	pop	r0
     110:	cf 91       	pop	r28
     112:	df 91       	pop	r29
     114:	08 95       	ret

00000116 <main>:

int main(void)
{
     116:	df 93       	push	r29
     118:	cf 93       	push	r28
     11a:	0f 92       	push	r0
     11c:	cd b7       	in	r28, 0x3d	; 61
     11e:	de b7       	in	r29, 0x3e	; 62

    PORTC |= _BV(inpPinUno);
     120:	a8 e2       	ldi	r26, 0x28	; 40
     122:	b0 e0       	ldi	r27, 0x00	; 0
     124:	e8 e2       	ldi	r30, 0x28	; 40
     126:	f0 e0       	ldi	r31, 0x00	; 0
     128:	80 81       	ld	r24, Z
     12a:	88 60       	ori	r24, 0x08	; 8
     12c:	8c 93       	st	X, r24
    PORTC |= _BV(inpPinBocht);
     12e:	a8 e2       	ldi	r26, 0x28	; 40
     130:	b0 e0       	ldi	r27, 0x00	; 0
     132:	e8 e2       	ldi	r30, 0x28	; 40
     134:	f0 e0       	ldi	r31, 0x00	; 0
     136:	80 81       	ld	r24, Z
     138:	84 60       	ori	r24, 0x04	; 4
     13a:	8c 93       	st	X, r24
    PORTC |= _BV(inpPinBochtL);
     13c:	a8 e2       	ldi	r26, 0x28	; 40
     13e:	b0 e0       	ldi	r27, 0x00	; 0
     140:	e8 e2       	ldi	r30, 0x28	; 40
     142:	f0 e0       	ldi	r31, 0x00	; 0
     144:	80 81       	ld	r24, Z
     146:	80 61       	ori	r24, 0x10	; 16
     148:	8c 93       	st	X, r24

    initStepper();
     14a:	0e 94 d5 00 	call	0x1aa	; 0x1aa <initStepper>
    stepperSetSpeed(0.7, stepMode);
     14e:	63 e3       	ldi	r22, 0x33	; 51
     150:	73 e3       	ldi	r23, 0x33	; 51
     152:	83 e3       	ldi	r24, 0x33	; 51
     154:	9f e3       	ldi	r25, 0x3F	; 63
     156:	48 e0       	ldi	r20, 0x08	; 8
     158:	50 e0       	ldi	r21, 0x00	; 0
     15a:	0e 94 9b 02 	call	0x536	; 0x536 <stepperSetSpeed>

    while(1)
    {

        if(bit_is_clear(PINC, inpPinUno))//bij signaal rijden
     15e:	e6 e2       	ldi	r30, 0x26	; 38
     160:	f0 e0       	ldi	r31, 0x00	; 0
     162:	80 81       	ld	r24, Z
     164:	88 2f       	mov	r24, r24
     166:	90 e0       	ldi	r25, 0x00	; 0
     168:	88 70       	andi	r24, 0x08	; 8
     16a:	90 70       	andi	r25, 0x00	; 0
     16c:	00 97       	sbiw	r24, 0x00	; 0
     16e:	41 f4       	brne	.+16     	; 0x180 <main+0x6a>
        {
            stepperGoto(20, voorruit, stepMode);
     170:	84 e1       	ldi	r24, 0x14	; 20
     172:	90 e0       	ldi	r25, 0x00	; 0
     174:	60 e0       	ldi	r22, 0x00	; 0
     176:	70 e0       	ldi	r23, 0x00	; 0
     178:	48 e0       	ldi	r20, 0x08	; 8
     17a:	50 e0       	ldi	r21, 0x00	; 0
     17c:	0e 94 00 01 	call	0x200	; 0x200 <stepperGoto>
        }

        if(bit_is_clear(PINC, inpPinBocht))
     180:	e6 e2       	ldi	r30, 0x26	; 38
     182:	f0 e0       	ldi	r31, 0x00	; 0
     184:	80 81       	ld	r24, Z
     186:	88 2f       	mov	r24, r24
     188:	90 e0       	ldi	r25, 0x00	; 0
     18a:	84 70       	andi	r24, 0x04	; 4
     18c:	90 70       	andi	r25, 0x00	; 0
     18e:	00 97       	sbiw	r24, 0x00	; 0
     190:	21 f4       	brne	.+8      	; 0x19a <main+0x84>
        {
            bocht(rechter);
     192:	80 e0       	ldi	r24, 0x00	; 0
     194:	90 e0       	ldi	r25, 0x00	; 0
     196:	0e 94 53 00 	call	0xa6	; 0xa6 <bocht>
        }
        if(bit_is_clear(PINC, inpPinBochtL));
     19a:	e6 e2       	ldi	r30, 0x26	; 38
     19c:	f0 e0       	ldi	r31, 0x00	; 0
     19e:	80 81       	ld	r24, Z
        {
            bocht(linker);
     1a0:	81 e0       	ldi	r24, 0x01	; 1
     1a2:	90 e0       	ldi	r25, 0x00	; 0
     1a4:	0e 94 53 00 	call	0xa6	; 0xa6 <bocht>
     1a8:	da cf       	rjmp	.-76     	; 0x15e <main+0x48>

000001aa <initStepper>:

float snelheid;
int posNu;

void initStepper(void)
{
     1aa:	df 93       	push	r29
     1ac:	cf 93       	push	r28
     1ae:	cd b7       	in	r28, 0x3d	; 61
     1b0:	de b7       	in	r29, 0x3e	; 62
    stepperLoc |= _BV(stepperPin1);
     1b2:	aa e2       	ldi	r26, 0x2A	; 42
     1b4:	b0 e0       	ldi	r27, 0x00	; 0
     1b6:	ea e2       	ldi	r30, 0x2A	; 42
     1b8:	f0 e0       	ldi	r31, 0x00	; 0
     1ba:	80 81       	ld	r24, Z
     1bc:	88 60       	ori	r24, 0x08	; 8
     1be:	8c 93       	st	X, r24
    stepperLoc |= _BV(stepperDir1);
     1c0:	aa e2       	ldi	r26, 0x2A	; 42
     1c2:	b0 e0       	ldi	r27, 0x00	; 0
     1c4:	ea e2       	ldi	r30, 0x2A	; 42
     1c6:	f0 e0       	ldi	r31, 0x00	; 0
     1c8:	80 81       	ld	r24, Z
     1ca:	84 60       	ori	r24, 0x04	; 4
     1cc:	8c 93       	st	X, r24
    stepperLoc2 |= _BV(stepperPin2);
     1ce:	a4 e2       	ldi	r26, 0x24	; 36
     1d0:	b0 e0       	ldi	r27, 0x00	; 0
     1d2:	e4 e2       	ldi	r30, 0x24	; 36
     1d4:	f0 e0       	ldi	r31, 0x00	; 0
     1d6:	80 81       	ld	r24, Z
     1d8:	81 60       	ori	r24, 0x01	; 1
     1da:	8c 93       	st	X, r24
    stepperLoc |= _BV(stepperDir2);
     1dc:	aa e2       	ldi	r26, 0x2A	; 42
     1de:	b0 e0       	ldi	r27, 0x00	; 0
     1e0:	ea e2       	ldi	r30, 0x2A	; 42
     1e2:	f0 e0       	ldi	r31, 0x00	; 0
     1e4:	80 81       	ld	r24, Z
     1e6:	80 68       	ori	r24, 0x80	; 128
     1e8:	8c 93       	st	X, r24

    TCCR1A = 0;
     1ea:	e0 e8       	ldi	r30, 0x80	; 128
     1ec:	f0 e0       	ldi	r31, 0x00	; 0
     1ee:	10 82       	st	Z, r1
    TCCR1B = (0 << CS12) | (0 << CS11) | (1 << CS10);
     1f0:	e1 e8       	ldi	r30, 0x81	; 129
     1f2:	f0 e0       	ldi	r31, 0x00	; 0
     1f4:	81 e0       	ldi	r24, 0x01	; 1
     1f6:	80 83       	st	Z, r24

    sei();
     1f8:	78 94       	sei

}
     1fa:	cf 91       	pop	r28
     1fc:	df 91       	pop	r29
     1fe:	08 95       	ret

00000200 <stepperGoto>:

void stepperGoto(int steps, int dir, int mode) //aantal steps, directie, stepMode
{
     200:	0f 93       	push	r16
     202:	1f 93       	push	r17
     204:	df 93       	push	r29
     206:	cf 93       	push	r28
     208:	cd b7       	in	r28, 0x3d	; 61
     20a:	de b7       	in	r29, 0x3e	; 62
     20c:	2c 97       	sbiw	r28, 0x0c	; 12
     20e:	0f b6       	in	r0, 0x3f	; 63
     210:	f8 94       	cli
     212:	de bf       	out	0x3e, r29	; 62
     214:	0f be       	out	0x3f, r0	; 63
     216:	cd bf       	out	0x3d, r28	; 61
     218:	98 87       	std	Y+8, r25	; 0x08
     21a:	8f 83       	std	Y+7, r24	; 0x07
     21c:	7a 87       	std	Y+10, r23	; 0x0a
     21e:	69 87       	std	Y+9, r22	; 0x09
     220:	5c 87       	std	Y+12, r21	; 0x0c
     222:	4b 87       	std	Y+11, r20	; 0x0b

    if(dir)
     224:	89 85       	ldd	r24, Y+9	; 0x09
     226:	9a 85       	ldd	r25, Y+10	; 0x0a
     228:	00 97       	sbiw	r24, 0x00	; 0
     22a:	79 f0       	breq	.+30     	; 0x24a <stepperGoto+0x4a>
    {
        stepperPort |= (1 << stepperDir1);
     22c:	ab e2       	ldi	r26, 0x2B	; 43
     22e:	b0 e0       	ldi	r27, 0x00	; 0
     230:	eb e2       	ldi	r30, 0x2B	; 43
     232:	f0 e0       	ldi	r31, 0x00	; 0
     234:	80 81       	ld	r24, Z
     236:	84 60       	ori	r24, 0x04	; 4
     238:	8c 93       	st	X, r24
        stepperPort &= ~(1 << stepperDir2);
     23a:	ab e2       	ldi	r26, 0x2B	; 43
     23c:	b0 e0       	ldi	r27, 0x00	; 0
     23e:	eb e2       	ldi	r30, 0x2B	; 43
     240:	f0 e0       	ldi	r31, 0x00	; 0
     242:	80 81       	ld	r24, Z
     244:	8f 77       	andi	r24, 0x7F	; 127
     246:	8c 93       	st	X, r24
     248:	0e c0       	rjmp	.+28     	; 0x266 <stepperGoto+0x66>
    }
    else
    {
        stepperPort &= ~(1 << stepperDir1);
     24a:	ab e2       	ldi	r26, 0x2B	; 43
     24c:	b0 e0       	ldi	r27, 0x00	; 0
     24e:	eb e2       	ldi	r30, 0x2B	; 43
     250:	f0 e0       	ldi	r31, 0x00	; 0
     252:	80 81       	ld	r24, Z
     254:	8b 7f       	andi	r24, 0xFB	; 251
     256:	8c 93       	st	X, r24
        stepperPort |= (1 << stepperDir2);
     258:	ab e2       	ldi	r26, 0x2B	; 43
     25a:	b0 e0       	ldi	r27, 0x00	; 0
     25c:	eb e2       	ldi	r30, 0x2B	; 43
     25e:	f0 e0       	ldi	r31, 0x00	; 0
     260:	80 81       	ld	r24, Z
     262:	80 68       	ori	r24, 0x80	; 128
     264:	8c 93       	st	X, r24
    }

    int stepsTogo = steps *2 *mode;
     266:	8f 81       	ldd	r24, Y+7	; 0x07
     268:	98 85       	ldd	r25, Y+8	; 0x08
     26a:	9c 01       	movw	r18, r24
     26c:	22 0f       	add	r18, r18
     26e:	33 1f       	adc	r19, r19
     270:	8b 85       	ldd	r24, Y+11	; 0x0b
     272:	9c 85       	ldd	r25, Y+12	; 0x0c
     274:	ac 01       	movw	r20, r24
     276:	24 9f       	mul	r18, r20
     278:	c0 01       	movw	r24, r0
     27a:	25 9f       	mul	r18, r21
     27c:	90 0d       	add	r25, r0
     27e:	34 9f       	mul	r19, r20
     280:	90 0d       	add	r25, r0
     282:	11 24       	eor	r1, r1
     284:	9e 83       	std	Y+6, r25	; 0x06
     286:	8d 83       	std	Y+5, r24	; 0x05
    int wachten;

    for(int i = 0; i < stepsTogo; i++)
     288:	1a 82       	std	Y+2, r1	; 0x02
     28a:	19 82       	std	Y+1, r1	; 0x01
     28c:	44 c0       	rjmp	.+136    	; 0x316 <stepperGoto+0x116>
    {
        while(wachten != 1)
        {
           if(TIFR1 & (1 << OCF1A))
     28e:	e6 e3       	ldi	r30, 0x36	; 54
     290:	f0 e0       	ldi	r31, 0x00	; 0
     292:	80 81       	ld	r24, Z
     294:	88 2f       	mov	r24, r24
     296:	90 e0       	ldi	r25, 0x00	; 0
     298:	82 70       	andi	r24, 0x02	; 2
     29a:	90 70       	andi	r25, 0x00	; 0
     29c:	00 97       	sbiw	r24, 0x00	; 0
     29e:	79 f1       	breq	.+94     	; 0x2fe <stepperGoto+0xfe>
            {
                stepperPort ^= (1 << stepperPin1);
     2a0:	ab e2       	ldi	r26, 0x2B	; 43
     2a2:	b0 e0       	ldi	r27, 0x00	; 0
     2a4:	eb e2       	ldi	r30, 0x2B	; 43
     2a6:	f0 e0       	ldi	r31, 0x00	; 0
     2a8:	90 81       	ld	r25, Z
     2aa:	88 e0       	ldi	r24, 0x08	; 8
     2ac:	89 27       	eor	r24, r25
     2ae:	8c 93       	st	X, r24
                stepperPort2 ^= (1 << stepperPin2);
     2b0:	a5 e2       	ldi	r26, 0x25	; 37
     2b2:	b0 e0       	ldi	r27, 0x00	; 0
     2b4:	e5 e2       	ldi	r30, 0x25	; 37
     2b6:	f0 e0       	ldi	r31, 0x00	; 0
     2b8:	90 81       	ld	r25, Z
     2ba:	81 e0       	ldi	r24, 0x01	; 1
     2bc:	89 27       	eor	r24, r25
     2be:	8c 93       	st	X, r24
                TCNT1 = 0;
     2c0:	e4 e8       	ldi	r30, 0x84	; 132
     2c2:	f0 e0       	ldi	r31, 0x00	; 0
     2c4:	11 82       	std	Z+1, r1	; 0x01
     2c6:	10 82       	st	Z, r1
                OCR1A = snelheid;
     2c8:	08 e8       	ldi	r16, 0x88	; 136
     2ca:	10 e0       	ldi	r17, 0x00	; 0
     2cc:	80 91 08 02 	lds	r24, 0x0208
     2d0:	90 91 09 02 	lds	r25, 0x0209
     2d4:	a0 91 0a 02 	lds	r26, 0x020A
     2d8:	b0 91 0b 02 	lds	r27, 0x020B
     2dc:	bc 01       	movw	r22, r24
     2de:	cd 01       	movw	r24, r26
     2e0:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <__fixunssfsi>
     2e4:	dc 01       	movw	r26, r24
     2e6:	cb 01       	movw	r24, r22
     2e8:	f8 01       	movw	r30, r16
     2ea:	91 83       	std	Z+1, r25	; 0x01
     2ec:	80 83       	st	Z, r24
                wachten = 1;
     2ee:	81 e0       	ldi	r24, 0x01	; 1
     2f0:	90 e0       	ldi	r25, 0x00	; 0
     2f2:	9c 83       	std	Y+4, r25	; 0x04
     2f4:	8b 83       	std	Y+3, r24	; 0x03
                TIFR1 = (1 << OCF1A);
     2f6:	e6 e3       	ldi	r30, 0x36	; 54
     2f8:	f0 e0       	ldi	r31, 0x00	; 0
     2fa:	82 e0       	ldi	r24, 0x02	; 2
     2fc:	80 83       	st	Z, r24
    int stepsTogo = steps *2 *mode;
    int wachten;

    for(int i = 0; i < stepsTogo; i++)
    {
        while(wachten != 1)
     2fe:	8b 81       	ldd	r24, Y+3	; 0x03
     300:	9c 81       	ldd	r25, Y+4	; 0x04
     302:	81 30       	cpi	r24, 0x01	; 1
     304:	91 05       	cpc	r25, r1
     306:	19 f6       	brne	.-122    	; 0x28e <stepperGoto+0x8e>

            }


        }
        wachten = 0;
     308:	1c 82       	std	Y+4, r1	; 0x04
     30a:	1b 82       	std	Y+3, r1	; 0x03
    }

    int stepsTogo = steps *2 *mode;
    int wachten;

    for(int i = 0; i < stepsTogo; i++)
     30c:	89 81       	ldd	r24, Y+1	; 0x01
     30e:	9a 81       	ldd	r25, Y+2	; 0x02
     310:	01 96       	adiw	r24, 0x01	; 1
     312:	9a 83       	std	Y+2, r25	; 0x02
     314:	89 83       	std	Y+1, r24	; 0x01
     316:	29 81       	ldd	r18, Y+1	; 0x01
     318:	3a 81       	ldd	r19, Y+2	; 0x02
     31a:	8d 81       	ldd	r24, Y+5	; 0x05
     31c:	9e 81       	ldd	r25, Y+6	; 0x06
     31e:	28 17       	cp	r18, r24
     320:	39 07       	cpc	r19, r25
     322:	6c f3       	brlt	.-38     	; 0x2fe <stepperGoto+0xfe>
        }
        wachten = 0;


    }
}
     324:	2c 96       	adiw	r28, 0x0c	; 12
     326:	0f b6       	in	r0, 0x3f	; 63
     328:	f8 94       	cli
     32a:	de bf       	out	0x3e, r29	; 62
     32c:	0f be       	out	0x3f, r0	; 63
     32e:	cd bf       	out	0x3d, r28	; 61
     330:	cf 91       	pop	r28
     332:	df 91       	pop	r29
     334:	1f 91       	pop	r17
     336:	0f 91       	pop	r16
     338:	08 95       	ret

0000033a <singleStepperGoTo>:

void singleStepperGoTo(int steps, int dir, int mode, int stepper)
{
     33a:	0f 93       	push	r16
     33c:	1f 93       	push	r17
     33e:	df 93       	push	r29
     340:	cf 93       	push	r28
     342:	cd b7       	in	r28, 0x3d	; 61
     344:	de b7       	in	r29, 0x3e	; 62
     346:	64 97       	sbiw	r28, 0x14	; 20
     348:	0f b6       	in	r0, 0x3f	; 63
     34a:	f8 94       	cli
     34c:	de bf       	out	0x3e, r29	; 62
     34e:	0f be       	out	0x3f, r0	; 63
     350:	cd bf       	out	0x3d, r28	; 61
     352:	9e 87       	std	Y+14, r25	; 0x0e
     354:	8d 87       	std	Y+13, r24	; 0x0d
     356:	78 8b       	std	Y+16, r23	; 0x10
     358:	6f 87       	std	Y+15, r22	; 0x0f
     35a:	5a 8b       	std	Y+18, r21	; 0x12
     35c:	49 8b       	std	Y+17, r20	; 0x11
     35e:	3c 8b       	std	Y+20, r19	; 0x14
     360:	2b 8b       	std	Y+19, r18	; 0x13
    if(stepper = 1) //stepper 1 (links?)
     362:	81 e0       	ldi	r24, 0x01	; 1
     364:	90 e0       	ldi	r25, 0x00	; 0
     366:	9c 8b       	std	Y+20, r25	; 0x14
     368:	8b 8b       	std	Y+19, r24	; 0x13
    {
        if(dir)
     36a:	8f 85       	ldd	r24, Y+15	; 0x0f
     36c:	98 89       	ldd	r25, Y+16	; 0x10
     36e:	00 97       	sbiw	r24, 0x00	; 0
     370:	41 f0       	breq	.+16     	; 0x382 <singleStepperGoTo+0x48>
        {
            stepperPort |= (1 << stepperDir1);
     372:	ab e2       	ldi	r26, 0x2B	; 43
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	eb e2       	ldi	r30, 0x2B	; 43
     378:	f0 e0       	ldi	r31, 0x00	; 0
     37a:	80 81       	ld	r24, Z
     37c:	84 60       	ori	r24, 0x04	; 4
     37e:	8c 93       	st	X, r24
     380:	07 c0       	rjmp	.+14     	; 0x390 <singleStepperGoTo+0x56>
        }
        else
        {
            stepperPort &= ~(1 << stepperDir1);
     382:	ab e2       	ldi	r26, 0x2B	; 43
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	eb e2       	ldi	r30, 0x2B	; 43
     388:	f0 e0       	ldi	r31, 0x00	; 0
     38a:	80 81       	ld	r24, Z
     38c:	8b 7f       	andi	r24, 0xFB	; 251
     38e:	8c 93       	st	X, r24
        }

        int stepsTogo = steps *2 *mode;
     390:	8d 85       	ldd	r24, Y+13	; 0x0d
     392:	9e 85       	ldd	r25, Y+14	; 0x0e
     394:	9c 01       	movw	r18, r24
     396:	22 0f       	add	r18, r18
     398:	33 1f       	adc	r19, r19
     39a:	89 89       	ldd	r24, Y+17	; 0x11
     39c:	9a 89       	ldd	r25, Y+18	; 0x12
     39e:	ac 01       	movw	r20, r24
     3a0:	24 9f       	mul	r18, r20
     3a2:	c0 01       	movw	r24, r0
     3a4:	25 9f       	mul	r18, r21
     3a6:	90 0d       	add	r25, r0
     3a8:	34 9f       	mul	r19, r20
     3aa:	90 0d       	add	r25, r0
     3ac:	11 24       	eor	r1, r1
     3ae:	9c 87       	std	Y+12, r25	; 0x0c
     3b0:	8b 87       	std	Y+11, r24	; 0x0b
        int wachten;

        for(int i = 0; i < stepsTogo; i++)
     3b2:	18 86       	std	Y+8, r1	; 0x08
     3b4:	1f 82       	std	Y+7, r1	; 0x07
     3b6:	3c c0       	rjmp	.+120    	; 0x430 <singleStepperGoTo+0xf6>
        {
            while(wachten != 1)
            {
                if(TIFR1 & (1 << OCF1A))
     3b8:	e6 e3       	ldi	r30, 0x36	; 54
     3ba:	f0 e0       	ldi	r31, 0x00	; 0
     3bc:	80 81       	ld	r24, Z
     3be:	88 2f       	mov	r24, r24
     3c0:	90 e0       	ldi	r25, 0x00	; 0
     3c2:	82 70       	andi	r24, 0x02	; 2
     3c4:	90 70       	andi	r25, 0x00	; 0
     3c6:	00 97       	sbiw	r24, 0x00	; 0
     3c8:	39 f1       	breq	.+78     	; 0x418 <singleStepperGoTo+0xde>
                {
                    stepperPort ^= (1 << stepperPin1);
     3ca:	ab e2       	ldi	r26, 0x2B	; 43
     3cc:	b0 e0       	ldi	r27, 0x00	; 0
     3ce:	eb e2       	ldi	r30, 0x2B	; 43
     3d0:	f0 e0       	ldi	r31, 0x00	; 0
     3d2:	90 81       	ld	r25, Z
     3d4:	88 e0       	ldi	r24, 0x08	; 8
     3d6:	89 27       	eor	r24, r25
     3d8:	8c 93       	st	X, r24
                    TCNT1 = 0;
     3da:	e4 e8       	ldi	r30, 0x84	; 132
     3dc:	f0 e0       	ldi	r31, 0x00	; 0
     3de:	11 82       	std	Z+1, r1	; 0x01
     3e0:	10 82       	st	Z, r1
                    OCR1A = snelheid;
     3e2:	08 e8       	ldi	r16, 0x88	; 136
     3e4:	10 e0       	ldi	r17, 0x00	; 0
     3e6:	80 91 08 02 	lds	r24, 0x0208
     3ea:	90 91 09 02 	lds	r25, 0x0209
     3ee:	a0 91 0a 02 	lds	r26, 0x020A
     3f2:	b0 91 0b 02 	lds	r27, 0x020B
     3f6:	bc 01       	movw	r22, r24
     3f8:	cd 01       	movw	r24, r26
     3fa:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <__fixunssfsi>
     3fe:	dc 01       	movw	r26, r24
     400:	cb 01       	movw	r24, r22
     402:	f8 01       	movw	r30, r16
     404:	91 83       	std	Z+1, r25	; 0x01
     406:	80 83       	st	Z, r24
                    wachten = 1;
     408:	81 e0       	ldi	r24, 0x01	; 1
     40a:	90 e0       	ldi	r25, 0x00	; 0
     40c:	9a 87       	std	Y+10, r25	; 0x0a
     40e:	89 87       	std	Y+9, r24	; 0x09
                    TIFR1 = (1 << OCF1A);
     410:	e6 e3       	ldi	r30, 0x36	; 54
     412:	f0 e0       	ldi	r31, 0x00	; 0
     414:	82 e0       	ldi	r24, 0x02	; 2
     416:	80 83       	st	Z, r24
        int stepsTogo = steps *2 *mode;
        int wachten;

        for(int i = 0; i < stepsTogo; i++)
        {
            while(wachten != 1)
     418:	89 85       	ldd	r24, Y+9	; 0x09
     41a:	9a 85       	ldd	r25, Y+10	; 0x0a
     41c:	81 30       	cpi	r24, 0x01	; 1
     41e:	91 05       	cpc	r25, r1
     420:	59 f6       	brne	.-106    	; 0x3b8 <singleStepperGoTo+0x7e>

                }


            }
            wachten = 0;
     422:	1a 86       	std	Y+10, r1	; 0x0a
     424:	19 86       	std	Y+9, r1	; 0x09
        }

        int stepsTogo = steps *2 *mode;
        int wachten;

        for(int i = 0; i < stepsTogo; i++)
     426:	8f 81       	ldd	r24, Y+7	; 0x07
     428:	98 85       	ldd	r25, Y+8	; 0x08
     42a:	01 96       	adiw	r24, 0x01	; 1
     42c:	98 87       	std	Y+8, r25	; 0x08
     42e:	8f 83       	std	Y+7, r24	; 0x07
     430:	2f 81       	ldd	r18, Y+7	; 0x07
     432:	38 85       	ldd	r19, Y+8	; 0x08
     434:	8b 85       	ldd	r24, Y+11	; 0x0b
     436:	9c 85       	ldd	r25, Y+12	; 0x0c
     438:	28 17       	cp	r18, r24
     43a:	39 07       	cpc	r19, r25
     43c:	6c f3       	brlt	.-38     	; 0x418 <singleStepperGoTo+0xde>


        }
    }

    if(stepper = 0) //stepper 2 (rechts?)
     43e:	1c 8a       	std	Y+20, r1	; 0x14
     440:	1b 8a       	std	Y+19, r1	; 0x13
     442:	8b 89       	ldd	r24, Y+19	; 0x13
     444:	9c 89       	ldd	r25, Y+20	; 0x14
     446:	00 97       	sbiw	r24, 0x00	; 0
     448:	09 f4       	brne	.+2      	; 0x44c <singleStepperGoTo+0x112>
     44a:	6a c0       	rjmp	.+212    	; 0x520 <singleStepperGoTo+0x1e6>
    {
        if(dir)
     44c:	8f 85       	ldd	r24, Y+15	; 0x0f
     44e:	98 89       	ldd	r25, Y+16	; 0x10
     450:	00 97       	sbiw	r24, 0x00	; 0
     452:	41 f0       	breq	.+16     	; 0x464 <singleStepperGoTo+0x12a>
        {
            stepperPort &= ~(1 << stepperDir2);
     454:	ab e2       	ldi	r26, 0x2B	; 43
     456:	b0 e0       	ldi	r27, 0x00	; 0
     458:	eb e2       	ldi	r30, 0x2B	; 43
     45a:	f0 e0       	ldi	r31, 0x00	; 0
     45c:	80 81       	ld	r24, Z
     45e:	8f 77       	andi	r24, 0x7F	; 127
     460:	8c 93       	st	X, r24
     462:	07 c0       	rjmp	.+14     	; 0x472 <singleStepperGoTo+0x138>
        }
        else
        {
            stepperPort |= (1 << stepperDir2);
     464:	ab e2       	ldi	r26, 0x2B	; 43
     466:	b0 e0       	ldi	r27, 0x00	; 0
     468:	eb e2       	ldi	r30, 0x2B	; 43
     46a:	f0 e0       	ldi	r31, 0x00	; 0
     46c:	80 81       	ld	r24, Z
     46e:	80 68       	ori	r24, 0x80	; 128
     470:	8c 93       	st	X, r24
        }

        int stepsTogo = steps *2 *mode;
     472:	8d 85       	ldd	r24, Y+13	; 0x0d
     474:	9e 85       	ldd	r25, Y+14	; 0x0e
     476:	9c 01       	movw	r18, r24
     478:	22 0f       	add	r18, r18
     47a:	33 1f       	adc	r19, r19
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	9a 89       	ldd	r25, Y+18	; 0x12
     480:	ac 01       	movw	r20, r24
     482:	24 9f       	mul	r18, r20
     484:	c0 01       	movw	r24, r0
     486:	25 9f       	mul	r18, r21
     488:	90 0d       	add	r25, r0
     48a:	34 9f       	mul	r19, r20
     48c:	90 0d       	add	r25, r0
     48e:	11 24       	eor	r1, r1
     490:	9e 83       	std	Y+6, r25	; 0x06
     492:	8d 83       	std	Y+5, r24	; 0x05
        int wachten;

        for(int i = 0; i < stepsTogo; i++)
     494:	1a 82       	std	Y+2, r1	; 0x02
     496:	19 82       	std	Y+1, r1	; 0x01
     498:	3c c0       	rjmp	.+120    	; 0x512 <singleStepperGoTo+0x1d8>
        {
            while(wachten != 1)
            {
                if(TIFR1 & (1 << OCF1A))
     49a:	e6 e3       	ldi	r30, 0x36	; 54
     49c:	f0 e0       	ldi	r31, 0x00	; 0
     49e:	80 81       	ld	r24, Z
     4a0:	88 2f       	mov	r24, r24
     4a2:	90 e0       	ldi	r25, 0x00	; 0
     4a4:	82 70       	andi	r24, 0x02	; 2
     4a6:	90 70       	andi	r25, 0x00	; 0
     4a8:	00 97       	sbiw	r24, 0x00	; 0
     4aa:	39 f1       	breq	.+78     	; 0x4fa <singleStepperGoTo+0x1c0>
                {
                    stepperPort2 ^= (1 << stepperPin2);
     4ac:	a5 e2       	ldi	r26, 0x25	; 37
     4ae:	b0 e0       	ldi	r27, 0x00	; 0
     4b0:	e5 e2       	ldi	r30, 0x25	; 37
     4b2:	f0 e0       	ldi	r31, 0x00	; 0
     4b4:	90 81       	ld	r25, Z
     4b6:	81 e0       	ldi	r24, 0x01	; 1
     4b8:	89 27       	eor	r24, r25
     4ba:	8c 93       	st	X, r24
                    TCNT1 = 0;
     4bc:	e4 e8       	ldi	r30, 0x84	; 132
     4be:	f0 e0       	ldi	r31, 0x00	; 0
     4c0:	11 82       	std	Z+1, r1	; 0x01
     4c2:	10 82       	st	Z, r1
                    OCR1A = snelheid;
     4c4:	08 e8       	ldi	r16, 0x88	; 136
     4c6:	10 e0       	ldi	r17, 0x00	; 0
     4c8:	80 91 08 02 	lds	r24, 0x0208
     4cc:	90 91 09 02 	lds	r25, 0x0209
     4d0:	a0 91 0a 02 	lds	r26, 0x020A
     4d4:	b0 91 0b 02 	lds	r27, 0x020B
     4d8:	bc 01       	movw	r22, r24
     4da:	cd 01       	movw	r24, r26
     4dc:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <__fixunssfsi>
     4e0:	dc 01       	movw	r26, r24
     4e2:	cb 01       	movw	r24, r22
     4e4:	f8 01       	movw	r30, r16
     4e6:	91 83       	std	Z+1, r25	; 0x01
     4e8:	80 83       	st	Z, r24
                    wachten = 1;
     4ea:	81 e0       	ldi	r24, 0x01	; 1
     4ec:	90 e0       	ldi	r25, 0x00	; 0
     4ee:	9c 83       	std	Y+4, r25	; 0x04
     4f0:	8b 83       	std	Y+3, r24	; 0x03
                    TIFR1 = (1 << OCF1A);
     4f2:	e6 e3       	ldi	r30, 0x36	; 54
     4f4:	f0 e0       	ldi	r31, 0x00	; 0
     4f6:	82 e0       	ldi	r24, 0x02	; 2
     4f8:	80 83       	st	Z, r24
        int stepsTogo = steps *2 *mode;
        int wachten;

        for(int i = 0; i < stepsTogo; i++)
        {
            while(wachten != 1)
     4fa:	8b 81       	ldd	r24, Y+3	; 0x03
     4fc:	9c 81       	ldd	r25, Y+4	; 0x04
     4fe:	81 30       	cpi	r24, 0x01	; 1
     500:	91 05       	cpc	r25, r1
     502:	59 f6       	brne	.-106    	; 0x49a <singleStepperGoTo+0x160>

                }


            }
            wachten = 0;
     504:	1c 82       	std	Y+4, r1	; 0x04
     506:	1b 82       	std	Y+3, r1	; 0x03
        }

        int stepsTogo = steps *2 *mode;
        int wachten;

        for(int i = 0; i < stepsTogo; i++)
     508:	89 81       	ldd	r24, Y+1	; 0x01
     50a:	9a 81       	ldd	r25, Y+2	; 0x02
     50c:	01 96       	adiw	r24, 0x01	; 1
     50e:	9a 83       	std	Y+2, r25	; 0x02
     510:	89 83       	std	Y+1, r24	; 0x01
     512:	29 81       	ldd	r18, Y+1	; 0x01
     514:	3a 81       	ldd	r19, Y+2	; 0x02
     516:	8d 81       	ldd	r24, Y+5	; 0x05
     518:	9e 81       	ldd	r25, Y+6	; 0x06
     51a:	28 17       	cp	r18, r24
     51c:	39 07       	cpc	r19, r25
     51e:	6c f3       	brlt	.-38     	; 0x4fa <singleStepperGoTo+0x1c0>
            wachten = 0;


        }
    }
}
     520:	64 96       	adiw	r28, 0x14	; 20
     522:	0f b6       	in	r0, 0x3f	; 63
     524:	f8 94       	cli
     526:	de bf       	out	0x3e, r29	; 62
     528:	0f be       	out	0x3f, r0	; 63
     52a:	cd bf       	out	0x3d, r28	; 61
     52c:	cf 91       	pop	r28
     52e:	df 91       	pop	r29
     530:	1f 91       	pop	r17
     532:	0f 91       	pop	r16
     534:	08 95       	ret

00000536 <stepperSetSpeed>:

void stepperSetSpeed(float rps, int mode)
{
     536:	ef 92       	push	r14
     538:	ff 92       	push	r15
     53a:	0f 93       	push	r16
     53c:	1f 93       	push	r17
     53e:	df 93       	push	r29
     540:	cf 93       	push	r28
     542:	cd b7       	in	r28, 0x3d	; 61
     544:	de b7       	in	r29, 0x3e	; 62
     546:	2a 97       	sbiw	r28, 0x0a	; 10
     548:	0f b6       	in	r0, 0x3f	; 63
     54a:	f8 94       	cli
     54c:	de bf       	out	0x3e, r29	; 62
     54e:	0f be       	out	0x3f, r0	; 63
     550:	cd bf       	out	0x3d, r28	; 61
     552:	6d 83       	std	Y+5, r22	; 0x05
     554:	7e 83       	std	Y+6, r23	; 0x06
     556:	8f 83       	std	Y+7, r24	; 0x07
     558:	98 87       	std	Y+8, r25	; 0x08
     55a:	5a 87       	std	Y+10, r21	; 0x0a
     55c:	49 87       	std	Y+9, r20	; 0x09
    float rekenwaarde = rps * 400 * mode;
     55e:	6d 81       	ldd	r22, Y+5	; 0x05
     560:	7e 81       	ldd	r23, Y+6	; 0x06
     562:	8f 81       	ldd	r24, Y+7	; 0x07
     564:	98 85       	ldd	r25, Y+8	; 0x08
     566:	20 e0       	ldi	r18, 0x00	; 0
     568:	30 e0       	ldi	r19, 0x00	; 0
     56a:	48 ec       	ldi	r20, 0xC8	; 200
     56c:	53 e4       	ldi	r21, 0x43	; 67
     56e:	0e 94 ca 04 	call	0x994	; 0x994 <__mulsf3>
     572:	dc 01       	movw	r26, r24
     574:	cb 01       	movw	r24, r22
     576:	7c 01       	movw	r14, r24
     578:	8d 01       	movw	r16, r26
     57a:	89 85       	ldd	r24, Y+9	; 0x09
     57c:	9a 85       	ldd	r25, Y+10	; 0x0a
     57e:	aa 27       	eor	r26, r26
     580:	97 fd       	sbrc	r25, 7
     582:	a0 95       	com	r26
     584:	ba 2f       	mov	r27, r26
     586:	bc 01       	movw	r22, r24
     588:	cd 01       	movw	r24, r26
     58a:	0e 94 a0 06 	call	0xd40	; 0xd40 <__floatsisf>
     58e:	9b 01       	movw	r18, r22
     590:	ac 01       	movw	r20, r24
     592:	c8 01       	movw	r24, r16
     594:	b7 01       	movw	r22, r14
     596:	0e 94 ca 04 	call	0x994	; 0x994 <__mulsf3>
     59a:	dc 01       	movw	r26, r24
     59c:	cb 01       	movw	r24, r22
     59e:	89 83       	std	Y+1, r24	; 0x01
     5a0:	9a 83       	std	Y+2, r25	; 0x02
     5a2:	ab 83       	std	Y+3, r26	; 0x03
     5a4:	bc 83       	std	Y+4, r27	; 0x04
    snelheid = 16000000 / rekenwaarde;
     5a6:	60 e0       	ldi	r22, 0x00	; 0
     5a8:	74 e2       	ldi	r23, 0x24	; 36
     5aa:	84 e7       	ldi	r24, 0x74	; 116
     5ac:	9b e4       	ldi	r25, 0x4B	; 75
     5ae:	29 81       	ldd	r18, Y+1	; 0x01
     5b0:	3a 81       	ldd	r19, Y+2	; 0x02
     5b2:	4b 81       	ldd	r20, Y+3	; 0x03
     5b4:	5c 81       	ldd	r21, Y+4	; 0x04
     5b6:	0e 94 c4 05 	call	0xb88	; 0xb88 <__divsf3>
     5ba:	dc 01       	movw	r26, r24
     5bc:	cb 01       	movw	r24, r22
     5be:	80 93 08 02 	sts	0x0208, r24
     5c2:	90 93 09 02 	sts	0x0209, r25
     5c6:	a0 93 0a 02 	sts	0x020A, r26
     5ca:	b0 93 0b 02 	sts	0x020B, r27
}
     5ce:	2a 96       	adiw	r28, 0x0a	; 10
     5d0:	0f b6       	in	r0, 0x3f	; 63
     5d2:	f8 94       	cli
     5d4:	de bf       	out	0x3e, r29	; 62
     5d6:	0f be       	out	0x3f, r0	; 63
     5d8:	cd bf       	out	0x3d, r28	; 61
     5da:	cf 91       	pop	r28
     5dc:	df 91       	pop	r29
     5de:	1f 91       	pop	r17
     5e0:	0f 91       	pop	r16
     5e2:	ff 90       	pop	r15
     5e4:	ef 90       	pop	r14
     5e6:	08 95       	ret

000005e8 <__fixunssfsi>:
     5e8:	ef 92       	push	r14
     5ea:	ff 92       	push	r15
     5ec:	0f 93       	push	r16
     5ee:	1f 93       	push	r17
     5f0:	7b 01       	movw	r14, r22
     5f2:	8c 01       	movw	r16, r24
     5f4:	20 e0       	ldi	r18, 0x00	; 0
     5f6:	30 e0       	ldi	r19, 0x00	; 0
     5f8:	40 e0       	ldi	r20, 0x00	; 0
     5fa:	5f e4       	ldi	r21, 0x4F	; 79
     5fc:	0e 94 70 06 	call	0xce0	; 0xce0 <__gesf2>
     600:	88 23       	and	r24, r24
     602:	8c f0       	brlt	.+34     	; 0x626 <__fixunssfsi+0x3e>
     604:	c8 01       	movw	r24, r16
     606:	b7 01       	movw	r22, r14
     608:	20 e0       	ldi	r18, 0x00	; 0
     60a:	30 e0       	ldi	r19, 0x00	; 0
     60c:	40 e0       	ldi	r20, 0x00	; 0
     60e:	5f e4       	ldi	r21, 0x4F	; 79
     610:	0e 94 6c 04 	call	0x8d8	; 0x8d8 <__subsf3>
     614:	0e 94 fe 06 	call	0xdfc	; 0xdfc <__fixsfsi>
     618:	9b 01       	movw	r18, r22
     61a:	ac 01       	movw	r20, r24
     61c:	20 50       	subi	r18, 0x00	; 0
     61e:	30 40       	sbci	r19, 0x00	; 0
     620:	40 40       	sbci	r20, 0x00	; 0
     622:	50 48       	sbci	r21, 0x80	; 128
     624:	06 c0       	rjmp	.+12     	; 0x632 <__fixunssfsi+0x4a>
     626:	c8 01       	movw	r24, r16
     628:	b7 01       	movw	r22, r14
     62a:	0e 94 fe 06 	call	0xdfc	; 0xdfc <__fixsfsi>
     62e:	9b 01       	movw	r18, r22
     630:	ac 01       	movw	r20, r24
     632:	b9 01       	movw	r22, r18
     634:	ca 01       	movw	r24, r20
     636:	1f 91       	pop	r17
     638:	0f 91       	pop	r16
     63a:	ff 90       	pop	r15
     63c:	ef 90       	pop	r14
     63e:	08 95       	ret

00000640 <_fpadd_parts>:
     640:	a0 e0       	ldi	r26, 0x00	; 0
     642:	b0 e0       	ldi	r27, 0x00	; 0
     644:	e6 e2       	ldi	r30, 0x26	; 38
     646:	f3 e0       	ldi	r31, 0x03	; 3
     648:	0c 94 47 09 	jmp	0x128e	; 0x128e <__prologue_saves__>
     64c:	dc 01       	movw	r26, r24
     64e:	2b 01       	movw	r4, r22
     650:	fa 01       	movw	r30, r20
     652:	9c 91       	ld	r25, X
     654:	92 30       	cpi	r25, 0x02	; 2
     656:	08 f4       	brcc	.+2      	; 0x65a <_fpadd_parts+0x1a>
     658:	39 c1       	rjmp	.+626    	; 0x8cc <_fpadd_parts+0x28c>
     65a:	eb 01       	movw	r28, r22
     65c:	88 81       	ld	r24, Y
     65e:	82 30       	cpi	r24, 0x02	; 2
     660:	08 f4       	brcc	.+2      	; 0x664 <_fpadd_parts+0x24>
     662:	33 c1       	rjmp	.+614    	; 0x8ca <_fpadd_parts+0x28a>
     664:	94 30       	cpi	r25, 0x04	; 4
     666:	69 f4       	brne	.+26     	; 0x682 <_fpadd_parts+0x42>
     668:	84 30       	cpi	r24, 0x04	; 4
     66a:	09 f0       	breq	.+2      	; 0x66e <_fpadd_parts+0x2e>
     66c:	2f c1       	rjmp	.+606    	; 0x8cc <_fpadd_parts+0x28c>
     66e:	11 96       	adiw	r26, 0x01	; 1
     670:	9c 91       	ld	r25, X
     672:	11 97       	sbiw	r26, 0x01	; 1
     674:	89 81       	ldd	r24, Y+1	; 0x01
     676:	98 17       	cp	r25, r24
     678:	09 f4       	brne	.+2      	; 0x67c <_fpadd_parts+0x3c>
     67a:	28 c1       	rjmp	.+592    	; 0x8cc <_fpadd_parts+0x28c>
     67c:	a0 e0       	ldi	r26, 0x00	; 0
     67e:	b1 e0       	ldi	r27, 0x01	; 1
     680:	25 c1       	rjmp	.+586    	; 0x8cc <_fpadd_parts+0x28c>
     682:	84 30       	cpi	r24, 0x04	; 4
     684:	09 f4       	brne	.+2      	; 0x688 <_fpadd_parts+0x48>
     686:	21 c1       	rjmp	.+578    	; 0x8ca <_fpadd_parts+0x28a>
     688:	82 30       	cpi	r24, 0x02	; 2
     68a:	a9 f4       	brne	.+42     	; 0x6b6 <_fpadd_parts+0x76>
     68c:	92 30       	cpi	r25, 0x02	; 2
     68e:	09 f0       	breq	.+2      	; 0x692 <_fpadd_parts+0x52>
     690:	1d c1       	rjmp	.+570    	; 0x8cc <_fpadd_parts+0x28c>
     692:	9a 01       	movw	r18, r20
     694:	ad 01       	movw	r20, r26
     696:	88 e0       	ldi	r24, 0x08	; 8
     698:	ea 01       	movw	r28, r20
     69a:	09 90       	ld	r0, Y+
     69c:	ae 01       	movw	r20, r28
     69e:	e9 01       	movw	r28, r18
     6a0:	09 92       	st	Y+, r0
     6a2:	9e 01       	movw	r18, r28
     6a4:	81 50       	subi	r24, 0x01	; 1
     6a6:	c1 f7       	brne	.-16     	; 0x698 <_fpadd_parts+0x58>
     6a8:	e2 01       	movw	r28, r4
     6aa:	89 81       	ldd	r24, Y+1	; 0x01
     6ac:	11 96       	adiw	r26, 0x01	; 1
     6ae:	9c 91       	ld	r25, X
     6b0:	89 23       	and	r24, r25
     6b2:	81 83       	std	Z+1, r24	; 0x01
     6b4:	08 c1       	rjmp	.+528    	; 0x8c6 <_fpadd_parts+0x286>
     6b6:	92 30       	cpi	r25, 0x02	; 2
     6b8:	09 f4       	brne	.+2      	; 0x6bc <_fpadd_parts+0x7c>
     6ba:	07 c1       	rjmp	.+526    	; 0x8ca <_fpadd_parts+0x28a>
     6bc:	12 96       	adiw	r26, 0x02	; 2
     6be:	2d 90       	ld	r2, X+
     6c0:	3c 90       	ld	r3, X
     6c2:	13 97       	sbiw	r26, 0x03	; 3
     6c4:	eb 01       	movw	r28, r22
     6c6:	8a 81       	ldd	r24, Y+2	; 0x02
     6c8:	9b 81       	ldd	r25, Y+3	; 0x03
     6ca:	14 96       	adiw	r26, 0x04	; 4
     6cc:	ad 90       	ld	r10, X+
     6ce:	bd 90       	ld	r11, X+
     6d0:	cd 90       	ld	r12, X+
     6d2:	dc 90       	ld	r13, X
     6d4:	17 97       	sbiw	r26, 0x07	; 7
     6d6:	ec 80       	ldd	r14, Y+4	; 0x04
     6d8:	fd 80       	ldd	r15, Y+5	; 0x05
     6da:	0e 81       	ldd	r16, Y+6	; 0x06
     6dc:	1f 81       	ldd	r17, Y+7	; 0x07
     6de:	91 01       	movw	r18, r2
     6e0:	28 1b       	sub	r18, r24
     6e2:	39 0b       	sbc	r19, r25
     6e4:	b9 01       	movw	r22, r18
     6e6:	37 ff       	sbrs	r19, 7
     6e8:	04 c0       	rjmp	.+8      	; 0x6f2 <_fpadd_parts+0xb2>
     6ea:	66 27       	eor	r22, r22
     6ec:	77 27       	eor	r23, r23
     6ee:	62 1b       	sub	r22, r18
     6f0:	73 0b       	sbc	r23, r19
     6f2:	60 32       	cpi	r22, 0x20	; 32
     6f4:	71 05       	cpc	r23, r1
     6f6:	0c f0       	brlt	.+2      	; 0x6fa <_fpadd_parts+0xba>
     6f8:	61 c0       	rjmp	.+194    	; 0x7bc <_fpadd_parts+0x17c>
     6fa:	12 16       	cp	r1, r18
     6fc:	13 06       	cpc	r1, r19
     6fe:	6c f5       	brge	.+90     	; 0x75a <_fpadd_parts+0x11a>
     700:	37 01       	movw	r6, r14
     702:	48 01       	movw	r8, r16
     704:	06 2e       	mov	r0, r22
     706:	04 c0       	rjmp	.+8      	; 0x710 <_fpadd_parts+0xd0>
     708:	96 94       	lsr	r9
     70a:	87 94       	ror	r8
     70c:	77 94       	ror	r7
     70e:	67 94       	ror	r6
     710:	0a 94       	dec	r0
     712:	d2 f7       	brpl	.-12     	; 0x708 <_fpadd_parts+0xc8>
     714:	21 e0       	ldi	r18, 0x01	; 1
     716:	30 e0       	ldi	r19, 0x00	; 0
     718:	40 e0       	ldi	r20, 0x00	; 0
     71a:	50 e0       	ldi	r21, 0x00	; 0
     71c:	04 c0       	rjmp	.+8      	; 0x726 <_fpadd_parts+0xe6>
     71e:	22 0f       	add	r18, r18
     720:	33 1f       	adc	r19, r19
     722:	44 1f       	adc	r20, r20
     724:	55 1f       	adc	r21, r21
     726:	6a 95       	dec	r22
     728:	d2 f7       	brpl	.-12     	; 0x71e <_fpadd_parts+0xde>
     72a:	21 50       	subi	r18, 0x01	; 1
     72c:	30 40       	sbci	r19, 0x00	; 0
     72e:	40 40       	sbci	r20, 0x00	; 0
     730:	50 40       	sbci	r21, 0x00	; 0
     732:	2e 21       	and	r18, r14
     734:	3f 21       	and	r19, r15
     736:	40 23       	and	r20, r16
     738:	51 23       	and	r21, r17
     73a:	21 15       	cp	r18, r1
     73c:	31 05       	cpc	r19, r1
     73e:	41 05       	cpc	r20, r1
     740:	51 05       	cpc	r21, r1
     742:	21 f0       	breq	.+8      	; 0x74c <_fpadd_parts+0x10c>
     744:	21 e0       	ldi	r18, 0x01	; 1
     746:	30 e0       	ldi	r19, 0x00	; 0
     748:	40 e0       	ldi	r20, 0x00	; 0
     74a:	50 e0       	ldi	r21, 0x00	; 0
     74c:	79 01       	movw	r14, r18
     74e:	8a 01       	movw	r16, r20
     750:	e6 28       	or	r14, r6
     752:	f7 28       	or	r15, r7
     754:	08 29       	or	r16, r8
     756:	19 29       	or	r17, r9
     758:	3c c0       	rjmp	.+120    	; 0x7d2 <_fpadd_parts+0x192>
     75a:	23 2b       	or	r18, r19
     75c:	d1 f1       	breq	.+116    	; 0x7d2 <_fpadd_parts+0x192>
     75e:	26 0e       	add	r2, r22
     760:	37 1e       	adc	r3, r23
     762:	35 01       	movw	r6, r10
     764:	46 01       	movw	r8, r12
     766:	06 2e       	mov	r0, r22
     768:	04 c0       	rjmp	.+8      	; 0x772 <_fpadd_parts+0x132>
     76a:	96 94       	lsr	r9
     76c:	87 94       	ror	r8
     76e:	77 94       	ror	r7
     770:	67 94       	ror	r6
     772:	0a 94       	dec	r0
     774:	d2 f7       	brpl	.-12     	; 0x76a <_fpadd_parts+0x12a>
     776:	21 e0       	ldi	r18, 0x01	; 1
     778:	30 e0       	ldi	r19, 0x00	; 0
     77a:	40 e0       	ldi	r20, 0x00	; 0
     77c:	50 e0       	ldi	r21, 0x00	; 0
     77e:	04 c0       	rjmp	.+8      	; 0x788 <_fpadd_parts+0x148>
     780:	22 0f       	add	r18, r18
     782:	33 1f       	adc	r19, r19
     784:	44 1f       	adc	r20, r20
     786:	55 1f       	adc	r21, r21
     788:	6a 95       	dec	r22
     78a:	d2 f7       	brpl	.-12     	; 0x780 <_fpadd_parts+0x140>
     78c:	21 50       	subi	r18, 0x01	; 1
     78e:	30 40       	sbci	r19, 0x00	; 0
     790:	40 40       	sbci	r20, 0x00	; 0
     792:	50 40       	sbci	r21, 0x00	; 0
     794:	2a 21       	and	r18, r10
     796:	3b 21       	and	r19, r11
     798:	4c 21       	and	r20, r12
     79a:	5d 21       	and	r21, r13
     79c:	21 15       	cp	r18, r1
     79e:	31 05       	cpc	r19, r1
     7a0:	41 05       	cpc	r20, r1
     7a2:	51 05       	cpc	r21, r1
     7a4:	21 f0       	breq	.+8      	; 0x7ae <_fpadd_parts+0x16e>
     7a6:	21 e0       	ldi	r18, 0x01	; 1
     7a8:	30 e0       	ldi	r19, 0x00	; 0
     7aa:	40 e0       	ldi	r20, 0x00	; 0
     7ac:	50 e0       	ldi	r21, 0x00	; 0
     7ae:	59 01       	movw	r10, r18
     7b0:	6a 01       	movw	r12, r20
     7b2:	a6 28       	or	r10, r6
     7b4:	b7 28       	or	r11, r7
     7b6:	c8 28       	or	r12, r8
     7b8:	d9 28       	or	r13, r9
     7ba:	0b c0       	rjmp	.+22     	; 0x7d2 <_fpadd_parts+0x192>
     7bc:	82 15       	cp	r24, r2
     7be:	93 05       	cpc	r25, r3
     7c0:	2c f0       	brlt	.+10     	; 0x7cc <_fpadd_parts+0x18c>
     7c2:	1c 01       	movw	r2, r24
     7c4:	aa 24       	eor	r10, r10
     7c6:	bb 24       	eor	r11, r11
     7c8:	65 01       	movw	r12, r10
     7ca:	03 c0       	rjmp	.+6      	; 0x7d2 <_fpadd_parts+0x192>
     7cc:	ee 24       	eor	r14, r14
     7ce:	ff 24       	eor	r15, r15
     7d0:	87 01       	movw	r16, r14
     7d2:	11 96       	adiw	r26, 0x01	; 1
     7d4:	9c 91       	ld	r25, X
     7d6:	d2 01       	movw	r26, r4
     7d8:	11 96       	adiw	r26, 0x01	; 1
     7da:	8c 91       	ld	r24, X
     7dc:	98 17       	cp	r25, r24
     7de:	09 f4       	brne	.+2      	; 0x7e2 <_fpadd_parts+0x1a2>
     7e0:	45 c0       	rjmp	.+138    	; 0x86c <_fpadd_parts+0x22c>
     7e2:	99 23       	and	r25, r25
     7e4:	39 f0       	breq	.+14     	; 0x7f4 <_fpadd_parts+0x1b4>
     7e6:	a8 01       	movw	r20, r16
     7e8:	97 01       	movw	r18, r14
     7ea:	2a 19       	sub	r18, r10
     7ec:	3b 09       	sbc	r19, r11
     7ee:	4c 09       	sbc	r20, r12
     7f0:	5d 09       	sbc	r21, r13
     7f2:	06 c0       	rjmp	.+12     	; 0x800 <_fpadd_parts+0x1c0>
     7f4:	a6 01       	movw	r20, r12
     7f6:	95 01       	movw	r18, r10
     7f8:	2e 19       	sub	r18, r14
     7fa:	3f 09       	sbc	r19, r15
     7fc:	40 0b       	sbc	r20, r16
     7fe:	51 0b       	sbc	r21, r17
     800:	57 fd       	sbrc	r21, 7
     802:	08 c0       	rjmp	.+16     	; 0x814 <_fpadd_parts+0x1d4>
     804:	11 82       	std	Z+1, r1	; 0x01
     806:	33 82       	std	Z+3, r3	; 0x03
     808:	22 82       	std	Z+2, r2	; 0x02
     80a:	24 83       	std	Z+4, r18	; 0x04
     80c:	35 83       	std	Z+5, r19	; 0x05
     80e:	46 83       	std	Z+6, r20	; 0x06
     810:	57 83       	std	Z+7, r21	; 0x07
     812:	1d c0       	rjmp	.+58     	; 0x84e <_fpadd_parts+0x20e>
     814:	81 e0       	ldi	r24, 0x01	; 1
     816:	81 83       	std	Z+1, r24	; 0x01
     818:	33 82       	std	Z+3, r3	; 0x03
     81a:	22 82       	std	Z+2, r2	; 0x02
     81c:	88 27       	eor	r24, r24
     81e:	99 27       	eor	r25, r25
     820:	dc 01       	movw	r26, r24
     822:	82 1b       	sub	r24, r18
     824:	93 0b       	sbc	r25, r19
     826:	a4 0b       	sbc	r26, r20
     828:	b5 0b       	sbc	r27, r21
     82a:	84 83       	std	Z+4, r24	; 0x04
     82c:	95 83       	std	Z+5, r25	; 0x05
     82e:	a6 83       	std	Z+6, r26	; 0x06
     830:	b7 83       	std	Z+7, r27	; 0x07
     832:	0d c0       	rjmp	.+26     	; 0x84e <_fpadd_parts+0x20e>
     834:	22 0f       	add	r18, r18
     836:	33 1f       	adc	r19, r19
     838:	44 1f       	adc	r20, r20
     83a:	55 1f       	adc	r21, r21
     83c:	24 83       	std	Z+4, r18	; 0x04
     83e:	35 83       	std	Z+5, r19	; 0x05
     840:	46 83       	std	Z+6, r20	; 0x06
     842:	57 83       	std	Z+7, r21	; 0x07
     844:	82 81       	ldd	r24, Z+2	; 0x02
     846:	93 81       	ldd	r25, Z+3	; 0x03
     848:	01 97       	sbiw	r24, 0x01	; 1
     84a:	93 83       	std	Z+3, r25	; 0x03
     84c:	82 83       	std	Z+2, r24	; 0x02
     84e:	24 81       	ldd	r18, Z+4	; 0x04
     850:	35 81       	ldd	r19, Z+5	; 0x05
     852:	46 81       	ldd	r20, Z+6	; 0x06
     854:	57 81       	ldd	r21, Z+7	; 0x07
     856:	da 01       	movw	r26, r20
     858:	c9 01       	movw	r24, r18
     85a:	01 97       	sbiw	r24, 0x01	; 1
     85c:	a1 09       	sbc	r26, r1
     85e:	b1 09       	sbc	r27, r1
     860:	8f 5f       	subi	r24, 0xFF	; 255
     862:	9f 4f       	sbci	r25, 0xFF	; 255
     864:	af 4f       	sbci	r26, 0xFF	; 255
     866:	bf 43       	sbci	r27, 0x3F	; 63
     868:	28 f3       	brcs	.-54     	; 0x834 <_fpadd_parts+0x1f4>
     86a:	0b c0       	rjmp	.+22     	; 0x882 <_fpadd_parts+0x242>
     86c:	91 83       	std	Z+1, r25	; 0x01
     86e:	33 82       	std	Z+3, r3	; 0x03
     870:	22 82       	std	Z+2, r2	; 0x02
     872:	ea 0c       	add	r14, r10
     874:	fb 1c       	adc	r15, r11
     876:	0c 1d       	adc	r16, r12
     878:	1d 1d       	adc	r17, r13
     87a:	e4 82       	std	Z+4, r14	; 0x04
     87c:	f5 82       	std	Z+5, r15	; 0x05
     87e:	06 83       	std	Z+6, r16	; 0x06
     880:	17 83       	std	Z+7, r17	; 0x07
     882:	83 e0       	ldi	r24, 0x03	; 3
     884:	80 83       	st	Z, r24
     886:	24 81       	ldd	r18, Z+4	; 0x04
     888:	35 81       	ldd	r19, Z+5	; 0x05
     88a:	46 81       	ldd	r20, Z+6	; 0x06
     88c:	57 81       	ldd	r21, Z+7	; 0x07
     88e:	57 ff       	sbrs	r21, 7
     890:	1a c0       	rjmp	.+52     	; 0x8c6 <_fpadd_parts+0x286>
     892:	c9 01       	movw	r24, r18
     894:	aa 27       	eor	r26, r26
     896:	97 fd       	sbrc	r25, 7
     898:	a0 95       	com	r26
     89a:	ba 2f       	mov	r27, r26
     89c:	81 70       	andi	r24, 0x01	; 1
     89e:	90 70       	andi	r25, 0x00	; 0
     8a0:	a0 70       	andi	r26, 0x00	; 0
     8a2:	b0 70       	andi	r27, 0x00	; 0
     8a4:	56 95       	lsr	r21
     8a6:	47 95       	ror	r20
     8a8:	37 95       	ror	r19
     8aa:	27 95       	ror	r18
     8ac:	82 2b       	or	r24, r18
     8ae:	93 2b       	or	r25, r19
     8b0:	a4 2b       	or	r26, r20
     8b2:	b5 2b       	or	r27, r21
     8b4:	84 83       	std	Z+4, r24	; 0x04
     8b6:	95 83       	std	Z+5, r25	; 0x05
     8b8:	a6 83       	std	Z+6, r26	; 0x06
     8ba:	b7 83       	std	Z+7, r27	; 0x07
     8bc:	82 81       	ldd	r24, Z+2	; 0x02
     8be:	93 81       	ldd	r25, Z+3	; 0x03
     8c0:	01 96       	adiw	r24, 0x01	; 1
     8c2:	93 83       	std	Z+3, r25	; 0x03
     8c4:	82 83       	std	Z+2, r24	; 0x02
     8c6:	df 01       	movw	r26, r30
     8c8:	01 c0       	rjmp	.+2      	; 0x8cc <_fpadd_parts+0x28c>
     8ca:	d2 01       	movw	r26, r4
     8cc:	cd 01       	movw	r24, r26
     8ce:	cd b7       	in	r28, 0x3d	; 61
     8d0:	de b7       	in	r29, 0x3e	; 62
     8d2:	e2 e1       	ldi	r30, 0x12	; 18
     8d4:	0c 94 63 09 	jmp	0x12c6	; 0x12c6 <__epilogue_restores__>

000008d8 <__subsf3>:
     8d8:	a0 e2       	ldi	r26, 0x20	; 32
     8da:	b0 e0       	ldi	r27, 0x00	; 0
     8dc:	e2 e7       	ldi	r30, 0x72	; 114
     8de:	f4 e0       	ldi	r31, 0x04	; 4
     8e0:	0c 94 53 09 	jmp	0x12a6	; 0x12a6 <__prologue_saves__+0x18>
     8e4:	69 83       	std	Y+1, r22	; 0x01
     8e6:	7a 83       	std	Y+2, r23	; 0x02
     8e8:	8b 83       	std	Y+3, r24	; 0x03
     8ea:	9c 83       	std	Y+4, r25	; 0x04
     8ec:	2d 83       	std	Y+5, r18	; 0x05
     8ee:	3e 83       	std	Y+6, r19	; 0x06
     8f0:	4f 83       	std	Y+7, r20	; 0x07
     8f2:	58 87       	std	Y+8, r21	; 0x08
     8f4:	e9 e0       	ldi	r30, 0x09	; 9
     8f6:	ee 2e       	mov	r14, r30
     8f8:	f1 2c       	mov	r15, r1
     8fa:	ec 0e       	add	r14, r28
     8fc:	fd 1e       	adc	r15, r29
     8fe:	ce 01       	movw	r24, r28
     900:	01 96       	adiw	r24, 0x01	; 1
     902:	b7 01       	movw	r22, r14
     904:	0e 94 76 08 	call	0x10ec	; 0x10ec <__unpack_f>
     908:	8e 01       	movw	r16, r28
     90a:	0f 5e       	subi	r16, 0xEF	; 239
     90c:	1f 4f       	sbci	r17, 0xFF	; 255
     90e:	ce 01       	movw	r24, r28
     910:	05 96       	adiw	r24, 0x05	; 5
     912:	b8 01       	movw	r22, r16
     914:	0e 94 76 08 	call	0x10ec	; 0x10ec <__unpack_f>
     918:	8a 89       	ldd	r24, Y+18	; 0x12
     91a:	91 e0       	ldi	r25, 0x01	; 1
     91c:	89 27       	eor	r24, r25
     91e:	8a 8b       	std	Y+18, r24	; 0x12
     920:	c7 01       	movw	r24, r14
     922:	b8 01       	movw	r22, r16
     924:	ae 01       	movw	r20, r28
     926:	47 5e       	subi	r20, 0xE7	; 231
     928:	5f 4f       	sbci	r21, 0xFF	; 255
     92a:	0e 94 20 03 	call	0x640	; 0x640 <_fpadd_parts>
     92e:	0e 94 a1 07 	call	0xf42	; 0xf42 <__pack_f>
     932:	a0 96       	adiw	r28, 0x20	; 32
     934:	e6 e0       	ldi	r30, 0x06	; 6
     936:	0c 94 6f 09 	jmp	0x12de	; 0x12de <__epilogue_restores__+0x18>

0000093a <__addsf3>:
     93a:	a0 e2       	ldi	r26, 0x20	; 32
     93c:	b0 e0       	ldi	r27, 0x00	; 0
     93e:	e3 ea       	ldi	r30, 0xA3	; 163
     940:	f4 e0       	ldi	r31, 0x04	; 4
     942:	0c 94 53 09 	jmp	0x12a6	; 0x12a6 <__prologue_saves__+0x18>
     946:	69 83       	std	Y+1, r22	; 0x01
     948:	7a 83       	std	Y+2, r23	; 0x02
     94a:	8b 83       	std	Y+3, r24	; 0x03
     94c:	9c 83       	std	Y+4, r25	; 0x04
     94e:	2d 83       	std	Y+5, r18	; 0x05
     950:	3e 83       	std	Y+6, r19	; 0x06
     952:	4f 83       	std	Y+7, r20	; 0x07
     954:	58 87       	std	Y+8, r21	; 0x08
     956:	f9 e0       	ldi	r31, 0x09	; 9
     958:	ef 2e       	mov	r14, r31
     95a:	f1 2c       	mov	r15, r1
     95c:	ec 0e       	add	r14, r28
     95e:	fd 1e       	adc	r15, r29
     960:	ce 01       	movw	r24, r28
     962:	01 96       	adiw	r24, 0x01	; 1
     964:	b7 01       	movw	r22, r14
     966:	0e 94 76 08 	call	0x10ec	; 0x10ec <__unpack_f>
     96a:	8e 01       	movw	r16, r28
     96c:	0f 5e       	subi	r16, 0xEF	; 239
     96e:	1f 4f       	sbci	r17, 0xFF	; 255
     970:	ce 01       	movw	r24, r28
     972:	05 96       	adiw	r24, 0x05	; 5
     974:	b8 01       	movw	r22, r16
     976:	0e 94 76 08 	call	0x10ec	; 0x10ec <__unpack_f>
     97a:	c7 01       	movw	r24, r14
     97c:	b8 01       	movw	r22, r16
     97e:	ae 01       	movw	r20, r28
     980:	47 5e       	subi	r20, 0xE7	; 231
     982:	5f 4f       	sbci	r21, 0xFF	; 255
     984:	0e 94 20 03 	call	0x640	; 0x640 <_fpadd_parts>
     988:	0e 94 a1 07 	call	0xf42	; 0xf42 <__pack_f>
     98c:	a0 96       	adiw	r28, 0x20	; 32
     98e:	e6 e0       	ldi	r30, 0x06	; 6
     990:	0c 94 6f 09 	jmp	0x12de	; 0x12de <__epilogue_restores__+0x18>

00000994 <__mulsf3>:
     994:	a0 e2       	ldi	r26, 0x20	; 32
     996:	b0 e0       	ldi	r27, 0x00	; 0
     998:	e0 ed       	ldi	r30, 0xD0	; 208
     99a:	f4 e0       	ldi	r31, 0x04	; 4
     99c:	0c 94 47 09 	jmp	0x128e	; 0x128e <__prologue_saves__>
     9a0:	69 83       	std	Y+1, r22	; 0x01
     9a2:	7a 83       	std	Y+2, r23	; 0x02
     9a4:	8b 83       	std	Y+3, r24	; 0x03
     9a6:	9c 83       	std	Y+4, r25	; 0x04
     9a8:	2d 83       	std	Y+5, r18	; 0x05
     9aa:	3e 83       	std	Y+6, r19	; 0x06
     9ac:	4f 83       	std	Y+7, r20	; 0x07
     9ae:	58 87       	std	Y+8, r21	; 0x08
     9b0:	ce 01       	movw	r24, r28
     9b2:	01 96       	adiw	r24, 0x01	; 1
     9b4:	be 01       	movw	r22, r28
     9b6:	67 5f       	subi	r22, 0xF7	; 247
     9b8:	7f 4f       	sbci	r23, 0xFF	; 255
     9ba:	0e 94 76 08 	call	0x10ec	; 0x10ec <__unpack_f>
     9be:	ce 01       	movw	r24, r28
     9c0:	05 96       	adiw	r24, 0x05	; 5
     9c2:	be 01       	movw	r22, r28
     9c4:	6f 5e       	subi	r22, 0xEF	; 239
     9c6:	7f 4f       	sbci	r23, 0xFF	; 255
     9c8:	0e 94 76 08 	call	0x10ec	; 0x10ec <__unpack_f>
     9cc:	99 85       	ldd	r25, Y+9	; 0x09
     9ce:	92 30       	cpi	r25, 0x02	; 2
     9d0:	88 f0       	brcs	.+34     	; 0x9f4 <__mulsf3+0x60>
     9d2:	89 89       	ldd	r24, Y+17	; 0x11
     9d4:	82 30       	cpi	r24, 0x02	; 2
     9d6:	c8 f0       	brcs	.+50     	; 0xa0a <__mulsf3+0x76>
     9d8:	94 30       	cpi	r25, 0x04	; 4
     9da:	19 f4       	brne	.+6      	; 0x9e2 <__mulsf3+0x4e>
     9dc:	82 30       	cpi	r24, 0x02	; 2
     9de:	51 f4       	brne	.+20     	; 0x9f4 <__mulsf3+0x60>
     9e0:	04 c0       	rjmp	.+8      	; 0x9ea <__mulsf3+0x56>
     9e2:	84 30       	cpi	r24, 0x04	; 4
     9e4:	29 f4       	brne	.+10     	; 0x9f0 <__mulsf3+0x5c>
     9e6:	92 30       	cpi	r25, 0x02	; 2
     9e8:	81 f4       	brne	.+32     	; 0xa0a <__mulsf3+0x76>
     9ea:	80 e0       	ldi	r24, 0x00	; 0
     9ec:	91 e0       	ldi	r25, 0x01	; 1
     9ee:	c6 c0       	rjmp	.+396    	; 0xb7c <__mulsf3+0x1e8>
     9f0:	92 30       	cpi	r25, 0x02	; 2
     9f2:	49 f4       	brne	.+18     	; 0xa06 <__mulsf3+0x72>
     9f4:	20 e0       	ldi	r18, 0x00	; 0
     9f6:	9a 85       	ldd	r25, Y+10	; 0x0a
     9f8:	8a 89       	ldd	r24, Y+18	; 0x12
     9fa:	98 13       	cpse	r25, r24
     9fc:	21 e0       	ldi	r18, 0x01	; 1
     9fe:	2a 87       	std	Y+10, r18	; 0x0a
     a00:	ce 01       	movw	r24, r28
     a02:	09 96       	adiw	r24, 0x09	; 9
     a04:	bb c0       	rjmp	.+374    	; 0xb7c <__mulsf3+0x1e8>
     a06:	82 30       	cpi	r24, 0x02	; 2
     a08:	49 f4       	brne	.+18     	; 0xa1c <__mulsf3+0x88>
     a0a:	20 e0       	ldi	r18, 0x00	; 0
     a0c:	9a 85       	ldd	r25, Y+10	; 0x0a
     a0e:	8a 89       	ldd	r24, Y+18	; 0x12
     a10:	98 13       	cpse	r25, r24
     a12:	21 e0       	ldi	r18, 0x01	; 1
     a14:	2a 8b       	std	Y+18, r18	; 0x12
     a16:	ce 01       	movw	r24, r28
     a18:	41 96       	adiw	r24, 0x11	; 17
     a1a:	b0 c0       	rjmp	.+352    	; 0xb7c <__mulsf3+0x1e8>
     a1c:	2d 84       	ldd	r2, Y+13	; 0x0d
     a1e:	3e 84       	ldd	r3, Y+14	; 0x0e
     a20:	4f 84       	ldd	r4, Y+15	; 0x0f
     a22:	58 88       	ldd	r5, Y+16	; 0x10
     a24:	6d 88       	ldd	r6, Y+21	; 0x15
     a26:	7e 88       	ldd	r7, Y+22	; 0x16
     a28:	8f 88       	ldd	r8, Y+23	; 0x17
     a2a:	98 8c       	ldd	r9, Y+24	; 0x18
     a2c:	ee 24       	eor	r14, r14
     a2e:	ff 24       	eor	r15, r15
     a30:	87 01       	movw	r16, r14
     a32:	aa 24       	eor	r10, r10
     a34:	bb 24       	eor	r11, r11
     a36:	65 01       	movw	r12, r10
     a38:	40 e0       	ldi	r20, 0x00	; 0
     a3a:	50 e0       	ldi	r21, 0x00	; 0
     a3c:	60 e0       	ldi	r22, 0x00	; 0
     a3e:	70 e0       	ldi	r23, 0x00	; 0
     a40:	e0 e0       	ldi	r30, 0x00	; 0
     a42:	f0 e0       	ldi	r31, 0x00	; 0
     a44:	c1 01       	movw	r24, r2
     a46:	81 70       	andi	r24, 0x01	; 1
     a48:	90 70       	andi	r25, 0x00	; 0
     a4a:	89 2b       	or	r24, r25
     a4c:	e9 f0       	breq	.+58     	; 0xa88 <__mulsf3+0xf4>
     a4e:	e6 0c       	add	r14, r6
     a50:	f7 1c       	adc	r15, r7
     a52:	08 1d       	adc	r16, r8
     a54:	19 1d       	adc	r17, r9
     a56:	9a 01       	movw	r18, r20
     a58:	ab 01       	movw	r20, r22
     a5a:	2a 0d       	add	r18, r10
     a5c:	3b 1d       	adc	r19, r11
     a5e:	4c 1d       	adc	r20, r12
     a60:	5d 1d       	adc	r21, r13
     a62:	80 e0       	ldi	r24, 0x00	; 0
     a64:	90 e0       	ldi	r25, 0x00	; 0
     a66:	a0 e0       	ldi	r26, 0x00	; 0
     a68:	b0 e0       	ldi	r27, 0x00	; 0
     a6a:	e6 14       	cp	r14, r6
     a6c:	f7 04       	cpc	r15, r7
     a6e:	08 05       	cpc	r16, r8
     a70:	19 05       	cpc	r17, r9
     a72:	20 f4       	brcc	.+8      	; 0xa7c <__mulsf3+0xe8>
     a74:	81 e0       	ldi	r24, 0x01	; 1
     a76:	90 e0       	ldi	r25, 0x00	; 0
     a78:	a0 e0       	ldi	r26, 0x00	; 0
     a7a:	b0 e0       	ldi	r27, 0x00	; 0
     a7c:	ba 01       	movw	r22, r20
     a7e:	a9 01       	movw	r20, r18
     a80:	48 0f       	add	r20, r24
     a82:	59 1f       	adc	r21, r25
     a84:	6a 1f       	adc	r22, r26
     a86:	7b 1f       	adc	r23, r27
     a88:	aa 0c       	add	r10, r10
     a8a:	bb 1c       	adc	r11, r11
     a8c:	cc 1c       	adc	r12, r12
     a8e:	dd 1c       	adc	r13, r13
     a90:	97 fe       	sbrs	r9, 7
     a92:	08 c0       	rjmp	.+16     	; 0xaa4 <__mulsf3+0x110>
     a94:	81 e0       	ldi	r24, 0x01	; 1
     a96:	90 e0       	ldi	r25, 0x00	; 0
     a98:	a0 e0       	ldi	r26, 0x00	; 0
     a9a:	b0 e0       	ldi	r27, 0x00	; 0
     a9c:	a8 2a       	or	r10, r24
     a9e:	b9 2a       	or	r11, r25
     aa0:	ca 2a       	or	r12, r26
     aa2:	db 2a       	or	r13, r27
     aa4:	31 96       	adiw	r30, 0x01	; 1
     aa6:	e0 32       	cpi	r30, 0x20	; 32
     aa8:	f1 05       	cpc	r31, r1
     aaa:	49 f0       	breq	.+18     	; 0xabe <__mulsf3+0x12a>
     aac:	66 0c       	add	r6, r6
     aae:	77 1c       	adc	r7, r7
     ab0:	88 1c       	adc	r8, r8
     ab2:	99 1c       	adc	r9, r9
     ab4:	56 94       	lsr	r5
     ab6:	47 94       	ror	r4
     ab8:	37 94       	ror	r3
     aba:	27 94       	ror	r2
     abc:	c3 cf       	rjmp	.-122    	; 0xa44 <__mulsf3+0xb0>
     abe:	fa 85       	ldd	r31, Y+10	; 0x0a
     ac0:	ea 89       	ldd	r30, Y+18	; 0x12
     ac2:	2b 89       	ldd	r18, Y+19	; 0x13
     ac4:	3c 89       	ldd	r19, Y+20	; 0x14
     ac6:	8b 85       	ldd	r24, Y+11	; 0x0b
     ac8:	9c 85       	ldd	r25, Y+12	; 0x0c
     aca:	28 0f       	add	r18, r24
     acc:	39 1f       	adc	r19, r25
     ace:	2e 5f       	subi	r18, 0xFE	; 254
     ad0:	3f 4f       	sbci	r19, 0xFF	; 255
     ad2:	17 c0       	rjmp	.+46     	; 0xb02 <__mulsf3+0x16e>
     ad4:	ca 01       	movw	r24, r20
     ad6:	81 70       	andi	r24, 0x01	; 1
     ad8:	90 70       	andi	r25, 0x00	; 0
     ada:	89 2b       	or	r24, r25
     adc:	61 f0       	breq	.+24     	; 0xaf6 <__mulsf3+0x162>
     ade:	16 95       	lsr	r17
     ae0:	07 95       	ror	r16
     ae2:	f7 94       	ror	r15
     ae4:	e7 94       	ror	r14
     ae6:	80 e0       	ldi	r24, 0x00	; 0
     ae8:	90 e0       	ldi	r25, 0x00	; 0
     aea:	a0 e0       	ldi	r26, 0x00	; 0
     aec:	b0 e8       	ldi	r27, 0x80	; 128
     aee:	e8 2a       	or	r14, r24
     af0:	f9 2a       	or	r15, r25
     af2:	0a 2b       	or	r16, r26
     af4:	1b 2b       	or	r17, r27
     af6:	76 95       	lsr	r23
     af8:	67 95       	ror	r22
     afa:	57 95       	ror	r21
     afc:	47 95       	ror	r20
     afe:	2f 5f       	subi	r18, 0xFF	; 255
     b00:	3f 4f       	sbci	r19, 0xFF	; 255
     b02:	77 fd       	sbrc	r23, 7
     b04:	e7 cf       	rjmp	.-50     	; 0xad4 <__mulsf3+0x140>
     b06:	0c c0       	rjmp	.+24     	; 0xb20 <__mulsf3+0x18c>
     b08:	44 0f       	add	r20, r20
     b0a:	55 1f       	adc	r21, r21
     b0c:	66 1f       	adc	r22, r22
     b0e:	77 1f       	adc	r23, r23
     b10:	17 fd       	sbrc	r17, 7
     b12:	41 60       	ori	r20, 0x01	; 1
     b14:	ee 0c       	add	r14, r14
     b16:	ff 1c       	adc	r15, r15
     b18:	00 1f       	adc	r16, r16
     b1a:	11 1f       	adc	r17, r17
     b1c:	21 50       	subi	r18, 0x01	; 1
     b1e:	30 40       	sbci	r19, 0x00	; 0
     b20:	40 30       	cpi	r20, 0x00	; 0
     b22:	90 e0       	ldi	r25, 0x00	; 0
     b24:	59 07       	cpc	r21, r25
     b26:	90 e0       	ldi	r25, 0x00	; 0
     b28:	69 07       	cpc	r22, r25
     b2a:	90 e4       	ldi	r25, 0x40	; 64
     b2c:	79 07       	cpc	r23, r25
     b2e:	60 f3       	brcs	.-40     	; 0xb08 <__mulsf3+0x174>
     b30:	2b 8f       	std	Y+27, r18	; 0x1b
     b32:	3c 8f       	std	Y+28, r19	; 0x1c
     b34:	db 01       	movw	r26, r22
     b36:	ca 01       	movw	r24, r20
     b38:	8f 77       	andi	r24, 0x7F	; 127
     b3a:	90 70       	andi	r25, 0x00	; 0
     b3c:	a0 70       	andi	r26, 0x00	; 0
     b3e:	b0 70       	andi	r27, 0x00	; 0
     b40:	80 34       	cpi	r24, 0x40	; 64
     b42:	91 05       	cpc	r25, r1
     b44:	a1 05       	cpc	r26, r1
     b46:	b1 05       	cpc	r27, r1
     b48:	61 f4       	brne	.+24     	; 0xb62 <__mulsf3+0x1ce>
     b4a:	47 fd       	sbrc	r20, 7
     b4c:	0a c0       	rjmp	.+20     	; 0xb62 <__mulsf3+0x1ce>
     b4e:	e1 14       	cp	r14, r1
     b50:	f1 04       	cpc	r15, r1
     b52:	01 05       	cpc	r16, r1
     b54:	11 05       	cpc	r17, r1
     b56:	29 f0       	breq	.+10     	; 0xb62 <__mulsf3+0x1ce>
     b58:	40 5c       	subi	r20, 0xC0	; 192
     b5a:	5f 4f       	sbci	r21, 0xFF	; 255
     b5c:	6f 4f       	sbci	r22, 0xFF	; 255
     b5e:	7f 4f       	sbci	r23, 0xFF	; 255
     b60:	40 78       	andi	r20, 0x80	; 128
     b62:	1a 8e       	std	Y+26, r1	; 0x1a
     b64:	fe 17       	cp	r31, r30
     b66:	11 f0       	breq	.+4      	; 0xb6c <__mulsf3+0x1d8>
     b68:	81 e0       	ldi	r24, 0x01	; 1
     b6a:	8a 8f       	std	Y+26, r24	; 0x1a
     b6c:	4d 8f       	std	Y+29, r20	; 0x1d
     b6e:	5e 8f       	std	Y+30, r21	; 0x1e
     b70:	6f 8f       	std	Y+31, r22	; 0x1f
     b72:	78 a3       	std	Y+32, r23	; 0x20
     b74:	83 e0       	ldi	r24, 0x03	; 3
     b76:	89 8f       	std	Y+25, r24	; 0x19
     b78:	ce 01       	movw	r24, r28
     b7a:	49 96       	adiw	r24, 0x19	; 25
     b7c:	0e 94 a1 07 	call	0xf42	; 0xf42 <__pack_f>
     b80:	a0 96       	adiw	r28, 0x20	; 32
     b82:	e2 e1       	ldi	r30, 0x12	; 18
     b84:	0c 94 63 09 	jmp	0x12c6	; 0x12c6 <__epilogue_restores__>

00000b88 <__divsf3>:
     b88:	a8 e1       	ldi	r26, 0x18	; 24
     b8a:	b0 e0       	ldi	r27, 0x00	; 0
     b8c:	ea ec       	ldi	r30, 0xCA	; 202
     b8e:	f5 e0       	ldi	r31, 0x05	; 5
     b90:	0c 94 4f 09 	jmp	0x129e	; 0x129e <__prologue_saves__+0x10>
     b94:	69 83       	std	Y+1, r22	; 0x01
     b96:	7a 83       	std	Y+2, r23	; 0x02
     b98:	8b 83       	std	Y+3, r24	; 0x03
     b9a:	9c 83       	std	Y+4, r25	; 0x04
     b9c:	2d 83       	std	Y+5, r18	; 0x05
     b9e:	3e 83       	std	Y+6, r19	; 0x06
     ba0:	4f 83       	std	Y+7, r20	; 0x07
     ba2:	58 87       	std	Y+8, r21	; 0x08
     ba4:	b9 e0       	ldi	r27, 0x09	; 9
     ba6:	eb 2e       	mov	r14, r27
     ba8:	f1 2c       	mov	r15, r1
     baa:	ec 0e       	add	r14, r28
     bac:	fd 1e       	adc	r15, r29
     bae:	ce 01       	movw	r24, r28
     bb0:	01 96       	adiw	r24, 0x01	; 1
     bb2:	b7 01       	movw	r22, r14
     bb4:	0e 94 76 08 	call	0x10ec	; 0x10ec <__unpack_f>
     bb8:	8e 01       	movw	r16, r28
     bba:	0f 5e       	subi	r16, 0xEF	; 239
     bbc:	1f 4f       	sbci	r17, 0xFF	; 255
     bbe:	ce 01       	movw	r24, r28
     bc0:	05 96       	adiw	r24, 0x05	; 5
     bc2:	b8 01       	movw	r22, r16
     bc4:	0e 94 76 08 	call	0x10ec	; 0x10ec <__unpack_f>
     bc8:	29 85       	ldd	r18, Y+9	; 0x09
     bca:	22 30       	cpi	r18, 0x02	; 2
     bcc:	08 f4       	brcc	.+2      	; 0xbd0 <__divsf3+0x48>
     bce:	7e c0       	rjmp	.+252    	; 0xccc <__divsf3+0x144>
     bd0:	39 89       	ldd	r19, Y+17	; 0x11
     bd2:	32 30       	cpi	r19, 0x02	; 2
     bd4:	10 f4       	brcc	.+4      	; 0xbda <__divsf3+0x52>
     bd6:	b8 01       	movw	r22, r16
     bd8:	7c c0       	rjmp	.+248    	; 0xcd2 <__divsf3+0x14a>
     bda:	8a 85       	ldd	r24, Y+10	; 0x0a
     bdc:	9a 89       	ldd	r25, Y+18	; 0x12
     bde:	89 27       	eor	r24, r25
     be0:	8a 87       	std	Y+10, r24	; 0x0a
     be2:	24 30       	cpi	r18, 0x04	; 4
     be4:	11 f0       	breq	.+4      	; 0xbea <__divsf3+0x62>
     be6:	22 30       	cpi	r18, 0x02	; 2
     be8:	31 f4       	brne	.+12     	; 0xbf6 <__divsf3+0x6e>
     bea:	23 17       	cp	r18, r19
     bec:	09 f0       	breq	.+2      	; 0xbf0 <__divsf3+0x68>
     bee:	6e c0       	rjmp	.+220    	; 0xccc <__divsf3+0x144>
     bf0:	60 e0       	ldi	r22, 0x00	; 0
     bf2:	71 e0       	ldi	r23, 0x01	; 1
     bf4:	6e c0       	rjmp	.+220    	; 0xcd2 <__divsf3+0x14a>
     bf6:	34 30       	cpi	r19, 0x04	; 4
     bf8:	39 f4       	brne	.+14     	; 0xc08 <__divsf3+0x80>
     bfa:	1d 86       	std	Y+13, r1	; 0x0d
     bfc:	1e 86       	std	Y+14, r1	; 0x0e
     bfe:	1f 86       	std	Y+15, r1	; 0x0f
     c00:	18 8a       	std	Y+16, r1	; 0x10
     c02:	1c 86       	std	Y+12, r1	; 0x0c
     c04:	1b 86       	std	Y+11, r1	; 0x0b
     c06:	04 c0       	rjmp	.+8      	; 0xc10 <__divsf3+0x88>
     c08:	32 30       	cpi	r19, 0x02	; 2
     c0a:	21 f4       	brne	.+8      	; 0xc14 <__divsf3+0x8c>
     c0c:	84 e0       	ldi	r24, 0x04	; 4
     c0e:	89 87       	std	Y+9, r24	; 0x09
     c10:	b7 01       	movw	r22, r14
     c12:	5f c0       	rjmp	.+190    	; 0xcd2 <__divsf3+0x14a>
     c14:	2b 85       	ldd	r18, Y+11	; 0x0b
     c16:	3c 85       	ldd	r19, Y+12	; 0x0c
     c18:	8b 89       	ldd	r24, Y+19	; 0x13
     c1a:	9c 89       	ldd	r25, Y+20	; 0x14
     c1c:	28 1b       	sub	r18, r24
     c1e:	39 0b       	sbc	r19, r25
     c20:	3c 87       	std	Y+12, r19	; 0x0c
     c22:	2b 87       	std	Y+11, r18	; 0x0b
     c24:	ed 84       	ldd	r14, Y+13	; 0x0d
     c26:	fe 84       	ldd	r15, Y+14	; 0x0e
     c28:	0f 85       	ldd	r16, Y+15	; 0x0f
     c2a:	18 89       	ldd	r17, Y+16	; 0x10
     c2c:	ad 88       	ldd	r10, Y+21	; 0x15
     c2e:	be 88       	ldd	r11, Y+22	; 0x16
     c30:	cf 88       	ldd	r12, Y+23	; 0x17
     c32:	d8 8c       	ldd	r13, Y+24	; 0x18
     c34:	ea 14       	cp	r14, r10
     c36:	fb 04       	cpc	r15, r11
     c38:	0c 05       	cpc	r16, r12
     c3a:	1d 05       	cpc	r17, r13
     c3c:	40 f4       	brcc	.+16     	; 0xc4e <__divsf3+0xc6>
     c3e:	ee 0c       	add	r14, r14
     c40:	ff 1c       	adc	r15, r15
     c42:	00 1f       	adc	r16, r16
     c44:	11 1f       	adc	r17, r17
     c46:	21 50       	subi	r18, 0x01	; 1
     c48:	30 40       	sbci	r19, 0x00	; 0
     c4a:	3c 87       	std	Y+12, r19	; 0x0c
     c4c:	2b 87       	std	Y+11, r18	; 0x0b
     c4e:	20 e0       	ldi	r18, 0x00	; 0
     c50:	30 e0       	ldi	r19, 0x00	; 0
     c52:	40 e0       	ldi	r20, 0x00	; 0
     c54:	50 e0       	ldi	r21, 0x00	; 0
     c56:	80 e0       	ldi	r24, 0x00	; 0
     c58:	90 e0       	ldi	r25, 0x00	; 0
     c5a:	a0 e0       	ldi	r26, 0x00	; 0
     c5c:	b0 e4       	ldi	r27, 0x40	; 64
     c5e:	60 e0       	ldi	r22, 0x00	; 0
     c60:	70 e0       	ldi	r23, 0x00	; 0
     c62:	ea 14       	cp	r14, r10
     c64:	fb 04       	cpc	r15, r11
     c66:	0c 05       	cpc	r16, r12
     c68:	1d 05       	cpc	r17, r13
     c6a:	40 f0       	brcs	.+16     	; 0xc7c <__divsf3+0xf4>
     c6c:	28 2b       	or	r18, r24
     c6e:	39 2b       	or	r19, r25
     c70:	4a 2b       	or	r20, r26
     c72:	5b 2b       	or	r21, r27
     c74:	ea 18       	sub	r14, r10
     c76:	fb 08       	sbc	r15, r11
     c78:	0c 09       	sbc	r16, r12
     c7a:	1d 09       	sbc	r17, r13
     c7c:	b6 95       	lsr	r27
     c7e:	a7 95       	ror	r26
     c80:	97 95       	ror	r25
     c82:	87 95       	ror	r24
     c84:	ee 0c       	add	r14, r14
     c86:	ff 1c       	adc	r15, r15
     c88:	00 1f       	adc	r16, r16
     c8a:	11 1f       	adc	r17, r17
     c8c:	6f 5f       	subi	r22, 0xFF	; 255
     c8e:	7f 4f       	sbci	r23, 0xFF	; 255
     c90:	6f 31       	cpi	r22, 0x1F	; 31
     c92:	71 05       	cpc	r23, r1
     c94:	31 f7       	brne	.-52     	; 0xc62 <__divsf3+0xda>
     c96:	da 01       	movw	r26, r20
     c98:	c9 01       	movw	r24, r18
     c9a:	8f 77       	andi	r24, 0x7F	; 127
     c9c:	90 70       	andi	r25, 0x00	; 0
     c9e:	a0 70       	andi	r26, 0x00	; 0
     ca0:	b0 70       	andi	r27, 0x00	; 0
     ca2:	80 34       	cpi	r24, 0x40	; 64
     ca4:	91 05       	cpc	r25, r1
     ca6:	a1 05       	cpc	r26, r1
     ca8:	b1 05       	cpc	r27, r1
     caa:	61 f4       	brne	.+24     	; 0xcc4 <__divsf3+0x13c>
     cac:	27 fd       	sbrc	r18, 7
     cae:	0a c0       	rjmp	.+20     	; 0xcc4 <__divsf3+0x13c>
     cb0:	e1 14       	cp	r14, r1
     cb2:	f1 04       	cpc	r15, r1
     cb4:	01 05       	cpc	r16, r1
     cb6:	11 05       	cpc	r17, r1
     cb8:	29 f0       	breq	.+10     	; 0xcc4 <__divsf3+0x13c>
     cba:	20 5c       	subi	r18, 0xC0	; 192
     cbc:	3f 4f       	sbci	r19, 0xFF	; 255
     cbe:	4f 4f       	sbci	r20, 0xFF	; 255
     cc0:	5f 4f       	sbci	r21, 0xFF	; 255
     cc2:	20 78       	andi	r18, 0x80	; 128
     cc4:	2d 87       	std	Y+13, r18	; 0x0d
     cc6:	3e 87       	std	Y+14, r19	; 0x0e
     cc8:	4f 87       	std	Y+15, r20	; 0x0f
     cca:	58 8b       	std	Y+16, r21	; 0x10
     ccc:	be 01       	movw	r22, r28
     cce:	67 5f       	subi	r22, 0xF7	; 247
     cd0:	7f 4f       	sbci	r23, 0xFF	; 255
     cd2:	cb 01       	movw	r24, r22
     cd4:	0e 94 a1 07 	call	0xf42	; 0xf42 <__pack_f>
     cd8:	68 96       	adiw	r28, 0x18	; 24
     cda:	ea e0       	ldi	r30, 0x0A	; 10
     cdc:	0c 94 6b 09 	jmp	0x12d6	; 0x12d6 <__epilogue_restores__+0x10>

00000ce0 <__gesf2>:
     ce0:	a8 e1       	ldi	r26, 0x18	; 24
     ce2:	b0 e0       	ldi	r27, 0x00	; 0
     ce4:	e6 e7       	ldi	r30, 0x76	; 118
     ce6:	f6 e0       	ldi	r31, 0x06	; 6
     ce8:	0c 94 53 09 	jmp	0x12a6	; 0x12a6 <__prologue_saves__+0x18>
     cec:	69 83       	std	Y+1, r22	; 0x01
     cee:	7a 83       	std	Y+2, r23	; 0x02
     cf0:	8b 83       	std	Y+3, r24	; 0x03
     cf2:	9c 83       	std	Y+4, r25	; 0x04
     cf4:	2d 83       	std	Y+5, r18	; 0x05
     cf6:	3e 83       	std	Y+6, r19	; 0x06
     cf8:	4f 83       	std	Y+7, r20	; 0x07
     cfa:	58 87       	std	Y+8, r21	; 0x08
     cfc:	89 e0       	ldi	r24, 0x09	; 9
     cfe:	e8 2e       	mov	r14, r24
     d00:	f1 2c       	mov	r15, r1
     d02:	ec 0e       	add	r14, r28
     d04:	fd 1e       	adc	r15, r29
     d06:	ce 01       	movw	r24, r28
     d08:	01 96       	adiw	r24, 0x01	; 1
     d0a:	b7 01       	movw	r22, r14
     d0c:	0e 94 76 08 	call	0x10ec	; 0x10ec <__unpack_f>
     d10:	8e 01       	movw	r16, r28
     d12:	0f 5e       	subi	r16, 0xEF	; 239
     d14:	1f 4f       	sbci	r17, 0xFF	; 255
     d16:	ce 01       	movw	r24, r28
     d18:	05 96       	adiw	r24, 0x05	; 5
     d1a:	b8 01       	movw	r22, r16
     d1c:	0e 94 76 08 	call	0x10ec	; 0x10ec <__unpack_f>
     d20:	89 85       	ldd	r24, Y+9	; 0x09
     d22:	82 30       	cpi	r24, 0x02	; 2
     d24:	40 f0       	brcs	.+16     	; 0xd36 <__gesf2+0x56>
     d26:	89 89       	ldd	r24, Y+17	; 0x11
     d28:	82 30       	cpi	r24, 0x02	; 2
     d2a:	28 f0       	brcs	.+10     	; 0xd36 <__gesf2+0x56>
     d2c:	c7 01       	movw	r24, r14
     d2e:	b8 01       	movw	r22, r16
     d30:	0e 94 ee 08 	call	0x11dc	; 0x11dc <__fpcmp_parts_f>
     d34:	01 c0       	rjmp	.+2      	; 0xd38 <__gesf2+0x58>
     d36:	8f ef       	ldi	r24, 0xFF	; 255
     d38:	68 96       	adiw	r28, 0x18	; 24
     d3a:	e6 e0       	ldi	r30, 0x06	; 6
     d3c:	0c 94 6f 09 	jmp	0x12de	; 0x12de <__epilogue_restores__+0x18>

00000d40 <__floatsisf>:
     d40:	a8 e0       	ldi	r26, 0x08	; 8
     d42:	b0 e0       	ldi	r27, 0x00	; 0
     d44:	e6 ea       	ldi	r30, 0xA6	; 166
     d46:	f6 e0       	ldi	r31, 0x06	; 6
     d48:	0c 94 50 09 	jmp	0x12a0	; 0x12a0 <__prologue_saves__+0x12>
     d4c:	9b 01       	movw	r18, r22
     d4e:	ac 01       	movw	r20, r24
     d50:	83 e0       	ldi	r24, 0x03	; 3
     d52:	89 83       	std	Y+1, r24	; 0x01
     d54:	da 01       	movw	r26, r20
     d56:	c9 01       	movw	r24, r18
     d58:	88 27       	eor	r24, r24
     d5a:	b7 fd       	sbrc	r27, 7
     d5c:	83 95       	inc	r24
     d5e:	99 27       	eor	r25, r25
     d60:	aa 27       	eor	r26, r26
     d62:	bb 27       	eor	r27, r27
     d64:	b8 2e       	mov	r11, r24
     d66:	21 15       	cp	r18, r1
     d68:	31 05       	cpc	r19, r1
     d6a:	41 05       	cpc	r20, r1
     d6c:	51 05       	cpc	r21, r1
     d6e:	19 f4       	brne	.+6      	; 0xd76 <__floatsisf+0x36>
     d70:	82 e0       	ldi	r24, 0x02	; 2
     d72:	89 83       	std	Y+1, r24	; 0x01
     d74:	3a c0       	rjmp	.+116    	; 0xdea <__floatsisf+0xaa>
     d76:	88 23       	and	r24, r24
     d78:	a9 f0       	breq	.+42     	; 0xda4 <__floatsisf+0x64>
     d7a:	20 30       	cpi	r18, 0x00	; 0
     d7c:	80 e0       	ldi	r24, 0x00	; 0
     d7e:	38 07       	cpc	r19, r24
     d80:	80 e0       	ldi	r24, 0x00	; 0
     d82:	48 07       	cpc	r20, r24
     d84:	80 e8       	ldi	r24, 0x80	; 128
     d86:	58 07       	cpc	r21, r24
     d88:	29 f4       	brne	.+10     	; 0xd94 <__floatsisf+0x54>
     d8a:	60 e0       	ldi	r22, 0x00	; 0
     d8c:	70 e0       	ldi	r23, 0x00	; 0
     d8e:	80 e0       	ldi	r24, 0x00	; 0
     d90:	9f ec       	ldi	r25, 0xCF	; 207
     d92:	30 c0       	rjmp	.+96     	; 0xdf4 <__floatsisf+0xb4>
     d94:	ee 24       	eor	r14, r14
     d96:	ff 24       	eor	r15, r15
     d98:	87 01       	movw	r16, r14
     d9a:	e2 1a       	sub	r14, r18
     d9c:	f3 0a       	sbc	r15, r19
     d9e:	04 0b       	sbc	r16, r20
     da0:	15 0b       	sbc	r17, r21
     da2:	02 c0       	rjmp	.+4      	; 0xda8 <__floatsisf+0x68>
     da4:	79 01       	movw	r14, r18
     da6:	8a 01       	movw	r16, r20
     da8:	8e e1       	ldi	r24, 0x1E	; 30
     daa:	c8 2e       	mov	r12, r24
     dac:	d1 2c       	mov	r13, r1
     dae:	dc 82       	std	Y+4, r13	; 0x04
     db0:	cb 82       	std	Y+3, r12	; 0x03
     db2:	ed 82       	std	Y+5, r14	; 0x05
     db4:	fe 82       	std	Y+6, r15	; 0x06
     db6:	0f 83       	std	Y+7, r16	; 0x07
     db8:	18 87       	std	Y+8, r17	; 0x08
     dba:	c8 01       	movw	r24, r16
     dbc:	b7 01       	movw	r22, r14
     dbe:	0e 94 52 07 	call	0xea4	; 0xea4 <__clzsi2>
     dc2:	01 97       	sbiw	r24, 0x01	; 1
     dc4:	18 16       	cp	r1, r24
     dc6:	19 06       	cpc	r1, r25
     dc8:	84 f4       	brge	.+32     	; 0xdea <__floatsisf+0xaa>
     dca:	08 2e       	mov	r0, r24
     dcc:	04 c0       	rjmp	.+8      	; 0xdd6 <__floatsisf+0x96>
     dce:	ee 0c       	add	r14, r14
     dd0:	ff 1c       	adc	r15, r15
     dd2:	00 1f       	adc	r16, r16
     dd4:	11 1f       	adc	r17, r17
     dd6:	0a 94       	dec	r0
     dd8:	d2 f7       	brpl	.-12     	; 0xdce <__floatsisf+0x8e>
     dda:	ed 82       	std	Y+5, r14	; 0x05
     ddc:	fe 82       	std	Y+6, r15	; 0x06
     dde:	0f 83       	std	Y+7, r16	; 0x07
     de0:	18 87       	std	Y+8, r17	; 0x08
     de2:	c8 1a       	sub	r12, r24
     de4:	d9 0a       	sbc	r13, r25
     de6:	dc 82       	std	Y+4, r13	; 0x04
     de8:	cb 82       	std	Y+3, r12	; 0x03
     dea:	ba 82       	std	Y+2, r11	; 0x02
     dec:	ce 01       	movw	r24, r28
     dee:	01 96       	adiw	r24, 0x01	; 1
     df0:	0e 94 a1 07 	call	0xf42	; 0xf42 <__pack_f>
     df4:	28 96       	adiw	r28, 0x08	; 8
     df6:	e9 e0       	ldi	r30, 0x09	; 9
     df8:	0c 94 6c 09 	jmp	0x12d8	; 0x12d8 <__epilogue_restores__+0x12>

00000dfc <__fixsfsi>:
     dfc:	ac e0       	ldi	r26, 0x0C	; 12
     dfe:	b0 e0       	ldi	r27, 0x00	; 0
     e00:	e4 e0       	ldi	r30, 0x04	; 4
     e02:	f7 e0       	ldi	r31, 0x07	; 7
     e04:	0c 94 57 09 	jmp	0x12ae	; 0x12ae <__prologue_saves__+0x20>
     e08:	69 83       	std	Y+1, r22	; 0x01
     e0a:	7a 83       	std	Y+2, r23	; 0x02
     e0c:	8b 83       	std	Y+3, r24	; 0x03
     e0e:	9c 83       	std	Y+4, r25	; 0x04
     e10:	ce 01       	movw	r24, r28
     e12:	01 96       	adiw	r24, 0x01	; 1
     e14:	be 01       	movw	r22, r28
     e16:	6b 5f       	subi	r22, 0xFB	; 251
     e18:	7f 4f       	sbci	r23, 0xFF	; 255
     e1a:	0e 94 76 08 	call	0x10ec	; 0x10ec <__unpack_f>
     e1e:	8d 81       	ldd	r24, Y+5	; 0x05
     e20:	82 30       	cpi	r24, 0x02	; 2
     e22:	61 f1       	breq	.+88     	; 0xe7c <__fixsfsi+0x80>
     e24:	82 30       	cpi	r24, 0x02	; 2
     e26:	50 f1       	brcs	.+84     	; 0xe7c <__fixsfsi+0x80>
     e28:	84 30       	cpi	r24, 0x04	; 4
     e2a:	21 f4       	brne	.+8      	; 0xe34 <__fixsfsi+0x38>
     e2c:	8e 81       	ldd	r24, Y+6	; 0x06
     e2e:	88 23       	and	r24, r24
     e30:	51 f1       	breq	.+84     	; 0xe86 <__fixsfsi+0x8a>
     e32:	2e c0       	rjmp	.+92     	; 0xe90 <__fixsfsi+0x94>
     e34:	2f 81       	ldd	r18, Y+7	; 0x07
     e36:	38 85       	ldd	r19, Y+8	; 0x08
     e38:	37 fd       	sbrc	r19, 7
     e3a:	20 c0       	rjmp	.+64     	; 0xe7c <__fixsfsi+0x80>
     e3c:	6e 81       	ldd	r22, Y+6	; 0x06
     e3e:	2f 31       	cpi	r18, 0x1F	; 31
     e40:	31 05       	cpc	r19, r1
     e42:	1c f0       	brlt	.+6      	; 0xe4a <__fixsfsi+0x4e>
     e44:	66 23       	and	r22, r22
     e46:	f9 f0       	breq	.+62     	; 0xe86 <__fixsfsi+0x8a>
     e48:	23 c0       	rjmp	.+70     	; 0xe90 <__fixsfsi+0x94>
     e4a:	8e e1       	ldi	r24, 0x1E	; 30
     e4c:	90 e0       	ldi	r25, 0x00	; 0
     e4e:	82 1b       	sub	r24, r18
     e50:	93 0b       	sbc	r25, r19
     e52:	29 85       	ldd	r18, Y+9	; 0x09
     e54:	3a 85       	ldd	r19, Y+10	; 0x0a
     e56:	4b 85       	ldd	r20, Y+11	; 0x0b
     e58:	5c 85       	ldd	r21, Y+12	; 0x0c
     e5a:	04 c0       	rjmp	.+8      	; 0xe64 <__fixsfsi+0x68>
     e5c:	56 95       	lsr	r21
     e5e:	47 95       	ror	r20
     e60:	37 95       	ror	r19
     e62:	27 95       	ror	r18
     e64:	8a 95       	dec	r24
     e66:	d2 f7       	brpl	.-12     	; 0xe5c <__fixsfsi+0x60>
     e68:	66 23       	and	r22, r22
     e6a:	b1 f0       	breq	.+44     	; 0xe98 <__fixsfsi+0x9c>
     e6c:	50 95       	com	r21
     e6e:	40 95       	com	r20
     e70:	30 95       	com	r19
     e72:	21 95       	neg	r18
     e74:	3f 4f       	sbci	r19, 0xFF	; 255
     e76:	4f 4f       	sbci	r20, 0xFF	; 255
     e78:	5f 4f       	sbci	r21, 0xFF	; 255
     e7a:	0e c0       	rjmp	.+28     	; 0xe98 <__fixsfsi+0x9c>
     e7c:	20 e0       	ldi	r18, 0x00	; 0
     e7e:	30 e0       	ldi	r19, 0x00	; 0
     e80:	40 e0       	ldi	r20, 0x00	; 0
     e82:	50 e0       	ldi	r21, 0x00	; 0
     e84:	09 c0       	rjmp	.+18     	; 0xe98 <__fixsfsi+0x9c>
     e86:	2f ef       	ldi	r18, 0xFF	; 255
     e88:	3f ef       	ldi	r19, 0xFF	; 255
     e8a:	4f ef       	ldi	r20, 0xFF	; 255
     e8c:	5f e7       	ldi	r21, 0x7F	; 127
     e8e:	04 c0       	rjmp	.+8      	; 0xe98 <__fixsfsi+0x9c>
     e90:	20 e0       	ldi	r18, 0x00	; 0
     e92:	30 e0       	ldi	r19, 0x00	; 0
     e94:	40 e0       	ldi	r20, 0x00	; 0
     e96:	50 e8       	ldi	r21, 0x80	; 128
     e98:	b9 01       	movw	r22, r18
     e9a:	ca 01       	movw	r24, r20
     e9c:	2c 96       	adiw	r28, 0x0c	; 12
     e9e:	e2 e0       	ldi	r30, 0x02	; 2
     ea0:	0c 94 73 09 	jmp	0x12e6	; 0x12e6 <__epilogue_restores__+0x20>

00000ea4 <__clzsi2>:
     ea4:	ef 92       	push	r14
     ea6:	ff 92       	push	r15
     ea8:	0f 93       	push	r16
     eaa:	1f 93       	push	r17
     eac:	7b 01       	movw	r14, r22
     eae:	8c 01       	movw	r16, r24
     eb0:	80 e0       	ldi	r24, 0x00	; 0
     eb2:	e8 16       	cp	r14, r24
     eb4:	80 e0       	ldi	r24, 0x00	; 0
     eb6:	f8 06       	cpc	r15, r24
     eb8:	81 e0       	ldi	r24, 0x01	; 1
     eba:	08 07       	cpc	r16, r24
     ebc:	80 e0       	ldi	r24, 0x00	; 0
     ebe:	18 07       	cpc	r17, r24
     ec0:	88 f4       	brcc	.+34     	; 0xee4 <__clzsi2+0x40>
     ec2:	8f ef       	ldi	r24, 0xFF	; 255
     ec4:	e8 16       	cp	r14, r24
     ec6:	f1 04       	cpc	r15, r1
     ec8:	01 05       	cpc	r16, r1
     eca:	11 05       	cpc	r17, r1
     ecc:	31 f0       	breq	.+12     	; 0xeda <__clzsi2+0x36>
     ece:	28 f0       	brcs	.+10     	; 0xeda <__clzsi2+0x36>
     ed0:	88 e0       	ldi	r24, 0x08	; 8
     ed2:	90 e0       	ldi	r25, 0x00	; 0
     ed4:	a0 e0       	ldi	r26, 0x00	; 0
     ed6:	b0 e0       	ldi	r27, 0x00	; 0
     ed8:	17 c0       	rjmp	.+46     	; 0xf08 <__clzsi2+0x64>
     eda:	80 e0       	ldi	r24, 0x00	; 0
     edc:	90 e0       	ldi	r25, 0x00	; 0
     ede:	a0 e0       	ldi	r26, 0x00	; 0
     ee0:	b0 e0       	ldi	r27, 0x00	; 0
     ee2:	12 c0       	rjmp	.+36     	; 0xf08 <__clzsi2+0x64>
     ee4:	80 e0       	ldi	r24, 0x00	; 0
     ee6:	e8 16       	cp	r14, r24
     ee8:	80 e0       	ldi	r24, 0x00	; 0
     eea:	f8 06       	cpc	r15, r24
     eec:	80 e0       	ldi	r24, 0x00	; 0
     eee:	08 07       	cpc	r16, r24
     ef0:	81 e0       	ldi	r24, 0x01	; 1
     ef2:	18 07       	cpc	r17, r24
     ef4:	28 f0       	brcs	.+10     	; 0xf00 <__clzsi2+0x5c>
     ef6:	88 e1       	ldi	r24, 0x18	; 24
     ef8:	90 e0       	ldi	r25, 0x00	; 0
     efa:	a0 e0       	ldi	r26, 0x00	; 0
     efc:	b0 e0       	ldi	r27, 0x00	; 0
     efe:	04 c0       	rjmp	.+8      	; 0xf08 <__clzsi2+0x64>
     f00:	80 e1       	ldi	r24, 0x10	; 16
     f02:	90 e0       	ldi	r25, 0x00	; 0
     f04:	a0 e0       	ldi	r26, 0x00	; 0
     f06:	b0 e0       	ldi	r27, 0x00	; 0
     f08:	20 e2       	ldi	r18, 0x20	; 32
     f0a:	30 e0       	ldi	r19, 0x00	; 0
     f0c:	40 e0       	ldi	r20, 0x00	; 0
     f0e:	50 e0       	ldi	r21, 0x00	; 0
     f10:	28 1b       	sub	r18, r24
     f12:	39 0b       	sbc	r19, r25
     f14:	4a 0b       	sbc	r20, r26
     f16:	5b 0b       	sbc	r21, r27
     f18:	04 c0       	rjmp	.+8      	; 0xf22 <__clzsi2+0x7e>
     f1a:	16 95       	lsr	r17
     f1c:	07 95       	ror	r16
     f1e:	f7 94       	ror	r15
     f20:	e7 94       	ror	r14
     f22:	8a 95       	dec	r24
     f24:	d2 f7       	brpl	.-12     	; 0xf1a <__clzsi2+0x76>
     f26:	f7 01       	movw	r30, r14
     f28:	e8 5f       	subi	r30, 0xF8	; 248
     f2a:	fe 4f       	sbci	r31, 0xFE	; 254
     f2c:	80 81       	ld	r24, Z
     f2e:	28 1b       	sub	r18, r24
     f30:	31 09       	sbc	r19, r1
     f32:	41 09       	sbc	r20, r1
     f34:	51 09       	sbc	r21, r1
     f36:	c9 01       	movw	r24, r18
     f38:	1f 91       	pop	r17
     f3a:	0f 91       	pop	r16
     f3c:	ff 90       	pop	r15
     f3e:	ef 90       	pop	r14
     f40:	08 95       	ret

00000f42 <__pack_f>:
     f42:	df 92       	push	r13
     f44:	ef 92       	push	r14
     f46:	ff 92       	push	r15
     f48:	0f 93       	push	r16
     f4a:	1f 93       	push	r17
     f4c:	fc 01       	movw	r30, r24
     f4e:	e4 80       	ldd	r14, Z+4	; 0x04
     f50:	f5 80       	ldd	r15, Z+5	; 0x05
     f52:	06 81       	ldd	r16, Z+6	; 0x06
     f54:	17 81       	ldd	r17, Z+7	; 0x07
     f56:	d1 80       	ldd	r13, Z+1	; 0x01
     f58:	80 81       	ld	r24, Z
     f5a:	82 30       	cpi	r24, 0x02	; 2
     f5c:	48 f4       	brcc	.+18     	; 0xf70 <__pack_f+0x2e>
     f5e:	80 e0       	ldi	r24, 0x00	; 0
     f60:	90 e0       	ldi	r25, 0x00	; 0
     f62:	a0 e1       	ldi	r26, 0x10	; 16
     f64:	b0 e0       	ldi	r27, 0x00	; 0
     f66:	e8 2a       	or	r14, r24
     f68:	f9 2a       	or	r15, r25
     f6a:	0a 2b       	or	r16, r26
     f6c:	1b 2b       	or	r17, r27
     f6e:	a5 c0       	rjmp	.+330    	; 0x10ba <__pack_f+0x178>
     f70:	84 30       	cpi	r24, 0x04	; 4
     f72:	09 f4       	brne	.+2      	; 0xf76 <__pack_f+0x34>
     f74:	9f c0       	rjmp	.+318    	; 0x10b4 <__pack_f+0x172>
     f76:	82 30       	cpi	r24, 0x02	; 2
     f78:	21 f4       	brne	.+8      	; 0xf82 <__pack_f+0x40>
     f7a:	ee 24       	eor	r14, r14
     f7c:	ff 24       	eor	r15, r15
     f7e:	87 01       	movw	r16, r14
     f80:	05 c0       	rjmp	.+10     	; 0xf8c <__pack_f+0x4a>
     f82:	e1 14       	cp	r14, r1
     f84:	f1 04       	cpc	r15, r1
     f86:	01 05       	cpc	r16, r1
     f88:	11 05       	cpc	r17, r1
     f8a:	19 f4       	brne	.+6      	; 0xf92 <__pack_f+0x50>
     f8c:	e0 e0       	ldi	r30, 0x00	; 0
     f8e:	f0 e0       	ldi	r31, 0x00	; 0
     f90:	96 c0       	rjmp	.+300    	; 0x10be <__pack_f+0x17c>
     f92:	62 81       	ldd	r22, Z+2	; 0x02
     f94:	73 81       	ldd	r23, Z+3	; 0x03
     f96:	9f ef       	ldi	r25, 0xFF	; 255
     f98:	62 38       	cpi	r22, 0x82	; 130
     f9a:	79 07       	cpc	r23, r25
     f9c:	0c f0       	brlt	.+2      	; 0xfa0 <__pack_f+0x5e>
     f9e:	5b c0       	rjmp	.+182    	; 0x1056 <__pack_f+0x114>
     fa0:	22 e8       	ldi	r18, 0x82	; 130
     fa2:	3f ef       	ldi	r19, 0xFF	; 255
     fa4:	26 1b       	sub	r18, r22
     fa6:	37 0b       	sbc	r19, r23
     fa8:	2a 31       	cpi	r18, 0x1A	; 26
     faa:	31 05       	cpc	r19, r1
     fac:	2c f0       	brlt	.+10     	; 0xfb8 <__pack_f+0x76>
     fae:	20 e0       	ldi	r18, 0x00	; 0
     fb0:	30 e0       	ldi	r19, 0x00	; 0
     fb2:	40 e0       	ldi	r20, 0x00	; 0
     fb4:	50 e0       	ldi	r21, 0x00	; 0
     fb6:	2a c0       	rjmp	.+84     	; 0x100c <__pack_f+0xca>
     fb8:	b8 01       	movw	r22, r16
     fba:	a7 01       	movw	r20, r14
     fbc:	02 2e       	mov	r0, r18
     fbe:	04 c0       	rjmp	.+8      	; 0xfc8 <__pack_f+0x86>
     fc0:	76 95       	lsr	r23
     fc2:	67 95       	ror	r22
     fc4:	57 95       	ror	r21
     fc6:	47 95       	ror	r20
     fc8:	0a 94       	dec	r0
     fca:	d2 f7       	brpl	.-12     	; 0xfc0 <__pack_f+0x7e>
     fcc:	81 e0       	ldi	r24, 0x01	; 1
     fce:	90 e0       	ldi	r25, 0x00	; 0
     fd0:	a0 e0       	ldi	r26, 0x00	; 0
     fd2:	b0 e0       	ldi	r27, 0x00	; 0
     fd4:	04 c0       	rjmp	.+8      	; 0xfde <__pack_f+0x9c>
     fd6:	88 0f       	add	r24, r24
     fd8:	99 1f       	adc	r25, r25
     fda:	aa 1f       	adc	r26, r26
     fdc:	bb 1f       	adc	r27, r27
     fde:	2a 95       	dec	r18
     fe0:	d2 f7       	brpl	.-12     	; 0xfd6 <__pack_f+0x94>
     fe2:	01 97       	sbiw	r24, 0x01	; 1
     fe4:	a1 09       	sbc	r26, r1
     fe6:	b1 09       	sbc	r27, r1
     fe8:	8e 21       	and	r24, r14
     fea:	9f 21       	and	r25, r15
     fec:	a0 23       	and	r26, r16
     fee:	b1 23       	and	r27, r17
     ff0:	00 97       	sbiw	r24, 0x00	; 0
     ff2:	a1 05       	cpc	r26, r1
     ff4:	b1 05       	cpc	r27, r1
     ff6:	21 f0       	breq	.+8      	; 0x1000 <__pack_f+0xbe>
     ff8:	81 e0       	ldi	r24, 0x01	; 1
     ffa:	90 e0       	ldi	r25, 0x00	; 0
     ffc:	a0 e0       	ldi	r26, 0x00	; 0
     ffe:	b0 e0       	ldi	r27, 0x00	; 0
    1000:	9a 01       	movw	r18, r20
    1002:	ab 01       	movw	r20, r22
    1004:	28 2b       	or	r18, r24
    1006:	39 2b       	or	r19, r25
    1008:	4a 2b       	or	r20, r26
    100a:	5b 2b       	or	r21, r27
    100c:	da 01       	movw	r26, r20
    100e:	c9 01       	movw	r24, r18
    1010:	8f 77       	andi	r24, 0x7F	; 127
    1012:	90 70       	andi	r25, 0x00	; 0
    1014:	a0 70       	andi	r26, 0x00	; 0
    1016:	b0 70       	andi	r27, 0x00	; 0
    1018:	80 34       	cpi	r24, 0x40	; 64
    101a:	91 05       	cpc	r25, r1
    101c:	a1 05       	cpc	r26, r1
    101e:	b1 05       	cpc	r27, r1
    1020:	39 f4       	brne	.+14     	; 0x1030 <__pack_f+0xee>
    1022:	27 ff       	sbrs	r18, 7
    1024:	09 c0       	rjmp	.+18     	; 0x1038 <__pack_f+0xf6>
    1026:	20 5c       	subi	r18, 0xC0	; 192
    1028:	3f 4f       	sbci	r19, 0xFF	; 255
    102a:	4f 4f       	sbci	r20, 0xFF	; 255
    102c:	5f 4f       	sbci	r21, 0xFF	; 255
    102e:	04 c0       	rjmp	.+8      	; 0x1038 <__pack_f+0xf6>
    1030:	21 5c       	subi	r18, 0xC1	; 193
    1032:	3f 4f       	sbci	r19, 0xFF	; 255
    1034:	4f 4f       	sbci	r20, 0xFF	; 255
    1036:	5f 4f       	sbci	r21, 0xFF	; 255
    1038:	e0 e0       	ldi	r30, 0x00	; 0
    103a:	f0 e0       	ldi	r31, 0x00	; 0
    103c:	20 30       	cpi	r18, 0x00	; 0
    103e:	a0 e0       	ldi	r26, 0x00	; 0
    1040:	3a 07       	cpc	r19, r26
    1042:	a0 e0       	ldi	r26, 0x00	; 0
    1044:	4a 07       	cpc	r20, r26
    1046:	a0 e4       	ldi	r26, 0x40	; 64
    1048:	5a 07       	cpc	r21, r26
    104a:	10 f0       	brcs	.+4      	; 0x1050 <__pack_f+0x10e>
    104c:	e1 e0       	ldi	r30, 0x01	; 1
    104e:	f0 e0       	ldi	r31, 0x00	; 0
    1050:	79 01       	movw	r14, r18
    1052:	8a 01       	movw	r16, r20
    1054:	27 c0       	rjmp	.+78     	; 0x10a4 <__pack_f+0x162>
    1056:	60 38       	cpi	r22, 0x80	; 128
    1058:	71 05       	cpc	r23, r1
    105a:	64 f5       	brge	.+88     	; 0x10b4 <__pack_f+0x172>
    105c:	fb 01       	movw	r30, r22
    105e:	e1 58       	subi	r30, 0x81	; 129
    1060:	ff 4f       	sbci	r31, 0xFF	; 255
    1062:	d8 01       	movw	r26, r16
    1064:	c7 01       	movw	r24, r14
    1066:	8f 77       	andi	r24, 0x7F	; 127
    1068:	90 70       	andi	r25, 0x00	; 0
    106a:	a0 70       	andi	r26, 0x00	; 0
    106c:	b0 70       	andi	r27, 0x00	; 0
    106e:	80 34       	cpi	r24, 0x40	; 64
    1070:	91 05       	cpc	r25, r1
    1072:	a1 05       	cpc	r26, r1
    1074:	b1 05       	cpc	r27, r1
    1076:	39 f4       	brne	.+14     	; 0x1086 <__pack_f+0x144>
    1078:	e7 fe       	sbrs	r14, 7
    107a:	0d c0       	rjmp	.+26     	; 0x1096 <__pack_f+0x154>
    107c:	80 e4       	ldi	r24, 0x40	; 64
    107e:	90 e0       	ldi	r25, 0x00	; 0
    1080:	a0 e0       	ldi	r26, 0x00	; 0
    1082:	b0 e0       	ldi	r27, 0x00	; 0
    1084:	04 c0       	rjmp	.+8      	; 0x108e <__pack_f+0x14c>
    1086:	8f e3       	ldi	r24, 0x3F	; 63
    1088:	90 e0       	ldi	r25, 0x00	; 0
    108a:	a0 e0       	ldi	r26, 0x00	; 0
    108c:	b0 e0       	ldi	r27, 0x00	; 0
    108e:	e8 0e       	add	r14, r24
    1090:	f9 1e       	adc	r15, r25
    1092:	0a 1f       	adc	r16, r26
    1094:	1b 1f       	adc	r17, r27
    1096:	17 ff       	sbrs	r17, 7
    1098:	05 c0       	rjmp	.+10     	; 0x10a4 <__pack_f+0x162>
    109a:	16 95       	lsr	r17
    109c:	07 95       	ror	r16
    109e:	f7 94       	ror	r15
    10a0:	e7 94       	ror	r14
    10a2:	31 96       	adiw	r30, 0x01	; 1
    10a4:	87 e0       	ldi	r24, 0x07	; 7
    10a6:	16 95       	lsr	r17
    10a8:	07 95       	ror	r16
    10aa:	f7 94       	ror	r15
    10ac:	e7 94       	ror	r14
    10ae:	8a 95       	dec	r24
    10b0:	d1 f7       	brne	.-12     	; 0x10a6 <__pack_f+0x164>
    10b2:	05 c0       	rjmp	.+10     	; 0x10be <__pack_f+0x17c>
    10b4:	ee 24       	eor	r14, r14
    10b6:	ff 24       	eor	r15, r15
    10b8:	87 01       	movw	r16, r14
    10ba:	ef ef       	ldi	r30, 0xFF	; 255
    10bc:	f0 e0       	ldi	r31, 0x00	; 0
    10be:	6e 2f       	mov	r22, r30
    10c0:	67 95       	ror	r22
    10c2:	66 27       	eor	r22, r22
    10c4:	67 95       	ror	r22
    10c6:	90 2f       	mov	r25, r16
    10c8:	9f 77       	andi	r25, 0x7F	; 127
    10ca:	d7 94       	ror	r13
    10cc:	dd 24       	eor	r13, r13
    10ce:	d7 94       	ror	r13
    10d0:	8e 2f       	mov	r24, r30
    10d2:	86 95       	lsr	r24
    10d4:	49 2f       	mov	r20, r25
    10d6:	46 2b       	or	r20, r22
    10d8:	58 2f       	mov	r21, r24
    10da:	5d 29       	or	r21, r13
    10dc:	b7 01       	movw	r22, r14
    10de:	ca 01       	movw	r24, r20
    10e0:	1f 91       	pop	r17
    10e2:	0f 91       	pop	r16
    10e4:	ff 90       	pop	r15
    10e6:	ef 90       	pop	r14
    10e8:	df 90       	pop	r13
    10ea:	08 95       	ret

000010ec <__unpack_f>:
    10ec:	fc 01       	movw	r30, r24
    10ee:	db 01       	movw	r26, r22
    10f0:	40 81       	ld	r20, Z
    10f2:	51 81       	ldd	r21, Z+1	; 0x01
    10f4:	22 81       	ldd	r18, Z+2	; 0x02
    10f6:	62 2f       	mov	r22, r18
    10f8:	6f 77       	andi	r22, 0x7F	; 127
    10fa:	70 e0       	ldi	r23, 0x00	; 0
    10fc:	22 1f       	adc	r18, r18
    10fe:	22 27       	eor	r18, r18
    1100:	22 1f       	adc	r18, r18
    1102:	93 81       	ldd	r25, Z+3	; 0x03
    1104:	89 2f       	mov	r24, r25
    1106:	88 0f       	add	r24, r24
    1108:	82 2b       	or	r24, r18
    110a:	28 2f       	mov	r18, r24
    110c:	30 e0       	ldi	r19, 0x00	; 0
    110e:	99 1f       	adc	r25, r25
    1110:	99 27       	eor	r25, r25
    1112:	99 1f       	adc	r25, r25
    1114:	11 96       	adiw	r26, 0x01	; 1
    1116:	9c 93       	st	X, r25
    1118:	11 97       	sbiw	r26, 0x01	; 1
    111a:	21 15       	cp	r18, r1
    111c:	31 05       	cpc	r19, r1
    111e:	a9 f5       	brne	.+106    	; 0x118a <__unpack_f+0x9e>
    1120:	41 15       	cp	r20, r1
    1122:	51 05       	cpc	r21, r1
    1124:	61 05       	cpc	r22, r1
    1126:	71 05       	cpc	r23, r1
    1128:	11 f4       	brne	.+4      	; 0x112e <__unpack_f+0x42>
    112a:	82 e0       	ldi	r24, 0x02	; 2
    112c:	37 c0       	rjmp	.+110    	; 0x119c <__unpack_f+0xb0>
    112e:	82 e8       	ldi	r24, 0x82	; 130
    1130:	9f ef       	ldi	r25, 0xFF	; 255
    1132:	13 96       	adiw	r26, 0x03	; 3
    1134:	9c 93       	st	X, r25
    1136:	8e 93       	st	-X, r24
    1138:	12 97       	sbiw	r26, 0x02	; 2
    113a:	9a 01       	movw	r18, r20
    113c:	ab 01       	movw	r20, r22
    113e:	67 e0       	ldi	r22, 0x07	; 7
    1140:	22 0f       	add	r18, r18
    1142:	33 1f       	adc	r19, r19
    1144:	44 1f       	adc	r20, r20
    1146:	55 1f       	adc	r21, r21
    1148:	6a 95       	dec	r22
    114a:	d1 f7       	brne	.-12     	; 0x1140 <__unpack_f+0x54>
    114c:	83 e0       	ldi	r24, 0x03	; 3
    114e:	8c 93       	st	X, r24
    1150:	0d c0       	rjmp	.+26     	; 0x116c <__unpack_f+0x80>
    1152:	22 0f       	add	r18, r18
    1154:	33 1f       	adc	r19, r19
    1156:	44 1f       	adc	r20, r20
    1158:	55 1f       	adc	r21, r21
    115a:	12 96       	adiw	r26, 0x02	; 2
    115c:	8d 91       	ld	r24, X+
    115e:	9c 91       	ld	r25, X
    1160:	13 97       	sbiw	r26, 0x03	; 3
    1162:	01 97       	sbiw	r24, 0x01	; 1
    1164:	13 96       	adiw	r26, 0x03	; 3
    1166:	9c 93       	st	X, r25
    1168:	8e 93       	st	-X, r24
    116a:	12 97       	sbiw	r26, 0x02	; 2
    116c:	20 30       	cpi	r18, 0x00	; 0
    116e:	80 e0       	ldi	r24, 0x00	; 0
    1170:	38 07       	cpc	r19, r24
    1172:	80 e0       	ldi	r24, 0x00	; 0
    1174:	48 07       	cpc	r20, r24
    1176:	80 e4       	ldi	r24, 0x40	; 64
    1178:	58 07       	cpc	r21, r24
    117a:	58 f3       	brcs	.-42     	; 0x1152 <__unpack_f+0x66>
    117c:	14 96       	adiw	r26, 0x04	; 4
    117e:	2d 93       	st	X+, r18
    1180:	3d 93       	st	X+, r19
    1182:	4d 93       	st	X+, r20
    1184:	5c 93       	st	X, r21
    1186:	17 97       	sbiw	r26, 0x07	; 7
    1188:	08 95       	ret
    118a:	2f 3f       	cpi	r18, 0xFF	; 255
    118c:	31 05       	cpc	r19, r1
    118e:	79 f4       	brne	.+30     	; 0x11ae <__unpack_f+0xc2>
    1190:	41 15       	cp	r20, r1
    1192:	51 05       	cpc	r21, r1
    1194:	61 05       	cpc	r22, r1
    1196:	71 05       	cpc	r23, r1
    1198:	19 f4       	brne	.+6      	; 0x11a0 <__unpack_f+0xb4>
    119a:	84 e0       	ldi	r24, 0x04	; 4
    119c:	8c 93       	st	X, r24
    119e:	08 95       	ret
    11a0:	64 ff       	sbrs	r22, 4
    11a2:	03 c0       	rjmp	.+6      	; 0x11aa <__unpack_f+0xbe>
    11a4:	81 e0       	ldi	r24, 0x01	; 1
    11a6:	8c 93       	st	X, r24
    11a8:	12 c0       	rjmp	.+36     	; 0x11ce <__unpack_f+0xe2>
    11aa:	1c 92       	st	X, r1
    11ac:	10 c0       	rjmp	.+32     	; 0x11ce <__unpack_f+0xe2>
    11ae:	2f 57       	subi	r18, 0x7F	; 127
    11b0:	30 40       	sbci	r19, 0x00	; 0
    11b2:	13 96       	adiw	r26, 0x03	; 3
    11b4:	3c 93       	st	X, r19
    11b6:	2e 93       	st	-X, r18
    11b8:	12 97       	sbiw	r26, 0x02	; 2
    11ba:	83 e0       	ldi	r24, 0x03	; 3
    11bc:	8c 93       	st	X, r24
    11be:	87 e0       	ldi	r24, 0x07	; 7
    11c0:	44 0f       	add	r20, r20
    11c2:	55 1f       	adc	r21, r21
    11c4:	66 1f       	adc	r22, r22
    11c6:	77 1f       	adc	r23, r23
    11c8:	8a 95       	dec	r24
    11ca:	d1 f7       	brne	.-12     	; 0x11c0 <__unpack_f+0xd4>
    11cc:	70 64       	ori	r23, 0x40	; 64
    11ce:	14 96       	adiw	r26, 0x04	; 4
    11d0:	4d 93       	st	X+, r20
    11d2:	5d 93       	st	X+, r21
    11d4:	6d 93       	st	X+, r22
    11d6:	7c 93       	st	X, r23
    11d8:	17 97       	sbiw	r26, 0x07	; 7
    11da:	08 95       	ret

000011dc <__fpcmp_parts_f>:
    11dc:	1f 93       	push	r17
    11de:	dc 01       	movw	r26, r24
    11e0:	fb 01       	movw	r30, r22
    11e2:	9c 91       	ld	r25, X
    11e4:	92 30       	cpi	r25, 0x02	; 2
    11e6:	08 f4       	brcc	.+2      	; 0x11ea <__fpcmp_parts_f+0xe>
    11e8:	47 c0       	rjmp	.+142    	; 0x1278 <__fpcmp_parts_f+0x9c>
    11ea:	80 81       	ld	r24, Z
    11ec:	82 30       	cpi	r24, 0x02	; 2
    11ee:	08 f4       	brcc	.+2      	; 0x11f2 <__fpcmp_parts_f+0x16>
    11f0:	43 c0       	rjmp	.+134    	; 0x1278 <__fpcmp_parts_f+0x9c>
    11f2:	94 30       	cpi	r25, 0x04	; 4
    11f4:	51 f4       	brne	.+20     	; 0x120a <__fpcmp_parts_f+0x2e>
    11f6:	11 96       	adiw	r26, 0x01	; 1
    11f8:	1c 91       	ld	r17, X
    11fa:	84 30       	cpi	r24, 0x04	; 4
    11fc:	99 f5       	brne	.+102    	; 0x1264 <__fpcmp_parts_f+0x88>
    11fe:	81 81       	ldd	r24, Z+1	; 0x01
    1200:	68 2f       	mov	r22, r24
    1202:	70 e0       	ldi	r23, 0x00	; 0
    1204:	61 1b       	sub	r22, r17
    1206:	71 09       	sbc	r23, r1
    1208:	3f c0       	rjmp	.+126    	; 0x1288 <__fpcmp_parts_f+0xac>
    120a:	84 30       	cpi	r24, 0x04	; 4
    120c:	21 f0       	breq	.+8      	; 0x1216 <__fpcmp_parts_f+0x3a>
    120e:	92 30       	cpi	r25, 0x02	; 2
    1210:	31 f4       	brne	.+12     	; 0x121e <__fpcmp_parts_f+0x42>
    1212:	82 30       	cpi	r24, 0x02	; 2
    1214:	b9 f1       	breq	.+110    	; 0x1284 <__fpcmp_parts_f+0xa8>
    1216:	81 81       	ldd	r24, Z+1	; 0x01
    1218:	88 23       	and	r24, r24
    121a:	89 f1       	breq	.+98     	; 0x127e <__fpcmp_parts_f+0xa2>
    121c:	2d c0       	rjmp	.+90     	; 0x1278 <__fpcmp_parts_f+0x9c>
    121e:	11 96       	adiw	r26, 0x01	; 1
    1220:	1c 91       	ld	r17, X
    1222:	11 97       	sbiw	r26, 0x01	; 1
    1224:	82 30       	cpi	r24, 0x02	; 2
    1226:	f1 f0       	breq	.+60     	; 0x1264 <__fpcmp_parts_f+0x88>
    1228:	81 81       	ldd	r24, Z+1	; 0x01
    122a:	18 17       	cp	r17, r24
    122c:	d9 f4       	brne	.+54     	; 0x1264 <__fpcmp_parts_f+0x88>
    122e:	12 96       	adiw	r26, 0x02	; 2
    1230:	2d 91       	ld	r18, X+
    1232:	3c 91       	ld	r19, X
    1234:	13 97       	sbiw	r26, 0x03	; 3
    1236:	82 81       	ldd	r24, Z+2	; 0x02
    1238:	93 81       	ldd	r25, Z+3	; 0x03
    123a:	82 17       	cp	r24, r18
    123c:	93 07       	cpc	r25, r19
    123e:	94 f0       	brlt	.+36     	; 0x1264 <__fpcmp_parts_f+0x88>
    1240:	28 17       	cp	r18, r24
    1242:	39 07       	cpc	r19, r25
    1244:	bc f0       	brlt	.+46     	; 0x1274 <__fpcmp_parts_f+0x98>
    1246:	14 96       	adiw	r26, 0x04	; 4
    1248:	8d 91       	ld	r24, X+
    124a:	9d 91       	ld	r25, X+
    124c:	0d 90       	ld	r0, X+
    124e:	bc 91       	ld	r27, X
    1250:	a0 2d       	mov	r26, r0
    1252:	24 81       	ldd	r18, Z+4	; 0x04
    1254:	35 81       	ldd	r19, Z+5	; 0x05
    1256:	46 81       	ldd	r20, Z+6	; 0x06
    1258:	57 81       	ldd	r21, Z+7	; 0x07
    125a:	28 17       	cp	r18, r24
    125c:	39 07       	cpc	r19, r25
    125e:	4a 07       	cpc	r20, r26
    1260:	5b 07       	cpc	r21, r27
    1262:	18 f4       	brcc	.+6      	; 0x126a <__fpcmp_parts_f+0x8e>
    1264:	11 23       	and	r17, r17
    1266:	41 f0       	breq	.+16     	; 0x1278 <__fpcmp_parts_f+0x9c>
    1268:	0a c0       	rjmp	.+20     	; 0x127e <__fpcmp_parts_f+0xa2>
    126a:	82 17       	cp	r24, r18
    126c:	93 07       	cpc	r25, r19
    126e:	a4 07       	cpc	r26, r20
    1270:	b5 07       	cpc	r27, r21
    1272:	40 f4       	brcc	.+16     	; 0x1284 <__fpcmp_parts_f+0xa8>
    1274:	11 23       	and	r17, r17
    1276:	19 f0       	breq	.+6      	; 0x127e <__fpcmp_parts_f+0xa2>
    1278:	61 e0       	ldi	r22, 0x01	; 1
    127a:	70 e0       	ldi	r23, 0x00	; 0
    127c:	05 c0       	rjmp	.+10     	; 0x1288 <__fpcmp_parts_f+0xac>
    127e:	6f ef       	ldi	r22, 0xFF	; 255
    1280:	7f ef       	ldi	r23, 0xFF	; 255
    1282:	02 c0       	rjmp	.+4      	; 0x1288 <__fpcmp_parts_f+0xac>
    1284:	60 e0       	ldi	r22, 0x00	; 0
    1286:	70 e0       	ldi	r23, 0x00	; 0
    1288:	cb 01       	movw	r24, r22
    128a:	1f 91       	pop	r17
    128c:	08 95       	ret

0000128e <__prologue_saves__>:
    128e:	2f 92       	push	r2
    1290:	3f 92       	push	r3
    1292:	4f 92       	push	r4
    1294:	5f 92       	push	r5
    1296:	6f 92       	push	r6
    1298:	7f 92       	push	r7
    129a:	8f 92       	push	r8
    129c:	9f 92       	push	r9
    129e:	af 92       	push	r10
    12a0:	bf 92       	push	r11
    12a2:	cf 92       	push	r12
    12a4:	df 92       	push	r13
    12a6:	ef 92       	push	r14
    12a8:	ff 92       	push	r15
    12aa:	0f 93       	push	r16
    12ac:	1f 93       	push	r17
    12ae:	cf 93       	push	r28
    12b0:	df 93       	push	r29
    12b2:	cd b7       	in	r28, 0x3d	; 61
    12b4:	de b7       	in	r29, 0x3e	; 62
    12b6:	ca 1b       	sub	r28, r26
    12b8:	db 0b       	sbc	r29, r27
    12ba:	0f b6       	in	r0, 0x3f	; 63
    12bc:	f8 94       	cli
    12be:	de bf       	out	0x3e, r29	; 62
    12c0:	0f be       	out	0x3f, r0	; 63
    12c2:	cd bf       	out	0x3d, r28	; 61
    12c4:	09 94       	ijmp

000012c6 <__epilogue_restores__>:
    12c6:	2a 88       	ldd	r2, Y+18	; 0x12
    12c8:	39 88       	ldd	r3, Y+17	; 0x11
    12ca:	48 88       	ldd	r4, Y+16	; 0x10
    12cc:	5f 84       	ldd	r5, Y+15	; 0x0f
    12ce:	6e 84       	ldd	r6, Y+14	; 0x0e
    12d0:	7d 84       	ldd	r7, Y+13	; 0x0d
    12d2:	8c 84       	ldd	r8, Y+12	; 0x0c
    12d4:	9b 84       	ldd	r9, Y+11	; 0x0b
    12d6:	aa 84       	ldd	r10, Y+10	; 0x0a
    12d8:	b9 84       	ldd	r11, Y+9	; 0x09
    12da:	c8 84       	ldd	r12, Y+8	; 0x08
    12dc:	df 80       	ldd	r13, Y+7	; 0x07
    12de:	ee 80       	ldd	r14, Y+6	; 0x06
    12e0:	fd 80       	ldd	r15, Y+5	; 0x05
    12e2:	0c 81       	ldd	r16, Y+4	; 0x04
    12e4:	1b 81       	ldd	r17, Y+3	; 0x03
    12e6:	aa 81       	ldd	r26, Y+2	; 0x02
    12e8:	b9 81       	ldd	r27, Y+1	; 0x01
    12ea:	ce 0f       	add	r28, r30
    12ec:	d1 1d       	adc	r29, r1
    12ee:	0f b6       	in	r0, 0x3f	; 63
    12f0:	f8 94       	cli
    12f2:	de bf       	out	0x3e, r29	; 62
    12f4:	0f be       	out	0x3f, r0	; 63
    12f6:	cd bf       	out	0x3d, r28	; 61
    12f8:	ed 01       	movw	r28, r26
    12fa:	08 95       	ret

000012fc <_exit>:
    12fc:	f8 94       	cli

000012fe <__stop_program>:
    12fe:	ff cf       	rjmp	.-2      	; 0x12fe <__stop_program>
