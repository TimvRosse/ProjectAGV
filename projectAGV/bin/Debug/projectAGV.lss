
bin\Debug\projectAGV.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000108  00800100  000012e4  00001398  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000012e4  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800208  00800208  000014a0  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  000014a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .debug_aranges 000001a0  00000000  00000000  000014a3  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000269  00000000  00000000  00001643  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000227b  00000000  00000000  000018ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001254  00000000  00000000  00003b27  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000013dd  00000000  00000000  00004d7b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000200  00000000  00000000  00006158  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003cf  00000000  00000000  00006358  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000956  00000000  00000000  00006727  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000707d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
      74:	12 e0       	ldi	r17, 0x02	; 2
      76:	a8 e0       	ldi	r26, 0x08	; 8
      78:	b2 e0       	ldi	r27, 0x02	; 2
      7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
      7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
      7e:	ae 30       	cpi	r26, 0x0E	; 14
      80:	b1 07       	cpc	r27, r17
      82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>

00000084 <__do_copy_data>:
      84:	12 e0       	ldi	r17, 0x02	; 2
      86:	a0 e0       	ldi	r26, 0x00	; 0
      88:	b1 e0       	ldi	r27, 0x01	; 1
      8a:	e4 ee       	ldi	r30, 0xE4	; 228
      8c:	f2 e1       	ldi	r31, 0x12	; 18
      8e:	02 c0       	rjmp	.+4      	; 0x94 <.do_copy_data_start>

00000090 <.do_copy_data_loop>:
      90:	05 90       	lpm	r0, Z+
      92:	0d 92       	st	X+, r0

00000094 <.do_copy_data_start>:
      94:	a8 30       	cpi	r26, 0x08	; 8
      96:	b1 07       	cpc	r27, r17
      98:	d9 f7       	brne	.-10     	; 0x90 <.do_copy_data_loop>
      9a:	0e 94 8b 00 	call	0x116	; 0x116 <main>
      9e:	0c 94 70 09 	jmp	0x12e0	; 0x12e0 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <bocht>:
#define inpPinUno PC2
#define inpPinBocht PC3
#define inpPinBochtL PC4

void bocht(int dir)
{
      a6:	df 93       	push	r29
      a8:	cf 93       	push	r28
      aa:	00 d0       	rcall	.+0      	; 0xac <bocht+0x6>
      ac:	cd b7       	in	r28, 0x3d	; 61
      ae:	de b7       	in	r29, 0x3e	; 62
      b0:	9a 83       	std	Y+2, r25	; 0x02
      b2:	89 83       	std	Y+1, r24	; 0x01
    //1) 10cm naar voren rijden
    stepperGoto(97, voorruit, stepMode);
      b4:	81 e6       	ldi	r24, 0x61	; 97
      b6:	90 e0       	ldi	r25, 0x00	; 0
      b8:	60 e0       	ldi	r22, 0x00	; 0
      ba:	70 e0       	ldi	r23, 0x00	; 0
      bc:	40 e1       	ldi	r20, 0x10	; 16
      be:	50 e0       	ldi	r21, 0x00	; 0
      c0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <stepperGoto>
    //2) bocht maken naar directie bocht(+- 90 graden)
    singleStepperGoTo(236,voorruit,stepMode, dir);
      c4:	29 81       	ldd	r18, Y+1	; 0x01
      c6:	3a 81       	ldd	r19, Y+2	; 0x02
      c8:	8c ee       	ldi	r24, 0xEC	; 236
      ca:	90 e0       	ldi	r25, 0x00	; 0
      cc:	60 e0       	ldi	r22, 0x00	; 0
      ce:	70 e0       	ldi	r23, 0x00	; 0
      d0:	40 e1       	ldi	r20, 0x10	; 16
      d2:	50 e0       	ldi	r21, 0x00	; 0
      d4:	0e 94 8f 01 	call	0x31e	; 0x31e <singleStepperGoTo>
    //3) afstand van middenstreep rijden
    stepperGoto(68, voorruit, stepMode);
      d8:	84 e4       	ldi	r24, 0x44	; 68
      da:	90 e0       	ldi	r25, 0x00	; 0
      dc:	60 e0       	ldi	r22, 0x00	; 0
      de:	70 e0       	ldi	r23, 0x00	; 0
      e0:	40 e1       	ldi	r20, 0x10	; 16
      e2:	50 e0       	ldi	r21, 0x00	; 0
      e4:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <stepperGoto>
    //4 bocht maken naar directie bocht(+- 90 graden)
    singleStepperGoTo(236,voorruit,stepMode, dir);
      e8:	29 81       	ldd	r18, Y+1	; 0x01
      ea:	3a 81       	ldd	r19, Y+2	; 0x02
      ec:	8c ee       	ldi	r24, 0xEC	; 236
      ee:	90 e0       	ldi	r25, 0x00	; 0
      f0:	60 e0       	ldi	r22, 0x00	; 0
      f2:	70 e0       	ldi	r23, 0x00	; 0
      f4:	40 e1       	ldi	r20, 0x10	; 16
      f6:	50 e0       	ldi	r21, 0x00	; 0
      f8:	0e 94 8f 01 	call	0x31e	; 0x31e <singleStepperGoTo>
    //5) laatste 10cm naar voren voor beginpositie
    stepperGoto(97, voorruit, stepMode);
      fc:	81 e6       	ldi	r24, 0x61	; 97
      fe:	90 e0       	ldi	r25, 0x00	; 0
     100:	60 e0       	ldi	r22, 0x00	; 0
     102:	70 e0       	ldi	r23, 0x00	; 0
     104:	40 e1       	ldi	r20, 0x10	; 16
     106:	50 e0       	ldi	r21, 0x00	; 0
     108:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <stepperGoto>
}
     10c:	0f 90       	pop	r0
     10e:	0f 90       	pop	r0
     110:	cf 91       	pop	r28
     112:	df 91       	pop	r29
     114:	08 95       	ret

00000116 <main>:

int main(void)
{
     116:	df 93       	push	r29
     118:	cf 93       	push	r28
     11a:	00 d0       	rcall	.+0      	; 0x11c <main+0x6>
     11c:	cd b7       	in	r28, 0x3d	; 61
     11e:	de b7       	in	r29, 0x3e	; 62

    PORTC |= _BV(inpPinUno);
     120:	a8 e2       	ldi	r26, 0x28	; 40
     122:	b0 e0       	ldi	r27, 0x00	; 0
     124:	e8 e2       	ldi	r30, 0x28	; 40
     126:	f0 e0       	ldi	r31, 0x00	; 0
     128:	80 81       	ld	r24, Z
     12a:	84 60       	ori	r24, 0x04	; 4
     12c:	8c 93       	st	X, r24
    PORTC |= _BV(inpPinBocht);
     12e:	a8 e2       	ldi	r26, 0x28	; 40
     130:	b0 e0       	ldi	r27, 0x00	; 0
     132:	e8 e2       	ldi	r30, 0x28	; 40
     134:	f0 e0       	ldi	r31, 0x00	; 0
     136:	80 81       	ld	r24, Z
     138:	88 60       	ori	r24, 0x08	; 8
     13a:	8c 93       	st	X, r24
    PORTC |= _BV(inpPinBochtL);
     13c:	a8 e2       	ldi	r26, 0x28	; 40
     13e:	b0 e0       	ldi	r27, 0x00	; 0
     140:	e8 e2       	ldi	r30, 0x28	; 40
     142:	f0 e0       	ldi	r31, 0x00	; 0
     144:	80 81       	ld	r24, Z
     146:	80 61       	ori	r24, 0x10	; 16
     148:	8c 93       	st	X, r24

    initStepper();
     14a:	0e 94 c7 00 	call	0x18e	; 0x18e <initStepper>
    stepperSetSpeed(1, stepMode);
     14e:	60 e0       	ldi	r22, 0x00	; 0
     150:	70 e0       	ldi	r23, 0x00	; 0
     152:	80 e8       	ldi	r24, 0x80	; 128
     154:	9f e3       	ldi	r25, 0x3F	; 63
     156:	40 e1       	ldi	r20, 0x10	; 16
     158:	50 e0       	ldi	r21, 0x00	; 0
     15a:	0e 94 8d 02 	call	0x51a	; 0x51a <stepperSetSpeed>

    while(1)
    {

        if(bit_is_clear(PINC, inpPinUno))//bij signaal rijden
     15e:	e6 e2       	ldi	r30, 0x26	; 38
     160:	f0 e0       	ldi	r31, 0x00	; 0
     162:	80 81       	ld	r24, Z
     164:	88 2f       	mov	r24, r24
     166:	90 e0       	ldi	r25, 0x00	; 0
     168:	84 70       	andi	r24, 0x04	; 4
     16a:	90 70       	andi	r25, 0x00	; 0
     16c:	00 97       	sbiw	r24, 0x00	; 0
     16e:	41 f4       	brne	.+16     	; 0x180 <main+0x6a>
        {
            stepperGoto(20, voorruit, stepMode);
     170:	84 e1       	ldi	r24, 0x14	; 20
     172:	90 e0       	ldi	r25, 0x00	; 0
     174:	60 e0       	ldi	r22, 0x00	; 0
     176:	70 e0       	ldi	r23, 0x00	; 0
     178:	40 e1       	ldi	r20, 0x10	; 16
     17a:	50 e0       	ldi	r21, 0x00	; 0
     17c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <stepperGoto>
        }

        if(bit_is_clear(PINC, inpPinBocht))
     180:	e6 e2       	ldi	r30, 0x26	; 38
     182:	f0 e0       	ldi	r31, 0x00	; 0
     184:	80 81       	ld	r24, Z
        {
            //bocht(rechter);
        }
        if(bit_is_clear(PINC, inpPinBochtL));
     186:	e6 e2       	ldi	r30, 0x26	; 38
     188:	f0 e0       	ldi	r31, 0x00	; 0
     18a:	80 81       	ld	r24, Z
     18c:	e8 cf       	rjmp	.-48     	; 0x15e <main+0x48>

0000018e <initStepper>:

float snelheid;
int posNu;

void initStepper(void)
{
     18e:	df 93       	push	r29
     190:	cf 93       	push	r28
     192:	cd b7       	in	r28, 0x3d	; 61
     194:	de b7       	in	r29, 0x3e	; 62
    stepperLoc |= _BV(stepperPin1);
     196:	aa e2       	ldi	r26, 0x2A	; 42
     198:	b0 e0       	ldi	r27, 0x00	; 0
     19a:	ea e2       	ldi	r30, 0x2A	; 42
     19c:	f0 e0       	ldi	r31, 0x00	; 0
     19e:	80 81       	ld	r24, Z
     1a0:	88 60       	ori	r24, 0x08	; 8
     1a2:	8c 93       	st	X, r24
    stepperLoc |= _BV(stepperDir1);
     1a4:	aa e2       	ldi	r26, 0x2A	; 42
     1a6:	b0 e0       	ldi	r27, 0x00	; 0
     1a8:	ea e2       	ldi	r30, 0x2A	; 42
     1aa:	f0 e0       	ldi	r31, 0x00	; 0
     1ac:	80 81       	ld	r24, Z
     1ae:	84 60       	ori	r24, 0x04	; 4
     1b0:	8c 93       	st	X, r24
    stepperLoc2 |= _BV(stepperPin2);
     1b2:	a4 e2       	ldi	r26, 0x24	; 36
     1b4:	b0 e0       	ldi	r27, 0x00	; 0
     1b6:	e4 e2       	ldi	r30, 0x24	; 36
     1b8:	f0 e0       	ldi	r31, 0x00	; 0
     1ba:	80 81       	ld	r24, Z
     1bc:	81 60       	ori	r24, 0x01	; 1
     1be:	8c 93       	st	X, r24
    stepperLoc |= _BV(stepperDir2);
     1c0:	aa e2       	ldi	r26, 0x2A	; 42
     1c2:	b0 e0       	ldi	r27, 0x00	; 0
     1c4:	ea e2       	ldi	r30, 0x2A	; 42
     1c6:	f0 e0       	ldi	r31, 0x00	; 0
     1c8:	80 81       	ld	r24, Z
     1ca:	80 68       	ori	r24, 0x80	; 128
     1cc:	8c 93       	st	X, r24

    TCCR1A = 0;
     1ce:	e0 e8       	ldi	r30, 0x80	; 128
     1d0:	f0 e0       	ldi	r31, 0x00	; 0
     1d2:	10 82       	st	Z, r1
    TCCR1B = (0 << CS12) | (0 << CS11) | (1 << CS10);
     1d4:	e1 e8       	ldi	r30, 0x81	; 129
     1d6:	f0 e0       	ldi	r31, 0x00	; 0
     1d8:	81 e0       	ldi	r24, 0x01	; 1
     1da:	80 83       	st	Z, r24

    sei();
     1dc:	78 94       	sei

}
     1de:	cf 91       	pop	r28
     1e0:	df 91       	pop	r29
     1e2:	08 95       	ret

000001e4 <stepperGoto>:

void stepperGoto(int steps, int dir, int mode) //aantal steps, directie, stepMode
{
     1e4:	0f 93       	push	r16
     1e6:	1f 93       	push	r17
     1e8:	df 93       	push	r29
     1ea:	cf 93       	push	r28
     1ec:	cd b7       	in	r28, 0x3d	; 61
     1ee:	de b7       	in	r29, 0x3e	; 62
     1f0:	2c 97       	sbiw	r28, 0x0c	; 12
     1f2:	0f b6       	in	r0, 0x3f	; 63
     1f4:	f8 94       	cli
     1f6:	de bf       	out	0x3e, r29	; 62
     1f8:	0f be       	out	0x3f, r0	; 63
     1fa:	cd bf       	out	0x3d, r28	; 61
     1fc:	98 87       	std	Y+8, r25	; 0x08
     1fe:	8f 83       	std	Y+7, r24	; 0x07
     200:	7a 87       	std	Y+10, r23	; 0x0a
     202:	69 87       	std	Y+9, r22	; 0x09
     204:	5c 87       	std	Y+12, r21	; 0x0c
     206:	4b 87       	std	Y+11, r20	; 0x0b

    if(dir)
     208:	89 85       	ldd	r24, Y+9	; 0x09
     20a:	9a 85       	ldd	r25, Y+10	; 0x0a
     20c:	00 97       	sbiw	r24, 0x00	; 0
     20e:	79 f0       	breq	.+30     	; 0x22e <stepperGoto+0x4a>
    {
        stepperPort |= (1 << stepperDir1);
     210:	ab e2       	ldi	r26, 0x2B	; 43
     212:	b0 e0       	ldi	r27, 0x00	; 0
     214:	eb e2       	ldi	r30, 0x2B	; 43
     216:	f0 e0       	ldi	r31, 0x00	; 0
     218:	80 81       	ld	r24, Z
     21a:	84 60       	ori	r24, 0x04	; 4
     21c:	8c 93       	st	X, r24
        stepperPort &= ~(1 << stepperDir2);
     21e:	ab e2       	ldi	r26, 0x2B	; 43
     220:	b0 e0       	ldi	r27, 0x00	; 0
     222:	eb e2       	ldi	r30, 0x2B	; 43
     224:	f0 e0       	ldi	r31, 0x00	; 0
     226:	80 81       	ld	r24, Z
     228:	8f 77       	andi	r24, 0x7F	; 127
     22a:	8c 93       	st	X, r24
     22c:	0e c0       	rjmp	.+28     	; 0x24a <stepperGoto+0x66>
    }
    else
    {
        stepperPort &= ~(1 << stepperDir1);
     22e:	ab e2       	ldi	r26, 0x2B	; 43
     230:	b0 e0       	ldi	r27, 0x00	; 0
     232:	eb e2       	ldi	r30, 0x2B	; 43
     234:	f0 e0       	ldi	r31, 0x00	; 0
     236:	80 81       	ld	r24, Z
     238:	8b 7f       	andi	r24, 0xFB	; 251
     23a:	8c 93       	st	X, r24
        stepperPort |= (1 << stepperDir2);
     23c:	ab e2       	ldi	r26, 0x2B	; 43
     23e:	b0 e0       	ldi	r27, 0x00	; 0
     240:	eb e2       	ldi	r30, 0x2B	; 43
     242:	f0 e0       	ldi	r31, 0x00	; 0
     244:	80 81       	ld	r24, Z
     246:	80 68       	ori	r24, 0x80	; 128
     248:	8c 93       	st	X, r24
    }

    int stepsTogo = steps *2 *mode;
     24a:	8f 81       	ldd	r24, Y+7	; 0x07
     24c:	98 85       	ldd	r25, Y+8	; 0x08
     24e:	9c 01       	movw	r18, r24
     250:	22 0f       	add	r18, r18
     252:	33 1f       	adc	r19, r19
     254:	8b 85       	ldd	r24, Y+11	; 0x0b
     256:	9c 85       	ldd	r25, Y+12	; 0x0c
     258:	ac 01       	movw	r20, r24
     25a:	24 9f       	mul	r18, r20
     25c:	c0 01       	movw	r24, r0
     25e:	25 9f       	mul	r18, r21
     260:	90 0d       	add	r25, r0
     262:	34 9f       	mul	r19, r20
     264:	90 0d       	add	r25, r0
     266:	11 24       	eor	r1, r1
     268:	9e 83       	std	Y+6, r25	; 0x06
     26a:	8d 83       	std	Y+5, r24	; 0x05
    int wachten;

    for(int i = 0; i < stepsTogo; i++)
     26c:	1a 82       	std	Y+2, r1	; 0x02
     26e:	19 82       	std	Y+1, r1	; 0x01
     270:	44 c0       	rjmp	.+136    	; 0x2fa <stepperGoto+0x116>
    {
        while(wachten != 1)
        {
           if(TIFR1 & (1 << OCF1A))
     272:	e6 e3       	ldi	r30, 0x36	; 54
     274:	f0 e0       	ldi	r31, 0x00	; 0
     276:	80 81       	ld	r24, Z
     278:	88 2f       	mov	r24, r24
     27a:	90 e0       	ldi	r25, 0x00	; 0
     27c:	82 70       	andi	r24, 0x02	; 2
     27e:	90 70       	andi	r25, 0x00	; 0
     280:	00 97       	sbiw	r24, 0x00	; 0
     282:	79 f1       	breq	.+94     	; 0x2e2 <stepperGoto+0xfe>
            {
                stepperPort ^= (1 << stepperPin1);
     284:	ab e2       	ldi	r26, 0x2B	; 43
     286:	b0 e0       	ldi	r27, 0x00	; 0
     288:	eb e2       	ldi	r30, 0x2B	; 43
     28a:	f0 e0       	ldi	r31, 0x00	; 0
     28c:	90 81       	ld	r25, Z
     28e:	88 e0       	ldi	r24, 0x08	; 8
     290:	89 27       	eor	r24, r25
     292:	8c 93       	st	X, r24
                stepperPort2 ^= (1 << stepperPin2);
     294:	a5 e2       	ldi	r26, 0x25	; 37
     296:	b0 e0       	ldi	r27, 0x00	; 0
     298:	e5 e2       	ldi	r30, 0x25	; 37
     29a:	f0 e0       	ldi	r31, 0x00	; 0
     29c:	90 81       	ld	r25, Z
     29e:	81 e0       	ldi	r24, 0x01	; 1
     2a0:	89 27       	eor	r24, r25
     2a2:	8c 93       	st	X, r24
                TCNT1 = 0;
     2a4:	e4 e8       	ldi	r30, 0x84	; 132
     2a6:	f0 e0       	ldi	r31, 0x00	; 0
     2a8:	11 82       	std	Z+1, r1	; 0x01
     2aa:	10 82       	st	Z, r1
                OCR1A = snelheid;
     2ac:	08 e8       	ldi	r16, 0x88	; 136
     2ae:	10 e0       	ldi	r17, 0x00	; 0
     2b0:	80 91 08 02 	lds	r24, 0x0208
     2b4:	90 91 09 02 	lds	r25, 0x0209
     2b8:	a0 91 0a 02 	lds	r26, 0x020A
     2bc:	b0 91 0b 02 	lds	r27, 0x020B
     2c0:	bc 01       	movw	r22, r24
     2c2:	cd 01       	movw	r24, r26
     2c4:	0e 94 e6 02 	call	0x5cc	; 0x5cc <__fixunssfsi>
     2c8:	dc 01       	movw	r26, r24
     2ca:	cb 01       	movw	r24, r22
     2cc:	f8 01       	movw	r30, r16
     2ce:	91 83       	std	Z+1, r25	; 0x01
     2d0:	80 83       	st	Z, r24
                wachten = 1;
     2d2:	81 e0       	ldi	r24, 0x01	; 1
     2d4:	90 e0       	ldi	r25, 0x00	; 0
     2d6:	9c 83       	std	Y+4, r25	; 0x04
     2d8:	8b 83       	std	Y+3, r24	; 0x03
                TIFR1 = (1 << OCF1A);
     2da:	e6 e3       	ldi	r30, 0x36	; 54
     2dc:	f0 e0       	ldi	r31, 0x00	; 0
     2de:	82 e0       	ldi	r24, 0x02	; 2
     2e0:	80 83       	st	Z, r24
    int stepsTogo = steps *2 *mode;
    int wachten;

    for(int i = 0; i < stepsTogo; i++)
    {
        while(wachten != 1)
     2e2:	8b 81       	ldd	r24, Y+3	; 0x03
     2e4:	9c 81       	ldd	r25, Y+4	; 0x04
     2e6:	81 30       	cpi	r24, 0x01	; 1
     2e8:	91 05       	cpc	r25, r1
     2ea:	19 f6       	brne	.-122    	; 0x272 <stepperGoto+0x8e>

            }


        }
        wachten = 0;
     2ec:	1c 82       	std	Y+4, r1	; 0x04
     2ee:	1b 82       	std	Y+3, r1	; 0x03
    }

    int stepsTogo = steps *2 *mode;
    int wachten;

    for(int i = 0; i < stepsTogo; i++)
     2f0:	89 81       	ldd	r24, Y+1	; 0x01
     2f2:	9a 81       	ldd	r25, Y+2	; 0x02
     2f4:	01 96       	adiw	r24, 0x01	; 1
     2f6:	9a 83       	std	Y+2, r25	; 0x02
     2f8:	89 83       	std	Y+1, r24	; 0x01
     2fa:	29 81       	ldd	r18, Y+1	; 0x01
     2fc:	3a 81       	ldd	r19, Y+2	; 0x02
     2fe:	8d 81       	ldd	r24, Y+5	; 0x05
     300:	9e 81       	ldd	r25, Y+6	; 0x06
     302:	28 17       	cp	r18, r24
     304:	39 07       	cpc	r19, r25
     306:	6c f3       	brlt	.-38     	; 0x2e2 <stepperGoto+0xfe>
        }
        wachten = 0;


    }
}
     308:	2c 96       	adiw	r28, 0x0c	; 12
     30a:	0f b6       	in	r0, 0x3f	; 63
     30c:	f8 94       	cli
     30e:	de bf       	out	0x3e, r29	; 62
     310:	0f be       	out	0x3f, r0	; 63
     312:	cd bf       	out	0x3d, r28	; 61
     314:	cf 91       	pop	r28
     316:	df 91       	pop	r29
     318:	1f 91       	pop	r17
     31a:	0f 91       	pop	r16
     31c:	08 95       	ret

0000031e <singleStepperGoTo>:

void singleStepperGoTo(int steps, int dir, int mode, int stepper)
{
     31e:	0f 93       	push	r16
     320:	1f 93       	push	r17
     322:	df 93       	push	r29
     324:	cf 93       	push	r28
     326:	cd b7       	in	r28, 0x3d	; 61
     328:	de b7       	in	r29, 0x3e	; 62
     32a:	64 97       	sbiw	r28, 0x14	; 20
     32c:	0f b6       	in	r0, 0x3f	; 63
     32e:	f8 94       	cli
     330:	de bf       	out	0x3e, r29	; 62
     332:	0f be       	out	0x3f, r0	; 63
     334:	cd bf       	out	0x3d, r28	; 61
     336:	9e 87       	std	Y+14, r25	; 0x0e
     338:	8d 87       	std	Y+13, r24	; 0x0d
     33a:	78 8b       	std	Y+16, r23	; 0x10
     33c:	6f 87       	std	Y+15, r22	; 0x0f
     33e:	5a 8b       	std	Y+18, r21	; 0x12
     340:	49 8b       	std	Y+17, r20	; 0x11
     342:	3c 8b       	std	Y+20, r19	; 0x14
     344:	2b 8b       	std	Y+19, r18	; 0x13
    if(stepper = 1) //stepper 1 (links?)
     346:	81 e0       	ldi	r24, 0x01	; 1
     348:	90 e0       	ldi	r25, 0x00	; 0
     34a:	9c 8b       	std	Y+20, r25	; 0x14
     34c:	8b 8b       	std	Y+19, r24	; 0x13
    {
        if(dir)
     34e:	8f 85       	ldd	r24, Y+15	; 0x0f
     350:	98 89       	ldd	r25, Y+16	; 0x10
     352:	00 97       	sbiw	r24, 0x00	; 0
     354:	41 f0       	breq	.+16     	; 0x366 <singleStepperGoTo+0x48>
        {
            stepperPort |= (1 << stepperDir1);
     356:	ab e2       	ldi	r26, 0x2B	; 43
     358:	b0 e0       	ldi	r27, 0x00	; 0
     35a:	eb e2       	ldi	r30, 0x2B	; 43
     35c:	f0 e0       	ldi	r31, 0x00	; 0
     35e:	80 81       	ld	r24, Z
     360:	84 60       	ori	r24, 0x04	; 4
     362:	8c 93       	st	X, r24
     364:	07 c0       	rjmp	.+14     	; 0x374 <singleStepperGoTo+0x56>
        }
        else
        {
            stepperPort &= ~(1 << stepperDir1);
     366:	ab e2       	ldi	r26, 0x2B	; 43
     368:	b0 e0       	ldi	r27, 0x00	; 0
     36a:	eb e2       	ldi	r30, 0x2B	; 43
     36c:	f0 e0       	ldi	r31, 0x00	; 0
     36e:	80 81       	ld	r24, Z
     370:	8b 7f       	andi	r24, 0xFB	; 251
     372:	8c 93       	st	X, r24
        }

        int stepsTogo = steps *2 *mode;
     374:	8d 85       	ldd	r24, Y+13	; 0x0d
     376:	9e 85       	ldd	r25, Y+14	; 0x0e
     378:	9c 01       	movw	r18, r24
     37a:	22 0f       	add	r18, r18
     37c:	33 1f       	adc	r19, r19
     37e:	89 89       	ldd	r24, Y+17	; 0x11
     380:	9a 89       	ldd	r25, Y+18	; 0x12
     382:	ac 01       	movw	r20, r24
     384:	24 9f       	mul	r18, r20
     386:	c0 01       	movw	r24, r0
     388:	25 9f       	mul	r18, r21
     38a:	90 0d       	add	r25, r0
     38c:	34 9f       	mul	r19, r20
     38e:	90 0d       	add	r25, r0
     390:	11 24       	eor	r1, r1
     392:	9c 87       	std	Y+12, r25	; 0x0c
     394:	8b 87       	std	Y+11, r24	; 0x0b
        int wachten;

        for(int i = 0; i < stepsTogo; i++)
     396:	18 86       	std	Y+8, r1	; 0x08
     398:	1f 82       	std	Y+7, r1	; 0x07
     39a:	3c c0       	rjmp	.+120    	; 0x414 <singleStepperGoTo+0xf6>
        {
            while(wachten != 1)
            {
                if(TIFR1 & (1 << OCF1A))
     39c:	e6 e3       	ldi	r30, 0x36	; 54
     39e:	f0 e0       	ldi	r31, 0x00	; 0
     3a0:	80 81       	ld	r24, Z
     3a2:	88 2f       	mov	r24, r24
     3a4:	90 e0       	ldi	r25, 0x00	; 0
     3a6:	82 70       	andi	r24, 0x02	; 2
     3a8:	90 70       	andi	r25, 0x00	; 0
     3aa:	00 97       	sbiw	r24, 0x00	; 0
     3ac:	39 f1       	breq	.+78     	; 0x3fc <singleStepperGoTo+0xde>
                {
                    stepperPort ^= (1 << stepperPin1);
     3ae:	ab e2       	ldi	r26, 0x2B	; 43
     3b0:	b0 e0       	ldi	r27, 0x00	; 0
     3b2:	eb e2       	ldi	r30, 0x2B	; 43
     3b4:	f0 e0       	ldi	r31, 0x00	; 0
     3b6:	90 81       	ld	r25, Z
     3b8:	88 e0       	ldi	r24, 0x08	; 8
     3ba:	89 27       	eor	r24, r25
     3bc:	8c 93       	st	X, r24
                    TCNT1 = 0;
     3be:	e4 e8       	ldi	r30, 0x84	; 132
     3c0:	f0 e0       	ldi	r31, 0x00	; 0
     3c2:	11 82       	std	Z+1, r1	; 0x01
     3c4:	10 82       	st	Z, r1
                    OCR1A = snelheid;
     3c6:	08 e8       	ldi	r16, 0x88	; 136
     3c8:	10 e0       	ldi	r17, 0x00	; 0
     3ca:	80 91 08 02 	lds	r24, 0x0208
     3ce:	90 91 09 02 	lds	r25, 0x0209
     3d2:	a0 91 0a 02 	lds	r26, 0x020A
     3d6:	b0 91 0b 02 	lds	r27, 0x020B
     3da:	bc 01       	movw	r22, r24
     3dc:	cd 01       	movw	r24, r26
     3de:	0e 94 e6 02 	call	0x5cc	; 0x5cc <__fixunssfsi>
     3e2:	dc 01       	movw	r26, r24
     3e4:	cb 01       	movw	r24, r22
     3e6:	f8 01       	movw	r30, r16
     3e8:	91 83       	std	Z+1, r25	; 0x01
     3ea:	80 83       	st	Z, r24
                    wachten = 1;
     3ec:	81 e0       	ldi	r24, 0x01	; 1
     3ee:	90 e0       	ldi	r25, 0x00	; 0
     3f0:	9a 87       	std	Y+10, r25	; 0x0a
     3f2:	89 87       	std	Y+9, r24	; 0x09
                    TIFR1 = (1 << OCF1A);
     3f4:	e6 e3       	ldi	r30, 0x36	; 54
     3f6:	f0 e0       	ldi	r31, 0x00	; 0
     3f8:	82 e0       	ldi	r24, 0x02	; 2
     3fa:	80 83       	st	Z, r24
        int stepsTogo = steps *2 *mode;
        int wachten;

        for(int i = 0; i < stepsTogo; i++)
        {
            while(wachten != 1)
     3fc:	89 85       	ldd	r24, Y+9	; 0x09
     3fe:	9a 85       	ldd	r25, Y+10	; 0x0a
     400:	81 30       	cpi	r24, 0x01	; 1
     402:	91 05       	cpc	r25, r1
     404:	59 f6       	brne	.-106    	; 0x39c <singleStepperGoTo+0x7e>

                }


            }
            wachten = 0;
     406:	1a 86       	std	Y+10, r1	; 0x0a
     408:	19 86       	std	Y+9, r1	; 0x09
        }

        int stepsTogo = steps *2 *mode;
        int wachten;

        for(int i = 0; i < stepsTogo; i++)
     40a:	8f 81       	ldd	r24, Y+7	; 0x07
     40c:	98 85       	ldd	r25, Y+8	; 0x08
     40e:	01 96       	adiw	r24, 0x01	; 1
     410:	98 87       	std	Y+8, r25	; 0x08
     412:	8f 83       	std	Y+7, r24	; 0x07
     414:	2f 81       	ldd	r18, Y+7	; 0x07
     416:	38 85       	ldd	r19, Y+8	; 0x08
     418:	8b 85       	ldd	r24, Y+11	; 0x0b
     41a:	9c 85       	ldd	r25, Y+12	; 0x0c
     41c:	28 17       	cp	r18, r24
     41e:	39 07       	cpc	r19, r25
     420:	6c f3       	brlt	.-38     	; 0x3fc <singleStepperGoTo+0xde>


        }
    }

    if(stepper = 0) //stepper 2 (rechts?)
     422:	1c 8a       	std	Y+20, r1	; 0x14
     424:	1b 8a       	std	Y+19, r1	; 0x13
     426:	8b 89       	ldd	r24, Y+19	; 0x13
     428:	9c 89       	ldd	r25, Y+20	; 0x14
     42a:	00 97       	sbiw	r24, 0x00	; 0
     42c:	09 f4       	brne	.+2      	; 0x430 <singleStepperGoTo+0x112>
     42e:	6a c0       	rjmp	.+212    	; 0x504 <singleStepperGoTo+0x1e6>
    {
        if(dir)
     430:	8f 85       	ldd	r24, Y+15	; 0x0f
     432:	98 89       	ldd	r25, Y+16	; 0x10
     434:	00 97       	sbiw	r24, 0x00	; 0
     436:	41 f0       	breq	.+16     	; 0x448 <singleStepperGoTo+0x12a>
        {
            stepperPort &= ~(1 << stepperDir2);
     438:	ab e2       	ldi	r26, 0x2B	; 43
     43a:	b0 e0       	ldi	r27, 0x00	; 0
     43c:	eb e2       	ldi	r30, 0x2B	; 43
     43e:	f0 e0       	ldi	r31, 0x00	; 0
     440:	80 81       	ld	r24, Z
     442:	8f 77       	andi	r24, 0x7F	; 127
     444:	8c 93       	st	X, r24
     446:	07 c0       	rjmp	.+14     	; 0x456 <singleStepperGoTo+0x138>
        }
        else
        {
            stepperPort |= (1 << stepperDir2);
     448:	ab e2       	ldi	r26, 0x2B	; 43
     44a:	b0 e0       	ldi	r27, 0x00	; 0
     44c:	eb e2       	ldi	r30, 0x2B	; 43
     44e:	f0 e0       	ldi	r31, 0x00	; 0
     450:	80 81       	ld	r24, Z
     452:	80 68       	ori	r24, 0x80	; 128
     454:	8c 93       	st	X, r24
        }

        int stepsTogo = steps *2 *mode;
     456:	8d 85       	ldd	r24, Y+13	; 0x0d
     458:	9e 85       	ldd	r25, Y+14	; 0x0e
     45a:	9c 01       	movw	r18, r24
     45c:	22 0f       	add	r18, r18
     45e:	33 1f       	adc	r19, r19
     460:	89 89       	ldd	r24, Y+17	; 0x11
     462:	9a 89       	ldd	r25, Y+18	; 0x12
     464:	ac 01       	movw	r20, r24
     466:	24 9f       	mul	r18, r20
     468:	c0 01       	movw	r24, r0
     46a:	25 9f       	mul	r18, r21
     46c:	90 0d       	add	r25, r0
     46e:	34 9f       	mul	r19, r20
     470:	90 0d       	add	r25, r0
     472:	11 24       	eor	r1, r1
     474:	9e 83       	std	Y+6, r25	; 0x06
     476:	8d 83       	std	Y+5, r24	; 0x05
        int wachten;

        for(int i = 0; i < stepsTogo; i++)
     478:	1a 82       	std	Y+2, r1	; 0x02
     47a:	19 82       	std	Y+1, r1	; 0x01
     47c:	3c c0       	rjmp	.+120    	; 0x4f6 <singleStepperGoTo+0x1d8>
        {
            while(wachten != 1)
            {
                if(TIFR1 & (1 << OCF1A))
     47e:	e6 e3       	ldi	r30, 0x36	; 54
     480:	f0 e0       	ldi	r31, 0x00	; 0
     482:	80 81       	ld	r24, Z
     484:	88 2f       	mov	r24, r24
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	82 70       	andi	r24, 0x02	; 2
     48a:	90 70       	andi	r25, 0x00	; 0
     48c:	00 97       	sbiw	r24, 0x00	; 0
     48e:	39 f1       	breq	.+78     	; 0x4de <singleStepperGoTo+0x1c0>
                {
                    stepperPort2 ^= (1 << stepperPin2);
     490:	a5 e2       	ldi	r26, 0x25	; 37
     492:	b0 e0       	ldi	r27, 0x00	; 0
     494:	e5 e2       	ldi	r30, 0x25	; 37
     496:	f0 e0       	ldi	r31, 0x00	; 0
     498:	90 81       	ld	r25, Z
     49a:	81 e0       	ldi	r24, 0x01	; 1
     49c:	89 27       	eor	r24, r25
     49e:	8c 93       	st	X, r24
                    TCNT1 = 0;
     4a0:	e4 e8       	ldi	r30, 0x84	; 132
     4a2:	f0 e0       	ldi	r31, 0x00	; 0
     4a4:	11 82       	std	Z+1, r1	; 0x01
     4a6:	10 82       	st	Z, r1
                    OCR1A = snelheid;
     4a8:	08 e8       	ldi	r16, 0x88	; 136
     4aa:	10 e0       	ldi	r17, 0x00	; 0
     4ac:	80 91 08 02 	lds	r24, 0x0208
     4b0:	90 91 09 02 	lds	r25, 0x0209
     4b4:	a0 91 0a 02 	lds	r26, 0x020A
     4b8:	b0 91 0b 02 	lds	r27, 0x020B
     4bc:	bc 01       	movw	r22, r24
     4be:	cd 01       	movw	r24, r26
     4c0:	0e 94 e6 02 	call	0x5cc	; 0x5cc <__fixunssfsi>
     4c4:	dc 01       	movw	r26, r24
     4c6:	cb 01       	movw	r24, r22
     4c8:	f8 01       	movw	r30, r16
     4ca:	91 83       	std	Z+1, r25	; 0x01
     4cc:	80 83       	st	Z, r24
                    wachten = 1;
     4ce:	81 e0       	ldi	r24, 0x01	; 1
     4d0:	90 e0       	ldi	r25, 0x00	; 0
     4d2:	9c 83       	std	Y+4, r25	; 0x04
     4d4:	8b 83       	std	Y+3, r24	; 0x03
                    TIFR1 = (1 << OCF1A);
     4d6:	e6 e3       	ldi	r30, 0x36	; 54
     4d8:	f0 e0       	ldi	r31, 0x00	; 0
     4da:	82 e0       	ldi	r24, 0x02	; 2
     4dc:	80 83       	st	Z, r24
        int stepsTogo = steps *2 *mode;
        int wachten;

        for(int i = 0; i < stepsTogo; i++)
        {
            while(wachten != 1)
     4de:	8b 81       	ldd	r24, Y+3	; 0x03
     4e0:	9c 81       	ldd	r25, Y+4	; 0x04
     4e2:	81 30       	cpi	r24, 0x01	; 1
     4e4:	91 05       	cpc	r25, r1
     4e6:	59 f6       	brne	.-106    	; 0x47e <singleStepperGoTo+0x160>

                }


            }
            wachten = 0;
     4e8:	1c 82       	std	Y+4, r1	; 0x04
     4ea:	1b 82       	std	Y+3, r1	; 0x03
        }

        int stepsTogo = steps *2 *mode;
        int wachten;

        for(int i = 0; i < stepsTogo; i++)
     4ec:	89 81       	ldd	r24, Y+1	; 0x01
     4ee:	9a 81       	ldd	r25, Y+2	; 0x02
     4f0:	01 96       	adiw	r24, 0x01	; 1
     4f2:	9a 83       	std	Y+2, r25	; 0x02
     4f4:	89 83       	std	Y+1, r24	; 0x01
     4f6:	29 81       	ldd	r18, Y+1	; 0x01
     4f8:	3a 81       	ldd	r19, Y+2	; 0x02
     4fa:	8d 81       	ldd	r24, Y+5	; 0x05
     4fc:	9e 81       	ldd	r25, Y+6	; 0x06
     4fe:	28 17       	cp	r18, r24
     500:	39 07       	cpc	r19, r25
     502:	6c f3       	brlt	.-38     	; 0x4de <singleStepperGoTo+0x1c0>
            wachten = 0;


        }
    }
}
     504:	64 96       	adiw	r28, 0x14	; 20
     506:	0f b6       	in	r0, 0x3f	; 63
     508:	f8 94       	cli
     50a:	de bf       	out	0x3e, r29	; 62
     50c:	0f be       	out	0x3f, r0	; 63
     50e:	cd bf       	out	0x3d, r28	; 61
     510:	cf 91       	pop	r28
     512:	df 91       	pop	r29
     514:	1f 91       	pop	r17
     516:	0f 91       	pop	r16
     518:	08 95       	ret

0000051a <stepperSetSpeed>:

void stepperSetSpeed(float rps, int mode)
{
     51a:	ef 92       	push	r14
     51c:	ff 92       	push	r15
     51e:	0f 93       	push	r16
     520:	1f 93       	push	r17
     522:	df 93       	push	r29
     524:	cf 93       	push	r28
     526:	cd b7       	in	r28, 0x3d	; 61
     528:	de b7       	in	r29, 0x3e	; 62
     52a:	2a 97       	sbiw	r28, 0x0a	; 10
     52c:	0f b6       	in	r0, 0x3f	; 63
     52e:	f8 94       	cli
     530:	de bf       	out	0x3e, r29	; 62
     532:	0f be       	out	0x3f, r0	; 63
     534:	cd bf       	out	0x3d, r28	; 61
     536:	6d 83       	std	Y+5, r22	; 0x05
     538:	7e 83       	std	Y+6, r23	; 0x06
     53a:	8f 83       	std	Y+7, r24	; 0x07
     53c:	98 87       	std	Y+8, r25	; 0x08
     53e:	5a 87       	std	Y+10, r21	; 0x0a
     540:	49 87       	std	Y+9, r20	; 0x09
    float rekenwaarde = rps * 400 * mode;
     542:	6d 81       	ldd	r22, Y+5	; 0x05
     544:	7e 81       	ldd	r23, Y+6	; 0x06
     546:	8f 81       	ldd	r24, Y+7	; 0x07
     548:	98 85       	ldd	r25, Y+8	; 0x08
     54a:	20 e0       	ldi	r18, 0x00	; 0
     54c:	30 e0       	ldi	r19, 0x00	; 0
     54e:	48 ec       	ldi	r20, 0xC8	; 200
     550:	53 e4       	ldi	r21, 0x43	; 67
     552:	0e 94 bc 04 	call	0x978	; 0x978 <__mulsf3>
     556:	dc 01       	movw	r26, r24
     558:	cb 01       	movw	r24, r22
     55a:	7c 01       	movw	r14, r24
     55c:	8d 01       	movw	r16, r26
     55e:	89 85       	ldd	r24, Y+9	; 0x09
     560:	9a 85       	ldd	r25, Y+10	; 0x0a
     562:	aa 27       	eor	r26, r26
     564:	97 fd       	sbrc	r25, 7
     566:	a0 95       	com	r26
     568:	ba 2f       	mov	r27, r26
     56a:	bc 01       	movw	r22, r24
     56c:	cd 01       	movw	r24, r26
     56e:	0e 94 92 06 	call	0xd24	; 0xd24 <__floatsisf>
     572:	9b 01       	movw	r18, r22
     574:	ac 01       	movw	r20, r24
     576:	c8 01       	movw	r24, r16
     578:	b7 01       	movw	r22, r14
     57a:	0e 94 bc 04 	call	0x978	; 0x978 <__mulsf3>
     57e:	dc 01       	movw	r26, r24
     580:	cb 01       	movw	r24, r22
     582:	89 83       	std	Y+1, r24	; 0x01
     584:	9a 83       	std	Y+2, r25	; 0x02
     586:	ab 83       	std	Y+3, r26	; 0x03
     588:	bc 83       	std	Y+4, r27	; 0x04
    snelheid = 16000000 / rekenwaarde;
     58a:	60 e0       	ldi	r22, 0x00	; 0
     58c:	74 e2       	ldi	r23, 0x24	; 36
     58e:	84 e7       	ldi	r24, 0x74	; 116
     590:	9b e4       	ldi	r25, 0x4B	; 75
     592:	29 81       	ldd	r18, Y+1	; 0x01
     594:	3a 81       	ldd	r19, Y+2	; 0x02
     596:	4b 81       	ldd	r20, Y+3	; 0x03
     598:	5c 81       	ldd	r21, Y+4	; 0x04
     59a:	0e 94 b6 05 	call	0xb6c	; 0xb6c <__divsf3>
     59e:	dc 01       	movw	r26, r24
     5a0:	cb 01       	movw	r24, r22
     5a2:	80 93 08 02 	sts	0x0208, r24
     5a6:	90 93 09 02 	sts	0x0209, r25
     5aa:	a0 93 0a 02 	sts	0x020A, r26
     5ae:	b0 93 0b 02 	sts	0x020B, r27
}
     5b2:	2a 96       	adiw	r28, 0x0a	; 10
     5b4:	0f b6       	in	r0, 0x3f	; 63
     5b6:	f8 94       	cli
     5b8:	de bf       	out	0x3e, r29	; 62
     5ba:	0f be       	out	0x3f, r0	; 63
     5bc:	cd bf       	out	0x3d, r28	; 61
     5be:	cf 91       	pop	r28
     5c0:	df 91       	pop	r29
     5c2:	1f 91       	pop	r17
     5c4:	0f 91       	pop	r16
     5c6:	ff 90       	pop	r15
     5c8:	ef 90       	pop	r14
     5ca:	08 95       	ret

000005cc <__fixunssfsi>:
     5cc:	ef 92       	push	r14
     5ce:	ff 92       	push	r15
     5d0:	0f 93       	push	r16
     5d2:	1f 93       	push	r17
     5d4:	7b 01       	movw	r14, r22
     5d6:	8c 01       	movw	r16, r24
     5d8:	20 e0       	ldi	r18, 0x00	; 0
     5da:	30 e0       	ldi	r19, 0x00	; 0
     5dc:	40 e0       	ldi	r20, 0x00	; 0
     5de:	5f e4       	ldi	r21, 0x4F	; 79
     5e0:	0e 94 62 06 	call	0xcc4	; 0xcc4 <__gesf2>
     5e4:	88 23       	and	r24, r24
     5e6:	8c f0       	brlt	.+34     	; 0x60a <__fixunssfsi+0x3e>
     5e8:	c8 01       	movw	r24, r16
     5ea:	b7 01       	movw	r22, r14
     5ec:	20 e0       	ldi	r18, 0x00	; 0
     5ee:	30 e0       	ldi	r19, 0x00	; 0
     5f0:	40 e0       	ldi	r20, 0x00	; 0
     5f2:	5f e4       	ldi	r21, 0x4F	; 79
     5f4:	0e 94 5e 04 	call	0x8bc	; 0x8bc <__subsf3>
     5f8:	0e 94 f0 06 	call	0xde0	; 0xde0 <__fixsfsi>
     5fc:	9b 01       	movw	r18, r22
     5fe:	ac 01       	movw	r20, r24
     600:	20 50       	subi	r18, 0x00	; 0
     602:	30 40       	sbci	r19, 0x00	; 0
     604:	40 40       	sbci	r20, 0x00	; 0
     606:	50 48       	sbci	r21, 0x80	; 128
     608:	06 c0       	rjmp	.+12     	; 0x616 <__fixunssfsi+0x4a>
     60a:	c8 01       	movw	r24, r16
     60c:	b7 01       	movw	r22, r14
     60e:	0e 94 f0 06 	call	0xde0	; 0xde0 <__fixsfsi>
     612:	9b 01       	movw	r18, r22
     614:	ac 01       	movw	r20, r24
     616:	b9 01       	movw	r22, r18
     618:	ca 01       	movw	r24, r20
     61a:	1f 91       	pop	r17
     61c:	0f 91       	pop	r16
     61e:	ff 90       	pop	r15
     620:	ef 90       	pop	r14
     622:	08 95       	ret

00000624 <_fpadd_parts>:
     624:	a0 e0       	ldi	r26, 0x00	; 0
     626:	b0 e0       	ldi	r27, 0x00	; 0
     628:	e8 e1       	ldi	r30, 0x18	; 24
     62a:	f3 e0       	ldi	r31, 0x03	; 3
     62c:	0c 94 39 09 	jmp	0x1272	; 0x1272 <__prologue_saves__>
     630:	dc 01       	movw	r26, r24
     632:	2b 01       	movw	r4, r22
     634:	fa 01       	movw	r30, r20
     636:	9c 91       	ld	r25, X
     638:	92 30       	cpi	r25, 0x02	; 2
     63a:	08 f4       	brcc	.+2      	; 0x63e <_fpadd_parts+0x1a>
     63c:	39 c1       	rjmp	.+626    	; 0x8b0 <_fpadd_parts+0x28c>
     63e:	eb 01       	movw	r28, r22
     640:	88 81       	ld	r24, Y
     642:	82 30       	cpi	r24, 0x02	; 2
     644:	08 f4       	brcc	.+2      	; 0x648 <_fpadd_parts+0x24>
     646:	33 c1       	rjmp	.+614    	; 0x8ae <_fpadd_parts+0x28a>
     648:	94 30       	cpi	r25, 0x04	; 4
     64a:	69 f4       	brne	.+26     	; 0x666 <_fpadd_parts+0x42>
     64c:	84 30       	cpi	r24, 0x04	; 4
     64e:	09 f0       	breq	.+2      	; 0x652 <_fpadd_parts+0x2e>
     650:	2f c1       	rjmp	.+606    	; 0x8b0 <_fpadd_parts+0x28c>
     652:	11 96       	adiw	r26, 0x01	; 1
     654:	9c 91       	ld	r25, X
     656:	11 97       	sbiw	r26, 0x01	; 1
     658:	89 81       	ldd	r24, Y+1	; 0x01
     65a:	98 17       	cp	r25, r24
     65c:	09 f4       	brne	.+2      	; 0x660 <_fpadd_parts+0x3c>
     65e:	28 c1       	rjmp	.+592    	; 0x8b0 <_fpadd_parts+0x28c>
     660:	a0 e0       	ldi	r26, 0x00	; 0
     662:	b1 e0       	ldi	r27, 0x01	; 1
     664:	25 c1       	rjmp	.+586    	; 0x8b0 <_fpadd_parts+0x28c>
     666:	84 30       	cpi	r24, 0x04	; 4
     668:	09 f4       	brne	.+2      	; 0x66c <_fpadd_parts+0x48>
     66a:	21 c1       	rjmp	.+578    	; 0x8ae <_fpadd_parts+0x28a>
     66c:	82 30       	cpi	r24, 0x02	; 2
     66e:	a9 f4       	brne	.+42     	; 0x69a <_fpadd_parts+0x76>
     670:	92 30       	cpi	r25, 0x02	; 2
     672:	09 f0       	breq	.+2      	; 0x676 <_fpadd_parts+0x52>
     674:	1d c1       	rjmp	.+570    	; 0x8b0 <_fpadd_parts+0x28c>
     676:	9a 01       	movw	r18, r20
     678:	ad 01       	movw	r20, r26
     67a:	88 e0       	ldi	r24, 0x08	; 8
     67c:	ea 01       	movw	r28, r20
     67e:	09 90       	ld	r0, Y+
     680:	ae 01       	movw	r20, r28
     682:	e9 01       	movw	r28, r18
     684:	09 92       	st	Y+, r0
     686:	9e 01       	movw	r18, r28
     688:	81 50       	subi	r24, 0x01	; 1
     68a:	c1 f7       	brne	.-16     	; 0x67c <_fpadd_parts+0x58>
     68c:	e2 01       	movw	r28, r4
     68e:	89 81       	ldd	r24, Y+1	; 0x01
     690:	11 96       	adiw	r26, 0x01	; 1
     692:	9c 91       	ld	r25, X
     694:	89 23       	and	r24, r25
     696:	81 83       	std	Z+1, r24	; 0x01
     698:	08 c1       	rjmp	.+528    	; 0x8aa <_fpadd_parts+0x286>
     69a:	92 30       	cpi	r25, 0x02	; 2
     69c:	09 f4       	brne	.+2      	; 0x6a0 <_fpadd_parts+0x7c>
     69e:	07 c1       	rjmp	.+526    	; 0x8ae <_fpadd_parts+0x28a>
     6a0:	12 96       	adiw	r26, 0x02	; 2
     6a2:	2d 90       	ld	r2, X+
     6a4:	3c 90       	ld	r3, X
     6a6:	13 97       	sbiw	r26, 0x03	; 3
     6a8:	eb 01       	movw	r28, r22
     6aa:	8a 81       	ldd	r24, Y+2	; 0x02
     6ac:	9b 81       	ldd	r25, Y+3	; 0x03
     6ae:	14 96       	adiw	r26, 0x04	; 4
     6b0:	ad 90       	ld	r10, X+
     6b2:	bd 90       	ld	r11, X+
     6b4:	cd 90       	ld	r12, X+
     6b6:	dc 90       	ld	r13, X
     6b8:	17 97       	sbiw	r26, 0x07	; 7
     6ba:	ec 80       	ldd	r14, Y+4	; 0x04
     6bc:	fd 80       	ldd	r15, Y+5	; 0x05
     6be:	0e 81       	ldd	r16, Y+6	; 0x06
     6c0:	1f 81       	ldd	r17, Y+7	; 0x07
     6c2:	91 01       	movw	r18, r2
     6c4:	28 1b       	sub	r18, r24
     6c6:	39 0b       	sbc	r19, r25
     6c8:	b9 01       	movw	r22, r18
     6ca:	37 ff       	sbrs	r19, 7
     6cc:	04 c0       	rjmp	.+8      	; 0x6d6 <_fpadd_parts+0xb2>
     6ce:	66 27       	eor	r22, r22
     6d0:	77 27       	eor	r23, r23
     6d2:	62 1b       	sub	r22, r18
     6d4:	73 0b       	sbc	r23, r19
     6d6:	60 32       	cpi	r22, 0x20	; 32
     6d8:	71 05       	cpc	r23, r1
     6da:	0c f0       	brlt	.+2      	; 0x6de <_fpadd_parts+0xba>
     6dc:	61 c0       	rjmp	.+194    	; 0x7a0 <_fpadd_parts+0x17c>
     6de:	12 16       	cp	r1, r18
     6e0:	13 06       	cpc	r1, r19
     6e2:	6c f5       	brge	.+90     	; 0x73e <_fpadd_parts+0x11a>
     6e4:	37 01       	movw	r6, r14
     6e6:	48 01       	movw	r8, r16
     6e8:	06 2e       	mov	r0, r22
     6ea:	04 c0       	rjmp	.+8      	; 0x6f4 <_fpadd_parts+0xd0>
     6ec:	96 94       	lsr	r9
     6ee:	87 94       	ror	r8
     6f0:	77 94       	ror	r7
     6f2:	67 94       	ror	r6
     6f4:	0a 94       	dec	r0
     6f6:	d2 f7       	brpl	.-12     	; 0x6ec <_fpadd_parts+0xc8>
     6f8:	21 e0       	ldi	r18, 0x01	; 1
     6fa:	30 e0       	ldi	r19, 0x00	; 0
     6fc:	40 e0       	ldi	r20, 0x00	; 0
     6fe:	50 e0       	ldi	r21, 0x00	; 0
     700:	04 c0       	rjmp	.+8      	; 0x70a <_fpadd_parts+0xe6>
     702:	22 0f       	add	r18, r18
     704:	33 1f       	adc	r19, r19
     706:	44 1f       	adc	r20, r20
     708:	55 1f       	adc	r21, r21
     70a:	6a 95       	dec	r22
     70c:	d2 f7       	brpl	.-12     	; 0x702 <_fpadd_parts+0xde>
     70e:	21 50       	subi	r18, 0x01	; 1
     710:	30 40       	sbci	r19, 0x00	; 0
     712:	40 40       	sbci	r20, 0x00	; 0
     714:	50 40       	sbci	r21, 0x00	; 0
     716:	2e 21       	and	r18, r14
     718:	3f 21       	and	r19, r15
     71a:	40 23       	and	r20, r16
     71c:	51 23       	and	r21, r17
     71e:	21 15       	cp	r18, r1
     720:	31 05       	cpc	r19, r1
     722:	41 05       	cpc	r20, r1
     724:	51 05       	cpc	r21, r1
     726:	21 f0       	breq	.+8      	; 0x730 <_fpadd_parts+0x10c>
     728:	21 e0       	ldi	r18, 0x01	; 1
     72a:	30 e0       	ldi	r19, 0x00	; 0
     72c:	40 e0       	ldi	r20, 0x00	; 0
     72e:	50 e0       	ldi	r21, 0x00	; 0
     730:	79 01       	movw	r14, r18
     732:	8a 01       	movw	r16, r20
     734:	e6 28       	or	r14, r6
     736:	f7 28       	or	r15, r7
     738:	08 29       	or	r16, r8
     73a:	19 29       	or	r17, r9
     73c:	3c c0       	rjmp	.+120    	; 0x7b6 <_fpadd_parts+0x192>
     73e:	23 2b       	or	r18, r19
     740:	d1 f1       	breq	.+116    	; 0x7b6 <_fpadd_parts+0x192>
     742:	26 0e       	add	r2, r22
     744:	37 1e       	adc	r3, r23
     746:	35 01       	movw	r6, r10
     748:	46 01       	movw	r8, r12
     74a:	06 2e       	mov	r0, r22
     74c:	04 c0       	rjmp	.+8      	; 0x756 <_fpadd_parts+0x132>
     74e:	96 94       	lsr	r9
     750:	87 94       	ror	r8
     752:	77 94       	ror	r7
     754:	67 94       	ror	r6
     756:	0a 94       	dec	r0
     758:	d2 f7       	brpl	.-12     	; 0x74e <_fpadd_parts+0x12a>
     75a:	21 e0       	ldi	r18, 0x01	; 1
     75c:	30 e0       	ldi	r19, 0x00	; 0
     75e:	40 e0       	ldi	r20, 0x00	; 0
     760:	50 e0       	ldi	r21, 0x00	; 0
     762:	04 c0       	rjmp	.+8      	; 0x76c <_fpadd_parts+0x148>
     764:	22 0f       	add	r18, r18
     766:	33 1f       	adc	r19, r19
     768:	44 1f       	adc	r20, r20
     76a:	55 1f       	adc	r21, r21
     76c:	6a 95       	dec	r22
     76e:	d2 f7       	brpl	.-12     	; 0x764 <_fpadd_parts+0x140>
     770:	21 50       	subi	r18, 0x01	; 1
     772:	30 40       	sbci	r19, 0x00	; 0
     774:	40 40       	sbci	r20, 0x00	; 0
     776:	50 40       	sbci	r21, 0x00	; 0
     778:	2a 21       	and	r18, r10
     77a:	3b 21       	and	r19, r11
     77c:	4c 21       	and	r20, r12
     77e:	5d 21       	and	r21, r13
     780:	21 15       	cp	r18, r1
     782:	31 05       	cpc	r19, r1
     784:	41 05       	cpc	r20, r1
     786:	51 05       	cpc	r21, r1
     788:	21 f0       	breq	.+8      	; 0x792 <_fpadd_parts+0x16e>
     78a:	21 e0       	ldi	r18, 0x01	; 1
     78c:	30 e0       	ldi	r19, 0x00	; 0
     78e:	40 e0       	ldi	r20, 0x00	; 0
     790:	50 e0       	ldi	r21, 0x00	; 0
     792:	59 01       	movw	r10, r18
     794:	6a 01       	movw	r12, r20
     796:	a6 28       	or	r10, r6
     798:	b7 28       	or	r11, r7
     79a:	c8 28       	or	r12, r8
     79c:	d9 28       	or	r13, r9
     79e:	0b c0       	rjmp	.+22     	; 0x7b6 <_fpadd_parts+0x192>
     7a0:	82 15       	cp	r24, r2
     7a2:	93 05       	cpc	r25, r3
     7a4:	2c f0       	brlt	.+10     	; 0x7b0 <_fpadd_parts+0x18c>
     7a6:	1c 01       	movw	r2, r24
     7a8:	aa 24       	eor	r10, r10
     7aa:	bb 24       	eor	r11, r11
     7ac:	65 01       	movw	r12, r10
     7ae:	03 c0       	rjmp	.+6      	; 0x7b6 <_fpadd_parts+0x192>
     7b0:	ee 24       	eor	r14, r14
     7b2:	ff 24       	eor	r15, r15
     7b4:	87 01       	movw	r16, r14
     7b6:	11 96       	adiw	r26, 0x01	; 1
     7b8:	9c 91       	ld	r25, X
     7ba:	d2 01       	movw	r26, r4
     7bc:	11 96       	adiw	r26, 0x01	; 1
     7be:	8c 91       	ld	r24, X
     7c0:	98 17       	cp	r25, r24
     7c2:	09 f4       	brne	.+2      	; 0x7c6 <_fpadd_parts+0x1a2>
     7c4:	45 c0       	rjmp	.+138    	; 0x850 <_fpadd_parts+0x22c>
     7c6:	99 23       	and	r25, r25
     7c8:	39 f0       	breq	.+14     	; 0x7d8 <_fpadd_parts+0x1b4>
     7ca:	a8 01       	movw	r20, r16
     7cc:	97 01       	movw	r18, r14
     7ce:	2a 19       	sub	r18, r10
     7d0:	3b 09       	sbc	r19, r11
     7d2:	4c 09       	sbc	r20, r12
     7d4:	5d 09       	sbc	r21, r13
     7d6:	06 c0       	rjmp	.+12     	; 0x7e4 <_fpadd_parts+0x1c0>
     7d8:	a6 01       	movw	r20, r12
     7da:	95 01       	movw	r18, r10
     7dc:	2e 19       	sub	r18, r14
     7de:	3f 09       	sbc	r19, r15
     7e0:	40 0b       	sbc	r20, r16
     7e2:	51 0b       	sbc	r21, r17
     7e4:	57 fd       	sbrc	r21, 7
     7e6:	08 c0       	rjmp	.+16     	; 0x7f8 <_fpadd_parts+0x1d4>
     7e8:	11 82       	std	Z+1, r1	; 0x01
     7ea:	33 82       	std	Z+3, r3	; 0x03
     7ec:	22 82       	std	Z+2, r2	; 0x02
     7ee:	24 83       	std	Z+4, r18	; 0x04
     7f0:	35 83       	std	Z+5, r19	; 0x05
     7f2:	46 83       	std	Z+6, r20	; 0x06
     7f4:	57 83       	std	Z+7, r21	; 0x07
     7f6:	1d c0       	rjmp	.+58     	; 0x832 <_fpadd_parts+0x20e>
     7f8:	81 e0       	ldi	r24, 0x01	; 1
     7fa:	81 83       	std	Z+1, r24	; 0x01
     7fc:	33 82       	std	Z+3, r3	; 0x03
     7fe:	22 82       	std	Z+2, r2	; 0x02
     800:	88 27       	eor	r24, r24
     802:	99 27       	eor	r25, r25
     804:	dc 01       	movw	r26, r24
     806:	82 1b       	sub	r24, r18
     808:	93 0b       	sbc	r25, r19
     80a:	a4 0b       	sbc	r26, r20
     80c:	b5 0b       	sbc	r27, r21
     80e:	84 83       	std	Z+4, r24	; 0x04
     810:	95 83       	std	Z+5, r25	; 0x05
     812:	a6 83       	std	Z+6, r26	; 0x06
     814:	b7 83       	std	Z+7, r27	; 0x07
     816:	0d c0       	rjmp	.+26     	; 0x832 <_fpadd_parts+0x20e>
     818:	22 0f       	add	r18, r18
     81a:	33 1f       	adc	r19, r19
     81c:	44 1f       	adc	r20, r20
     81e:	55 1f       	adc	r21, r21
     820:	24 83       	std	Z+4, r18	; 0x04
     822:	35 83       	std	Z+5, r19	; 0x05
     824:	46 83       	std	Z+6, r20	; 0x06
     826:	57 83       	std	Z+7, r21	; 0x07
     828:	82 81       	ldd	r24, Z+2	; 0x02
     82a:	93 81       	ldd	r25, Z+3	; 0x03
     82c:	01 97       	sbiw	r24, 0x01	; 1
     82e:	93 83       	std	Z+3, r25	; 0x03
     830:	82 83       	std	Z+2, r24	; 0x02
     832:	24 81       	ldd	r18, Z+4	; 0x04
     834:	35 81       	ldd	r19, Z+5	; 0x05
     836:	46 81       	ldd	r20, Z+6	; 0x06
     838:	57 81       	ldd	r21, Z+7	; 0x07
     83a:	da 01       	movw	r26, r20
     83c:	c9 01       	movw	r24, r18
     83e:	01 97       	sbiw	r24, 0x01	; 1
     840:	a1 09       	sbc	r26, r1
     842:	b1 09       	sbc	r27, r1
     844:	8f 5f       	subi	r24, 0xFF	; 255
     846:	9f 4f       	sbci	r25, 0xFF	; 255
     848:	af 4f       	sbci	r26, 0xFF	; 255
     84a:	bf 43       	sbci	r27, 0x3F	; 63
     84c:	28 f3       	brcs	.-54     	; 0x818 <_fpadd_parts+0x1f4>
     84e:	0b c0       	rjmp	.+22     	; 0x866 <_fpadd_parts+0x242>
     850:	91 83       	std	Z+1, r25	; 0x01
     852:	33 82       	std	Z+3, r3	; 0x03
     854:	22 82       	std	Z+2, r2	; 0x02
     856:	ea 0c       	add	r14, r10
     858:	fb 1c       	adc	r15, r11
     85a:	0c 1d       	adc	r16, r12
     85c:	1d 1d       	adc	r17, r13
     85e:	e4 82       	std	Z+4, r14	; 0x04
     860:	f5 82       	std	Z+5, r15	; 0x05
     862:	06 83       	std	Z+6, r16	; 0x06
     864:	17 83       	std	Z+7, r17	; 0x07
     866:	83 e0       	ldi	r24, 0x03	; 3
     868:	80 83       	st	Z, r24
     86a:	24 81       	ldd	r18, Z+4	; 0x04
     86c:	35 81       	ldd	r19, Z+5	; 0x05
     86e:	46 81       	ldd	r20, Z+6	; 0x06
     870:	57 81       	ldd	r21, Z+7	; 0x07
     872:	57 ff       	sbrs	r21, 7
     874:	1a c0       	rjmp	.+52     	; 0x8aa <_fpadd_parts+0x286>
     876:	c9 01       	movw	r24, r18
     878:	aa 27       	eor	r26, r26
     87a:	97 fd       	sbrc	r25, 7
     87c:	a0 95       	com	r26
     87e:	ba 2f       	mov	r27, r26
     880:	81 70       	andi	r24, 0x01	; 1
     882:	90 70       	andi	r25, 0x00	; 0
     884:	a0 70       	andi	r26, 0x00	; 0
     886:	b0 70       	andi	r27, 0x00	; 0
     888:	56 95       	lsr	r21
     88a:	47 95       	ror	r20
     88c:	37 95       	ror	r19
     88e:	27 95       	ror	r18
     890:	82 2b       	or	r24, r18
     892:	93 2b       	or	r25, r19
     894:	a4 2b       	or	r26, r20
     896:	b5 2b       	or	r27, r21
     898:	84 83       	std	Z+4, r24	; 0x04
     89a:	95 83       	std	Z+5, r25	; 0x05
     89c:	a6 83       	std	Z+6, r26	; 0x06
     89e:	b7 83       	std	Z+7, r27	; 0x07
     8a0:	82 81       	ldd	r24, Z+2	; 0x02
     8a2:	93 81       	ldd	r25, Z+3	; 0x03
     8a4:	01 96       	adiw	r24, 0x01	; 1
     8a6:	93 83       	std	Z+3, r25	; 0x03
     8a8:	82 83       	std	Z+2, r24	; 0x02
     8aa:	df 01       	movw	r26, r30
     8ac:	01 c0       	rjmp	.+2      	; 0x8b0 <_fpadd_parts+0x28c>
     8ae:	d2 01       	movw	r26, r4
     8b0:	cd 01       	movw	r24, r26
     8b2:	cd b7       	in	r28, 0x3d	; 61
     8b4:	de b7       	in	r29, 0x3e	; 62
     8b6:	e2 e1       	ldi	r30, 0x12	; 18
     8b8:	0c 94 55 09 	jmp	0x12aa	; 0x12aa <__epilogue_restores__>

000008bc <__subsf3>:
     8bc:	a0 e2       	ldi	r26, 0x20	; 32
     8be:	b0 e0       	ldi	r27, 0x00	; 0
     8c0:	e4 e6       	ldi	r30, 0x64	; 100
     8c2:	f4 e0       	ldi	r31, 0x04	; 4
     8c4:	0c 94 45 09 	jmp	0x128a	; 0x128a <__prologue_saves__+0x18>
     8c8:	69 83       	std	Y+1, r22	; 0x01
     8ca:	7a 83       	std	Y+2, r23	; 0x02
     8cc:	8b 83       	std	Y+3, r24	; 0x03
     8ce:	9c 83       	std	Y+4, r25	; 0x04
     8d0:	2d 83       	std	Y+5, r18	; 0x05
     8d2:	3e 83       	std	Y+6, r19	; 0x06
     8d4:	4f 83       	std	Y+7, r20	; 0x07
     8d6:	58 87       	std	Y+8, r21	; 0x08
     8d8:	e9 e0       	ldi	r30, 0x09	; 9
     8da:	ee 2e       	mov	r14, r30
     8dc:	f1 2c       	mov	r15, r1
     8de:	ec 0e       	add	r14, r28
     8e0:	fd 1e       	adc	r15, r29
     8e2:	ce 01       	movw	r24, r28
     8e4:	01 96       	adiw	r24, 0x01	; 1
     8e6:	b7 01       	movw	r22, r14
     8e8:	0e 94 68 08 	call	0x10d0	; 0x10d0 <__unpack_f>
     8ec:	8e 01       	movw	r16, r28
     8ee:	0f 5e       	subi	r16, 0xEF	; 239
     8f0:	1f 4f       	sbci	r17, 0xFF	; 255
     8f2:	ce 01       	movw	r24, r28
     8f4:	05 96       	adiw	r24, 0x05	; 5
     8f6:	b8 01       	movw	r22, r16
     8f8:	0e 94 68 08 	call	0x10d0	; 0x10d0 <__unpack_f>
     8fc:	8a 89       	ldd	r24, Y+18	; 0x12
     8fe:	91 e0       	ldi	r25, 0x01	; 1
     900:	89 27       	eor	r24, r25
     902:	8a 8b       	std	Y+18, r24	; 0x12
     904:	c7 01       	movw	r24, r14
     906:	b8 01       	movw	r22, r16
     908:	ae 01       	movw	r20, r28
     90a:	47 5e       	subi	r20, 0xE7	; 231
     90c:	5f 4f       	sbci	r21, 0xFF	; 255
     90e:	0e 94 12 03 	call	0x624	; 0x624 <_fpadd_parts>
     912:	0e 94 93 07 	call	0xf26	; 0xf26 <__pack_f>
     916:	a0 96       	adiw	r28, 0x20	; 32
     918:	e6 e0       	ldi	r30, 0x06	; 6
     91a:	0c 94 61 09 	jmp	0x12c2	; 0x12c2 <__epilogue_restores__+0x18>

0000091e <__addsf3>:
     91e:	a0 e2       	ldi	r26, 0x20	; 32
     920:	b0 e0       	ldi	r27, 0x00	; 0
     922:	e5 e9       	ldi	r30, 0x95	; 149
     924:	f4 e0       	ldi	r31, 0x04	; 4
     926:	0c 94 45 09 	jmp	0x128a	; 0x128a <__prologue_saves__+0x18>
     92a:	69 83       	std	Y+1, r22	; 0x01
     92c:	7a 83       	std	Y+2, r23	; 0x02
     92e:	8b 83       	std	Y+3, r24	; 0x03
     930:	9c 83       	std	Y+4, r25	; 0x04
     932:	2d 83       	std	Y+5, r18	; 0x05
     934:	3e 83       	std	Y+6, r19	; 0x06
     936:	4f 83       	std	Y+7, r20	; 0x07
     938:	58 87       	std	Y+8, r21	; 0x08
     93a:	f9 e0       	ldi	r31, 0x09	; 9
     93c:	ef 2e       	mov	r14, r31
     93e:	f1 2c       	mov	r15, r1
     940:	ec 0e       	add	r14, r28
     942:	fd 1e       	adc	r15, r29
     944:	ce 01       	movw	r24, r28
     946:	01 96       	adiw	r24, 0x01	; 1
     948:	b7 01       	movw	r22, r14
     94a:	0e 94 68 08 	call	0x10d0	; 0x10d0 <__unpack_f>
     94e:	8e 01       	movw	r16, r28
     950:	0f 5e       	subi	r16, 0xEF	; 239
     952:	1f 4f       	sbci	r17, 0xFF	; 255
     954:	ce 01       	movw	r24, r28
     956:	05 96       	adiw	r24, 0x05	; 5
     958:	b8 01       	movw	r22, r16
     95a:	0e 94 68 08 	call	0x10d0	; 0x10d0 <__unpack_f>
     95e:	c7 01       	movw	r24, r14
     960:	b8 01       	movw	r22, r16
     962:	ae 01       	movw	r20, r28
     964:	47 5e       	subi	r20, 0xE7	; 231
     966:	5f 4f       	sbci	r21, 0xFF	; 255
     968:	0e 94 12 03 	call	0x624	; 0x624 <_fpadd_parts>
     96c:	0e 94 93 07 	call	0xf26	; 0xf26 <__pack_f>
     970:	a0 96       	adiw	r28, 0x20	; 32
     972:	e6 e0       	ldi	r30, 0x06	; 6
     974:	0c 94 61 09 	jmp	0x12c2	; 0x12c2 <__epilogue_restores__+0x18>

00000978 <__mulsf3>:
     978:	a0 e2       	ldi	r26, 0x20	; 32
     97a:	b0 e0       	ldi	r27, 0x00	; 0
     97c:	e2 ec       	ldi	r30, 0xC2	; 194
     97e:	f4 e0       	ldi	r31, 0x04	; 4
     980:	0c 94 39 09 	jmp	0x1272	; 0x1272 <__prologue_saves__>
     984:	69 83       	std	Y+1, r22	; 0x01
     986:	7a 83       	std	Y+2, r23	; 0x02
     988:	8b 83       	std	Y+3, r24	; 0x03
     98a:	9c 83       	std	Y+4, r25	; 0x04
     98c:	2d 83       	std	Y+5, r18	; 0x05
     98e:	3e 83       	std	Y+6, r19	; 0x06
     990:	4f 83       	std	Y+7, r20	; 0x07
     992:	58 87       	std	Y+8, r21	; 0x08
     994:	ce 01       	movw	r24, r28
     996:	01 96       	adiw	r24, 0x01	; 1
     998:	be 01       	movw	r22, r28
     99a:	67 5f       	subi	r22, 0xF7	; 247
     99c:	7f 4f       	sbci	r23, 0xFF	; 255
     99e:	0e 94 68 08 	call	0x10d0	; 0x10d0 <__unpack_f>
     9a2:	ce 01       	movw	r24, r28
     9a4:	05 96       	adiw	r24, 0x05	; 5
     9a6:	be 01       	movw	r22, r28
     9a8:	6f 5e       	subi	r22, 0xEF	; 239
     9aa:	7f 4f       	sbci	r23, 0xFF	; 255
     9ac:	0e 94 68 08 	call	0x10d0	; 0x10d0 <__unpack_f>
     9b0:	99 85       	ldd	r25, Y+9	; 0x09
     9b2:	92 30       	cpi	r25, 0x02	; 2
     9b4:	88 f0       	brcs	.+34     	; 0x9d8 <__mulsf3+0x60>
     9b6:	89 89       	ldd	r24, Y+17	; 0x11
     9b8:	82 30       	cpi	r24, 0x02	; 2
     9ba:	c8 f0       	brcs	.+50     	; 0x9ee <__mulsf3+0x76>
     9bc:	94 30       	cpi	r25, 0x04	; 4
     9be:	19 f4       	brne	.+6      	; 0x9c6 <__mulsf3+0x4e>
     9c0:	82 30       	cpi	r24, 0x02	; 2
     9c2:	51 f4       	brne	.+20     	; 0x9d8 <__mulsf3+0x60>
     9c4:	04 c0       	rjmp	.+8      	; 0x9ce <__mulsf3+0x56>
     9c6:	84 30       	cpi	r24, 0x04	; 4
     9c8:	29 f4       	brne	.+10     	; 0x9d4 <__mulsf3+0x5c>
     9ca:	92 30       	cpi	r25, 0x02	; 2
     9cc:	81 f4       	brne	.+32     	; 0x9ee <__mulsf3+0x76>
     9ce:	80 e0       	ldi	r24, 0x00	; 0
     9d0:	91 e0       	ldi	r25, 0x01	; 1
     9d2:	c6 c0       	rjmp	.+396    	; 0xb60 <__mulsf3+0x1e8>
     9d4:	92 30       	cpi	r25, 0x02	; 2
     9d6:	49 f4       	brne	.+18     	; 0x9ea <__mulsf3+0x72>
     9d8:	20 e0       	ldi	r18, 0x00	; 0
     9da:	9a 85       	ldd	r25, Y+10	; 0x0a
     9dc:	8a 89       	ldd	r24, Y+18	; 0x12
     9de:	98 13       	cpse	r25, r24
     9e0:	21 e0       	ldi	r18, 0x01	; 1
     9e2:	2a 87       	std	Y+10, r18	; 0x0a
     9e4:	ce 01       	movw	r24, r28
     9e6:	09 96       	adiw	r24, 0x09	; 9
     9e8:	bb c0       	rjmp	.+374    	; 0xb60 <__mulsf3+0x1e8>
     9ea:	82 30       	cpi	r24, 0x02	; 2
     9ec:	49 f4       	brne	.+18     	; 0xa00 <__mulsf3+0x88>
     9ee:	20 e0       	ldi	r18, 0x00	; 0
     9f0:	9a 85       	ldd	r25, Y+10	; 0x0a
     9f2:	8a 89       	ldd	r24, Y+18	; 0x12
     9f4:	98 13       	cpse	r25, r24
     9f6:	21 e0       	ldi	r18, 0x01	; 1
     9f8:	2a 8b       	std	Y+18, r18	; 0x12
     9fa:	ce 01       	movw	r24, r28
     9fc:	41 96       	adiw	r24, 0x11	; 17
     9fe:	b0 c0       	rjmp	.+352    	; 0xb60 <__mulsf3+0x1e8>
     a00:	2d 84       	ldd	r2, Y+13	; 0x0d
     a02:	3e 84       	ldd	r3, Y+14	; 0x0e
     a04:	4f 84       	ldd	r4, Y+15	; 0x0f
     a06:	58 88       	ldd	r5, Y+16	; 0x10
     a08:	6d 88       	ldd	r6, Y+21	; 0x15
     a0a:	7e 88       	ldd	r7, Y+22	; 0x16
     a0c:	8f 88       	ldd	r8, Y+23	; 0x17
     a0e:	98 8c       	ldd	r9, Y+24	; 0x18
     a10:	ee 24       	eor	r14, r14
     a12:	ff 24       	eor	r15, r15
     a14:	87 01       	movw	r16, r14
     a16:	aa 24       	eor	r10, r10
     a18:	bb 24       	eor	r11, r11
     a1a:	65 01       	movw	r12, r10
     a1c:	40 e0       	ldi	r20, 0x00	; 0
     a1e:	50 e0       	ldi	r21, 0x00	; 0
     a20:	60 e0       	ldi	r22, 0x00	; 0
     a22:	70 e0       	ldi	r23, 0x00	; 0
     a24:	e0 e0       	ldi	r30, 0x00	; 0
     a26:	f0 e0       	ldi	r31, 0x00	; 0
     a28:	c1 01       	movw	r24, r2
     a2a:	81 70       	andi	r24, 0x01	; 1
     a2c:	90 70       	andi	r25, 0x00	; 0
     a2e:	89 2b       	or	r24, r25
     a30:	e9 f0       	breq	.+58     	; 0xa6c <__mulsf3+0xf4>
     a32:	e6 0c       	add	r14, r6
     a34:	f7 1c       	adc	r15, r7
     a36:	08 1d       	adc	r16, r8
     a38:	19 1d       	adc	r17, r9
     a3a:	9a 01       	movw	r18, r20
     a3c:	ab 01       	movw	r20, r22
     a3e:	2a 0d       	add	r18, r10
     a40:	3b 1d       	adc	r19, r11
     a42:	4c 1d       	adc	r20, r12
     a44:	5d 1d       	adc	r21, r13
     a46:	80 e0       	ldi	r24, 0x00	; 0
     a48:	90 e0       	ldi	r25, 0x00	; 0
     a4a:	a0 e0       	ldi	r26, 0x00	; 0
     a4c:	b0 e0       	ldi	r27, 0x00	; 0
     a4e:	e6 14       	cp	r14, r6
     a50:	f7 04       	cpc	r15, r7
     a52:	08 05       	cpc	r16, r8
     a54:	19 05       	cpc	r17, r9
     a56:	20 f4       	brcc	.+8      	; 0xa60 <__mulsf3+0xe8>
     a58:	81 e0       	ldi	r24, 0x01	; 1
     a5a:	90 e0       	ldi	r25, 0x00	; 0
     a5c:	a0 e0       	ldi	r26, 0x00	; 0
     a5e:	b0 e0       	ldi	r27, 0x00	; 0
     a60:	ba 01       	movw	r22, r20
     a62:	a9 01       	movw	r20, r18
     a64:	48 0f       	add	r20, r24
     a66:	59 1f       	adc	r21, r25
     a68:	6a 1f       	adc	r22, r26
     a6a:	7b 1f       	adc	r23, r27
     a6c:	aa 0c       	add	r10, r10
     a6e:	bb 1c       	adc	r11, r11
     a70:	cc 1c       	adc	r12, r12
     a72:	dd 1c       	adc	r13, r13
     a74:	97 fe       	sbrs	r9, 7
     a76:	08 c0       	rjmp	.+16     	; 0xa88 <__mulsf3+0x110>
     a78:	81 e0       	ldi	r24, 0x01	; 1
     a7a:	90 e0       	ldi	r25, 0x00	; 0
     a7c:	a0 e0       	ldi	r26, 0x00	; 0
     a7e:	b0 e0       	ldi	r27, 0x00	; 0
     a80:	a8 2a       	or	r10, r24
     a82:	b9 2a       	or	r11, r25
     a84:	ca 2a       	or	r12, r26
     a86:	db 2a       	or	r13, r27
     a88:	31 96       	adiw	r30, 0x01	; 1
     a8a:	e0 32       	cpi	r30, 0x20	; 32
     a8c:	f1 05       	cpc	r31, r1
     a8e:	49 f0       	breq	.+18     	; 0xaa2 <__mulsf3+0x12a>
     a90:	66 0c       	add	r6, r6
     a92:	77 1c       	adc	r7, r7
     a94:	88 1c       	adc	r8, r8
     a96:	99 1c       	adc	r9, r9
     a98:	56 94       	lsr	r5
     a9a:	47 94       	ror	r4
     a9c:	37 94       	ror	r3
     a9e:	27 94       	ror	r2
     aa0:	c3 cf       	rjmp	.-122    	; 0xa28 <__mulsf3+0xb0>
     aa2:	fa 85       	ldd	r31, Y+10	; 0x0a
     aa4:	ea 89       	ldd	r30, Y+18	; 0x12
     aa6:	2b 89       	ldd	r18, Y+19	; 0x13
     aa8:	3c 89       	ldd	r19, Y+20	; 0x14
     aaa:	8b 85       	ldd	r24, Y+11	; 0x0b
     aac:	9c 85       	ldd	r25, Y+12	; 0x0c
     aae:	28 0f       	add	r18, r24
     ab0:	39 1f       	adc	r19, r25
     ab2:	2e 5f       	subi	r18, 0xFE	; 254
     ab4:	3f 4f       	sbci	r19, 0xFF	; 255
     ab6:	17 c0       	rjmp	.+46     	; 0xae6 <__mulsf3+0x16e>
     ab8:	ca 01       	movw	r24, r20
     aba:	81 70       	andi	r24, 0x01	; 1
     abc:	90 70       	andi	r25, 0x00	; 0
     abe:	89 2b       	or	r24, r25
     ac0:	61 f0       	breq	.+24     	; 0xada <__mulsf3+0x162>
     ac2:	16 95       	lsr	r17
     ac4:	07 95       	ror	r16
     ac6:	f7 94       	ror	r15
     ac8:	e7 94       	ror	r14
     aca:	80 e0       	ldi	r24, 0x00	; 0
     acc:	90 e0       	ldi	r25, 0x00	; 0
     ace:	a0 e0       	ldi	r26, 0x00	; 0
     ad0:	b0 e8       	ldi	r27, 0x80	; 128
     ad2:	e8 2a       	or	r14, r24
     ad4:	f9 2a       	or	r15, r25
     ad6:	0a 2b       	or	r16, r26
     ad8:	1b 2b       	or	r17, r27
     ada:	76 95       	lsr	r23
     adc:	67 95       	ror	r22
     ade:	57 95       	ror	r21
     ae0:	47 95       	ror	r20
     ae2:	2f 5f       	subi	r18, 0xFF	; 255
     ae4:	3f 4f       	sbci	r19, 0xFF	; 255
     ae6:	77 fd       	sbrc	r23, 7
     ae8:	e7 cf       	rjmp	.-50     	; 0xab8 <__mulsf3+0x140>
     aea:	0c c0       	rjmp	.+24     	; 0xb04 <__mulsf3+0x18c>
     aec:	44 0f       	add	r20, r20
     aee:	55 1f       	adc	r21, r21
     af0:	66 1f       	adc	r22, r22
     af2:	77 1f       	adc	r23, r23
     af4:	17 fd       	sbrc	r17, 7
     af6:	41 60       	ori	r20, 0x01	; 1
     af8:	ee 0c       	add	r14, r14
     afa:	ff 1c       	adc	r15, r15
     afc:	00 1f       	adc	r16, r16
     afe:	11 1f       	adc	r17, r17
     b00:	21 50       	subi	r18, 0x01	; 1
     b02:	30 40       	sbci	r19, 0x00	; 0
     b04:	40 30       	cpi	r20, 0x00	; 0
     b06:	90 e0       	ldi	r25, 0x00	; 0
     b08:	59 07       	cpc	r21, r25
     b0a:	90 e0       	ldi	r25, 0x00	; 0
     b0c:	69 07       	cpc	r22, r25
     b0e:	90 e4       	ldi	r25, 0x40	; 64
     b10:	79 07       	cpc	r23, r25
     b12:	60 f3       	brcs	.-40     	; 0xaec <__mulsf3+0x174>
     b14:	2b 8f       	std	Y+27, r18	; 0x1b
     b16:	3c 8f       	std	Y+28, r19	; 0x1c
     b18:	db 01       	movw	r26, r22
     b1a:	ca 01       	movw	r24, r20
     b1c:	8f 77       	andi	r24, 0x7F	; 127
     b1e:	90 70       	andi	r25, 0x00	; 0
     b20:	a0 70       	andi	r26, 0x00	; 0
     b22:	b0 70       	andi	r27, 0x00	; 0
     b24:	80 34       	cpi	r24, 0x40	; 64
     b26:	91 05       	cpc	r25, r1
     b28:	a1 05       	cpc	r26, r1
     b2a:	b1 05       	cpc	r27, r1
     b2c:	61 f4       	brne	.+24     	; 0xb46 <__mulsf3+0x1ce>
     b2e:	47 fd       	sbrc	r20, 7
     b30:	0a c0       	rjmp	.+20     	; 0xb46 <__mulsf3+0x1ce>
     b32:	e1 14       	cp	r14, r1
     b34:	f1 04       	cpc	r15, r1
     b36:	01 05       	cpc	r16, r1
     b38:	11 05       	cpc	r17, r1
     b3a:	29 f0       	breq	.+10     	; 0xb46 <__mulsf3+0x1ce>
     b3c:	40 5c       	subi	r20, 0xC0	; 192
     b3e:	5f 4f       	sbci	r21, 0xFF	; 255
     b40:	6f 4f       	sbci	r22, 0xFF	; 255
     b42:	7f 4f       	sbci	r23, 0xFF	; 255
     b44:	40 78       	andi	r20, 0x80	; 128
     b46:	1a 8e       	std	Y+26, r1	; 0x1a
     b48:	fe 17       	cp	r31, r30
     b4a:	11 f0       	breq	.+4      	; 0xb50 <__mulsf3+0x1d8>
     b4c:	81 e0       	ldi	r24, 0x01	; 1
     b4e:	8a 8f       	std	Y+26, r24	; 0x1a
     b50:	4d 8f       	std	Y+29, r20	; 0x1d
     b52:	5e 8f       	std	Y+30, r21	; 0x1e
     b54:	6f 8f       	std	Y+31, r22	; 0x1f
     b56:	78 a3       	std	Y+32, r23	; 0x20
     b58:	83 e0       	ldi	r24, 0x03	; 3
     b5a:	89 8f       	std	Y+25, r24	; 0x19
     b5c:	ce 01       	movw	r24, r28
     b5e:	49 96       	adiw	r24, 0x19	; 25
     b60:	0e 94 93 07 	call	0xf26	; 0xf26 <__pack_f>
     b64:	a0 96       	adiw	r28, 0x20	; 32
     b66:	e2 e1       	ldi	r30, 0x12	; 18
     b68:	0c 94 55 09 	jmp	0x12aa	; 0x12aa <__epilogue_restores__>

00000b6c <__divsf3>:
     b6c:	a8 e1       	ldi	r26, 0x18	; 24
     b6e:	b0 e0       	ldi	r27, 0x00	; 0
     b70:	ec eb       	ldi	r30, 0xBC	; 188
     b72:	f5 e0       	ldi	r31, 0x05	; 5
     b74:	0c 94 41 09 	jmp	0x1282	; 0x1282 <__prologue_saves__+0x10>
     b78:	69 83       	std	Y+1, r22	; 0x01
     b7a:	7a 83       	std	Y+2, r23	; 0x02
     b7c:	8b 83       	std	Y+3, r24	; 0x03
     b7e:	9c 83       	std	Y+4, r25	; 0x04
     b80:	2d 83       	std	Y+5, r18	; 0x05
     b82:	3e 83       	std	Y+6, r19	; 0x06
     b84:	4f 83       	std	Y+7, r20	; 0x07
     b86:	58 87       	std	Y+8, r21	; 0x08
     b88:	b9 e0       	ldi	r27, 0x09	; 9
     b8a:	eb 2e       	mov	r14, r27
     b8c:	f1 2c       	mov	r15, r1
     b8e:	ec 0e       	add	r14, r28
     b90:	fd 1e       	adc	r15, r29
     b92:	ce 01       	movw	r24, r28
     b94:	01 96       	adiw	r24, 0x01	; 1
     b96:	b7 01       	movw	r22, r14
     b98:	0e 94 68 08 	call	0x10d0	; 0x10d0 <__unpack_f>
     b9c:	8e 01       	movw	r16, r28
     b9e:	0f 5e       	subi	r16, 0xEF	; 239
     ba0:	1f 4f       	sbci	r17, 0xFF	; 255
     ba2:	ce 01       	movw	r24, r28
     ba4:	05 96       	adiw	r24, 0x05	; 5
     ba6:	b8 01       	movw	r22, r16
     ba8:	0e 94 68 08 	call	0x10d0	; 0x10d0 <__unpack_f>
     bac:	29 85       	ldd	r18, Y+9	; 0x09
     bae:	22 30       	cpi	r18, 0x02	; 2
     bb0:	08 f4       	brcc	.+2      	; 0xbb4 <__divsf3+0x48>
     bb2:	7e c0       	rjmp	.+252    	; 0xcb0 <__divsf3+0x144>
     bb4:	39 89       	ldd	r19, Y+17	; 0x11
     bb6:	32 30       	cpi	r19, 0x02	; 2
     bb8:	10 f4       	brcc	.+4      	; 0xbbe <__divsf3+0x52>
     bba:	b8 01       	movw	r22, r16
     bbc:	7c c0       	rjmp	.+248    	; 0xcb6 <__divsf3+0x14a>
     bbe:	8a 85       	ldd	r24, Y+10	; 0x0a
     bc0:	9a 89       	ldd	r25, Y+18	; 0x12
     bc2:	89 27       	eor	r24, r25
     bc4:	8a 87       	std	Y+10, r24	; 0x0a
     bc6:	24 30       	cpi	r18, 0x04	; 4
     bc8:	11 f0       	breq	.+4      	; 0xbce <__divsf3+0x62>
     bca:	22 30       	cpi	r18, 0x02	; 2
     bcc:	31 f4       	brne	.+12     	; 0xbda <__divsf3+0x6e>
     bce:	23 17       	cp	r18, r19
     bd0:	09 f0       	breq	.+2      	; 0xbd4 <__divsf3+0x68>
     bd2:	6e c0       	rjmp	.+220    	; 0xcb0 <__divsf3+0x144>
     bd4:	60 e0       	ldi	r22, 0x00	; 0
     bd6:	71 e0       	ldi	r23, 0x01	; 1
     bd8:	6e c0       	rjmp	.+220    	; 0xcb6 <__divsf3+0x14a>
     bda:	34 30       	cpi	r19, 0x04	; 4
     bdc:	39 f4       	brne	.+14     	; 0xbec <__divsf3+0x80>
     bde:	1d 86       	std	Y+13, r1	; 0x0d
     be0:	1e 86       	std	Y+14, r1	; 0x0e
     be2:	1f 86       	std	Y+15, r1	; 0x0f
     be4:	18 8a       	std	Y+16, r1	; 0x10
     be6:	1c 86       	std	Y+12, r1	; 0x0c
     be8:	1b 86       	std	Y+11, r1	; 0x0b
     bea:	04 c0       	rjmp	.+8      	; 0xbf4 <__divsf3+0x88>
     bec:	32 30       	cpi	r19, 0x02	; 2
     bee:	21 f4       	brne	.+8      	; 0xbf8 <__divsf3+0x8c>
     bf0:	84 e0       	ldi	r24, 0x04	; 4
     bf2:	89 87       	std	Y+9, r24	; 0x09
     bf4:	b7 01       	movw	r22, r14
     bf6:	5f c0       	rjmp	.+190    	; 0xcb6 <__divsf3+0x14a>
     bf8:	2b 85       	ldd	r18, Y+11	; 0x0b
     bfa:	3c 85       	ldd	r19, Y+12	; 0x0c
     bfc:	8b 89       	ldd	r24, Y+19	; 0x13
     bfe:	9c 89       	ldd	r25, Y+20	; 0x14
     c00:	28 1b       	sub	r18, r24
     c02:	39 0b       	sbc	r19, r25
     c04:	3c 87       	std	Y+12, r19	; 0x0c
     c06:	2b 87       	std	Y+11, r18	; 0x0b
     c08:	ed 84       	ldd	r14, Y+13	; 0x0d
     c0a:	fe 84       	ldd	r15, Y+14	; 0x0e
     c0c:	0f 85       	ldd	r16, Y+15	; 0x0f
     c0e:	18 89       	ldd	r17, Y+16	; 0x10
     c10:	ad 88       	ldd	r10, Y+21	; 0x15
     c12:	be 88       	ldd	r11, Y+22	; 0x16
     c14:	cf 88       	ldd	r12, Y+23	; 0x17
     c16:	d8 8c       	ldd	r13, Y+24	; 0x18
     c18:	ea 14       	cp	r14, r10
     c1a:	fb 04       	cpc	r15, r11
     c1c:	0c 05       	cpc	r16, r12
     c1e:	1d 05       	cpc	r17, r13
     c20:	40 f4       	brcc	.+16     	; 0xc32 <__divsf3+0xc6>
     c22:	ee 0c       	add	r14, r14
     c24:	ff 1c       	adc	r15, r15
     c26:	00 1f       	adc	r16, r16
     c28:	11 1f       	adc	r17, r17
     c2a:	21 50       	subi	r18, 0x01	; 1
     c2c:	30 40       	sbci	r19, 0x00	; 0
     c2e:	3c 87       	std	Y+12, r19	; 0x0c
     c30:	2b 87       	std	Y+11, r18	; 0x0b
     c32:	20 e0       	ldi	r18, 0x00	; 0
     c34:	30 e0       	ldi	r19, 0x00	; 0
     c36:	40 e0       	ldi	r20, 0x00	; 0
     c38:	50 e0       	ldi	r21, 0x00	; 0
     c3a:	80 e0       	ldi	r24, 0x00	; 0
     c3c:	90 e0       	ldi	r25, 0x00	; 0
     c3e:	a0 e0       	ldi	r26, 0x00	; 0
     c40:	b0 e4       	ldi	r27, 0x40	; 64
     c42:	60 e0       	ldi	r22, 0x00	; 0
     c44:	70 e0       	ldi	r23, 0x00	; 0
     c46:	ea 14       	cp	r14, r10
     c48:	fb 04       	cpc	r15, r11
     c4a:	0c 05       	cpc	r16, r12
     c4c:	1d 05       	cpc	r17, r13
     c4e:	40 f0       	brcs	.+16     	; 0xc60 <__divsf3+0xf4>
     c50:	28 2b       	or	r18, r24
     c52:	39 2b       	or	r19, r25
     c54:	4a 2b       	or	r20, r26
     c56:	5b 2b       	or	r21, r27
     c58:	ea 18       	sub	r14, r10
     c5a:	fb 08       	sbc	r15, r11
     c5c:	0c 09       	sbc	r16, r12
     c5e:	1d 09       	sbc	r17, r13
     c60:	b6 95       	lsr	r27
     c62:	a7 95       	ror	r26
     c64:	97 95       	ror	r25
     c66:	87 95       	ror	r24
     c68:	ee 0c       	add	r14, r14
     c6a:	ff 1c       	adc	r15, r15
     c6c:	00 1f       	adc	r16, r16
     c6e:	11 1f       	adc	r17, r17
     c70:	6f 5f       	subi	r22, 0xFF	; 255
     c72:	7f 4f       	sbci	r23, 0xFF	; 255
     c74:	6f 31       	cpi	r22, 0x1F	; 31
     c76:	71 05       	cpc	r23, r1
     c78:	31 f7       	brne	.-52     	; 0xc46 <__divsf3+0xda>
     c7a:	da 01       	movw	r26, r20
     c7c:	c9 01       	movw	r24, r18
     c7e:	8f 77       	andi	r24, 0x7F	; 127
     c80:	90 70       	andi	r25, 0x00	; 0
     c82:	a0 70       	andi	r26, 0x00	; 0
     c84:	b0 70       	andi	r27, 0x00	; 0
     c86:	80 34       	cpi	r24, 0x40	; 64
     c88:	91 05       	cpc	r25, r1
     c8a:	a1 05       	cpc	r26, r1
     c8c:	b1 05       	cpc	r27, r1
     c8e:	61 f4       	brne	.+24     	; 0xca8 <__divsf3+0x13c>
     c90:	27 fd       	sbrc	r18, 7
     c92:	0a c0       	rjmp	.+20     	; 0xca8 <__divsf3+0x13c>
     c94:	e1 14       	cp	r14, r1
     c96:	f1 04       	cpc	r15, r1
     c98:	01 05       	cpc	r16, r1
     c9a:	11 05       	cpc	r17, r1
     c9c:	29 f0       	breq	.+10     	; 0xca8 <__divsf3+0x13c>
     c9e:	20 5c       	subi	r18, 0xC0	; 192
     ca0:	3f 4f       	sbci	r19, 0xFF	; 255
     ca2:	4f 4f       	sbci	r20, 0xFF	; 255
     ca4:	5f 4f       	sbci	r21, 0xFF	; 255
     ca6:	20 78       	andi	r18, 0x80	; 128
     ca8:	2d 87       	std	Y+13, r18	; 0x0d
     caa:	3e 87       	std	Y+14, r19	; 0x0e
     cac:	4f 87       	std	Y+15, r20	; 0x0f
     cae:	58 8b       	std	Y+16, r21	; 0x10
     cb0:	be 01       	movw	r22, r28
     cb2:	67 5f       	subi	r22, 0xF7	; 247
     cb4:	7f 4f       	sbci	r23, 0xFF	; 255
     cb6:	cb 01       	movw	r24, r22
     cb8:	0e 94 93 07 	call	0xf26	; 0xf26 <__pack_f>
     cbc:	68 96       	adiw	r28, 0x18	; 24
     cbe:	ea e0       	ldi	r30, 0x0A	; 10
     cc0:	0c 94 5d 09 	jmp	0x12ba	; 0x12ba <__epilogue_restores__+0x10>

00000cc4 <__gesf2>:
     cc4:	a8 e1       	ldi	r26, 0x18	; 24
     cc6:	b0 e0       	ldi	r27, 0x00	; 0
     cc8:	e8 e6       	ldi	r30, 0x68	; 104
     cca:	f6 e0       	ldi	r31, 0x06	; 6
     ccc:	0c 94 45 09 	jmp	0x128a	; 0x128a <__prologue_saves__+0x18>
     cd0:	69 83       	std	Y+1, r22	; 0x01
     cd2:	7a 83       	std	Y+2, r23	; 0x02
     cd4:	8b 83       	std	Y+3, r24	; 0x03
     cd6:	9c 83       	std	Y+4, r25	; 0x04
     cd8:	2d 83       	std	Y+5, r18	; 0x05
     cda:	3e 83       	std	Y+6, r19	; 0x06
     cdc:	4f 83       	std	Y+7, r20	; 0x07
     cde:	58 87       	std	Y+8, r21	; 0x08
     ce0:	89 e0       	ldi	r24, 0x09	; 9
     ce2:	e8 2e       	mov	r14, r24
     ce4:	f1 2c       	mov	r15, r1
     ce6:	ec 0e       	add	r14, r28
     ce8:	fd 1e       	adc	r15, r29
     cea:	ce 01       	movw	r24, r28
     cec:	01 96       	adiw	r24, 0x01	; 1
     cee:	b7 01       	movw	r22, r14
     cf0:	0e 94 68 08 	call	0x10d0	; 0x10d0 <__unpack_f>
     cf4:	8e 01       	movw	r16, r28
     cf6:	0f 5e       	subi	r16, 0xEF	; 239
     cf8:	1f 4f       	sbci	r17, 0xFF	; 255
     cfa:	ce 01       	movw	r24, r28
     cfc:	05 96       	adiw	r24, 0x05	; 5
     cfe:	b8 01       	movw	r22, r16
     d00:	0e 94 68 08 	call	0x10d0	; 0x10d0 <__unpack_f>
     d04:	89 85       	ldd	r24, Y+9	; 0x09
     d06:	82 30       	cpi	r24, 0x02	; 2
     d08:	40 f0       	brcs	.+16     	; 0xd1a <__gesf2+0x56>
     d0a:	89 89       	ldd	r24, Y+17	; 0x11
     d0c:	82 30       	cpi	r24, 0x02	; 2
     d0e:	28 f0       	brcs	.+10     	; 0xd1a <__gesf2+0x56>
     d10:	c7 01       	movw	r24, r14
     d12:	b8 01       	movw	r22, r16
     d14:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <__fpcmp_parts_f>
     d18:	01 c0       	rjmp	.+2      	; 0xd1c <__gesf2+0x58>
     d1a:	8f ef       	ldi	r24, 0xFF	; 255
     d1c:	68 96       	adiw	r28, 0x18	; 24
     d1e:	e6 e0       	ldi	r30, 0x06	; 6
     d20:	0c 94 61 09 	jmp	0x12c2	; 0x12c2 <__epilogue_restores__+0x18>

00000d24 <__floatsisf>:
     d24:	a8 e0       	ldi	r26, 0x08	; 8
     d26:	b0 e0       	ldi	r27, 0x00	; 0
     d28:	e8 e9       	ldi	r30, 0x98	; 152
     d2a:	f6 e0       	ldi	r31, 0x06	; 6
     d2c:	0c 94 42 09 	jmp	0x1284	; 0x1284 <__prologue_saves__+0x12>
     d30:	9b 01       	movw	r18, r22
     d32:	ac 01       	movw	r20, r24
     d34:	83 e0       	ldi	r24, 0x03	; 3
     d36:	89 83       	std	Y+1, r24	; 0x01
     d38:	da 01       	movw	r26, r20
     d3a:	c9 01       	movw	r24, r18
     d3c:	88 27       	eor	r24, r24
     d3e:	b7 fd       	sbrc	r27, 7
     d40:	83 95       	inc	r24
     d42:	99 27       	eor	r25, r25
     d44:	aa 27       	eor	r26, r26
     d46:	bb 27       	eor	r27, r27
     d48:	b8 2e       	mov	r11, r24
     d4a:	21 15       	cp	r18, r1
     d4c:	31 05       	cpc	r19, r1
     d4e:	41 05       	cpc	r20, r1
     d50:	51 05       	cpc	r21, r1
     d52:	19 f4       	brne	.+6      	; 0xd5a <__floatsisf+0x36>
     d54:	82 e0       	ldi	r24, 0x02	; 2
     d56:	89 83       	std	Y+1, r24	; 0x01
     d58:	3a c0       	rjmp	.+116    	; 0xdce <__floatsisf+0xaa>
     d5a:	88 23       	and	r24, r24
     d5c:	a9 f0       	breq	.+42     	; 0xd88 <__floatsisf+0x64>
     d5e:	20 30       	cpi	r18, 0x00	; 0
     d60:	80 e0       	ldi	r24, 0x00	; 0
     d62:	38 07       	cpc	r19, r24
     d64:	80 e0       	ldi	r24, 0x00	; 0
     d66:	48 07       	cpc	r20, r24
     d68:	80 e8       	ldi	r24, 0x80	; 128
     d6a:	58 07       	cpc	r21, r24
     d6c:	29 f4       	brne	.+10     	; 0xd78 <__floatsisf+0x54>
     d6e:	60 e0       	ldi	r22, 0x00	; 0
     d70:	70 e0       	ldi	r23, 0x00	; 0
     d72:	80 e0       	ldi	r24, 0x00	; 0
     d74:	9f ec       	ldi	r25, 0xCF	; 207
     d76:	30 c0       	rjmp	.+96     	; 0xdd8 <__floatsisf+0xb4>
     d78:	ee 24       	eor	r14, r14
     d7a:	ff 24       	eor	r15, r15
     d7c:	87 01       	movw	r16, r14
     d7e:	e2 1a       	sub	r14, r18
     d80:	f3 0a       	sbc	r15, r19
     d82:	04 0b       	sbc	r16, r20
     d84:	15 0b       	sbc	r17, r21
     d86:	02 c0       	rjmp	.+4      	; 0xd8c <__floatsisf+0x68>
     d88:	79 01       	movw	r14, r18
     d8a:	8a 01       	movw	r16, r20
     d8c:	8e e1       	ldi	r24, 0x1E	; 30
     d8e:	c8 2e       	mov	r12, r24
     d90:	d1 2c       	mov	r13, r1
     d92:	dc 82       	std	Y+4, r13	; 0x04
     d94:	cb 82       	std	Y+3, r12	; 0x03
     d96:	ed 82       	std	Y+5, r14	; 0x05
     d98:	fe 82       	std	Y+6, r15	; 0x06
     d9a:	0f 83       	std	Y+7, r16	; 0x07
     d9c:	18 87       	std	Y+8, r17	; 0x08
     d9e:	c8 01       	movw	r24, r16
     da0:	b7 01       	movw	r22, r14
     da2:	0e 94 44 07 	call	0xe88	; 0xe88 <__clzsi2>
     da6:	01 97       	sbiw	r24, 0x01	; 1
     da8:	18 16       	cp	r1, r24
     daa:	19 06       	cpc	r1, r25
     dac:	84 f4       	brge	.+32     	; 0xdce <__floatsisf+0xaa>
     dae:	08 2e       	mov	r0, r24
     db0:	04 c0       	rjmp	.+8      	; 0xdba <__floatsisf+0x96>
     db2:	ee 0c       	add	r14, r14
     db4:	ff 1c       	adc	r15, r15
     db6:	00 1f       	adc	r16, r16
     db8:	11 1f       	adc	r17, r17
     dba:	0a 94       	dec	r0
     dbc:	d2 f7       	brpl	.-12     	; 0xdb2 <__floatsisf+0x8e>
     dbe:	ed 82       	std	Y+5, r14	; 0x05
     dc0:	fe 82       	std	Y+6, r15	; 0x06
     dc2:	0f 83       	std	Y+7, r16	; 0x07
     dc4:	18 87       	std	Y+8, r17	; 0x08
     dc6:	c8 1a       	sub	r12, r24
     dc8:	d9 0a       	sbc	r13, r25
     dca:	dc 82       	std	Y+4, r13	; 0x04
     dcc:	cb 82       	std	Y+3, r12	; 0x03
     dce:	ba 82       	std	Y+2, r11	; 0x02
     dd0:	ce 01       	movw	r24, r28
     dd2:	01 96       	adiw	r24, 0x01	; 1
     dd4:	0e 94 93 07 	call	0xf26	; 0xf26 <__pack_f>
     dd8:	28 96       	adiw	r28, 0x08	; 8
     dda:	e9 e0       	ldi	r30, 0x09	; 9
     ddc:	0c 94 5e 09 	jmp	0x12bc	; 0x12bc <__epilogue_restores__+0x12>

00000de0 <__fixsfsi>:
     de0:	ac e0       	ldi	r26, 0x0C	; 12
     de2:	b0 e0       	ldi	r27, 0x00	; 0
     de4:	e6 ef       	ldi	r30, 0xF6	; 246
     de6:	f6 e0       	ldi	r31, 0x06	; 6
     de8:	0c 94 49 09 	jmp	0x1292	; 0x1292 <__prologue_saves__+0x20>
     dec:	69 83       	std	Y+1, r22	; 0x01
     dee:	7a 83       	std	Y+2, r23	; 0x02
     df0:	8b 83       	std	Y+3, r24	; 0x03
     df2:	9c 83       	std	Y+4, r25	; 0x04
     df4:	ce 01       	movw	r24, r28
     df6:	01 96       	adiw	r24, 0x01	; 1
     df8:	be 01       	movw	r22, r28
     dfa:	6b 5f       	subi	r22, 0xFB	; 251
     dfc:	7f 4f       	sbci	r23, 0xFF	; 255
     dfe:	0e 94 68 08 	call	0x10d0	; 0x10d0 <__unpack_f>
     e02:	8d 81       	ldd	r24, Y+5	; 0x05
     e04:	82 30       	cpi	r24, 0x02	; 2
     e06:	61 f1       	breq	.+88     	; 0xe60 <__fixsfsi+0x80>
     e08:	82 30       	cpi	r24, 0x02	; 2
     e0a:	50 f1       	brcs	.+84     	; 0xe60 <__fixsfsi+0x80>
     e0c:	84 30       	cpi	r24, 0x04	; 4
     e0e:	21 f4       	brne	.+8      	; 0xe18 <__fixsfsi+0x38>
     e10:	8e 81       	ldd	r24, Y+6	; 0x06
     e12:	88 23       	and	r24, r24
     e14:	51 f1       	breq	.+84     	; 0xe6a <__fixsfsi+0x8a>
     e16:	2e c0       	rjmp	.+92     	; 0xe74 <__fixsfsi+0x94>
     e18:	2f 81       	ldd	r18, Y+7	; 0x07
     e1a:	38 85       	ldd	r19, Y+8	; 0x08
     e1c:	37 fd       	sbrc	r19, 7
     e1e:	20 c0       	rjmp	.+64     	; 0xe60 <__fixsfsi+0x80>
     e20:	6e 81       	ldd	r22, Y+6	; 0x06
     e22:	2f 31       	cpi	r18, 0x1F	; 31
     e24:	31 05       	cpc	r19, r1
     e26:	1c f0       	brlt	.+6      	; 0xe2e <__fixsfsi+0x4e>
     e28:	66 23       	and	r22, r22
     e2a:	f9 f0       	breq	.+62     	; 0xe6a <__fixsfsi+0x8a>
     e2c:	23 c0       	rjmp	.+70     	; 0xe74 <__fixsfsi+0x94>
     e2e:	8e e1       	ldi	r24, 0x1E	; 30
     e30:	90 e0       	ldi	r25, 0x00	; 0
     e32:	82 1b       	sub	r24, r18
     e34:	93 0b       	sbc	r25, r19
     e36:	29 85       	ldd	r18, Y+9	; 0x09
     e38:	3a 85       	ldd	r19, Y+10	; 0x0a
     e3a:	4b 85       	ldd	r20, Y+11	; 0x0b
     e3c:	5c 85       	ldd	r21, Y+12	; 0x0c
     e3e:	04 c0       	rjmp	.+8      	; 0xe48 <__fixsfsi+0x68>
     e40:	56 95       	lsr	r21
     e42:	47 95       	ror	r20
     e44:	37 95       	ror	r19
     e46:	27 95       	ror	r18
     e48:	8a 95       	dec	r24
     e4a:	d2 f7       	brpl	.-12     	; 0xe40 <__fixsfsi+0x60>
     e4c:	66 23       	and	r22, r22
     e4e:	b1 f0       	breq	.+44     	; 0xe7c <__fixsfsi+0x9c>
     e50:	50 95       	com	r21
     e52:	40 95       	com	r20
     e54:	30 95       	com	r19
     e56:	21 95       	neg	r18
     e58:	3f 4f       	sbci	r19, 0xFF	; 255
     e5a:	4f 4f       	sbci	r20, 0xFF	; 255
     e5c:	5f 4f       	sbci	r21, 0xFF	; 255
     e5e:	0e c0       	rjmp	.+28     	; 0xe7c <__fixsfsi+0x9c>
     e60:	20 e0       	ldi	r18, 0x00	; 0
     e62:	30 e0       	ldi	r19, 0x00	; 0
     e64:	40 e0       	ldi	r20, 0x00	; 0
     e66:	50 e0       	ldi	r21, 0x00	; 0
     e68:	09 c0       	rjmp	.+18     	; 0xe7c <__fixsfsi+0x9c>
     e6a:	2f ef       	ldi	r18, 0xFF	; 255
     e6c:	3f ef       	ldi	r19, 0xFF	; 255
     e6e:	4f ef       	ldi	r20, 0xFF	; 255
     e70:	5f e7       	ldi	r21, 0x7F	; 127
     e72:	04 c0       	rjmp	.+8      	; 0xe7c <__fixsfsi+0x9c>
     e74:	20 e0       	ldi	r18, 0x00	; 0
     e76:	30 e0       	ldi	r19, 0x00	; 0
     e78:	40 e0       	ldi	r20, 0x00	; 0
     e7a:	50 e8       	ldi	r21, 0x80	; 128
     e7c:	b9 01       	movw	r22, r18
     e7e:	ca 01       	movw	r24, r20
     e80:	2c 96       	adiw	r28, 0x0c	; 12
     e82:	e2 e0       	ldi	r30, 0x02	; 2
     e84:	0c 94 65 09 	jmp	0x12ca	; 0x12ca <__epilogue_restores__+0x20>

00000e88 <__clzsi2>:
     e88:	ef 92       	push	r14
     e8a:	ff 92       	push	r15
     e8c:	0f 93       	push	r16
     e8e:	1f 93       	push	r17
     e90:	7b 01       	movw	r14, r22
     e92:	8c 01       	movw	r16, r24
     e94:	80 e0       	ldi	r24, 0x00	; 0
     e96:	e8 16       	cp	r14, r24
     e98:	80 e0       	ldi	r24, 0x00	; 0
     e9a:	f8 06       	cpc	r15, r24
     e9c:	81 e0       	ldi	r24, 0x01	; 1
     e9e:	08 07       	cpc	r16, r24
     ea0:	80 e0       	ldi	r24, 0x00	; 0
     ea2:	18 07       	cpc	r17, r24
     ea4:	88 f4       	brcc	.+34     	; 0xec8 <__clzsi2+0x40>
     ea6:	8f ef       	ldi	r24, 0xFF	; 255
     ea8:	e8 16       	cp	r14, r24
     eaa:	f1 04       	cpc	r15, r1
     eac:	01 05       	cpc	r16, r1
     eae:	11 05       	cpc	r17, r1
     eb0:	31 f0       	breq	.+12     	; 0xebe <__clzsi2+0x36>
     eb2:	28 f0       	brcs	.+10     	; 0xebe <__clzsi2+0x36>
     eb4:	88 e0       	ldi	r24, 0x08	; 8
     eb6:	90 e0       	ldi	r25, 0x00	; 0
     eb8:	a0 e0       	ldi	r26, 0x00	; 0
     eba:	b0 e0       	ldi	r27, 0x00	; 0
     ebc:	17 c0       	rjmp	.+46     	; 0xeec <__clzsi2+0x64>
     ebe:	80 e0       	ldi	r24, 0x00	; 0
     ec0:	90 e0       	ldi	r25, 0x00	; 0
     ec2:	a0 e0       	ldi	r26, 0x00	; 0
     ec4:	b0 e0       	ldi	r27, 0x00	; 0
     ec6:	12 c0       	rjmp	.+36     	; 0xeec <__clzsi2+0x64>
     ec8:	80 e0       	ldi	r24, 0x00	; 0
     eca:	e8 16       	cp	r14, r24
     ecc:	80 e0       	ldi	r24, 0x00	; 0
     ece:	f8 06       	cpc	r15, r24
     ed0:	80 e0       	ldi	r24, 0x00	; 0
     ed2:	08 07       	cpc	r16, r24
     ed4:	81 e0       	ldi	r24, 0x01	; 1
     ed6:	18 07       	cpc	r17, r24
     ed8:	28 f0       	brcs	.+10     	; 0xee4 <__clzsi2+0x5c>
     eda:	88 e1       	ldi	r24, 0x18	; 24
     edc:	90 e0       	ldi	r25, 0x00	; 0
     ede:	a0 e0       	ldi	r26, 0x00	; 0
     ee0:	b0 e0       	ldi	r27, 0x00	; 0
     ee2:	04 c0       	rjmp	.+8      	; 0xeec <__clzsi2+0x64>
     ee4:	80 e1       	ldi	r24, 0x10	; 16
     ee6:	90 e0       	ldi	r25, 0x00	; 0
     ee8:	a0 e0       	ldi	r26, 0x00	; 0
     eea:	b0 e0       	ldi	r27, 0x00	; 0
     eec:	20 e2       	ldi	r18, 0x20	; 32
     eee:	30 e0       	ldi	r19, 0x00	; 0
     ef0:	40 e0       	ldi	r20, 0x00	; 0
     ef2:	50 e0       	ldi	r21, 0x00	; 0
     ef4:	28 1b       	sub	r18, r24
     ef6:	39 0b       	sbc	r19, r25
     ef8:	4a 0b       	sbc	r20, r26
     efa:	5b 0b       	sbc	r21, r27
     efc:	04 c0       	rjmp	.+8      	; 0xf06 <__clzsi2+0x7e>
     efe:	16 95       	lsr	r17
     f00:	07 95       	ror	r16
     f02:	f7 94       	ror	r15
     f04:	e7 94       	ror	r14
     f06:	8a 95       	dec	r24
     f08:	d2 f7       	brpl	.-12     	; 0xefe <__clzsi2+0x76>
     f0a:	f7 01       	movw	r30, r14
     f0c:	e8 5f       	subi	r30, 0xF8	; 248
     f0e:	fe 4f       	sbci	r31, 0xFE	; 254
     f10:	80 81       	ld	r24, Z
     f12:	28 1b       	sub	r18, r24
     f14:	31 09       	sbc	r19, r1
     f16:	41 09       	sbc	r20, r1
     f18:	51 09       	sbc	r21, r1
     f1a:	c9 01       	movw	r24, r18
     f1c:	1f 91       	pop	r17
     f1e:	0f 91       	pop	r16
     f20:	ff 90       	pop	r15
     f22:	ef 90       	pop	r14
     f24:	08 95       	ret

00000f26 <__pack_f>:
     f26:	df 92       	push	r13
     f28:	ef 92       	push	r14
     f2a:	ff 92       	push	r15
     f2c:	0f 93       	push	r16
     f2e:	1f 93       	push	r17
     f30:	fc 01       	movw	r30, r24
     f32:	e4 80       	ldd	r14, Z+4	; 0x04
     f34:	f5 80       	ldd	r15, Z+5	; 0x05
     f36:	06 81       	ldd	r16, Z+6	; 0x06
     f38:	17 81       	ldd	r17, Z+7	; 0x07
     f3a:	d1 80       	ldd	r13, Z+1	; 0x01
     f3c:	80 81       	ld	r24, Z
     f3e:	82 30       	cpi	r24, 0x02	; 2
     f40:	48 f4       	brcc	.+18     	; 0xf54 <__pack_f+0x2e>
     f42:	80 e0       	ldi	r24, 0x00	; 0
     f44:	90 e0       	ldi	r25, 0x00	; 0
     f46:	a0 e1       	ldi	r26, 0x10	; 16
     f48:	b0 e0       	ldi	r27, 0x00	; 0
     f4a:	e8 2a       	or	r14, r24
     f4c:	f9 2a       	or	r15, r25
     f4e:	0a 2b       	or	r16, r26
     f50:	1b 2b       	or	r17, r27
     f52:	a5 c0       	rjmp	.+330    	; 0x109e <__pack_f+0x178>
     f54:	84 30       	cpi	r24, 0x04	; 4
     f56:	09 f4       	brne	.+2      	; 0xf5a <__pack_f+0x34>
     f58:	9f c0       	rjmp	.+318    	; 0x1098 <__pack_f+0x172>
     f5a:	82 30       	cpi	r24, 0x02	; 2
     f5c:	21 f4       	brne	.+8      	; 0xf66 <__pack_f+0x40>
     f5e:	ee 24       	eor	r14, r14
     f60:	ff 24       	eor	r15, r15
     f62:	87 01       	movw	r16, r14
     f64:	05 c0       	rjmp	.+10     	; 0xf70 <__pack_f+0x4a>
     f66:	e1 14       	cp	r14, r1
     f68:	f1 04       	cpc	r15, r1
     f6a:	01 05       	cpc	r16, r1
     f6c:	11 05       	cpc	r17, r1
     f6e:	19 f4       	brne	.+6      	; 0xf76 <__pack_f+0x50>
     f70:	e0 e0       	ldi	r30, 0x00	; 0
     f72:	f0 e0       	ldi	r31, 0x00	; 0
     f74:	96 c0       	rjmp	.+300    	; 0x10a2 <__pack_f+0x17c>
     f76:	62 81       	ldd	r22, Z+2	; 0x02
     f78:	73 81       	ldd	r23, Z+3	; 0x03
     f7a:	9f ef       	ldi	r25, 0xFF	; 255
     f7c:	62 38       	cpi	r22, 0x82	; 130
     f7e:	79 07       	cpc	r23, r25
     f80:	0c f0       	brlt	.+2      	; 0xf84 <__pack_f+0x5e>
     f82:	5b c0       	rjmp	.+182    	; 0x103a <__pack_f+0x114>
     f84:	22 e8       	ldi	r18, 0x82	; 130
     f86:	3f ef       	ldi	r19, 0xFF	; 255
     f88:	26 1b       	sub	r18, r22
     f8a:	37 0b       	sbc	r19, r23
     f8c:	2a 31       	cpi	r18, 0x1A	; 26
     f8e:	31 05       	cpc	r19, r1
     f90:	2c f0       	brlt	.+10     	; 0xf9c <__pack_f+0x76>
     f92:	20 e0       	ldi	r18, 0x00	; 0
     f94:	30 e0       	ldi	r19, 0x00	; 0
     f96:	40 e0       	ldi	r20, 0x00	; 0
     f98:	50 e0       	ldi	r21, 0x00	; 0
     f9a:	2a c0       	rjmp	.+84     	; 0xff0 <__pack_f+0xca>
     f9c:	b8 01       	movw	r22, r16
     f9e:	a7 01       	movw	r20, r14
     fa0:	02 2e       	mov	r0, r18
     fa2:	04 c0       	rjmp	.+8      	; 0xfac <__pack_f+0x86>
     fa4:	76 95       	lsr	r23
     fa6:	67 95       	ror	r22
     fa8:	57 95       	ror	r21
     faa:	47 95       	ror	r20
     fac:	0a 94       	dec	r0
     fae:	d2 f7       	brpl	.-12     	; 0xfa4 <__pack_f+0x7e>
     fb0:	81 e0       	ldi	r24, 0x01	; 1
     fb2:	90 e0       	ldi	r25, 0x00	; 0
     fb4:	a0 e0       	ldi	r26, 0x00	; 0
     fb6:	b0 e0       	ldi	r27, 0x00	; 0
     fb8:	04 c0       	rjmp	.+8      	; 0xfc2 <__pack_f+0x9c>
     fba:	88 0f       	add	r24, r24
     fbc:	99 1f       	adc	r25, r25
     fbe:	aa 1f       	adc	r26, r26
     fc0:	bb 1f       	adc	r27, r27
     fc2:	2a 95       	dec	r18
     fc4:	d2 f7       	brpl	.-12     	; 0xfba <__pack_f+0x94>
     fc6:	01 97       	sbiw	r24, 0x01	; 1
     fc8:	a1 09       	sbc	r26, r1
     fca:	b1 09       	sbc	r27, r1
     fcc:	8e 21       	and	r24, r14
     fce:	9f 21       	and	r25, r15
     fd0:	a0 23       	and	r26, r16
     fd2:	b1 23       	and	r27, r17
     fd4:	00 97       	sbiw	r24, 0x00	; 0
     fd6:	a1 05       	cpc	r26, r1
     fd8:	b1 05       	cpc	r27, r1
     fda:	21 f0       	breq	.+8      	; 0xfe4 <__pack_f+0xbe>
     fdc:	81 e0       	ldi	r24, 0x01	; 1
     fde:	90 e0       	ldi	r25, 0x00	; 0
     fe0:	a0 e0       	ldi	r26, 0x00	; 0
     fe2:	b0 e0       	ldi	r27, 0x00	; 0
     fe4:	9a 01       	movw	r18, r20
     fe6:	ab 01       	movw	r20, r22
     fe8:	28 2b       	or	r18, r24
     fea:	39 2b       	or	r19, r25
     fec:	4a 2b       	or	r20, r26
     fee:	5b 2b       	or	r21, r27
     ff0:	da 01       	movw	r26, r20
     ff2:	c9 01       	movw	r24, r18
     ff4:	8f 77       	andi	r24, 0x7F	; 127
     ff6:	90 70       	andi	r25, 0x00	; 0
     ff8:	a0 70       	andi	r26, 0x00	; 0
     ffa:	b0 70       	andi	r27, 0x00	; 0
     ffc:	80 34       	cpi	r24, 0x40	; 64
     ffe:	91 05       	cpc	r25, r1
    1000:	a1 05       	cpc	r26, r1
    1002:	b1 05       	cpc	r27, r1
    1004:	39 f4       	brne	.+14     	; 0x1014 <__pack_f+0xee>
    1006:	27 ff       	sbrs	r18, 7
    1008:	09 c0       	rjmp	.+18     	; 0x101c <__pack_f+0xf6>
    100a:	20 5c       	subi	r18, 0xC0	; 192
    100c:	3f 4f       	sbci	r19, 0xFF	; 255
    100e:	4f 4f       	sbci	r20, 0xFF	; 255
    1010:	5f 4f       	sbci	r21, 0xFF	; 255
    1012:	04 c0       	rjmp	.+8      	; 0x101c <__pack_f+0xf6>
    1014:	21 5c       	subi	r18, 0xC1	; 193
    1016:	3f 4f       	sbci	r19, 0xFF	; 255
    1018:	4f 4f       	sbci	r20, 0xFF	; 255
    101a:	5f 4f       	sbci	r21, 0xFF	; 255
    101c:	e0 e0       	ldi	r30, 0x00	; 0
    101e:	f0 e0       	ldi	r31, 0x00	; 0
    1020:	20 30       	cpi	r18, 0x00	; 0
    1022:	a0 e0       	ldi	r26, 0x00	; 0
    1024:	3a 07       	cpc	r19, r26
    1026:	a0 e0       	ldi	r26, 0x00	; 0
    1028:	4a 07       	cpc	r20, r26
    102a:	a0 e4       	ldi	r26, 0x40	; 64
    102c:	5a 07       	cpc	r21, r26
    102e:	10 f0       	brcs	.+4      	; 0x1034 <__pack_f+0x10e>
    1030:	e1 e0       	ldi	r30, 0x01	; 1
    1032:	f0 e0       	ldi	r31, 0x00	; 0
    1034:	79 01       	movw	r14, r18
    1036:	8a 01       	movw	r16, r20
    1038:	27 c0       	rjmp	.+78     	; 0x1088 <__pack_f+0x162>
    103a:	60 38       	cpi	r22, 0x80	; 128
    103c:	71 05       	cpc	r23, r1
    103e:	64 f5       	brge	.+88     	; 0x1098 <__pack_f+0x172>
    1040:	fb 01       	movw	r30, r22
    1042:	e1 58       	subi	r30, 0x81	; 129
    1044:	ff 4f       	sbci	r31, 0xFF	; 255
    1046:	d8 01       	movw	r26, r16
    1048:	c7 01       	movw	r24, r14
    104a:	8f 77       	andi	r24, 0x7F	; 127
    104c:	90 70       	andi	r25, 0x00	; 0
    104e:	a0 70       	andi	r26, 0x00	; 0
    1050:	b0 70       	andi	r27, 0x00	; 0
    1052:	80 34       	cpi	r24, 0x40	; 64
    1054:	91 05       	cpc	r25, r1
    1056:	a1 05       	cpc	r26, r1
    1058:	b1 05       	cpc	r27, r1
    105a:	39 f4       	brne	.+14     	; 0x106a <__pack_f+0x144>
    105c:	e7 fe       	sbrs	r14, 7
    105e:	0d c0       	rjmp	.+26     	; 0x107a <__pack_f+0x154>
    1060:	80 e4       	ldi	r24, 0x40	; 64
    1062:	90 e0       	ldi	r25, 0x00	; 0
    1064:	a0 e0       	ldi	r26, 0x00	; 0
    1066:	b0 e0       	ldi	r27, 0x00	; 0
    1068:	04 c0       	rjmp	.+8      	; 0x1072 <__pack_f+0x14c>
    106a:	8f e3       	ldi	r24, 0x3F	; 63
    106c:	90 e0       	ldi	r25, 0x00	; 0
    106e:	a0 e0       	ldi	r26, 0x00	; 0
    1070:	b0 e0       	ldi	r27, 0x00	; 0
    1072:	e8 0e       	add	r14, r24
    1074:	f9 1e       	adc	r15, r25
    1076:	0a 1f       	adc	r16, r26
    1078:	1b 1f       	adc	r17, r27
    107a:	17 ff       	sbrs	r17, 7
    107c:	05 c0       	rjmp	.+10     	; 0x1088 <__pack_f+0x162>
    107e:	16 95       	lsr	r17
    1080:	07 95       	ror	r16
    1082:	f7 94       	ror	r15
    1084:	e7 94       	ror	r14
    1086:	31 96       	adiw	r30, 0x01	; 1
    1088:	87 e0       	ldi	r24, 0x07	; 7
    108a:	16 95       	lsr	r17
    108c:	07 95       	ror	r16
    108e:	f7 94       	ror	r15
    1090:	e7 94       	ror	r14
    1092:	8a 95       	dec	r24
    1094:	d1 f7       	brne	.-12     	; 0x108a <__pack_f+0x164>
    1096:	05 c0       	rjmp	.+10     	; 0x10a2 <__pack_f+0x17c>
    1098:	ee 24       	eor	r14, r14
    109a:	ff 24       	eor	r15, r15
    109c:	87 01       	movw	r16, r14
    109e:	ef ef       	ldi	r30, 0xFF	; 255
    10a0:	f0 e0       	ldi	r31, 0x00	; 0
    10a2:	6e 2f       	mov	r22, r30
    10a4:	67 95       	ror	r22
    10a6:	66 27       	eor	r22, r22
    10a8:	67 95       	ror	r22
    10aa:	90 2f       	mov	r25, r16
    10ac:	9f 77       	andi	r25, 0x7F	; 127
    10ae:	d7 94       	ror	r13
    10b0:	dd 24       	eor	r13, r13
    10b2:	d7 94       	ror	r13
    10b4:	8e 2f       	mov	r24, r30
    10b6:	86 95       	lsr	r24
    10b8:	49 2f       	mov	r20, r25
    10ba:	46 2b       	or	r20, r22
    10bc:	58 2f       	mov	r21, r24
    10be:	5d 29       	or	r21, r13
    10c0:	b7 01       	movw	r22, r14
    10c2:	ca 01       	movw	r24, r20
    10c4:	1f 91       	pop	r17
    10c6:	0f 91       	pop	r16
    10c8:	ff 90       	pop	r15
    10ca:	ef 90       	pop	r14
    10cc:	df 90       	pop	r13
    10ce:	08 95       	ret

000010d0 <__unpack_f>:
    10d0:	fc 01       	movw	r30, r24
    10d2:	db 01       	movw	r26, r22
    10d4:	40 81       	ld	r20, Z
    10d6:	51 81       	ldd	r21, Z+1	; 0x01
    10d8:	22 81       	ldd	r18, Z+2	; 0x02
    10da:	62 2f       	mov	r22, r18
    10dc:	6f 77       	andi	r22, 0x7F	; 127
    10de:	70 e0       	ldi	r23, 0x00	; 0
    10e0:	22 1f       	adc	r18, r18
    10e2:	22 27       	eor	r18, r18
    10e4:	22 1f       	adc	r18, r18
    10e6:	93 81       	ldd	r25, Z+3	; 0x03
    10e8:	89 2f       	mov	r24, r25
    10ea:	88 0f       	add	r24, r24
    10ec:	82 2b       	or	r24, r18
    10ee:	28 2f       	mov	r18, r24
    10f0:	30 e0       	ldi	r19, 0x00	; 0
    10f2:	99 1f       	adc	r25, r25
    10f4:	99 27       	eor	r25, r25
    10f6:	99 1f       	adc	r25, r25
    10f8:	11 96       	adiw	r26, 0x01	; 1
    10fa:	9c 93       	st	X, r25
    10fc:	11 97       	sbiw	r26, 0x01	; 1
    10fe:	21 15       	cp	r18, r1
    1100:	31 05       	cpc	r19, r1
    1102:	a9 f5       	brne	.+106    	; 0x116e <__unpack_f+0x9e>
    1104:	41 15       	cp	r20, r1
    1106:	51 05       	cpc	r21, r1
    1108:	61 05       	cpc	r22, r1
    110a:	71 05       	cpc	r23, r1
    110c:	11 f4       	brne	.+4      	; 0x1112 <__unpack_f+0x42>
    110e:	82 e0       	ldi	r24, 0x02	; 2
    1110:	37 c0       	rjmp	.+110    	; 0x1180 <__unpack_f+0xb0>
    1112:	82 e8       	ldi	r24, 0x82	; 130
    1114:	9f ef       	ldi	r25, 0xFF	; 255
    1116:	13 96       	adiw	r26, 0x03	; 3
    1118:	9c 93       	st	X, r25
    111a:	8e 93       	st	-X, r24
    111c:	12 97       	sbiw	r26, 0x02	; 2
    111e:	9a 01       	movw	r18, r20
    1120:	ab 01       	movw	r20, r22
    1122:	67 e0       	ldi	r22, 0x07	; 7
    1124:	22 0f       	add	r18, r18
    1126:	33 1f       	adc	r19, r19
    1128:	44 1f       	adc	r20, r20
    112a:	55 1f       	adc	r21, r21
    112c:	6a 95       	dec	r22
    112e:	d1 f7       	brne	.-12     	; 0x1124 <__unpack_f+0x54>
    1130:	83 e0       	ldi	r24, 0x03	; 3
    1132:	8c 93       	st	X, r24
    1134:	0d c0       	rjmp	.+26     	; 0x1150 <__unpack_f+0x80>
    1136:	22 0f       	add	r18, r18
    1138:	33 1f       	adc	r19, r19
    113a:	44 1f       	adc	r20, r20
    113c:	55 1f       	adc	r21, r21
    113e:	12 96       	adiw	r26, 0x02	; 2
    1140:	8d 91       	ld	r24, X+
    1142:	9c 91       	ld	r25, X
    1144:	13 97       	sbiw	r26, 0x03	; 3
    1146:	01 97       	sbiw	r24, 0x01	; 1
    1148:	13 96       	adiw	r26, 0x03	; 3
    114a:	9c 93       	st	X, r25
    114c:	8e 93       	st	-X, r24
    114e:	12 97       	sbiw	r26, 0x02	; 2
    1150:	20 30       	cpi	r18, 0x00	; 0
    1152:	80 e0       	ldi	r24, 0x00	; 0
    1154:	38 07       	cpc	r19, r24
    1156:	80 e0       	ldi	r24, 0x00	; 0
    1158:	48 07       	cpc	r20, r24
    115a:	80 e4       	ldi	r24, 0x40	; 64
    115c:	58 07       	cpc	r21, r24
    115e:	58 f3       	brcs	.-42     	; 0x1136 <__unpack_f+0x66>
    1160:	14 96       	adiw	r26, 0x04	; 4
    1162:	2d 93       	st	X+, r18
    1164:	3d 93       	st	X+, r19
    1166:	4d 93       	st	X+, r20
    1168:	5c 93       	st	X, r21
    116a:	17 97       	sbiw	r26, 0x07	; 7
    116c:	08 95       	ret
    116e:	2f 3f       	cpi	r18, 0xFF	; 255
    1170:	31 05       	cpc	r19, r1
    1172:	79 f4       	brne	.+30     	; 0x1192 <__unpack_f+0xc2>
    1174:	41 15       	cp	r20, r1
    1176:	51 05       	cpc	r21, r1
    1178:	61 05       	cpc	r22, r1
    117a:	71 05       	cpc	r23, r1
    117c:	19 f4       	brne	.+6      	; 0x1184 <__unpack_f+0xb4>
    117e:	84 e0       	ldi	r24, 0x04	; 4
    1180:	8c 93       	st	X, r24
    1182:	08 95       	ret
    1184:	64 ff       	sbrs	r22, 4
    1186:	03 c0       	rjmp	.+6      	; 0x118e <__unpack_f+0xbe>
    1188:	81 e0       	ldi	r24, 0x01	; 1
    118a:	8c 93       	st	X, r24
    118c:	12 c0       	rjmp	.+36     	; 0x11b2 <__unpack_f+0xe2>
    118e:	1c 92       	st	X, r1
    1190:	10 c0       	rjmp	.+32     	; 0x11b2 <__unpack_f+0xe2>
    1192:	2f 57       	subi	r18, 0x7F	; 127
    1194:	30 40       	sbci	r19, 0x00	; 0
    1196:	13 96       	adiw	r26, 0x03	; 3
    1198:	3c 93       	st	X, r19
    119a:	2e 93       	st	-X, r18
    119c:	12 97       	sbiw	r26, 0x02	; 2
    119e:	83 e0       	ldi	r24, 0x03	; 3
    11a0:	8c 93       	st	X, r24
    11a2:	87 e0       	ldi	r24, 0x07	; 7
    11a4:	44 0f       	add	r20, r20
    11a6:	55 1f       	adc	r21, r21
    11a8:	66 1f       	adc	r22, r22
    11aa:	77 1f       	adc	r23, r23
    11ac:	8a 95       	dec	r24
    11ae:	d1 f7       	brne	.-12     	; 0x11a4 <__unpack_f+0xd4>
    11b0:	70 64       	ori	r23, 0x40	; 64
    11b2:	14 96       	adiw	r26, 0x04	; 4
    11b4:	4d 93       	st	X+, r20
    11b6:	5d 93       	st	X+, r21
    11b8:	6d 93       	st	X+, r22
    11ba:	7c 93       	st	X, r23
    11bc:	17 97       	sbiw	r26, 0x07	; 7
    11be:	08 95       	ret

000011c0 <__fpcmp_parts_f>:
    11c0:	1f 93       	push	r17
    11c2:	dc 01       	movw	r26, r24
    11c4:	fb 01       	movw	r30, r22
    11c6:	9c 91       	ld	r25, X
    11c8:	92 30       	cpi	r25, 0x02	; 2
    11ca:	08 f4       	brcc	.+2      	; 0x11ce <__fpcmp_parts_f+0xe>
    11cc:	47 c0       	rjmp	.+142    	; 0x125c <__fpcmp_parts_f+0x9c>
    11ce:	80 81       	ld	r24, Z
    11d0:	82 30       	cpi	r24, 0x02	; 2
    11d2:	08 f4       	brcc	.+2      	; 0x11d6 <__fpcmp_parts_f+0x16>
    11d4:	43 c0       	rjmp	.+134    	; 0x125c <__fpcmp_parts_f+0x9c>
    11d6:	94 30       	cpi	r25, 0x04	; 4
    11d8:	51 f4       	brne	.+20     	; 0x11ee <__fpcmp_parts_f+0x2e>
    11da:	11 96       	adiw	r26, 0x01	; 1
    11dc:	1c 91       	ld	r17, X
    11de:	84 30       	cpi	r24, 0x04	; 4
    11e0:	99 f5       	brne	.+102    	; 0x1248 <__fpcmp_parts_f+0x88>
    11e2:	81 81       	ldd	r24, Z+1	; 0x01
    11e4:	68 2f       	mov	r22, r24
    11e6:	70 e0       	ldi	r23, 0x00	; 0
    11e8:	61 1b       	sub	r22, r17
    11ea:	71 09       	sbc	r23, r1
    11ec:	3f c0       	rjmp	.+126    	; 0x126c <__fpcmp_parts_f+0xac>
    11ee:	84 30       	cpi	r24, 0x04	; 4
    11f0:	21 f0       	breq	.+8      	; 0x11fa <__fpcmp_parts_f+0x3a>
    11f2:	92 30       	cpi	r25, 0x02	; 2
    11f4:	31 f4       	brne	.+12     	; 0x1202 <__fpcmp_parts_f+0x42>
    11f6:	82 30       	cpi	r24, 0x02	; 2
    11f8:	b9 f1       	breq	.+110    	; 0x1268 <__fpcmp_parts_f+0xa8>
    11fa:	81 81       	ldd	r24, Z+1	; 0x01
    11fc:	88 23       	and	r24, r24
    11fe:	89 f1       	breq	.+98     	; 0x1262 <__fpcmp_parts_f+0xa2>
    1200:	2d c0       	rjmp	.+90     	; 0x125c <__fpcmp_parts_f+0x9c>
    1202:	11 96       	adiw	r26, 0x01	; 1
    1204:	1c 91       	ld	r17, X
    1206:	11 97       	sbiw	r26, 0x01	; 1
    1208:	82 30       	cpi	r24, 0x02	; 2
    120a:	f1 f0       	breq	.+60     	; 0x1248 <__fpcmp_parts_f+0x88>
    120c:	81 81       	ldd	r24, Z+1	; 0x01
    120e:	18 17       	cp	r17, r24
    1210:	d9 f4       	brne	.+54     	; 0x1248 <__fpcmp_parts_f+0x88>
    1212:	12 96       	adiw	r26, 0x02	; 2
    1214:	2d 91       	ld	r18, X+
    1216:	3c 91       	ld	r19, X
    1218:	13 97       	sbiw	r26, 0x03	; 3
    121a:	82 81       	ldd	r24, Z+2	; 0x02
    121c:	93 81       	ldd	r25, Z+3	; 0x03
    121e:	82 17       	cp	r24, r18
    1220:	93 07       	cpc	r25, r19
    1222:	94 f0       	brlt	.+36     	; 0x1248 <__fpcmp_parts_f+0x88>
    1224:	28 17       	cp	r18, r24
    1226:	39 07       	cpc	r19, r25
    1228:	bc f0       	brlt	.+46     	; 0x1258 <__fpcmp_parts_f+0x98>
    122a:	14 96       	adiw	r26, 0x04	; 4
    122c:	8d 91       	ld	r24, X+
    122e:	9d 91       	ld	r25, X+
    1230:	0d 90       	ld	r0, X+
    1232:	bc 91       	ld	r27, X
    1234:	a0 2d       	mov	r26, r0
    1236:	24 81       	ldd	r18, Z+4	; 0x04
    1238:	35 81       	ldd	r19, Z+5	; 0x05
    123a:	46 81       	ldd	r20, Z+6	; 0x06
    123c:	57 81       	ldd	r21, Z+7	; 0x07
    123e:	28 17       	cp	r18, r24
    1240:	39 07       	cpc	r19, r25
    1242:	4a 07       	cpc	r20, r26
    1244:	5b 07       	cpc	r21, r27
    1246:	18 f4       	brcc	.+6      	; 0x124e <__fpcmp_parts_f+0x8e>
    1248:	11 23       	and	r17, r17
    124a:	41 f0       	breq	.+16     	; 0x125c <__fpcmp_parts_f+0x9c>
    124c:	0a c0       	rjmp	.+20     	; 0x1262 <__fpcmp_parts_f+0xa2>
    124e:	82 17       	cp	r24, r18
    1250:	93 07       	cpc	r25, r19
    1252:	a4 07       	cpc	r26, r20
    1254:	b5 07       	cpc	r27, r21
    1256:	40 f4       	brcc	.+16     	; 0x1268 <__fpcmp_parts_f+0xa8>
    1258:	11 23       	and	r17, r17
    125a:	19 f0       	breq	.+6      	; 0x1262 <__fpcmp_parts_f+0xa2>
    125c:	61 e0       	ldi	r22, 0x01	; 1
    125e:	70 e0       	ldi	r23, 0x00	; 0
    1260:	05 c0       	rjmp	.+10     	; 0x126c <__fpcmp_parts_f+0xac>
    1262:	6f ef       	ldi	r22, 0xFF	; 255
    1264:	7f ef       	ldi	r23, 0xFF	; 255
    1266:	02 c0       	rjmp	.+4      	; 0x126c <__fpcmp_parts_f+0xac>
    1268:	60 e0       	ldi	r22, 0x00	; 0
    126a:	70 e0       	ldi	r23, 0x00	; 0
    126c:	cb 01       	movw	r24, r22
    126e:	1f 91       	pop	r17
    1270:	08 95       	ret

00001272 <__prologue_saves__>:
    1272:	2f 92       	push	r2
    1274:	3f 92       	push	r3
    1276:	4f 92       	push	r4
    1278:	5f 92       	push	r5
    127a:	6f 92       	push	r6
    127c:	7f 92       	push	r7
    127e:	8f 92       	push	r8
    1280:	9f 92       	push	r9
    1282:	af 92       	push	r10
    1284:	bf 92       	push	r11
    1286:	cf 92       	push	r12
    1288:	df 92       	push	r13
    128a:	ef 92       	push	r14
    128c:	ff 92       	push	r15
    128e:	0f 93       	push	r16
    1290:	1f 93       	push	r17
    1292:	cf 93       	push	r28
    1294:	df 93       	push	r29
    1296:	cd b7       	in	r28, 0x3d	; 61
    1298:	de b7       	in	r29, 0x3e	; 62
    129a:	ca 1b       	sub	r28, r26
    129c:	db 0b       	sbc	r29, r27
    129e:	0f b6       	in	r0, 0x3f	; 63
    12a0:	f8 94       	cli
    12a2:	de bf       	out	0x3e, r29	; 62
    12a4:	0f be       	out	0x3f, r0	; 63
    12a6:	cd bf       	out	0x3d, r28	; 61
    12a8:	09 94       	ijmp

000012aa <__epilogue_restores__>:
    12aa:	2a 88       	ldd	r2, Y+18	; 0x12
    12ac:	39 88       	ldd	r3, Y+17	; 0x11
    12ae:	48 88       	ldd	r4, Y+16	; 0x10
    12b0:	5f 84       	ldd	r5, Y+15	; 0x0f
    12b2:	6e 84       	ldd	r6, Y+14	; 0x0e
    12b4:	7d 84       	ldd	r7, Y+13	; 0x0d
    12b6:	8c 84       	ldd	r8, Y+12	; 0x0c
    12b8:	9b 84       	ldd	r9, Y+11	; 0x0b
    12ba:	aa 84       	ldd	r10, Y+10	; 0x0a
    12bc:	b9 84       	ldd	r11, Y+9	; 0x09
    12be:	c8 84       	ldd	r12, Y+8	; 0x08
    12c0:	df 80       	ldd	r13, Y+7	; 0x07
    12c2:	ee 80       	ldd	r14, Y+6	; 0x06
    12c4:	fd 80       	ldd	r15, Y+5	; 0x05
    12c6:	0c 81       	ldd	r16, Y+4	; 0x04
    12c8:	1b 81       	ldd	r17, Y+3	; 0x03
    12ca:	aa 81       	ldd	r26, Y+2	; 0x02
    12cc:	b9 81       	ldd	r27, Y+1	; 0x01
    12ce:	ce 0f       	add	r28, r30
    12d0:	d1 1d       	adc	r29, r1
    12d2:	0f b6       	in	r0, 0x3f	; 63
    12d4:	f8 94       	cli
    12d6:	de bf       	out	0x3e, r29	; 62
    12d8:	0f be       	out	0x3f, r0	; 63
    12da:	cd bf       	out	0x3d, r28	; 61
    12dc:	ed 01       	movw	r28, r26
    12de:	08 95       	ret

000012e0 <_exit>:
    12e0:	f8 94       	cli

000012e2 <__stop_program>:
    12e2:	ff cf       	rjmp	.-2      	; 0x12e2 <__stop_program>
