
bin\Debug\projectAGV.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000108  00800100  0000133e  000013f2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000133e  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800208  00800208  000014fa  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  000014fa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .debug_aranges 000001a0  00000000  00000000  000014fd  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000278  00000000  00000000  0000169d  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000228f  00000000  00000000  00001915  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001269  00000000  00000000  00003ba4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001415  00000000  00000000  00004e0d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000210  00000000  00000000  00006224  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003da  00000000  00000000  00006434  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000956  00000000  00000000  0000680e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00007164  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 8b 00 	jmp	0x116	; 0x116 <__vector_4>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
      74:	12 e0       	ldi	r17, 0x02	; 2
      76:	a8 e0       	ldi	r26, 0x08	; 8
      78:	b2 e0       	ldi	r27, 0x02	; 2
      7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
      7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
      7e:	ae 30       	cpi	r26, 0x0E	; 14
      80:	b1 07       	cpc	r27, r17
      82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>

00000084 <__do_copy_data>:
      84:	12 e0       	ldi	r17, 0x02	; 2
      86:	a0 e0       	ldi	r26, 0x00	; 0
      88:	b1 e0       	ldi	r27, 0x01	; 1
      8a:	ee e3       	ldi	r30, 0x3E	; 62
      8c:	f3 e1       	ldi	r31, 0x13	; 19
      8e:	02 c0       	rjmp	.+4      	; 0x94 <.do_copy_data_start>

00000090 <.do_copy_data_loop>:
      90:	05 90       	lpm	r0, Z+
      92:	0d 92       	st	X+, r0

00000094 <.do_copy_data_start>:
      94:	a8 30       	cpi	r26, 0x08	; 8
      96:	b1 07       	cpc	r27, r17
      98:	d9 f7       	brne	.-10     	; 0x90 <.do_copy_data_loop>
      9a:	0e 94 a6 00 	call	0x14c	; 0x14c <main>
      9e:	0c 94 9d 09 	jmp	0x133a	; 0x133a <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <bocht>:
#define inpPinUno PC3
#define inpPinBocht PC4
#define inpPinBochtL PC5

void bocht(int dir)
{
      a6:	df 93       	push	r29
      a8:	cf 93       	push	r28
      aa:	00 d0       	rcall	.+0      	; 0xac <bocht+0x6>
      ac:	cd b7       	in	r28, 0x3d	; 61
      ae:	de b7       	in	r29, 0x3e	; 62
      b0:	9a 83       	std	Y+2, r25	; 0x02
      b2:	89 83       	std	Y+1, r24	; 0x01
    //1) 10cm naar voren rijden
    stepperGoto(97, voorruit, stepMode);
      b4:	81 e6       	ldi	r24, 0x61	; 97
      b6:	90 e0       	ldi	r25, 0x00	; 0
      b8:	60 e0       	ldi	r22, 0x00	; 0
      ba:	70 e0       	ldi	r23, 0x00	; 0
      bc:	40 e1       	ldi	r20, 0x10	; 16
      be:	50 e0       	ldi	r21, 0x00	; 0
      c0:	0e 94 1f 01 	call	0x23e	; 0x23e <stepperGoto>
    //2) bocht maken naar directie bocht(+- 90 graden)
    singleStepperGoTo(236,voorruit,stepMode, dir);
      c4:	29 81       	ldd	r18, Y+1	; 0x01
      c6:	3a 81       	ldd	r19, Y+2	; 0x02
      c8:	8c ee       	ldi	r24, 0xEC	; 236
      ca:	90 e0       	ldi	r25, 0x00	; 0
      cc:	60 e0       	ldi	r22, 0x00	; 0
      ce:	70 e0       	ldi	r23, 0x00	; 0
      d0:	40 e1       	ldi	r20, 0x10	; 16
      d2:	50 e0       	ldi	r21, 0x00	; 0
      d4:	0e 94 bc 01 	call	0x378	; 0x378 <singleStepperGoTo>
    //3) afstand van middenstreep rijden
    stepperGoto(68, voorruit, stepMode);
      d8:	84 e4       	ldi	r24, 0x44	; 68
      da:	90 e0       	ldi	r25, 0x00	; 0
      dc:	60 e0       	ldi	r22, 0x00	; 0
      de:	70 e0       	ldi	r23, 0x00	; 0
      e0:	40 e1       	ldi	r20, 0x10	; 16
      e2:	50 e0       	ldi	r21, 0x00	; 0
      e4:	0e 94 1f 01 	call	0x23e	; 0x23e <stepperGoto>
    //4 bocht maken naar directie bocht(+- 90 graden)
    singleStepperGoTo(236,voorruit,stepMode, dir);
      e8:	29 81       	ldd	r18, Y+1	; 0x01
      ea:	3a 81       	ldd	r19, Y+2	; 0x02
      ec:	8c ee       	ldi	r24, 0xEC	; 236
      ee:	90 e0       	ldi	r25, 0x00	; 0
      f0:	60 e0       	ldi	r22, 0x00	; 0
      f2:	70 e0       	ldi	r23, 0x00	; 0
      f4:	40 e1       	ldi	r20, 0x10	; 16
      f6:	50 e0       	ldi	r21, 0x00	; 0
      f8:	0e 94 bc 01 	call	0x378	; 0x378 <singleStepperGoTo>
    //5) laatste 10cm naar voren voor beginpositie
    stepperGoto(97, voorruit, stepMode);
      fc:	81 e6       	ldi	r24, 0x61	; 97
      fe:	90 e0       	ldi	r25, 0x00	; 0
     100:	60 e0       	ldi	r22, 0x00	; 0
     102:	70 e0       	ldi	r23, 0x00	; 0
     104:	40 e1       	ldi	r20, 0x10	; 16
     106:	50 e0       	ldi	r21, 0x00	; 0
     108:	0e 94 1f 01 	call	0x23e	; 0x23e <stepperGoto>
}
     10c:	0f 90       	pop	r0
     10e:	0f 90       	pop	r0
     110:	cf 91       	pop	r28
     112:	df 91       	pop	r29
     114:	08 95       	ret

00000116 <__vector_4>:

ISR(PCINT1_vect)
{
     116:	1f 92       	push	r1
     118:	0f 92       	push	r0
     11a:	0f b6       	in	r0, 0x3f	; 63
     11c:	0f 92       	push	r0
     11e:	11 24       	eor	r1, r1
     120:	8f 93       	push	r24
     122:	ef 93       	push	r30
     124:	ff 93       	push	r31
     126:	df 93       	push	r29
     128:	cf 93       	push	r28
     12a:	0f 92       	push	r0
     12c:	cd b7       	in	r28, 0x3d	; 61
     12e:	de b7       	in	r29, 0x3e	; 62
    if(bit_is_clear(PINC, inpPinUno))
     130:	e6 e2       	ldi	r30, 0x26	; 38
     132:	f0 e0       	ldi	r31, 0x00	; 0
     134:	80 81       	ld	r24, Z
    {

    }

}
     136:	0f 90       	pop	r0
     138:	cf 91       	pop	r28
     13a:	df 91       	pop	r29
     13c:	ff 91       	pop	r31
     13e:	ef 91       	pop	r30
     140:	8f 91       	pop	r24
     142:	0f 90       	pop	r0
     144:	0f be       	out	0x3f, r0	; 63
     146:	0f 90       	pop	r0
     148:	1f 90       	pop	r1
     14a:	18 95       	reti

0000014c <main>:

int main(void)
{
     14c:	df 93       	push	r29
     14e:	cf 93       	push	r28
     150:	00 d0       	rcall	.+0      	; 0x152 <main+0x6>
     152:	cd b7       	in	r28, 0x3d	; 61
     154:	de b7       	in	r29, 0x3e	; 62
    DDRC &= ~_BV(inpPinUno);
     156:	a7 e2       	ldi	r26, 0x27	; 39
     158:	b0 e0       	ldi	r27, 0x00	; 0
     15a:	e7 e2       	ldi	r30, 0x27	; 39
     15c:	f0 e0       	ldi	r31, 0x00	; 0
     15e:	80 81       	ld	r24, Z
     160:	87 7f       	andi	r24, 0xF7	; 247
     162:	8c 93       	st	X, r24

    PORTC |= _BV(inpPinUno);
     164:	a8 e2       	ldi	r26, 0x28	; 40
     166:	b0 e0       	ldi	r27, 0x00	; 0
     168:	e8 e2       	ldi	r30, 0x28	; 40
     16a:	f0 e0       	ldi	r31, 0x00	; 0
     16c:	80 81       	ld	r24, Z
     16e:	88 60       	ori	r24, 0x08	; 8
     170:	8c 93       	st	X, r24
    PORTC |= _BV(inpPinBocht);
     172:	a8 e2       	ldi	r26, 0x28	; 40
     174:	b0 e0       	ldi	r27, 0x00	; 0
     176:	e8 e2       	ldi	r30, 0x28	; 40
     178:	f0 e0       	ldi	r31, 0x00	; 0
     17a:	80 81       	ld	r24, Z
     17c:	80 61       	ori	r24, 0x10	; 16
     17e:	8c 93       	st	X, r24
    PORTC |= _BV(inpPinBochtL);
     180:	a8 e2       	ldi	r26, 0x28	; 40
     182:	b0 e0       	ldi	r27, 0x00	; 0
     184:	e8 e2       	ldi	r30, 0x28	; 40
     186:	f0 e0       	ldi	r31, 0x00	; 0
     188:	80 81       	ld	r24, Z
     18a:	80 62       	ori	r24, 0x20	; 32
     18c:	8c 93       	st	X, r24

    initStepper();
     18e:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <initStepper>
    stepperSetSpeed(1, stepMode);
     192:	60 e0       	ldi	r22, 0x00	; 0
     194:	70 e0       	ldi	r23, 0x00	; 0
     196:	80 e8       	ldi	r24, 0x80	; 128
     198:	9f e3       	ldi	r25, 0x3F	; 63
     19a:	40 e1       	ldi	r20, 0x10	; 16
     19c:	50 e0       	ldi	r21, 0x00	; 0
     19e:	0e 94 ba 02 	call	0x574	; 0x574 <stepperSetSpeed>

    PCICR |= (1 << PCIE1);
     1a2:	a8 e6       	ldi	r26, 0x68	; 104
     1a4:	b0 e0       	ldi	r27, 0x00	; 0
     1a6:	e8 e6       	ldi	r30, 0x68	; 104
     1a8:	f0 e0       	ldi	r31, 0x00	; 0
     1aa:	80 81       	ld	r24, Z
     1ac:	82 60       	ori	r24, 0x02	; 2
     1ae:	8c 93       	st	X, r24
    PCMSK1 |= ((1 << inpPinUno) | (1 << inpPinBochtL) | (1 << inpPinBocht));
     1b0:	ac e6       	ldi	r26, 0x6C	; 108
     1b2:	b0 e0       	ldi	r27, 0x00	; 0
     1b4:	ec e6       	ldi	r30, 0x6C	; 108
     1b6:	f0 e0       	ldi	r31, 0x00	; 0
     1b8:	80 81       	ld	r24, Z
     1ba:	88 63       	ori	r24, 0x38	; 56
     1bc:	8c 93       	st	X, r24
    sei();
     1be:	78 94       	sei

    while(1)
    {

        if(bit_is_clear(PINC, inpPinUno))//bij signaal rijden
     1c0:	e6 e2       	ldi	r30, 0x26	; 38
     1c2:	f0 e0       	ldi	r31, 0x00	; 0
     1c4:	80 81       	ld	r24, Z
     1c6:	88 2f       	mov	r24, r24
     1c8:	90 e0       	ldi	r25, 0x00	; 0
     1ca:	88 70       	andi	r24, 0x08	; 8
     1cc:	90 70       	andi	r25, 0x00	; 0
     1ce:	00 97       	sbiw	r24, 0x00	; 0
     1d0:	21 f4       	brne	.+8      	; 0x1da <main+0x8e>
        {
            bocht(rechter);
     1d2:	80 e0       	ldi	r24, 0x00	; 0
     1d4:	90 e0       	ldi	r25, 0x00	; 0
     1d6:	0e 94 53 00 	call	0xa6	; 0xa6 <bocht>
        }

        if(bit_is_clear(PINC, inpPinBocht))
     1da:	e6 e2       	ldi	r30, 0x26	; 38
     1dc:	f0 e0       	ldi	r31, 0x00	; 0
     1de:	80 81       	ld	r24, Z
        {
            //bocht(rechter);
        }
        if(bit_is_clear(PINC, inpPinBochtL))
     1e0:	e6 e2       	ldi	r30, 0x26	; 38
     1e2:	f0 e0       	ldi	r31, 0x00	; 0
     1e4:	80 81       	ld	r24, Z
     1e6:	ec cf       	rjmp	.-40     	; 0x1c0 <main+0x74>

000001e8 <initStepper>:

float snelheid;
int posNu;

void initStepper(void)
{
     1e8:	df 93       	push	r29
     1ea:	cf 93       	push	r28
     1ec:	cd b7       	in	r28, 0x3d	; 61
     1ee:	de b7       	in	r29, 0x3e	; 62
    stepperLoc |= _BV(stepperPin1);
     1f0:	aa e2       	ldi	r26, 0x2A	; 42
     1f2:	b0 e0       	ldi	r27, 0x00	; 0
     1f4:	ea e2       	ldi	r30, 0x2A	; 42
     1f6:	f0 e0       	ldi	r31, 0x00	; 0
     1f8:	80 81       	ld	r24, Z
     1fa:	88 60       	ori	r24, 0x08	; 8
     1fc:	8c 93       	st	X, r24
    stepperLoc |= _BV(stepperDir1);
     1fe:	aa e2       	ldi	r26, 0x2A	; 42
     200:	b0 e0       	ldi	r27, 0x00	; 0
     202:	ea e2       	ldi	r30, 0x2A	; 42
     204:	f0 e0       	ldi	r31, 0x00	; 0
     206:	80 81       	ld	r24, Z
     208:	84 60       	ori	r24, 0x04	; 4
     20a:	8c 93       	st	X, r24
    stepperLoc2 |= _BV(stepperPin2);
     20c:	a4 e2       	ldi	r26, 0x24	; 36
     20e:	b0 e0       	ldi	r27, 0x00	; 0
     210:	e4 e2       	ldi	r30, 0x24	; 36
     212:	f0 e0       	ldi	r31, 0x00	; 0
     214:	80 81       	ld	r24, Z
     216:	81 60       	ori	r24, 0x01	; 1
     218:	8c 93       	st	X, r24
    stepperLoc |= _BV(stepperDir2);
     21a:	aa e2       	ldi	r26, 0x2A	; 42
     21c:	b0 e0       	ldi	r27, 0x00	; 0
     21e:	ea e2       	ldi	r30, 0x2A	; 42
     220:	f0 e0       	ldi	r31, 0x00	; 0
     222:	80 81       	ld	r24, Z
     224:	80 68       	ori	r24, 0x80	; 128
     226:	8c 93       	st	X, r24

    TCCR1A = 0;
     228:	e0 e8       	ldi	r30, 0x80	; 128
     22a:	f0 e0       	ldi	r31, 0x00	; 0
     22c:	10 82       	st	Z, r1
    TCCR1B = (0 << CS12) | (0 << CS11) | (1 << CS10);
     22e:	e1 e8       	ldi	r30, 0x81	; 129
     230:	f0 e0       	ldi	r31, 0x00	; 0
     232:	81 e0       	ldi	r24, 0x01	; 1
     234:	80 83       	st	Z, r24

    sei();
     236:	78 94       	sei

}
     238:	cf 91       	pop	r28
     23a:	df 91       	pop	r29
     23c:	08 95       	ret

0000023e <stepperGoto>:

void stepperGoto(int steps, int dir, int mode) //aantal steps, directie, stepMode
{
     23e:	0f 93       	push	r16
     240:	1f 93       	push	r17
     242:	df 93       	push	r29
     244:	cf 93       	push	r28
     246:	cd b7       	in	r28, 0x3d	; 61
     248:	de b7       	in	r29, 0x3e	; 62
     24a:	2c 97       	sbiw	r28, 0x0c	; 12
     24c:	0f b6       	in	r0, 0x3f	; 63
     24e:	f8 94       	cli
     250:	de bf       	out	0x3e, r29	; 62
     252:	0f be       	out	0x3f, r0	; 63
     254:	cd bf       	out	0x3d, r28	; 61
     256:	98 87       	std	Y+8, r25	; 0x08
     258:	8f 83       	std	Y+7, r24	; 0x07
     25a:	7a 87       	std	Y+10, r23	; 0x0a
     25c:	69 87       	std	Y+9, r22	; 0x09
     25e:	5c 87       	std	Y+12, r21	; 0x0c
     260:	4b 87       	std	Y+11, r20	; 0x0b

    if(dir)
     262:	89 85       	ldd	r24, Y+9	; 0x09
     264:	9a 85       	ldd	r25, Y+10	; 0x0a
     266:	00 97       	sbiw	r24, 0x00	; 0
     268:	79 f0       	breq	.+30     	; 0x288 <stepperGoto+0x4a>
    {
        stepperPort |= (1 << stepperDir1);
     26a:	ab e2       	ldi	r26, 0x2B	; 43
     26c:	b0 e0       	ldi	r27, 0x00	; 0
     26e:	eb e2       	ldi	r30, 0x2B	; 43
     270:	f0 e0       	ldi	r31, 0x00	; 0
     272:	80 81       	ld	r24, Z
     274:	84 60       	ori	r24, 0x04	; 4
     276:	8c 93       	st	X, r24
        stepperPort &= ~(1 << stepperDir2);
     278:	ab e2       	ldi	r26, 0x2B	; 43
     27a:	b0 e0       	ldi	r27, 0x00	; 0
     27c:	eb e2       	ldi	r30, 0x2B	; 43
     27e:	f0 e0       	ldi	r31, 0x00	; 0
     280:	80 81       	ld	r24, Z
     282:	8f 77       	andi	r24, 0x7F	; 127
     284:	8c 93       	st	X, r24
     286:	0e c0       	rjmp	.+28     	; 0x2a4 <stepperGoto+0x66>
    }
    else
    {
        stepperPort &= ~(1 << stepperDir1);
     288:	ab e2       	ldi	r26, 0x2B	; 43
     28a:	b0 e0       	ldi	r27, 0x00	; 0
     28c:	eb e2       	ldi	r30, 0x2B	; 43
     28e:	f0 e0       	ldi	r31, 0x00	; 0
     290:	80 81       	ld	r24, Z
     292:	8b 7f       	andi	r24, 0xFB	; 251
     294:	8c 93       	st	X, r24
        stepperPort |= (1 << stepperDir2);
     296:	ab e2       	ldi	r26, 0x2B	; 43
     298:	b0 e0       	ldi	r27, 0x00	; 0
     29a:	eb e2       	ldi	r30, 0x2B	; 43
     29c:	f0 e0       	ldi	r31, 0x00	; 0
     29e:	80 81       	ld	r24, Z
     2a0:	80 68       	ori	r24, 0x80	; 128
     2a2:	8c 93       	st	X, r24
    }

    int stepsTogo = steps *2 *mode;
     2a4:	8f 81       	ldd	r24, Y+7	; 0x07
     2a6:	98 85       	ldd	r25, Y+8	; 0x08
     2a8:	9c 01       	movw	r18, r24
     2aa:	22 0f       	add	r18, r18
     2ac:	33 1f       	adc	r19, r19
     2ae:	8b 85       	ldd	r24, Y+11	; 0x0b
     2b0:	9c 85       	ldd	r25, Y+12	; 0x0c
     2b2:	ac 01       	movw	r20, r24
     2b4:	24 9f       	mul	r18, r20
     2b6:	c0 01       	movw	r24, r0
     2b8:	25 9f       	mul	r18, r21
     2ba:	90 0d       	add	r25, r0
     2bc:	34 9f       	mul	r19, r20
     2be:	90 0d       	add	r25, r0
     2c0:	11 24       	eor	r1, r1
     2c2:	9e 83       	std	Y+6, r25	; 0x06
     2c4:	8d 83       	std	Y+5, r24	; 0x05
    int wachten;

    for(int i = 0; i < stepsTogo; i++)
     2c6:	1a 82       	std	Y+2, r1	; 0x02
     2c8:	19 82       	std	Y+1, r1	; 0x01
     2ca:	44 c0       	rjmp	.+136    	; 0x354 <stepperGoto+0x116>
    {
        while(wachten != 1)
        {
           if(TIFR1 & (1 << OCF1A))
     2cc:	e6 e3       	ldi	r30, 0x36	; 54
     2ce:	f0 e0       	ldi	r31, 0x00	; 0
     2d0:	80 81       	ld	r24, Z
     2d2:	88 2f       	mov	r24, r24
     2d4:	90 e0       	ldi	r25, 0x00	; 0
     2d6:	82 70       	andi	r24, 0x02	; 2
     2d8:	90 70       	andi	r25, 0x00	; 0
     2da:	00 97       	sbiw	r24, 0x00	; 0
     2dc:	79 f1       	breq	.+94     	; 0x33c <stepperGoto+0xfe>
            {
                stepperPort ^= (1 << stepperPin1);
     2de:	ab e2       	ldi	r26, 0x2B	; 43
     2e0:	b0 e0       	ldi	r27, 0x00	; 0
     2e2:	eb e2       	ldi	r30, 0x2B	; 43
     2e4:	f0 e0       	ldi	r31, 0x00	; 0
     2e6:	90 81       	ld	r25, Z
     2e8:	88 e0       	ldi	r24, 0x08	; 8
     2ea:	89 27       	eor	r24, r25
     2ec:	8c 93       	st	X, r24
                stepperPort2 ^= (1 << stepperPin2);
     2ee:	a5 e2       	ldi	r26, 0x25	; 37
     2f0:	b0 e0       	ldi	r27, 0x00	; 0
     2f2:	e5 e2       	ldi	r30, 0x25	; 37
     2f4:	f0 e0       	ldi	r31, 0x00	; 0
     2f6:	90 81       	ld	r25, Z
     2f8:	81 e0       	ldi	r24, 0x01	; 1
     2fa:	89 27       	eor	r24, r25
     2fc:	8c 93       	st	X, r24
                TCNT1 = 0;
     2fe:	e4 e8       	ldi	r30, 0x84	; 132
     300:	f0 e0       	ldi	r31, 0x00	; 0
     302:	11 82       	std	Z+1, r1	; 0x01
     304:	10 82       	st	Z, r1
                OCR1A = snelheid;
     306:	08 e8       	ldi	r16, 0x88	; 136
     308:	10 e0       	ldi	r17, 0x00	; 0
     30a:	80 91 08 02 	lds	r24, 0x0208
     30e:	90 91 09 02 	lds	r25, 0x0209
     312:	a0 91 0a 02 	lds	r26, 0x020A
     316:	b0 91 0b 02 	lds	r27, 0x020B
     31a:	bc 01       	movw	r22, r24
     31c:	cd 01       	movw	r24, r26
     31e:	0e 94 13 03 	call	0x626	; 0x626 <__fixunssfsi>
     322:	dc 01       	movw	r26, r24
     324:	cb 01       	movw	r24, r22
     326:	f8 01       	movw	r30, r16
     328:	91 83       	std	Z+1, r25	; 0x01
     32a:	80 83       	st	Z, r24
                wachten = 1;
     32c:	81 e0       	ldi	r24, 0x01	; 1
     32e:	90 e0       	ldi	r25, 0x00	; 0
     330:	9c 83       	std	Y+4, r25	; 0x04
     332:	8b 83       	std	Y+3, r24	; 0x03
                TIFR1 = (1 << OCF1A);
     334:	e6 e3       	ldi	r30, 0x36	; 54
     336:	f0 e0       	ldi	r31, 0x00	; 0
     338:	82 e0       	ldi	r24, 0x02	; 2
     33a:	80 83       	st	Z, r24
    int stepsTogo = steps *2 *mode;
    int wachten;

    for(int i = 0; i < stepsTogo; i++)
    {
        while(wachten != 1)
     33c:	8b 81       	ldd	r24, Y+3	; 0x03
     33e:	9c 81       	ldd	r25, Y+4	; 0x04
     340:	81 30       	cpi	r24, 0x01	; 1
     342:	91 05       	cpc	r25, r1
     344:	19 f6       	brne	.-122    	; 0x2cc <stepperGoto+0x8e>

            }


        }
        wachten = 0;
     346:	1c 82       	std	Y+4, r1	; 0x04
     348:	1b 82       	std	Y+3, r1	; 0x03
    }

    int stepsTogo = steps *2 *mode;
    int wachten;

    for(int i = 0; i < stepsTogo; i++)
     34a:	89 81       	ldd	r24, Y+1	; 0x01
     34c:	9a 81       	ldd	r25, Y+2	; 0x02
     34e:	01 96       	adiw	r24, 0x01	; 1
     350:	9a 83       	std	Y+2, r25	; 0x02
     352:	89 83       	std	Y+1, r24	; 0x01
     354:	29 81       	ldd	r18, Y+1	; 0x01
     356:	3a 81       	ldd	r19, Y+2	; 0x02
     358:	8d 81       	ldd	r24, Y+5	; 0x05
     35a:	9e 81       	ldd	r25, Y+6	; 0x06
     35c:	28 17       	cp	r18, r24
     35e:	39 07       	cpc	r19, r25
     360:	6c f3       	brlt	.-38     	; 0x33c <stepperGoto+0xfe>
        }
        wachten = 0;


    }
}
     362:	2c 96       	adiw	r28, 0x0c	; 12
     364:	0f b6       	in	r0, 0x3f	; 63
     366:	f8 94       	cli
     368:	de bf       	out	0x3e, r29	; 62
     36a:	0f be       	out	0x3f, r0	; 63
     36c:	cd bf       	out	0x3d, r28	; 61
     36e:	cf 91       	pop	r28
     370:	df 91       	pop	r29
     372:	1f 91       	pop	r17
     374:	0f 91       	pop	r16
     376:	08 95       	ret

00000378 <singleStepperGoTo>:

void singleStepperGoTo(int steps, int dir, int mode, int stepper)
{
     378:	0f 93       	push	r16
     37a:	1f 93       	push	r17
     37c:	df 93       	push	r29
     37e:	cf 93       	push	r28
     380:	cd b7       	in	r28, 0x3d	; 61
     382:	de b7       	in	r29, 0x3e	; 62
     384:	64 97       	sbiw	r28, 0x14	; 20
     386:	0f b6       	in	r0, 0x3f	; 63
     388:	f8 94       	cli
     38a:	de bf       	out	0x3e, r29	; 62
     38c:	0f be       	out	0x3f, r0	; 63
     38e:	cd bf       	out	0x3d, r28	; 61
     390:	9e 87       	std	Y+14, r25	; 0x0e
     392:	8d 87       	std	Y+13, r24	; 0x0d
     394:	78 8b       	std	Y+16, r23	; 0x10
     396:	6f 87       	std	Y+15, r22	; 0x0f
     398:	5a 8b       	std	Y+18, r21	; 0x12
     39a:	49 8b       	std	Y+17, r20	; 0x11
     39c:	3c 8b       	std	Y+20, r19	; 0x14
     39e:	2b 8b       	std	Y+19, r18	; 0x13
    if(stepper = 1) //stepper 1 (links?)
     3a0:	81 e0       	ldi	r24, 0x01	; 1
     3a2:	90 e0       	ldi	r25, 0x00	; 0
     3a4:	9c 8b       	std	Y+20, r25	; 0x14
     3a6:	8b 8b       	std	Y+19, r24	; 0x13
    {
        if(dir)
     3a8:	8f 85       	ldd	r24, Y+15	; 0x0f
     3aa:	98 89       	ldd	r25, Y+16	; 0x10
     3ac:	00 97       	sbiw	r24, 0x00	; 0
     3ae:	41 f0       	breq	.+16     	; 0x3c0 <singleStepperGoTo+0x48>
        {
            stepperPort |= (1 << stepperDir1);
     3b0:	ab e2       	ldi	r26, 0x2B	; 43
     3b2:	b0 e0       	ldi	r27, 0x00	; 0
     3b4:	eb e2       	ldi	r30, 0x2B	; 43
     3b6:	f0 e0       	ldi	r31, 0x00	; 0
     3b8:	80 81       	ld	r24, Z
     3ba:	84 60       	ori	r24, 0x04	; 4
     3bc:	8c 93       	st	X, r24
     3be:	07 c0       	rjmp	.+14     	; 0x3ce <singleStepperGoTo+0x56>
        }
        else
        {
            stepperPort &= ~(1 << stepperDir1);
     3c0:	ab e2       	ldi	r26, 0x2B	; 43
     3c2:	b0 e0       	ldi	r27, 0x00	; 0
     3c4:	eb e2       	ldi	r30, 0x2B	; 43
     3c6:	f0 e0       	ldi	r31, 0x00	; 0
     3c8:	80 81       	ld	r24, Z
     3ca:	8b 7f       	andi	r24, 0xFB	; 251
     3cc:	8c 93       	st	X, r24
        }

        int stepsTogo = steps *2 *mode;
     3ce:	8d 85       	ldd	r24, Y+13	; 0x0d
     3d0:	9e 85       	ldd	r25, Y+14	; 0x0e
     3d2:	9c 01       	movw	r18, r24
     3d4:	22 0f       	add	r18, r18
     3d6:	33 1f       	adc	r19, r19
     3d8:	89 89       	ldd	r24, Y+17	; 0x11
     3da:	9a 89       	ldd	r25, Y+18	; 0x12
     3dc:	ac 01       	movw	r20, r24
     3de:	24 9f       	mul	r18, r20
     3e0:	c0 01       	movw	r24, r0
     3e2:	25 9f       	mul	r18, r21
     3e4:	90 0d       	add	r25, r0
     3e6:	34 9f       	mul	r19, r20
     3e8:	90 0d       	add	r25, r0
     3ea:	11 24       	eor	r1, r1
     3ec:	9c 87       	std	Y+12, r25	; 0x0c
     3ee:	8b 87       	std	Y+11, r24	; 0x0b
        int wachten;

        for(int i = 0; i < stepsTogo; i++)
     3f0:	18 86       	std	Y+8, r1	; 0x08
     3f2:	1f 82       	std	Y+7, r1	; 0x07
     3f4:	3c c0       	rjmp	.+120    	; 0x46e <singleStepperGoTo+0xf6>
        {
            while(wachten != 1)
            {
                if(TIFR1 & (1 << OCF1A))
     3f6:	e6 e3       	ldi	r30, 0x36	; 54
     3f8:	f0 e0       	ldi	r31, 0x00	; 0
     3fa:	80 81       	ld	r24, Z
     3fc:	88 2f       	mov	r24, r24
     3fe:	90 e0       	ldi	r25, 0x00	; 0
     400:	82 70       	andi	r24, 0x02	; 2
     402:	90 70       	andi	r25, 0x00	; 0
     404:	00 97       	sbiw	r24, 0x00	; 0
     406:	39 f1       	breq	.+78     	; 0x456 <singleStepperGoTo+0xde>
                {
                    stepperPort ^= (1 << stepperPin1);
     408:	ab e2       	ldi	r26, 0x2B	; 43
     40a:	b0 e0       	ldi	r27, 0x00	; 0
     40c:	eb e2       	ldi	r30, 0x2B	; 43
     40e:	f0 e0       	ldi	r31, 0x00	; 0
     410:	90 81       	ld	r25, Z
     412:	88 e0       	ldi	r24, 0x08	; 8
     414:	89 27       	eor	r24, r25
     416:	8c 93       	st	X, r24
                    TCNT1 = 0;
     418:	e4 e8       	ldi	r30, 0x84	; 132
     41a:	f0 e0       	ldi	r31, 0x00	; 0
     41c:	11 82       	std	Z+1, r1	; 0x01
     41e:	10 82       	st	Z, r1
                    OCR1A = snelheid;
     420:	08 e8       	ldi	r16, 0x88	; 136
     422:	10 e0       	ldi	r17, 0x00	; 0
     424:	80 91 08 02 	lds	r24, 0x0208
     428:	90 91 09 02 	lds	r25, 0x0209
     42c:	a0 91 0a 02 	lds	r26, 0x020A
     430:	b0 91 0b 02 	lds	r27, 0x020B
     434:	bc 01       	movw	r22, r24
     436:	cd 01       	movw	r24, r26
     438:	0e 94 13 03 	call	0x626	; 0x626 <__fixunssfsi>
     43c:	dc 01       	movw	r26, r24
     43e:	cb 01       	movw	r24, r22
     440:	f8 01       	movw	r30, r16
     442:	91 83       	std	Z+1, r25	; 0x01
     444:	80 83       	st	Z, r24
                    wachten = 1;
     446:	81 e0       	ldi	r24, 0x01	; 1
     448:	90 e0       	ldi	r25, 0x00	; 0
     44a:	9a 87       	std	Y+10, r25	; 0x0a
     44c:	89 87       	std	Y+9, r24	; 0x09
                    TIFR1 = (1 << OCF1A);
     44e:	e6 e3       	ldi	r30, 0x36	; 54
     450:	f0 e0       	ldi	r31, 0x00	; 0
     452:	82 e0       	ldi	r24, 0x02	; 2
     454:	80 83       	st	Z, r24
        int stepsTogo = steps *2 *mode;
        int wachten;

        for(int i = 0; i < stepsTogo; i++)
        {
            while(wachten != 1)
     456:	89 85       	ldd	r24, Y+9	; 0x09
     458:	9a 85       	ldd	r25, Y+10	; 0x0a
     45a:	81 30       	cpi	r24, 0x01	; 1
     45c:	91 05       	cpc	r25, r1
     45e:	59 f6       	brne	.-106    	; 0x3f6 <singleStepperGoTo+0x7e>

                }


            }
            wachten = 0;
     460:	1a 86       	std	Y+10, r1	; 0x0a
     462:	19 86       	std	Y+9, r1	; 0x09
        }

        int stepsTogo = steps *2 *mode;
        int wachten;

        for(int i = 0; i < stepsTogo; i++)
     464:	8f 81       	ldd	r24, Y+7	; 0x07
     466:	98 85       	ldd	r25, Y+8	; 0x08
     468:	01 96       	adiw	r24, 0x01	; 1
     46a:	98 87       	std	Y+8, r25	; 0x08
     46c:	8f 83       	std	Y+7, r24	; 0x07
     46e:	2f 81       	ldd	r18, Y+7	; 0x07
     470:	38 85       	ldd	r19, Y+8	; 0x08
     472:	8b 85       	ldd	r24, Y+11	; 0x0b
     474:	9c 85       	ldd	r25, Y+12	; 0x0c
     476:	28 17       	cp	r18, r24
     478:	39 07       	cpc	r19, r25
     47a:	6c f3       	brlt	.-38     	; 0x456 <singleStepperGoTo+0xde>


        }
    }

    if(stepper = 0) //stepper 2 (rechts?)
     47c:	1c 8a       	std	Y+20, r1	; 0x14
     47e:	1b 8a       	std	Y+19, r1	; 0x13
     480:	8b 89       	ldd	r24, Y+19	; 0x13
     482:	9c 89       	ldd	r25, Y+20	; 0x14
     484:	00 97       	sbiw	r24, 0x00	; 0
     486:	09 f4       	brne	.+2      	; 0x48a <singleStepperGoTo+0x112>
     488:	6a c0       	rjmp	.+212    	; 0x55e <singleStepperGoTo+0x1e6>
    {
        if(dir)
     48a:	8f 85       	ldd	r24, Y+15	; 0x0f
     48c:	98 89       	ldd	r25, Y+16	; 0x10
     48e:	00 97       	sbiw	r24, 0x00	; 0
     490:	41 f0       	breq	.+16     	; 0x4a2 <singleStepperGoTo+0x12a>
        {
            stepperPort &= ~(1 << stepperDir2);
     492:	ab e2       	ldi	r26, 0x2B	; 43
     494:	b0 e0       	ldi	r27, 0x00	; 0
     496:	eb e2       	ldi	r30, 0x2B	; 43
     498:	f0 e0       	ldi	r31, 0x00	; 0
     49a:	80 81       	ld	r24, Z
     49c:	8f 77       	andi	r24, 0x7F	; 127
     49e:	8c 93       	st	X, r24
     4a0:	07 c0       	rjmp	.+14     	; 0x4b0 <singleStepperGoTo+0x138>
        }
        else
        {
            stepperPort |= (1 << stepperDir2);
     4a2:	ab e2       	ldi	r26, 0x2B	; 43
     4a4:	b0 e0       	ldi	r27, 0x00	; 0
     4a6:	eb e2       	ldi	r30, 0x2B	; 43
     4a8:	f0 e0       	ldi	r31, 0x00	; 0
     4aa:	80 81       	ld	r24, Z
     4ac:	80 68       	ori	r24, 0x80	; 128
     4ae:	8c 93       	st	X, r24
        }

        int stepsTogo = steps *2 *mode;
     4b0:	8d 85       	ldd	r24, Y+13	; 0x0d
     4b2:	9e 85       	ldd	r25, Y+14	; 0x0e
     4b4:	9c 01       	movw	r18, r24
     4b6:	22 0f       	add	r18, r18
     4b8:	33 1f       	adc	r19, r19
     4ba:	89 89       	ldd	r24, Y+17	; 0x11
     4bc:	9a 89       	ldd	r25, Y+18	; 0x12
     4be:	ac 01       	movw	r20, r24
     4c0:	24 9f       	mul	r18, r20
     4c2:	c0 01       	movw	r24, r0
     4c4:	25 9f       	mul	r18, r21
     4c6:	90 0d       	add	r25, r0
     4c8:	34 9f       	mul	r19, r20
     4ca:	90 0d       	add	r25, r0
     4cc:	11 24       	eor	r1, r1
     4ce:	9e 83       	std	Y+6, r25	; 0x06
     4d0:	8d 83       	std	Y+5, r24	; 0x05
        int wachten;

        for(int i = 0; i < stepsTogo; i++)
     4d2:	1a 82       	std	Y+2, r1	; 0x02
     4d4:	19 82       	std	Y+1, r1	; 0x01
     4d6:	3c c0       	rjmp	.+120    	; 0x550 <singleStepperGoTo+0x1d8>
        {
            while(wachten != 1)
            {
                if(TIFR1 & (1 << OCF1A))
     4d8:	e6 e3       	ldi	r30, 0x36	; 54
     4da:	f0 e0       	ldi	r31, 0x00	; 0
     4dc:	80 81       	ld	r24, Z
     4de:	88 2f       	mov	r24, r24
     4e0:	90 e0       	ldi	r25, 0x00	; 0
     4e2:	82 70       	andi	r24, 0x02	; 2
     4e4:	90 70       	andi	r25, 0x00	; 0
     4e6:	00 97       	sbiw	r24, 0x00	; 0
     4e8:	39 f1       	breq	.+78     	; 0x538 <singleStepperGoTo+0x1c0>
                {
                    stepperPort2 ^= (1 << stepperPin2);
     4ea:	a5 e2       	ldi	r26, 0x25	; 37
     4ec:	b0 e0       	ldi	r27, 0x00	; 0
     4ee:	e5 e2       	ldi	r30, 0x25	; 37
     4f0:	f0 e0       	ldi	r31, 0x00	; 0
     4f2:	90 81       	ld	r25, Z
     4f4:	81 e0       	ldi	r24, 0x01	; 1
     4f6:	89 27       	eor	r24, r25
     4f8:	8c 93       	st	X, r24
                    TCNT1 = 0;
     4fa:	e4 e8       	ldi	r30, 0x84	; 132
     4fc:	f0 e0       	ldi	r31, 0x00	; 0
     4fe:	11 82       	std	Z+1, r1	; 0x01
     500:	10 82       	st	Z, r1
                    OCR1A = snelheid;
     502:	08 e8       	ldi	r16, 0x88	; 136
     504:	10 e0       	ldi	r17, 0x00	; 0
     506:	80 91 08 02 	lds	r24, 0x0208
     50a:	90 91 09 02 	lds	r25, 0x0209
     50e:	a0 91 0a 02 	lds	r26, 0x020A
     512:	b0 91 0b 02 	lds	r27, 0x020B
     516:	bc 01       	movw	r22, r24
     518:	cd 01       	movw	r24, r26
     51a:	0e 94 13 03 	call	0x626	; 0x626 <__fixunssfsi>
     51e:	dc 01       	movw	r26, r24
     520:	cb 01       	movw	r24, r22
     522:	f8 01       	movw	r30, r16
     524:	91 83       	std	Z+1, r25	; 0x01
     526:	80 83       	st	Z, r24
                    wachten = 1;
     528:	81 e0       	ldi	r24, 0x01	; 1
     52a:	90 e0       	ldi	r25, 0x00	; 0
     52c:	9c 83       	std	Y+4, r25	; 0x04
     52e:	8b 83       	std	Y+3, r24	; 0x03
                    TIFR1 = (1 << OCF1A);
     530:	e6 e3       	ldi	r30, 0x36	; 54
     532:	f0 e0       	ldi	r31, 0x00	; 0
     534:	82 e0       	ldi	r24, 0x02	; 2
     536:	80 83       	st	Z, r24
        int stepsTogo = steps *2 *mode;
        int wachten;

        for(int i = 0; i < stepsTogo; i++)
        {
            while(wachten != 1)
     538:	8b 81       	ldd	r24, Y+3	; 0x03
     53a:	9c 81       	ldd	r25, Y+4	; 0x04
     53c:	81 30       	cpi	r24, 0x01	; 1
     53e:	91 05       	cpc	r25, r1
     540:	59 f6       	brne	.-106    	; 0x4d8 <singleStepperGoTo+0x160>

                }


            }
            wachten = 0;
     542:	1c 82       	std	Y+4, r1	; 0x04
     544:	1b 82       	std	Y+3, r1	; 0x03
        }

        int stepsTogo = steps *2 *mode;
        int wachten;

        for(int i = 0; i < stepsTogo; i++)
     546:	89 81       	ldd	r24, Y+1	; 0x01
     548:	9a 81       	ldd	r25, Y+2	; 0x02
     54a:	01 96       	adiw	r24, 0x01	; 1
     54c:	9a 83       	std	Y+2, r25	; 0x02
     54e:	89 83       	std	Y+1, r24	; 0x01
     550:	29 81       	ldd	r18, Y+1	; 0x01
     552:	3a 81       	ldd	r19, Y+2	; 0x02
     554:	8d 81       	ldd	r24, Y+5	; 0x05
     556:	9e 81       	ldd	r25, Y+6	; 0x06
     558:	28 17       	cp	r18, r24
     55a:	39 07       	cpc	r19, r25
     55c:	6c f3       	brlt	.-38     	; 0x538 <singleStepperGoTo+0x1c0>
            wachten = 0;


        }
    }
}
     55e:	64 96       	adiw	r28, 0x14	; 20
     560:	0f b6       	in	r0, 0x3f	; 63
     562:	f8 94       	cli
     564:	de bf       	out	0x3e, r29	; 62
     566:	0f be       	out	0x3f, r0	; 63
     568:	cd bf       	out	0x3d, r28	; 61
     56a:	cf 91       	pop	r28
     56c:	df 91       	pop	r29
     56e:	1f 91       	pop	r17
     570:	0f 91       	pop	r16
     572:	08 95       	ret

00000574 <stepperSetSpeed>:

void stepperSetSpeed(float rps, int mode)
{
     574:	ef 92       	push	r14
     576:	ff 92       	push	r15
     578:	0f 93       	push	r16
     57a:	1f 93       	push	r17
     57c:	df 93       	push	r29
     57e:	cf 93       	push	r28
     580:	cd b7       	in	r28, 0x3d	; 61
     582:	de b7       	in	r29, 0x3e	; 62
     584:	2a 97       	sbiw	r28, 0x0a	; 10
     586:	0f b6       	in	r0, 0x3f	; 63
     588:	f8 94       	cli
     58a:	de bf       	out	0x3e, r29	; 62
     58c:	0f be       	out	0x3f, r0	; 63
     58e:	cd bf       	out	0x3d, r28	; 61
     590:	6d 83       	std	Y+5, r22	; 0x05
     592:	7e 83       	std	Y+6, r23	; 0x06
     594:	8f 83       	std	Y+7, r24	; 0x07
     596:	98 87       	std	Y+8, r25	; 0x08
     598:	5a 87       	std	Y+10, r21	; 0x0a
     59a:	49 87       	std	Y+9, r20	; 0x09
    float rekenwaarde = rps * 400 * mode;
     59c:	6d 81       	ldd	r22, Y+5	; 0x05
     59e:	7e 81       	ldd	r23, Y+6	; 0x06
     5a0:	8f 81       	ldd	r24, Y+7	; 0x07
     5a2:	98 85       	ldd	r25, Y+8	; 0x08
     5a4:	20 e0       	ldi	r18, 0x00	; 0
     5a6:	30 e0       	ldi	r19, 0x00	; 0
     5a8:	48 ec       	ldi	r20, 0xC8	; 200
     5aa:	53 e4       	ldi	r21, 0x43	; 67
     5ac:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <__mulsf3>
     5b0:	dc 01       	movw	r26, r24
     5b2:	cb 01       	movw	r24, r22
     5b4:	7c 01       	movw	r14, r24
     5b6:	8d 01       	movw	r16, r26
     5b8:	89 85       	ldd	r24, Y+9	; 0x09
     5ba:	9a 85       	ldd	r25, Y+10	; 0x0a
     5bc:	aa 27       	eor	r26, r26
     5be:	97 fd       	sbrc	r25, 7
     5c0:	a0 95       	com	r26
     5c2:	ba 2f       	mov	r27, r26
     5c4:	bc 01       	movw	r22, r24
     5c6:	cd 01       	movw	r24, r26
     5c8:	0e 94 bf 06 	call	0xd7e	; 0xd7e <__floatsisf>
     5cc:	9b 01       	movw	r18, r22
     5ce:	ac 01       	movw	r20, r24
     5d0:	c8 01       	movw	r24, r16
     5d2:	b7 01       	movw	r22, r14
     5d4:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <__mulsf3>
     5d8:	dc 01       	movw	r26, r24
     5da:	cb 01       	movw	r24, r22
     5dc:	89 83       	std	Y+1, r24	; 0x01
     5de:	9a 83       	std	Y+2, r25	; 0x02
     5e0:	ab 83       	std	Y+3, r26	; 0x03
     5e2:	bc 83       	std	Y+4, r27	; 0x04
    snelheid = 16000000 / rekenwaarde;
     5e4:	60 e0       	ldi	r22, 0x00	; 0
     5e6:	74 e2       	ldi	r23, 0x24	; 36
     5e8:	84 e7       	ldi	r24, 0x74	; 116
     5ea:	9b e4       	ldi	r25, 0x4B	; 75
     5ec:	29 81       	ldd	r18, Y+1	; 0x01
     5ee:	3a 81       	ldd	r19, Y+2	; 0x02
     5f0:	4b 81       	ldd	r20, Y+3	; 0x03
     5f2:	5c 81       	ldd	r21, Y+4	; 0x04
     5f4:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <__divsf3>
     5f8:	dc 01       	movw	r26, r24
     5fa:	cb 01       	movw	r24, r22
     5fc:	80 93 08 02 	sts	0x0208, r24
     600:	90 93 09 02 	sts	0x0209, r25
     604:	a0 93 0a 02 	sts	0x020A, r26
     608:	b0 93 0b 02 	sts	0x020B, r27
}
     60c:	2a 96       	adiw	r28, 0x0a	; 10
     60e:	0f b6       	in	r0, 0x3f	; 63
     610:	f8 94       	cli
     612:	de bf       	out	0x3e, r29	; 62
     614:	0f be       	out	0x3f, r0	; 63
     616:	cd bf       	out	0x3d, r28	; 61
     618:	cf 91       	pop	r28
     61a:	df 91       	pop	r29
     61c:	1f 91       	pop	r17
     61e:	0f 91       	pop	r16
     620:	ff 90       	pop	r15
     622:	ef 90       	pop	r14
     624:	08 95       	ret

00000626 <__fixunssfsi>:
     626:	ef 92       	push	r14
     628:	ff 92       	push	r15
     62a:	0f 93       	push	r16
     62c:	1f 93       	push	r17
     62e:	7b 01       	movw	r14, r22
     630:	8c 01       	movw	r16, r24
     632:	20 e0       	ldi	r18, 0x00	; 0
     634:	30 e0       	ldi	r19, 0x00	; 0
     636:	40 e0       	ldi	r20, 0x00	; 0
     638:	5f e4       	ldi	r21, 0x4F	; 79
     63a:	0e 94 8f 06 	call	0xd1e	; 0xd1e <__gesf2>
     63e:	88 23       	and	r24, r24
     640:	8c f0       	brlt	.+34     	; 0x664 <__fixunssfsi+0x3e>
     642:	c8 01       	movw	r24, r16
     644:	b7 01       	movw	r22, r14
     646:	20 e0       	ldi	r18, 0x00	; 0
     648:	30 e0       	ldi	r19, 0x00	; 0
     64a:	40 e0       	ldi	r20, 0x00	; 0
     64c:	5f e4       	ldi	r21, 0x4F	; 79
     64e:	0e 94 8b 04 	call	0x916	; 0x916 <__subsf3>
     652:	0e 94 1d 07 	call	0xe3a	; 0xe3a <__fixsfsi>
     656:	9b 01       	movw	r18, r22
     658:	ac 01       	movw	r20, r24
     65a:	20 50       	subi	r18, 0x00	; 0
     65c:	30 40       	sbci	r19, 0x00	; 0
     65e:	40 40       	sbci	r20, 0x00	; 0
     660:	50 48       	sbci	r21, 0x80	; 128
     662:	06 c0       	rjmp	.+12     	; 0x670 <__fixunssfsi+0x4a>
     664:	c8 01       	movw	r24, r16
     666:	b7 01       	movw	r22, r14
     668:	0e 94 1d 07 	call	0xe3a	; 0xe3a <__fixsfsi>
     66c:	9b 01       	movw	r18, r22
     66e:	ac 01       	movw	r20, r24
     670:	b9 01       	movw	r22, r18
     672:	ca 01       	movw	r24, r20
     674:	1f 91       	pop	r17
     676:	0f 91       	pop	r16
     678:	ff 90       	pop	r15
     67a:	ef 90       	pop	r14
     67c:	08 95       	ret

0000067e <_fpadd_parts>:
     67e:	a0 e0       	ldi	r26, 0x00	; 0
     680:	b0 e0       	ldi	r27, 0x00	; 0
     682:	e5 e4       	ldi	r30, 0x45	; 69
     684:	f3 e0       	ldi	r31, 0x03	; 3
     686:	0c 94 66 09 	jmp	0x12cc	; 0x12cc <__prologue_saves__>
     68a:	dc 01       	movw	r26, r24
     68c:	2b 01       	movw	r4, r22
     68e:	fa 01       	movw	r30, r20
     690:	9c 91       	ld	r25, X
     692:	92 30       	cpi	r25, 0x02	; 2
     694:	08 f4       	brcc	.+2      	; 0x698 <_fpadd_parts+0x1a>
     696:	39 c1       	rjmp	.+626    	; 0x90a <__stack+0xb>
     698:	eb 01       	movw	r28, r22
     69a:	88 81       	ld	r24, Y
     69c:	82 30       	cpi	r24, 0x02	; 2
     69e:	08 f4       	brcc	.+2      	; 0x6a2 <_fpadd_parts+0x24>
     6a0:	33 c1       	rjmp	.+614    	; 0x908 <__stack+0x9>
     6a2:	94 30       	cpi	r25, 0x04	; 4
     6a4:	69 f4       	brne	.+26     	; 0x6c0 <_fpadd_parts+0x42>
     6a6:	84 30       	cpi	r24, 0x04	; 4
     6a8:	09 f0       	breq	.+2      	; 0x6ac <_fpadd_parts+0x2e>
     6aa:	2f c1       	rjmp	.+606    	; 0x90a <__stack+0xb>
     6ac:	11 96       	adiw	r26, 0x01	; 1
     6ae:	9c 91       	ld	r25, X
     6b0:	11 97       	sbiw	r26, 0x01	; 1
     6b2:	89 81       	ldd	r24, Y+1	; 0x01
     6b4:	98 17       	cp	r25, r24
     6b6:	09 f4       	brne	.+2      	; 0x6ba <_fpadd_parts+0x3c>
     6b8:	28 c1       	rjmp	.+592    	; 0x90a <__stack+0xb>
     6ba:	a0 e0       	ldi	r26, 0x00	; 0
     6bc:	b1 e0       	ldi	r27, 0x01	; 1
     6be:	25 c1       	rjmp	.+586    	; 0x90a <__stack+0xb>
     6c0:	84 30       	cpi	r24, 0x04	; 4
     6c2:	09 f4       	brne	.+2      	; 0x6c6 <_fpadd_parts+0x48>
     6c4:	21 c1       	rjmp	.+578    	; 0x908 <__stack+0x9>
     6c6:	82 30       	cpi	r24, 0x02	; 2
     6c8:	a9 f4       	brne	.+42     	; 0x6f4 <_fpadd_parts+0x76>
     6ca:	92 30       	cpi	r25, 0x02	; 2
     6cc:	09 f0       	breq	.+2      	; 0x6d0 <_fpadd_parts+0x52>
     6ce:	1d c1       	rjmp	.+570    	; 0x90a <__stack+0xb>
     6d0:	9a 01       	movw	r18, r20
     6d2:	ad 01       	movw	r20, r26
     6d4:	88 e0       	ldi	r24, 0x08	; 8
     6d6:	ea 01       	movw	r28, r20
     6d8:	09 90       	ld	r0, Y+
     6da:	ae 01       	movw	r20, r28
     6dc:	e9 01       	movw	r28, r18
     6de:	09 92       	st	Y+, r0
     6e0:	9e 01       	movw	r18, r28
     6e2:	81 50       	subi	r24, 0x01	; 1
     6e4:	c1 f7       	brne	.-16     	; 0x6d6 <_fpadd_parts+0x58>
     6e6:	e2 01       	movw	r28, r4
     6e8:	89 81       	ldd	r24, Y+1	; 0x01
     6ea:	11 96       	adiw	r26, 0x01	; 1
     6ec:	9c 91       	ld	r25, X
     6ee:	89 23       	and	r24, r25
     6f0:	81 83       	std	Z+1, r24	; 0x01
     6f2:	08 c1       	rjmp	.+528    	; 0x904 <__stack+0x5>
     6f4:	92 30       	cpi	r25, 0x02	; 2
     6f6:	09 f4       	brne	.+2      	; 0x6fa <_fpadd_parts+0x7c>
     6f8:	07 c1       	rjmp	.+526    	; 0x908 <__stack+0x9>
     6fa:	12 96       	adiw	r26, 0x02	; 2
     6fc:	2d 90       	ld	r2, X+
     6fe:	3c 90       	ld	r3, X
     700:	13 97       	sbiw	r26, 0x03	; 3
     702:	eb 01       	movw	r28, r22
     704:	8a 81       	ldd	r24, Y+2	; 0x02
     706:	9b 81       	ldd	r25, Y+3	; 0x03
     708:	14 96       	adiw	r26, 0x04	; 4
     70a:	ad 90       	ld	r10, X+
     70c:	bd 90       	ld	r11, X+
     70e:	cd 90       	ld	r12, X+
     710:	dc 90       	ld	r13, X
     712:	17 97       	sbiw	r26, 0x07	; 7
     714:	ec 80       	ldd	r14, Y+4	; 0x04
     716:	fd 80       	ldd	r15, Y+5	; 0x05
     718:	0e 81       	ldd	r16, Y+6	; 0x06
     71a:	1f 81       	ldd	r17, Y+7	; 0x07
     71c:	91 01       	movw	r18, r2
     71e:	28 1b       	sub	r18, r24
     720:	39 0b       	sbc	r19, r25
     722:	b9 01       	movw	r22, r18
     724:	37 ff       	sbrs	r19, 7
     726:	04 c0       	rjmp	.+8      	; 0x730 <_fpadd_parts+0xb2>
     728:	66 27       	eor	r22, r22
     72a:	77 27       	eor	r23, r23
     72c:	62 1b       	sub	r22, r18
     72e:	73 0b       	sbc	r23, r19
     730:	60 32       	cpi	r22, 0x20	; 32
     732:	71 05       	cpc	r23, r1
     734:	0c f0       	brlt	.+2      	; 0x738 <_fpadd_parts+0xba>
     736:	61 c0       	rjmp	.+194    	; 0x7fa <_fpadd_parts+0x17c>
     738:	12 16       	cp	r1, r18
     73a:	13 06       	cpc	r1, r19
     73c:	6c f5       	brge	.+90     	; 0x798 <_fpadd_parts+0x11a>
     73e:	37 01       	movw	r6, r14
     740:	48 01       	movw	r8, r16
     742:	06 2e       	mov	r0, r22
     744:	04 c0       	rjmp	.+8      	; 0x74e <_fpadd_parts+0xd0>
     746:	96 94       	lsr	r9
     748:	87 94       	ror	r8
     74a:	77 94       	ror	r7
     74c:	67 94       	ror	r6
     74e:	0a 94       	dec	r0
     750:	d2 f7       	brpl	.-12     	; 0x746 <_fpadd_parts+0xc8>
     752:	21 e0       	ldi	r18, 0x01	; 1
     754:	30 e0       	ldi	r19, 0x00	; 0
     756:	40 e0       	ldi	r20, 0x00	; 0
     758:	50 e0       	ldi	r21, 0x00	; 0
     75a:	04 c0       	rjmp	.+8      	; 0x764 <_fpadd_parts+0xe6>
     75c:	22 0f       	add	r18, r18
     75e:	33 1f       	adc	r19, r19
     760:	44 1f       	adc	r20, r20
     762:	55 1f       	adc	r21, r21
     764:	6a 95       	dec	r22
     766:	d2 f7       	brpl	.-12     	; 0x75c <_fpadd_parts+0xde>
     768:	21 50       	subi	r18, 0x01	; 1
     76a:	30 40       	sbci	r19, 0x00	; 0
     76c:	40 40       	sbci	r20, 0x00	; 0
     76e:	50 40       	sbci	r21, 0x00	; 0
     770:	2e 21       	and	r18, r14
     772:	3f 21       	and	r19, r15
     774:	40 23       	and	r20, r16
     776:	51 23       	and	r21, r17
     778:	21 15       	cp	r18, r1
     77a:	31 05       	cpc	r19, r1
     77c:	41 05       	cpc	r20, r1
     77e:	51 05       	cpc	r21, r1
     780:	21 f0       	breq	.+8      	; 0x78a <_fpadd_parts+0x10c>
     782:	21 e0       	ldi	r18, 0x01	; 1
     784:	30 e0       	ldi	r19, 0x00	; 0
     786:	40 e0       	ldi	r20, 0x00	; 0
     788:	50 e0       	ldi	r21, 0x00	; 0
     78a:	79 01       	movw	r14, r18
     78c:	8a 01       	movw	r16, r20
     78e:	e6 28       	or	r14, r6
     790:	f7 28       	or	r15, r7
     792:	08 29       	or	r16, r8
     794:	19 29       	or	r17, r9
     796:	3c c0       	rjmp	.+120    	; 0x810 <_fpadd_parts+0x192>
     798:	23 2b       	or	r18, r19
     79a:	d1 f1       	breq	.+116    	; 0x810 <_fpadd_parts+0x192>
     79c:	26 0e       	add	r2, r22
     79e:	37 1e       	adc	r3, r23
     7a0:	35 01       	movw	r6, r10
     7a2:	46 01       	movw	r8, r12
     7a4:	06 2e       	mov	r0, r22
     7a6:	04 c0       	rjmp	.+8      	; 0x7b0 <_fpadd_parts+0x132>
     7a8:	96 94       	lsr	r9
     7aa:	87 94       	ror	r8
     7ac:	77 94       	ror	r7
     7ae:	67 94       	ror	r6
     7b0:	0a 94       	dec	r0
     7b2:	d2 f7       	brpl	.-12     	; 0x7a8 <_fpadd_parts+0x12a>
     7b4:	21 e0       	ldi	r18, 0x01	; 1
     7b6:	30 e0       	ldi	r19, 0x00	; 0
     7b8:	40 e0       	ldi	r20, 0x00	; 0
     7ba:	50 e0       	ldi	r21, 0x00	; 0
     7bc:	04 c0       	rjmp	.+8      	; 0x7c6 <_fpadd_parts+0x148>
     7be:	22 0f       	add	r18, r18
     7c0:	33 1f       	adc	r19, r19
     7c2:	44 1f       	adc	r20, r20
     7c4:	55 1f       	adc	r21, r21
     7c6:	6a 95       	dec	r22
     7c8:	d2 f7       	brpl	.-12     	; 0x7be <_fpadd_parts+0x140>
     7ca:	21 50       	subi	r18, 0x01	; 1
     7cc:	30 40       	sbci	r19, 0x00	; 0
     7ce:	40 40       	sbci	r20, 0x00	; 0
     7d0:	50 40       	sbci	r21, 0x00	; 0
     7d2:	2a 21       	and	r18, r10
     7d4:	3b 21       	and	r19, r11
     7d6:	4c 21       	and	r20, r12
     7d8:	5d 21       	and	r21, r13
     7da:	21 15       	cp	r18, r1
     7dc:	31 05       	cpc	r19, r1
     7de:	41 05       	cpc	r20, r1
     7e0:	51 05       	cpc	r21, r1
     7e2:	21 f0       	breq	.+8      	; 0x7ec <_fpadd_parts+0x16e>
     7e4:	21 e0       	ldi	r18, 0x01	; 1
     7e6:	30 e0       	ldi	r19, 0x00	; 0
     7e8:	40 e0       	ldi	r20, 0x00	; 0
     7ea:	50 e0       	ldi	r21, 0x00	; 0
     7ec:	59 01       	movw	r10, r18
     7ee:	6a 01       	movw	r12, r20
     7f0:	a6 28       	or	r10, r6
     7f2:	b7 28       	or	r11, r7
     7f4:	c8 28       	or	r12, r8
     7f6:	d9 28       	or	r13, r9
     7f8:	0b c0       	rjmp	.+22     	; 0x810 <_fpadd_parts+0x192>
     7fa:	82 15       	cp	r24, r2
     7fc:	93 05       	cpc	r25, r3
     7fe:	2c f0       	brlt	.+10     	; 0x80a <_fpadd_parts+0x18c>
     800:	1c 01       	movw	r2, r24
     802:	aa 24       	eor	r10, r10
     804:	bb 24       	eor	r11, r11
     806:	65 01       	movw	r12, r10
     808:	03 c0       	rjmp	.+6      	; 0x810 <_fpadd_parts+0x192>
     80a:	ee 24       	eor	r14, r14
     80c:	ff 24       	eor	r15, r15
     80e:	87 01       	movw	r16, r14
     810:	11 96       	adiw	r26, 0x01	; 1
     812:	9c 91       	ld	r25, X
     814:	d2 01       	movw	r26, r4
     816:	11 96       	adiw	r26, 0x01	; 1
     818:	8c 91       	ld	r24, X
     81a:	98 17       	cp	r25, r24
     81c:	09 f4       	brne	.+2      	; 0x820 <_fpadd_parts+0x1a2>
     81e:	45 c0       	rjmp	.+138    	; 0x8aa <_fpadd_parts+0x22c>
     820:	99 23       	and	r25, r25
     822:	39 f0       	breq	.+14     	; 0x832 <_fpadd_parts+0x1b4>
     824:	a8 01       	movw	r20, r16
     826:	97 01       	movw	r18, r14
     828:	2a 19       	sub	r18, r10
     82a:	3b 09       	sbc	r19, r11
     82c:	4c 09       	sbc	r20, r12
     82e:	5d 09       	sbc	r21, r13
     830:	06 c0       	rjmp	.+12     	; 0x83e <_fpadd_parts+0x1c0>
     832:	a6 01       	movw	r20, r12
     834:	95 01       	movw	r18, r10
     836:	2e 19       	sub	r18, r14
     838:	3f 09       	sbc	r19, r15
     83a:	40 0b       	sbc	r20, r16
     83c:	51 0b       	sbc	r21, r17
     83e:	57 fd       	sbrc	r21, 7
     840:	08 c0       	rjmp	.+16     	; 0x852 <_fpadd_parts+0x1d4>
     842:	11 82       	std	Z+1, r1	; 0x01
     844:	33 82       	std	Z+3, r3	; 0x03
     846:	22 82       	std	Z+2, r2	; 0x02
     848:	24 83       	std	Z+4, r18	; 0x04
     84a:	35 83       	std	Z+5, r19	; 0x05
     84c:	46 83       	std	Z+6, r20	; 0x06
     84e:	57 83       	std	Z+7, r21	; 0x07
     850:	1d c0       	rjmp	.+58     	; 0x88c <_fpadd_parts+0x20e>
     852:	81 e0       	ldi	r24, 0x01	; 1
     854:	81 83       	std	Z+1, r24	; 0x01
     856:	33 82       	std	Z+3, r3	; 0x03
     858:	22 82       	std	Z+2, r2	; 0x02
     85a:	88 27       	eor	r24, r24
     85c:	99 27       	eor	r25, r25
     85e:	dc 01       	movw	r26, r24
     860:	82 1b       	sub	r24, r18
     862:	93 0b       	sbc	r25, r19
     864:	a4 0b       	sbc	r26, r20
     866:	b5 0b       	sbc	r27, r21
     868:	84 83       	std	Z+4, r24	; 0x04
     86a:	95 83       	std	Z+5, r25	; 0x05
     86c:	a6 83       	std	Z+6, r26	; 0x06
     86e:	b7 83       	std	Z+7, r27	; 0x07
     870:	0d c0       	rjmp	.+26     	; 0x88c <_fpadd_parts+0x20e>
     872:	22 0f       	add	r18, r18
     874:	33 1f       	adc	r19, r19
     876:	44 1f       	adc	r20, r20
     878:	55 1f       	adc	r21, r21
     87a:	24 83       	std	Z+4, r18	; 0x04
     87c:	35 83       	std	Z+5, r19	; 0x05
     87e:	46 83       	std	Z+6, r20	; 0x06
     880:	57 83       	std	Z+7, r21	; 0x07
     882:	82 81       	ldd	r24, Z+2	; 0x02
     884:	93 81       	ldd	r25, Z+3	; 0x03
     886:	01 97       	sbiw	r24, 0x01	; 1
     888:	93 83       	std	Z+3, r25	; 0x03
     88a:	82 83       	std	Z+2, r24	; 0x02
     88c:	24 81       	ldd	r18, Z+4	; 0x04
     88e:	35 81       	ldd	r19, Z+5	; 0x05
     890:	46 81       	ldd	r20, Z+6	; 0x06
     892:	57 81       	ldd	r21, Z+7	; 0x07
     894:	da 01       	movw	r26, r20
     896:	c9 01       	movw	r24, r18
     898:	01 97       	sbiw	r24, 0x01	; 1
     89a:	a1 09       	sbc	r26, r1
     89c:	b1 09       	sbc	r27, r1
     89e:	8f 5f       	subi	r24, 0xFF	; 255
     8a0:	9f 4f       	sbci	r25, 0xFF	; 255
     8a2:	af 4f       	sbci	r26, 0xFF	; 255
     8a4:	bf 43       	sbci	r27, 0x3F	; 63
     8a6:	28 f3       	brcs	.-54     	; 0x872 <_fpadd_parts+0x1f4>
     8a8:	0b c0       	rjmp	.+22     	; 0x8c0 <_fpadd_parts+0x242>
     8aa:	91 83       	std	Z+1, r25	; 0x01
     8ac:	33 82       	std	Z+3, r3	; 0x03
     8ae:	22 82       	std	Z+2, r2	; 0x02
     8b0:	ea 0c       	add	r14, r10
     8b2:	fb 1c       	adc	r15, r11
     8b4:	0c 1d       	adc	r16, r12
     8b6:	1d 1d       	adc	r17, r13
     8b8:	e4 82       	std	Z+4, r14	; 0x04
     8ba:	f5 82       	std	Z+5, r15	; 0x05
     8bc:	06 83       	std	Z+6, r16	; 0x06
     8be:	17 83       	std	Z+7, r17	; 0x07
     8c0:	83 e0       	ldi	r24, 0x03	; 3
     8c2:	80 83       	st	Z, r24
     8c4:	24 81       	ldd	r18, Z+4	; 0x04
     8c6:	35 81       	ldd	r19, Z+5	; 0x05
     8c8:	46 81       	ldd	r20, Z+6	; 0x06
     8ca:	57 81       	ldd	r21, Z+7	; 0x07
     8cc:	57 ff       	sbrs	r21, 7
     8ce:	1a c0       	rjmp	.+52     	; 0x904 <__stack+0x5>
     8d0:	c9 01       	movw	r24, r18
     8d2:	aa 27       	eor	r26, r26
     8d4:	97 fd       	sbrc	r25, 7
     8d6:	a0 95       	com	r26
     8d8:	ba 2f       	mov	r27, r26
     8da:	81 70       	andi	r24, 0x01	; 1
     8dc:	90 70       	andi	r25, 0x00	; 0
     8de:	a0 70       	andi	r26, 0x00	; 0
     8e0:	b0 70       	andi	r27, 0x00	; 0
     8e2:	56 95       	lsr	r21
     8e4:	47 95       	ror	r20
     8e6:	37 95       	ror	r19
     8e8:	27 95       	ror	r18
     8ea:	82 2b       	or	r24, r18
     8ec:	93 2b       	or	r25, r19
     8ee:	a4 2b       	or	r26, r20
     8f0:	b5 2b       	or	r27, r21
     8f2:	84 83       	std	Z+4, r24	; 0x04
     8f4:	95 83       	std	Z+5, r25	; 0x05
     8f6:	a6 83       	std	Z+6, r26	; 0x06
     8f8:	b7 83       	std	Z+7, r27	; 0x07
     8fa:	82 81       	ldd	r24, Z+2	; 0x02
     8fc:	93 81       	ldd	r25, Z+3	; 0x03
     8fe:	01 96       	adiw	r24, 0x01	; 1
     900:	93 83       	std	Z+3, r25	; 0x03
     902:	82 83       	std	Z+2, r24	; 0x02
     904:	df 01       	movw	r26, r30
     906:	01 c0       	rjmp	.+2      	; 0x90a <__stack+0xb>
     908:	d2 01       	movw	r26, r4
     90a:	cd 01       	movw	r24, r26
     90c:	cd b7       	in	r28, 0x3d	; 61
     90e:	de b7       	in	r29, 0x3e	; 62
     910:	e2 e1       	ldi	r30, 0x12	; 18
     912:	0c 94 82 09 	jmp	0x1304	; 0x1304 <__epilogue_restores__>

00000916 <__subsf3>:
     916:	a0 e2       	ldi	r26, 0x20	; 32
     918:	b0 e0       	ldi	r27, 0x00	; 0
     91a:	e1 e9       	ldi	r30, 0x91	; 145
     91c:	f4 e0       	ldi	r31, 0x04	; 4
     91e:	0c 94 72 09 	jmp	0x12e4	; 0x12e4 <__prologue_saves__+0x18>
     922:	69 83       	std	Y+1, r22	; 0x01
     924:	7a 83       	std	Y+2, r23	; 0x02
     926:	8b 83       	std	Y+3, r24	; 0x03
     928:	9c 83       	std	Y+4, r25	; 0x04
     92a:	2d 83       	std	Y+5, r18	; 0x05
     92c:	3e 83       	std	Y+6, r19	; 0x06
     92e:	4f 83       	std	Y+7, r20	; 0x07
     930:	58 87       	std	Y+8, r21	; 0x08
     932:	e9 e0       	ldi	r30, 0x09	; 9
     934:	ee 2e       	mov	r14, r30
     936:	f1 2c       	mov	r15, r1
     938:	ec 0e       	add	r14, r28
     93a:	fd 1e       	adc	r15, r29
     93c:	ce 01       	movw	r24, r28
     93e:	01 96       	adiw	r24, 0x01	; 1
     940:	b7 01       	movw	r22, r14
     942:	0e 94 95 08 	call	0x112a	; 0x112a <__unpack_f>
     946:	8e 01       	movw	r16, r28
     948:	0f 5e       	subi	r16, 0xEF	; 239
     94a:	1f 4f       	sbci	r17, 0xFF	; 255
     94c:	ce 01       	movw	r24, r28
     94e:	05 96       	adiw	r24, 0x05	; 5
     950:	b8 01       	movw	r22, r16
     952:	0e 94 95 08 	call	0x112a	; 0x112a <__unpack_f>
     956:	8a 89       	ldd	r24, Y+18	; 0x12
     958:	91 e0       	ldi	r25, 0x01	; 1
     95a:	89 27       	eor	r24, r25
     95c:	8a 8b       	std	Y+18, r24	; 0x12
     95e:	c7 01       	movw	r24, r14
     960:	b8 01       	movw	r22, r16
     962:	ae 01       	movw	r20, r28
     964:	47 5e       	subi	r20, 0xE7	; 231
     966:	5f 4f       	sbci	r21, 0xFF	; 255
     968:	0e 94 3f 03 	call	0x67e	; 0x67e <_fpadd_parts>
     96c:	0e 94 c0 07 	call	0xf80	; 0xf80 <__pack_f>
     970:	a0 96       	adiw	r28, 0x20	; 32
     972:	e6 e0       	ldi	r30, 0x06	; 6
     974:	0c 94 8e 09 	jmp	0x131c	; 0x131c <__epilogue_restores__+0x18>

00000978 <__addsf3>:
     978:	a0 e2       	ldi	r26, 0x20	; 32
     97a:	b0 e0       	ldi	r27, 0x00	; 0
     97c:	e2 ec       	ldi	r30, 0xC2	; 194
     97e:	f4 e0       	ldi	r31, 0x04	; 4
     980:	0c 94 72 09 	jmp	0x12e4	; 0x12e4 <__prologue_saves__+0x18>
     984:	69 83       	std	Y+1, r22	; 0x01
     986:	7a 83       	std	Y+2, r23	; 0x02
     988:	8b 83       	std	Y+3, r24	; 0x03
     98a:	9c 83       	std	Y+4, r25	; 0x04
     98c:	2d 83       	std	Y+5, r18	; 0x05
     98e:	3e 83       	std	Y+6, r19	; 0x06
     990:	4f 83       	std	Y+7, r20	; 0x07
     992:	58 87       	std	Y+8, r21	; 0x08
     994:	f9 e0       	ldi	r31, 0x09	; 9
     996:	ef 2e       	mov	r14, r31
     998:	f1 2c       	mov	r15, r1
     99a:	ec 0e       	add	r14, r28
     99c:	fd 1e       	adc	r15, r29
     99e:	ce 01       	movw	r24, r28
     9a0:	01 96       	adiw	r24, 0x01	; 1
     9a2:	b7 01       	movw	r22, r14
     9a4:	0e 94 95 08 	call	0x112a	; 0x112a <__unpack_f>
     9a8:	8e 01       	movw	r16, r28
     9aa:	0f 5e       	subi	r16, 0xEF	; 239
     9ac:	1f 4f       	sbci	r17, 0xFF	; 255
     9ae:	ce 01       	movw	r24, r28
     9b0:	05 96       	adiw	r24, 0x05	; 5
     9b2:	b8 01       	movw	r22, r16
     9b4:	0e 94 95 08 	call	0x112a	; 0x112a <__unpack_f>
     9b8:	c7 01       	movw	r24, r14
     9ba:	b8 01       	movw	r22, r16
     9bc:	ae 01       	movw	r20, r28
     9be:	47 5e       	subi	r20, 0xE7	; 231
     9c0:	5f 4f       	sbci	r21, 0xFF	; 255
     9c2:	0e 94 3f 03 	call	0x67e	; 0x67e <_fpadd_parts>
     9c6:	0e 94 c0 07 	call	0xf80	; 0xf80 <__pack_f>
     9ca:	a0 96       	adiw	r28, 0x20	; 32
     9cc:	e6 e0       	ldi	r30, 0x06	; 6
     9ce:	0c 94 8e 09 	jmp	0x131c	; 0x131c <__epilogue_restores__+0x18>

000009d2 <__mulsf3>:
     9d2:	a0 e2       	ldi	r26, 0x20	; 32
     9d4:	b0 e0       	ldi	r27, 0x00	; 0
     9d6:	ef ee       	ldi	r30, 0xEF	; 239
     9d8:	f4 e0       	ldi	r31, 0x04	; 4
     9da:	0c 94 66 09 	jmp	0x12cc	; 0x12cc <__prologue_saves__>
     9de:	69 83       	std	Y+1, r22	; 0x01
     9e0:	7a 83       	std	Y+2, r23	; 0x02
     9e2:	8b 83       	std	Y+3, r24	; 0x03
     9e4:	9c 83       	std	Y+4, r25	; 0x04
     9e6:	2d 83       	std	Y+5, r18	; 0x05
     9e8:	3e 83       	std	Y+6, r19	; 0x06
     9ea:	4f 83       	std	Y+7, r20	; 0x07
     9ec:	58 87       	std	Y+8, r21	; 0x08
     9ee:	ce 01       	movw	r24, r28
     9f0:	01 96       	adiw	r24, 0x01	; 1
     9f2:	be 01       	movw	r22, r28
     9f4:	67 5f       	subi	r22, 0xF7	; 247
     9f6:	7f 4f       	sbci	r23, 0xFF	; 255
     9f8:	0e 94 95 08 	call	0x112a	; 0x112a <__unpack_f>
     9fc:	ce 01       	movw	r24, r28
     9fe:	05 96       	adiw	r24, 0x05	; 5
     a00:	be 01       	movw	r22, r28
     a02:	6f 5e       	subi	r22, 0xEF	; 239
     a04:	7f 4f       	sbci	r23, 0xFF	; 255
     a06:	0e 94 95 08 	call	0x112a	; 0x112a <__unpack_f>
     a0a:	99 85       	ldd	r25, Y+9	; 0x09
     a0c:	92 30       	cpi	r25, 0x02	; 2
     a0e:	88 f0       	brcs	.+34     	; 0xa32 <__mulsf3+0x60>
     a10:	89 89       	ldd	r24, Y+17	; 0x11
     a12:	82 30       	cpi	r24, 0x02	; 2
     a14:	c8 f0       	brcs	.+50     	; 0xa48 <__mulsf3+0x76>
     a16:	94 30       	cpi	r25, 0x04	; 4
     a18:	19 f4       	brne	.+6      	; 0xa20 <__mulsf3+0x4e>
     a1a:	82 30       	cpi	r24, 0x02	; 2
     a1c:	51 f4       	brne	.+20     	; 0xa32 <__mulsf3+0x60>
     a1e:	04 c0       	rjmp	.+8      	; 0xa28 <__mulsf3+0x56>
     a20:	84 30       	cpi	r24, 0x04	; 4
     a22:	29 f4       	brne	.+10     	; 0xa2e <__mulsf3+0x5c>
     a24:	92 30       	cpi	r25, 0x02	; 2
     a26:	81 f4       	brne	.+32     	; 0xa48 <__mulsf3+0x76>
     a28:	80 e0       	ldi	r24, 0x00	; 0
     a2a:	91 e0       	ldi	r25, 0x01	; 1
     a2c:	c6 c0       	rjmp	.+396    	; 0xbba <__mulsf3+0x1e8>
     a2e:	92 30       	cpi	r25, 0x02	; 2
     a30:	49 f4       	brne	.+18     	; 0xa44 <__mulsf3+0x72>
     a32:	20 e0       	ldi	r18, 0x00	; 0
     a34:	9a 85       	ldd	r25, Y+10	; 0x0a
     a36:	8a 89       	ldd	r24, Y+18	; 0x12
     a38:	98 13       	cpse	r25, r24
     a3a:	21 e0       	ldi	r18, 0x01	; 1
     a3c:	2a 87       	std	Y+10, r18	; 0x0a
     a3e:	ce 01       	movw	r24, r28
     a40:	09 96       	adiw	r24, 0x09	; 9
     a42:	bb c0       	rjmp	.+374    	; 0xbba <__mulsf3+0x1e8>
     a44:	82 30       	cpi	r24, 0x02	; 2
     a46:	49 f4       	brne	.+18     	; 0xa5a <__mulsf3+0x88>
     a48:	20 e0       	ldi	r18, 0x00	; 0
     a4a:	9a 85       	ldd	r25, Y+10	; 0x0a
     a4c:	8a 89       	ldd	r24, Y+18	; 0x12
     a4e:	98 13       	cpse	r25, r24
     a50:	21 e0       	ldi	r18, 0x01	; 1
     a52:	2a 8b       	std	Y+18, r18	; 0x12
     a54:	ce 01       	movw	r24, r28
     a56:	41 96       	adiw	r24, 0x11	; 17
     a58:	b0 c0       	rjmp	.+352    	; 0xbba <__mulsf3+0x1e8>
     a5a:	2d 84       	ldd	r2, Y+13	; 0x0d
     a5c:	3e 84       	ldd	r3, Y+14	; 0x0e
     a5e:	4f 84       	ldd	r4, Y+15	; 0x0f
     a60:	58 88       	ldd	r5, Y+16	; 0x10
     a62:	6d 88       	ldd	r6, Y+21	; 0x15
     a64:	7e 88       	ldd	r7, Y+22	; 0x16
     a66:	8f 88       	ldd	r8, Y+23	; 0x17
     a68:	98 8c       	ldd	r9, Y+24	; 0x18
     a6a:	ee 24       	eor	r14, r14
     a6c:	ff 24       	eor	r15, r15
     a6e:	87 01       	movw	r16, r14
     a70:	aa 24       	eor	r10, r10
     a72:	bb 24       	eor	r11, r11
     a74:	65 01       	movw	r12, r10
     a76:	40 e0       	ldi	r20, 0x00	; 0
     a78:	50 e0       	ldi	r21, 0x00	; 0
     a7a:	60 e0       	ldi	r22, 0x00	; 0
     a7c:	70 e0       	ldi	r23, 0x00	; 0
     a7e:	e0 e0       	ldi	r30, 0x00	; 0
     a80:	f0 e0       	ldi	r31, 0x00	; 0
     a82:	c1 01       	movw	r24, r2
     a84:	81 70       	andi	r24, 0x01	; 1
     a86:	90 70       	andi	r25, 0x00	; 0
     a88:	89 2b       	or	r24, r25
     a8a:	e9 f0       	breq	.+58     	; 0xac6 <__mulsf3+0xf4>
     a8c:	e6 0c       	add	r14, r6
     a8e:	f7 1c       	adc	r15, r7
     a90:	08 1d       	adc	r16, r8
     a92:	19 1d       	adc	r17, r9
     a94:	9a 01       	movw	r18, r20
     a96:	ab 01       	movw	r20, r22
     a98:	2a 0d       	add	r18, r10
     a9a:	3b 1d       	adc	r19, r11
     a9c:	4c 1d       	adc	r20, r12
     a9e:	5d 1d       	adc	r21, r13
     aa0:	80 e0       	ldi	r24, 0x00	; 0
     aa2:	90 e0       	ldi	r25, 0x00	; 0
     aa4:	a0 e0       	ldi	r26, 0x00	; 0
     aa6:	b0 e0       	ldi	r27, 0x00	; 0
     aa8:	e6 14       	cp	r14, r6
     aaa:	f7 04       	cpc	r15, r7
     aac:	08 05       	cpc	r16, r8
     aae:	19 05       	cpc	r17, r9
     ab0:	20 f4       	brcc	.+8      	; 0xaba <__mulsf3+0xe8>
     ab2:	81 e0       	ldi	r24, 0x01	; 1
     ab4:	90 e0       	ldi	r25, 0x00	; 0
     ab6:	a0 e0       	ldi	r26, 0x00	; 0
     ab8:	b0 e0       	ldi	r27, 0x00	; 0
     aba:	ba 01       	movw	r22, r20
     abc:	a9 01       	movw	r20, r18
     abe:	48 0f       	add	r20, r24
     ac0:	59 1f       	adc	r21, r25
     ac2:	6a 1f       	adc	r22, r26
     ac4:	7b 1f       	adc	r23, r27
     ac6:	aa 0c       	add	r10, r10
     ac8:	bb 1c       	adc	r11, r11
     aca:	cc 1c       	adc	r12, r12
     acc:	dd 1c       	adc	r13, r13
     ace:	97 fe       	sbrs	r9, 7
     ad0:	08 c0       	rjmp	.+16     	; 0xae2 <__mulsf3+0x110>
     ad2:	81 e0       	ldi	r24, 0x01	; 1
     ad4:	90 e0       	ldi	r25, 0x00	; 0
     ad6:	a0 e0       	ldi	r26, 0x00	; 0
     ad8:	b0 e0       	ldi	r27, 0x00	; 0
     ada:	a8 2a       	or	r10, r24
     adc:	b9 2a       	or	r11, r25
     ade:	ca 2a       	or	r12, r26
     ae0:	db 2a       	or	r13, r27
     ae2:	31 96       	adiw	r30, 0x01	; 1
     ae4:	e0 32       	cpi	r30, 0x20	; 32
     ae6:	f1 05       	cpc	r31, r1
     ae8:	49 f0       	breq	.+18     	; 0xafc <__mulsf3+0x12a>
     aea:	66 0c       	add	r6, r6
     aec:	77 1c       	adc	r7, r7
     aee:	88 1c       	adc	r8, r8
     af0:	99 1c       	adc	r9, r9
     af2:	56 94       	lsr	r5
     af4:	47 94       	ror	r4
     af6:	37 94       	ror	r3
     af8:	27 94       	ror	r2
     afa:	c3 cf       	rjmp	.-122    	; 0xa82 <__mulsf3+0xb0>
     afc:	fa 85       	ldd	r31, Y+10	; 0x0a
     afe:	ea 89       	ldd	r30, Y+18	; 0x12
     b00:	2b 89       	ldd	r18, Y+19	; 0x13
     b02:	3c 89       	ldd	r19, Y+20	; 0x14
     b04:	8b 85       	ldd	r24, Y+11	; 0x0b
     b06:	9c 85       	ldd	r25, Y+12	; 0x0c
     b08:	28 0f       	add	r18, r24
     b0a:	39 1f       	adc	r19, r25
     b0c:	2e 5f       	subi	r18, 0xFE	; 254
     b0e:	3f 4f       	sbci	r19, 0xFF	; 255
     b10:	17 c0       	rjmp	.+46     	; 0xb40 <__mulsf3+0x16e>
     b12:	ca 01       	movw	r24, r20
     b14:	81 70       	andi	r24, 0x01	; 1
     b16:	90 70       	andi	r25, 0x00	; 0
     b18:	89 2b       	or	r24, r25
     b1a:	61 f0       	breq	.+24     	; 0xb34 <__mulsf3+0x162>
     b1c:	16 95       	lsr	r17
     b1e:	07 95       	ror	r16
     b20:	f7 94       	ror	r15
     b22:	e7 94       	ror	r14
     b24:	80 e0       	ldi	r24, 0x00	; 0
     b26:	90 e0       	ldi	r25, 0x00	; 0
     b28:	a0 e0       	ldi	r26, 0x00	; 0
     b2a:	b0 e8       	ldi	r27, 0x80	; 128
     b2c:	e8 2a       	or	r14, r24
     b2e:	f9 2a       	or	r15, r25
     b30:	0a 2b       	or	r16, r26
     b32:	1b 2b       	or	r17, r27
     b34:	76 95       	lsr	r23
     b36:	67 95       	ror	r22
     b38:	57 95       	ror	r21
     b3a:	47 95       	ror	r20
     b3c:	2f 5f       	subi	r18, 0xFF	; 255
     b3e:	3f 4f       	sbci	r19, 0xFF	; 255
     b40:	77 fd       	sbrc	r23, 7
     b42:	e7 cf       	rjmp	.-50     	; 0xb12 <__mulsf3+0x140>
     b44:	0c c0       	rjmp	.+24     	; 0xb5e <__mulsf3+0x18c>
     b46:	44 0f       	add	r20, r20
     b48:	55 1f       	adc	r21, r21
     b4a:	66 1f       	adc	r22, r22
     b4c:	77 1f       	adc	r23, r23
     b4e:	17 fd       	sbrc	r17, 7
     b50:	41 60       	ori	r20, 0x01	; 1
     b52:	ee 0c       	add	r14, r14
     b54:	ff 1c       	adc	r15, r15
     b56:	00 1f       	adc	r16, r16
     b58:	11 1f       	adc	r17, r17
     b5a:	21 50       	subi	r18, 0x01	; 1
     b5c:	30 40       	sbci	r19, 0x00	; 0
     b5e:	40 30       	cpi	r20, 0x00	; 0
     b60:	90 e0       	ldi	r25, 0x00	; 0
     b62:	59 07       	cpc	r21, r25
     b64:	90 e0       	ldi	r25, 0x00	; 0
     b66:	69 07       	cpc	r22, r25
     b68:	90 e4       	ldi	r25, 0x40	; 64
     b6a:	79 07       	cpc	r23, r25
     b6c:	60 f3       	brcs	.-40     	; 0xb46 <__mulsf3+0x174>
     b6e:	2b 8f       	std	Y+27, r18	; 0x1b
     b70:	3c 8f       	std	Y+28, r19	; 0x1c
     b72:	db 01       	movw	r26, r22
     b74:	ca 01       	movw	r24, r20
     b76:	8f 77       	andi	r24, 0x7F	; 127
     b78:	90 70       	andi	r25, 0x00	; 0
     b7a:	a0 70       	andi	r26, 0x00	; 0
     b7c:	b0 70       	andi	r27, 0x00	; 0
     b7e:	80 34       	cpi	r24, 0x40	; 64
     b80:	91 05       	cpc	r25, r1
     b82:	a1 05       	cpc	r26, r1
     b84:	b1 05       	cpc	r27, r1
     b86:	61 f4       	brne	.+24     	; 0xba0 <__mulsf3+0x1ce>
     b88:	47 fd       	sbrc	r20, 7
     b8a:	0a c0       	rjmp	.+20     	; 0xba0 <__mulsf3+0x1ce>
     b8c:	e1 14       	cp	r14, r1
     b8e:	f1 04       	cpc	r15, r1
     b90:	01 05       	cpc	r16, r1
     b92:	11 05       	cpc	r17, r1
     b94:	29 f0       	breq	.+10     	; 0xba0 <__mulsf3+0x1ce>
     b96:	40 5c       	subi	r20, 0xC0	; 192
     b98:	5f 4f       	sbci	r21, 0xFF	; 255
     b9a:	6f 4f       	sbci	r22, 0xFF	; 255
     b9c:	7f 4f       	sbci	r23, 0xFF	; 255
     b9e:	40 78       	andi	r20, 0x80	; 128
     ba0:	1a 8e       	std	Y+26, r1	; 0x1a
     ba2:	fe 17       	cp	r31, r30
     ba4:	11 f0       	breq	.+4      	; 0xbaa <__mulsf3+0x1d8>
     ba6:	81 e0       	ldi	r24, 0x01	; 1
     ba8:	8a 8f       	std	Y+26, r24	; 0x1a
     baa:	4d 8f       	std	Y+29, r20	; 0x1d
     bac:	5e 8f       	std	Y+30, r21	; 0x1e
     bae:	6f 8f       	std	Y+31, r22	; 0x1f
     bb0:	78 a3       	std	Y+32, r23	; 0x20
     bb2:	83 e0       	ldi	r24, 0x03	; 3
     bb4:	89 8f       	std	Y+25, r24	; 0x19
     bb6:	ce 01       	movw	r24, r28
     bb8:	49 96       	adiw	r24, 0x19	; 25
     bba:	0e 94 c0 07 	call	0xf80	; 0xf80 <__pack_f>
     bbe:	a0 96       	adiw	r28, 0x20	; 32
     bc0:	e2 e1       	ldi	r30, 0x12	; 18
     bc2:	0c 94 82 09 	jmp	0x1304	; 0x1304 <__epilogue_restores__>

00000bc6 <__divsf3>:
     bc6:	a8 e1       	ldi	r26, 0x18	; 24
     bc8:	b0 e0       	ldi	r27, 0x00	; 0
     bca:	e9 ee       	ldi	r30, 0xE9	; 233
     bcc:	f5 e0       	ldi	r31, 0x05	; 5
     bce:	0c 94 6e 09 	jmp	0x12dc	; 0x12dc <__prologue_saves__+0x10>
     bd2:	69 83       	std	Y+1, r22	; 0x01
     bd4:	7a 83       	std	Y+2, r23	; 0x02
     bd6:	8b 83       	std	Y+3, r24	; 0x03
     bd8:	9c 83       	std	Y+4, r25	; 0x04
     bda:	2d 83       	std	Y+5, r18	; 0x05
     bdc:	3e 83       	std	Y+6, r19	; 0x06
     bde:	4f 83       	std	Y+7, r20	; 0x07
     be0:	58 87       	std	Y+8, r21	; 0x08
     be2:	b9 e0       	ldi	r27, 0x09	; 9
     be4:	eb 2e       	mov	r14, r27
     be6:	f1 2c       	mov	r15, r1
     be8:	ec 0e       	add	r14, r28
     bea:	fd 1e       	adc	r15, r29
     bec:	ce 01       	movw	r24, r28
     bee:	01 96       	adiw	r24, 0x01	; 1
     bf0:	b7 01       	movw	r22, r14
     bf2:	0e 94 95 08 	call	0x112a	; 0x112a <__unpack_f>
     bf6:	8e 01       	movw	r16, r28
     bf8:	0f 5e       	subi	r16, 0xEF	; 239
     bfa:	1f 4f       	sbci	r17, 0xFF	; 255
     bfc:	ce 01       	movw	r24, r28
     bfe:	05 96       	adiw	r24, 0x05	; 5
     c00:	b8 01       	movw	r22, r16
     c02:	0e 94 95 08 	call	0x112a	; 0x112a <__unpack_f>
     c06:	29 85       	ldd	r18, Y+9	; 0x09
     c08:	22 30       	cpi	r18, 0x02	; 2
     c0a:	08 f4       	brcc	.+2      	; 0xc0e <__divsf3+0x48>
     c0c:	7e c0       	rjmp	.+252    	; 0xd0a <__divsf3+0x144>
     c0e:	39 89       	ldd	r19, Y+17	; 0x11
     c10:	32 30       	cpi	r19, 0x02	; 2
     c12:	10 f4       	brcc	.+4      	; 0xc18 <__divsf3+0x52>
     c14:	b8 01       	movw	r22, r16
     c16:	7c c0       	rjmp	.+248    	; 0xd10 <__divsf3+0x14a>
     c18:	8a 85       	ldd	r24, Y+10	; 0x0a
     c1a:	9a 89       	ldd	r25, Y+18	; 0x12
     c1c:	89 27       	eor	r24, r25
     c1e:	8a 87       	std	Y+10, r24	; 0x0a
     c20:	24 30       	cpi	r18, 0x04	; 4
     c22:	11 f0       	breq	.+4      	; 0xc28 <__divsf3+0x62>
     c24:	22 30       	cpi	r18, 0x02	; 2
     c26:	31 f4       	brne	.+12     	; 0xc34 <__divsf3+0x6e>
     c28:	23 17       	cp	r18, r19
     c2a:	09 f0       	breq	.+2      	; 0xc2e <__divsf3+0x68>
     c2c:	6e c0       	rjmp	.+220    	; 0xd0a <__divsf3+0x144>
     c2e:	60 e0       	ldi	r22, 0x00	; 0
     c30:	71 e0       	ldi	r23, 0x01	; 1
     c32:	6e c0       	rjmp	.+220    	; 0xd10 <__divsf3+0x14a>
     c34:	34 30       	cpi	r19, 0x04	; 4
     c36:	39 f4       	brne	.+14     	; 0xc46 <__divsf3+0x80>
     c38:	1d 86       	std	Y+13, r1	; 0x0d
     c3a:	1e 86       	std	Y+14, r1	; 0x0e
     c3c:	1f 86       	std	Y+15, r1	; 0x0f
     c3e:	18 8a       	std	Y+16, r1	; 0x10
     c40:	1c 86       	std	Y+12, r1	; 0x0c
     c42:	1b 86       	std	Y+11, r1	; 0x0b
     c44:	04 c0       	rjmp	.+8      	; 0xc4e <__divsf3+0x88>
     c46:	32 30       	cpi	r19, 0x02	; 2
     c48:	21 f4       	brne	.+8      	; 0xc52 <__divsf3+0x8c>
     c4a:	84 e0       	ldi	r24, 0x04	; 4
     c4c:	89 87       	std	Y+9, r24	; 0x09
     c4e:	b7 01       	movw	r22, r14
     c50:	5f c0       	rjmp	.+190    	; 0xd10 <__divsf3+0x14a>
     c52:	2b 85       	ldd	r18, Y+11	; 0x0b
     c54:	3c 85       	ldd	r19, Y+12	; 0x0c
     c56:	8b 89       	ldd	r24, Y+19	; 0x13
     c58:	9c 89       	ldd	r25, Y+20	; 0x14
     c5a:	28 1b       	sub	r18, r24
     c5c:	39 0b       	sbc	r19, r25
     c5e:	3c 87       	std	Y+12, r19	; 0x0c
     c60:	2b 87       	std	Y+11, r18	; 0x0b
     c62:	ed 84       	ldd	r14, Y+13	; 0x0d
     c64:	fe 84       	ldd	r15, Y+14	; 0x0e
     c66:	0f 85       	ldd	r16, Y+15	; 0x0f
     c68:	18 89       	ldd	r17, Y+16	; 0x10
     c6a:	ad 88       	ldd	r10, Y+21	; 0x15
     c6c:	be 88       	ldd	r11, Y+22	; 0x16
     c6e:	cf 88       	ldd	r12, Y+23	; 0x17
     c70:	d8 8c       	ldd	r13, Y+24	; 0x18
     c72:	ea 14       	cp	r14, r10
     c74:	fb 04       	cpc	r15, r11
     c76:	0c 05       	cpc	r16, r12
     c78:	1d 05       	cpc	r17, r13
     c7a:	40 f4       	brcc	.+16     	; 0xc8c <__divsf3+0xc6>
     c7c:	ee 0c       	add	r14, r14
     c7e:	ff 1c       	adc	r15, r15
     c80:	00 1f       	adc	r16, r16
     c82:	11 1f       	adc	r17, r17
     c84:	21 50       	subi	r18, 0x01	; 1
     c86:	30 40       	sbci	r19, 0x00	; 0
     c88:	3c 87       	std	Y+12, r19	; 0x0c
     c8a:	2b 87       	std	Y+11, r18	; 0x0b
     c8c:	20 e0       	ldi	r18, 0x00	; 0
     c8e:	30 e0       	ldi	r19, 0x00	; 0
     c90:	40 e0       	ldi	r20, 0x00	; 0
     c92:	50 e0       	ldi	r21, 0x00	; 0
     c94:	80 e0       	ldi	r24, 0x00	; 0
     c96:	90 e0       	ldi	r25, 0x00	; 0
     c98:	a0 e0       	ldi	r26, 0x00	; 0
     c9a:	b0 e4       	ldi	r27, 0x40	; 64
     c9c:	60 e0       	ldi	r22, 0x00	; 0
     c9e:	70 e0       	ldi	r23, 0x00	; 0
     ca0:	ea 14       	cp	r14, r10
     ca2:	fb 04       	cpc	r15, r11
     ca4:	0c 05       	cpc	r16, r12
     ca6:	1d 05       	cpc	r17, r13
     ca8:	40 f0       	brcs	.+16     	; 0xcba <__divsf3+0xf4>
     caa:	28 2b       	or	r18, r24
     cac:	39 2b       	or	r19, r25
     cae:	4a 2b       	or	r20, r26
     cb0:	5b 2b       	or	r21, r27
     cb2:	ea 18       	sub	r14, r10
     cb4:	fb 08       	sbc	r15, r11
     cb6:	0c 09       	sbc	r16, r12
     cb8:	1d 09       	sbc	r17, r13
     cba:	b6 95       	lsr	r27
     cbc:	a7 95       	ror	r26
     cbe:	97 95       	ror	r25
     cc0:	87 95       	ror	r24
     cc2:	ee 0c       	add	r14, r14
     cc4:	ff 1c       	adc	r15, r15
     cc6:	00 1f       	adc	r16, r16
     cc8:	11 1f       	adc	r17, r17
     cca:	6f 5f       	subi	r22, 0xFF	; 255
     ccc:	7f 4f       	sbci	r23, 0xFF	; 255
     cce:	6f 31       	cpi	r22, 0x1F	; 31
     cd0:	71 05       	cpc	r23, r1
     cd2:	31 f7       	brne	.-52     	; 0xca0 <__divsf3+0xda>
     cd4:	da 01       	movw	r26, r20
     cd6:	c9 01       	movw	r24, r18
     cd8:	8f 77       	andi	r24, 0x7F	; 127
     cda:	90 70       	andi	r25, 0x00	; 0
     cdc:	a0 70       	andi	r26, 0x00	; 0
     cde:	b0 70       	andi	r27, 0x00	; 0
     ce0:	80 34       	cpi	r24, 0x40	; 64
     ce2:	91 05       	cpc	r25, r1
     ce4:	a1 05       	cpc	r26, r1
     ce6:	b1 05       	cpc	r27, r1
     ce8:	61 f4       	brne	.+24     	; 0xd02 <__divsf3+0x13c>
     cea:	27 fd       	sbrc	r18, 7
     cec:	0a c0       	rjmp	.+20     	; 0xd02 <__divsf3+0x13c>
     cee:	e1 14       	cp	r14, r1
     cf0:	f1 04       	cpc	r15, r1
     cf2:	01 05       	cpc	r16, r1
     cf4:	11 05       	cpc	r17, r1
     cf6:	29 f0       	breq	.+10     	; 0xd02 <__divsf3+0x13c>
     cf8:	20 5c       	subi	r18, 0xC0	; 192
     cfa:	3f 4f       	sbci	r19, 0xFF	; 255
     cfc:	4f 4f       	sbci	r20, 0xFF	; 255
     cfe:	5f 4f       	sbci	r21, 0xFF	; 255
     d00:	20 78       	andi	r18, 0x80	; 128
     d02:	2d 87       	std	Y+13, r18	; 0x0d
     d04:	3e 87       	std	Y+14, r19	; 0x0e
     d06:	4f 87       	std	Y+15, r20	; 0x0f
     d08:	58 8b       	std	Y+16, r21	; 0x10
     d0a:	be 01       	movw	r22, r28
     d0c:	67 5f       	subi	r22, 0xF7	; 247
     d0e:	7f 4f       	sbci	r23, 0xFF	; 255
     d10:	cb 01       	movw	r24, r22
     d12:	0e 94 c0 07 	call	0xf80	; 0xf80 <__pack_f>
     d16:	68 96       	adiw	r28, 0x18	; 24
     d18:	ea e0       	ldi	r30, 0x0A	; 10
     d1a:	0c 94 8a 09 	jmp	0x1314	; 0x1314 <__epilogue_restores__+0x10>

00000d1e <__gesf2>:
     d1e:	a8 e1       	ldi	r26, 0x18	; 24
     d20:	b0 e0       	ldi	r27, 0x00	; 0
     d22:	e5 e9       	ldi	r30, 0x95	; 149
     d24:	f6 e0       	ldi	r31, 0x06	; 6
     d26:	0c 94 72 09 	jmp	0x12e4	; 0x12e4 <__prologue_saves__+0x18>
     d2a:	69 83       	std	Y+1, r22	; 0x01
     d2c:	7a 83       	std	Y+2, r23	; 0x02
     d2e:	8b 83       	std	Y+3, r24	; 0x03
     d30:	9c 83       	std	Y+4, r25	; 0x04
     d32:	2d 83       	std	Y+5, r18	; 0x05
     d34:	3e 83       	std	Y+6, r19	; 0x06
     d36:	4f 83       	std	Y+7, r20	; 0x07
     d38:	58 87       	std	Y+8, r21	; 0x08
     d3a:	89 e0       	ldi	r24, 0x09	; 9
     d3c:	e8 2e       	mov	r14, r24
     d3e:	f1 2c       	mov	r15, r1
     d40:	ec 0e       	add	r14, r28
     d42:	fd 1e       	adc	r15, r29
     d44:	ce 01       	movw	r24, r28
     d46:	01 96       	adiw	r24, 0x01	; 1
     d48:	b7 01       	movw	r22, r14
     d4a:	0e 94 95 08 	call	0x112a	; 0x112a <__unpack_f>
     d4e:	8e 01       	movw	r16, r28
     d50:	0f 5e       	subi	r16, 0xEF	; 239
     d52:	1f 4f       	sbci	r17, 0xFF	; 255
     d54:	ce 01       	movw	r24, r28
     d56:	05 96       	adiw	r24, 0x05	; 5
     d58:	b8 01       	movw	r22, r16
     d5a:	0e 94 95 08 	call	0x112a	; 0x112a <__unpack_f>
     d5e:	89 85       	ldd	r24, Y+9	; 0x09
     d60:	82 30       	cpi	r24, 0x02	; 2
     d62:	40 f0       	brcs	.+16     	; 0xd74 <__gesf2+0x56>
     d64:	89 89       	ldd	r24, Y+17	; 0x11
     d66:	82 30       	cpi	r24, 0x02	; 2
     d68:	28 f0       	brcs	.+10     	; 0xd74 <__gesf2+0x56>
     d6a:	c7 01       	movw	r24, r14
     d6c:	b8 01       	movw	r22, r16
     d6e:	0e 94 0d 09 	call	0x121a	; 0x121a <__fpcmp_parts_f>
     d72:	01 c0       	rjmp	.+2      	; 0xd76 <__gesf2+0x58>
     d74:	8f ef       	ldi	r24, 0xFF	; 255
     d76:	68 96       	adiw	r28, 0x18	; 24
     d78:	e6 e0       	ldi	r30, 0x06	; 6
     d7a:	0c 94 8e 09 	jmp	0x131c	; 0x131c <__epilogue_restores__+0x18>

00000d7e <__floatsisf>:
     d7e:	a8 e0       	ldi	r26, 0x08	; 8
     d80:	b0 e0       	ldi	r27, 0x00	; 0
     d82:	e5 ec       	ldi	r30, 0xC5	; 197
     d84:	f6 e0       	ldi	r31, 0x06	; 6
     d86:	0c 94 6f 09 	jmp	0x12de	; 0x12de <__prologue_saves__+0x12>
     d8a:	9b 01       	movw	r18, r22
     d8c:	ac 01       	movw	r20, r24
     d8e:	83 e0       	ldi	r24, 0x03	; 3
     d90:	89 83       	std	Y+1, r24	; 0x01
     d92:	da 01       	movw	r26, r20
     d94:	c9 01       	movw	r24, r18
     d96:	88 27       	eor	r24, r24
     d98:	b7 fd       	sbrc	r27, 7
     d9a:	83 95       	inc	r24
     d9c:	99 27       	eor	r25, r25
     d9e:	aa 27       	eor	r26, r26
     da0:	bb 27       	eor	r27, r27
     da2:	b8 2e       	mov	r11, r24
     da4:	21 15       	cp	r18, r1
     da6:	31 05       	cpc	r19, r1
     da8:	41 05       	cpc	r20, r1
     daa:	51 05       	cpc	r21, r1
     dac:	19 f4       	brne	.+6      	; 0xdb4 <__floatsisf+0x36>
     dae:	82 e0       	ldi	r24, 0x02	; 2
     db0:	89 83       	std	Y+1, r24	; 0x01
     db2:	3a c0       	rjmp	.+116    	; 0xe28 <__floatsisf+0xaa>
     db4:	88 23       	and	r24, r24
     db6:	a9 f0       	breq	.+42     	; 0xde2 <__floatsisf+0x64>
     db8:	20 30       	cpi	r18, 0x00	; 0
     dba:	80 e0       	ldi	r24, 0x00	; 0
     dbc:	38 07       	cpc	r19, r24
     dbe:	80 e0       	ldi	r24, 0x00	; 0
     dc0:	48 07       	cpc	r20, r24
     dc2:	80 e8       	ldi	r24, 0x80	; 128
     dc4:	58 07       	cpc	r21, r24
     dc6:	29 f4       	brne	.+10     	; 0xdd2 <__floatsisf+0x54>
     dc8:	60 e0       	ldi	r22, 0x00	; 0
     dca:	70 e0       	ldi	r23, 0x00	; 0
     dcc:	80 e0       	ldi	r24, 0x00	; 0
     dce:	9f ec       	ldi	r25, 0xCF	; 207
     dd0:	30 c0       	rjmp	.+96     	; 0xe32 <__floatsisf+0xb4>
     dd2:	ee 24       	eor	r14, r14
     dd4:	ff 24       	eor	r15, r15
     dd6:	87 01       	movw	r16, r14
     dd8:	e2 1a       	sub	r14, r18
     dda:	f3 0a       	sbc	r15, r19
     ddc:	04 0b       	sbc	r16, r20
     dde:	15 0b       	sbc	r17, r21
     de0:	02 c0       	rjmp	.+4      	; 0xde6 <__floatsisf+0x68>
     de2:	79 01       	movw	r14, r18
     de4:	8a 01       	movw	r16, r20
     de6:	8e e1       	ldi	r24, 0x1E	; 30
     de8:	c8 2e       	mov	r12, r24
     dea:	d1 2c       	mov	r13, r1
     dec:	dc 82       	std	Y+4, r13	; 0x04
     dee:	cb 82       	std	Y+3, r12	; 0x03
     df0:	ed 82       	std	Y+5, r14	; 0x05
     df2:	fe 82       	std	Y+6, r15	; 0x06
     df4:	0f 83       	std	Y+7, r16	; 0x07
     df6:	18 87       	std	Y+8, r17	; 0x08
     df8:	c8 01       	movw	r24, r16
     dfa:	b7 01       	movw	r22, r14
     dfc:	0e 94 71 07 	call	0xee2	; 0xee2 <__clzsi2>
     e00:	01 97       	sbiw	r24, 0x01	; 1
     e02:	18 16       	cp	r1, r24
     e04:	19 06       	cpc	r1, r25
     e06:	84 f4       	brge	.+32     	; 0xe28 <__floatsisf+0xaa>
     e08:	08 2e       	mov	r0, r24
     e0a:	04 c0       	rjmp	.+8      	; 0xe14 <__floatsisf+0x96>
     e0c:	ee 0c       	add	r14, r14
     e0e:	ff 1c       	adc	r15, r15
     e10:	00 1f       	adc	r16, r16
     e12:	11 1f       	adc	r17, r17
     e14:	0a 94       	dec	r0
     e16:	d2 f7       	brpl	.-12     	; 0xe0c <__floatsisf+0x8e>
     e18:	ed 82       	std	Y+5, r14	; 0x05
     e1a:	fe 82       	std	Y+6, r15	; 0x06
     e1c:	0f 83       	std	Y+7, r16	; 0x07
     e1e:	18 87       	std	Y+8, r17	; 0x08
     e20:	c8 1a       	sub	r12, r24
     e22:	d9 0a       	sbc	r13, r25
     e24:	dc 82       	std	Y+4, r13	; 0x04
     e26:	cb 82       	std	Y+3, r12	; 0x03
     e28:	ba 82       	std	Y+2, r11	; 0x02
     e2a:	ce 01       	movw	r24, r28
     e2c:	01 96       	adiw	r24, 0x01	; 1
     e2e:	0e 94 c0 07 	call	0xf80	; 0xf80 <__pack_f>
     e32:	28 96       	adiw	r28, 0x08	; 8
     e34:	e9 e0       	ldi	r30, 0x09	; 9
     e36:	0c 94 8b 09 	jmp	0x1316	; 0x1316 <__epilogue_restores__+0x12>

00000e3a <__fixsfsi>:
     e3a:	ac e0       	ldi	r26, 0x0C	; 12
     e3c:	b0 e0       	ldi	r27, 0x00	; 0
     e3e:	e3 e2       	ldi	r30, 0x23	; 35
     e40:	f7 e0       	ldi	r31, 0x07	; 7
     e42:	0c 94 76 09 	jmp	0x12ec	; 0x12ec <__prologue_saves__+0x20>
     e46:	69 83       	std	Y+1, r22	; 0x01
     e48:	7a 83       	std	Y+2, r23	; 0x02
     e4a:	8b 83       	std	Y+3, r24	; 0x03
     e4c:	9c 83       	std	Y+4, r25	; 0x04
     e4e:	ce 01       	movw	r24, r28
     e50:	01 96       	adiw	r24, 0x01	; 1
     e52:	be 01       	movw	r22, r28
     e54:	6b 5f       	subi	r22, 0xFB	; 251
     e56:	7f 4f       	sbci	r23, 0xFF	; 255
     e58:	0e 94 95 08 	call	0x112a	; 0x112a <__unpack_f>
     e5c:	8d 81       	ldd	r24, Y+5	; 0x05
     e5e:	82 30       	cpi	r24, 0x02	; 2
     e60:	61 f1       	breq	.+88     	; 0xeba <__fixsfsi+0x80>
     e62:	82 30       	cpi	r24, 0x02	; 2
     e64:	50 f1       	brcs	.+84     	; 0xeba <__fixsfsi+0x80>
     e66:	84 30       	cpi	r24, 0x04	; 4
     e68:	21 f4       	brne	.+8      	; 0xe72 <__fixsfsi+0x38>
     e6a:	8e 81       	ldd	r24, Y+6	; 0x06
     e6c:	88 23       	and	r24, r24
     e6e:	51 f1       	breq	.+84     	; 0xec4 <__fixsfsi+0x8a>
     e70:	2e c0       	rjmp	.+92     	; 0xece <__fixsfsi+0x94>
     e72:	2f 81       	ldd	r18, Y+7	; 0x07
     e74:	38 85       	ldd	r19, Y+8	; 0x08
     e76:	37 fd       	sbrc	r19, 7
     e78:	20 c0       	rjmp	.+64     	; 0xeba <__fixsfsi+0x80>
     e7a:	6e 81       	ldd	r22, Y+6	; 0x06
     e7c:	2f 31       	cpi	r18, 0x1F	; 31
     e7e:	31 05       	cpc	r19, r1
     e80:	1c f0       	brlt	.+6      	; 0xe88 <__fixsfsi+0x4e>
     e82:	66 23       	and	r22, r22
     e84:	f9 f0       	breq	.+62     	; 0xec4 <__fixsfsi+0x8a>
     e86:	23 c0       	rjmp	.+70     	; 0xece <__fixsfsi+0x94>
     e88:	8e e1       	ldi	r24, 0x1E	; 30
     e8a:	90 e0       	ldi	r25, 0x00	; 0
     e8c:	82 1b       	sub	r24, r18
     e8e:	93 0b       	sbc	r25, r19
     e90:	29 85       	ldd	r18, Y+9	; 0x09
     e92:	3a 85       	ldd	r19, Y+10	; 0x0a
     e94:	4b 85       	ldd	r20, Y+11	; 0x0b
     e96:	5c 85       	ldd	r21, Y+12	; 0x0c
     e98:	04 c0       	rjmp	.+8      	; 0xea2 <__fixsfsi+0x68>
     e9a:	56 95       	lsr	r21
     e9c:	47 95       	ror	r20
     e9e:	37 95       	ror	r19
     ea0:	27 95       	ror	r18
     ea2:	8a 95       	dec	r24
     ea4:	d2 f7       	brpl	.-12     	; 0xe9a <__fixsfsi+0x60>
     ea6:	66 23       	and	r22, r22
     ea8:	b1 f0       	breq	.+44     	; 0xed6 <__fixsfsi+0x9c>
     eaa:	50 95       	com	r21
     eac:	40 95       	com	r20
     eae:	30 95       	com	r19
     eb0:	21 95       	neg	r18
     eb2:	3f 4f       	sbci	r19, 0xFF	; 255
     eb4:	4f 4f       	sbci	r20, 0xFF	; 255
     eb6:	5f 4f       	sbci	r21, 0xFF	; 255
     eb8:	0e c0       	rjmp	.+28     	; 0xed6 <__fixsfsi+0x9c>
     eba:	20 e0       	ldi	r18, 0x00	; 0
     ebc:	30 e0       	ldi	r19, 0x00	; 0
     ebe:	40 e0       	ldi	r20, 0x00	; 0
     ec0:	50 e0       	ldi	r21, 0x00	; 0
     ec2:	09 c0       	rjmp	.+18     	; 0xed6 <__fixsfsi+0x9c>
     ec4:	2f ef       	ldi	r18, 0xFF	; 255
     ec6:	3f ef       	ldi	r19, 0xFF	; 255
     ec8:	4f ef       	ldi	r20, 0xFF	; 255
     eca:	5f e7       	ldi	r21, 0x7F	; 127
     ecc:	04 c0       	rjmp	.+8      	; 0xed6 <__fixsfsi+0x9c>
     ece:	20 e0       	ldi	r18, 0x00	; 0
     ed0:	30 e0       	ldi	r19, 0x00	; 0
     ed2:	40 e0       	ldi	r20, 0x00	; 0
     ed4:	50 e8       	ldi	r21, 0x80	; 128
     ed6:	b9 01       	movw	r22, r18
     ed8:	ca 01       	movw	r24, r20
     eda:	2c 96       	adiw	r28, 0x0c	; 12
     edc:	e2 e0       	ldi	r30, 0x02	; 2
     ede:	0c 94 92 09 	jmp	0x1324	; 0x1324 <__epilogue_restores__+0x20>

00000ee2 <__clzsi2>:
     ee2:	ef 92       	push	r14
     ee4:	ff 92       	push	r15
     ee6:	0f 93       	push	r16
     ee8:	1f 93       	push	r17
     eea:	7b 01       	movw	r14, r22
     eec:	8c 01       	movw	r16, r24
     eee:	80 e0       	ldi	r24, 0x00	; 0
     ef0:	e8 16       	cp	r14, r24
     ef2:	80 e0       	ldi	r24, 0x00	; 0
     ef4:	f8 06       	cpc	r15, r24
     ef6:	81 e0       	ldi	r24, 0x01	; 1
     ef8:	08 07       	cpc	r16, r24
     efa:	80 e0       	ldi	r24, 0x00	; 0
     efc:	18 07       	cpc	r17, r24
     efe:	88 f4       	brcc	.+34     	; 0xf22 <__clzsi2+0x40>
     f00:	8f ef       	ldi	r24, 0xFF	; 255
     f02:	e8 16       	cp	r14, r24
     f04:	f1 04       	cpc	r15, r1
     f06:	01 05       	cpc	r16, r1
     f08:	11 05       	cpc	r17, r1
     f0a:	31 f0       	breq	.+12     	; 0xf18 <__clzsi2+0x36>
     f0c:	28 f0       	brcs	.+10     	; 0xf18 <__clzsi2+0x36>
     f0e:	88 e0       	ldi	r24, 0x08	; 8
     f10:	90 e0       	ldi	r25, 0x00	; 0
     f12:	a0 e0       	ldi	r26, 0x00	; 0
     f14:	b0 e0       	ldi	r27, 0x00	; 0
     f16:	17 c0       	rjmp	.+46     	; 0xf46 <__clzsi2+0x64>
     f18:	80 e0       	ldi	r24, 0x00	; 0
     f1a:	90 e0       	ldi	r25, 0x00	; 0
     f1c:	a0 e0       	ldi	r26, 0x00	; 0
     f1e:	b0 e0       	ldi	r27, 0x00	; 0
     f20:	12 c0       	rjmp	.+36     	; 0xf46 <__clzsi2+0x64>
     f22:	80 e0       	ldi	r24, 0x00	; 0
     f24:	e8 16       	cp	r14, r24
     f26:	80 e0       	ldi	r24, 0x00	; 0
     f28:	f8 06       	cpc	r15, r24
     f2a:	80 e0       	ldi	r24, 0x00	; 0
     f2c:	08 07       	cpc	r16, r24
     f2e:	81 e0       	ldi	r24, 0x01	; 1
     f30:	18 07       	cpc	r17, r24
     f32:	28 f0       	brcs	.+10     	; 0xf3e <__clzsi2+0x5c>
     f34:	88 e1       	ldi	r24, 0x18	; 24
     f36:	90 e0       	ldi	r25, 0x00	; 0
     f38:	a0 e0       	ldi	r26, 0x00	; 0
     f3a:	b0 e0       	ldi	r27, 0x00	; 0
     f3c:	04 c0       	rjmp	.+8      	; 0xf46 <__clzsi2+0x64>
     f3e:	80 e1       	ldi	r24, 0x10	; 16
     f40:	90 e0       	ldi	r25, 0x00	; 0
     f42:	a0 e0       	ldi	r26, 0x00	; 0
     f44:	b0 e0       	ldi	r27, 0x00	; 0
     f46:	20 e2       	ldi	r18, 0x20	; 32
     f48:	30 e0       	ldi	r19, 0x00	; 0
     f4a:	40 e0       	ldi	r20, 0x00	; 0
     f4c:	50 e0       	ldi	r21, 0x00	; 0
     f4e:	28 1b       	sub	r18, r24
     f50:	39 0b       	sbc	r19, r25
     f52:	4a 0b       	sbc	r20, r26
     f54:	5b 0b       	sbc	r21, r27
     f56:	04 c0       	rjmp	.+8      	; 0xf60 <__clzsi2+0x7e>
     f58:	16 95       	lsr	r17
     f5a:	07 95       	ror	r16
     f5c:	f7 94       	ror	r15
     f5e:	e7 94       	ror	r14
     f60:	8a 95       	dec	r24
     f62:	d2 f7       	brpl	.-12     	; 0xf58 <__clzsi2+0x76>
     f64:	f7 01       	movw	r30, r14
     f66:	e8 5f       	subi	r30, 0xF8	; 248
     f68:	fe 4f       	sbci	r31, 0xFE	; 254
     f6a:	80 81       	ld	r24, Z
     f6c:	28 1b       	sub	r18, r24
     f6e:	31 09       	sbc	r19, r1
     f70:	41 09       	sbc	r20, r1
     f72:	51 09       	sbc	r21, r1
     f74:	c9 01       	movw	r24, r18
     f76:	1f 91       	pop	r17
     f78:	0f 91       	pop	r16
     f7a:	ff 90       	pop	r15
     f7c:	ef 90       	pop	r14
     f7e:	08 95       	ret

00000f80 <__pack_f>:
     f80:	df 92       	push	r13
     f82:	ef 92       	push	r14
     f84:	ff 92       	push	r15
     f86:	0f 93       	push	r16
     f88:	1f 93       	push	r17
     f8a:	fc 01       	movw	r30, r24
     f8c:	e4 80       	ldd	r14, Z+4	; 0x04
     f8e:	f5 80       	ldd	r15, Z+5	; 0x05
     f90:	06 81       	ldd	r16, Z+6	; 0x06
     f92:	17 81       	ldd	r17, Z+7	; 0x07
     f94:	d1 80       	ldd	r13, Z+1	; 0x01
     f96:	80 81       	ld	r24, Z
     f98:	82 30       	cpi	r24, 0x02	; 2
     f9a:	48 f4       	brcc	.+18     	; 0xfae <__pack_f+0x2e>
     f9c:	80 e0       	ldi	r24, 0x00	; 0
     f9e:	90 e0       	ldi	r25, 0x00	; 0
     fa0:	a0 e1       	ldi	r26, 0x10	; 16
     fa2:	b0 e0       	ldi	r27, 0x00	; 0
     fa4:	e8 2a       	or	r14, r24
     fa6:	f9 2a       	or	r15, r25
     fa8:	0a 2b       	or	r16, r26
     faa:	1b 2b       	or	r17, r27
     fac:	a5 c0       	rjmp	.+330    	; 0x10f8 <__pack_f+0x178>
     fae:	84 30       	cpi	r24, 0x04	; 4
     fb0:	09 f4       	brne	.+2      	; 0xfb4 <__pack_f+0x34>
     fb2:	9f c0       	rjmp	.+318    	; 0x10f2 <__pack_f+0x172>
     fb4:	82 30       	cpi	r24, 0x02	; 2
     fb6:	21 f4       	brne	.+8      	; 0xfc0 <__pack_f+0x40>
     fb8:	ee 24       	eor	r14, r14
     fba:	ff 24       	eor	r15, r15
     fbc:	87 01       	movw	r16, r14
     fbe:	05 c0       	rjmp	.+10     	; 0xfca <__pack_f+0x4a>
     fc0:	e1 14       	cp	r14, r1
     fc2:	f1 04       	cpc	r15, r1
     fc4:	01 05       	cpc	r16, r1
     fc6:	11 05       	cpc	r17, r1
     fc8:	19 f4       	brne	.+6      	; 0xfd0 <__pack_f+0x50>
     fca:	e0 e0       	ldi	r30, 0x00	; 0
     fcc:	f0 e0       	ldi	r31, 0x00	; 0
     fce:	96 c0       	rjmp	.+300    	; 0x10fc <__pack_f+0x17c>
     fd0:	62 81       	ldd	r22, Z+2	; 0x02
     fd2:	73 81       	ldd	r23, Z+3	; 0x03
     fd4:	9f ef       	ldi	r25, 0xFF	; 255
     fd6:	62 38       	cpi	r22, 0x82	; 130
     fd8:	79 07       	cpc	r23, r25
     fda:	0c f0       	brlt	.+2      	; 0xfde <__pack_f+0x5e>
     fdc:	5b c0       	rjmp	.+182    	; 0x1094 <__pack_f+0x114>
     fde:	22 e8       	ldi	r18, 0x82	; 130
     fe0:	3f ef       	ldi	r19, 0xFF	; 255
     fe2:	26 1b       	sub	r18, r22
     fe4:	37 0b       	sbc	r19, r23
     fe6:	2a 31       	cpi	r18, 0x1A	; 26
     fe8:	31 05       	cpc	r19, r1
     fea:	2c f0       	brlt	.+10     	; 0xff6 <__pack_f+0x76>
     fec:	20 e0       	ldi	r18, 0x00	; 0
     fee:	30 e0       	ldi	r19, 0x00	; 0
     ff0:	40 e0       	ldi	r20, 0x00	; 0
     ff2:	50 e0       	ldi	r21, 0x00	; 0
     ff4:	2a c0       	rjmp	.+84     	; 0x104a <__pack_f+0xca>
     ff6:	b8 01       	movw	r22, r16
     ff8:	a7 01       	movw	r20, r14
     ffa:	02 2e       	mov	r0, r18
     ffc:	04 c0       	rjmp	.+8      	; 0x1006 <__pack_f+0x86>
     ffe:	76 95       	lsr	r23
    1000:	67 95       	ror	r22
    1002:	57 95       	ror	r21
    1004:	47 95       	ror	r20
    1006:	0a 94       	dec	r0
    1008:	d2 f7       	brpl	.-12     	; 0xffe <__pack_f+0x7e>
    100a:	81 e0       	ldi	r24, 0x01	; 1
    100c:	90 e0       	ldi	r25, 0x00	; 0
    100e:	a0 e0       	ldi	r26, 0x00	; 0
    1010:	b0 e0       	ldi	r27, 0x00	; 0
    1012:	04 c0       	rjmp	.+8      	; 0x101c <__pack_f+0x9c>
    1014:	88 0f       	add	r24, r24
    1016:	99 1f       	adc	r25, r25
    1018:	aa 1f       	adc	r26, r26
    101a:	bb 1f       	adc	r27, r27
    101c:	2a 95       	dec	r18
    101e:	d2 f7       	brpl	.-12     	; 0x1014 <__pack_f+0x94>
    1020:	01 97       	sbiw	r24, 0x01	; 1
    1022:	a1 09       	sbc	r26, r1
    1024:	b1 09       	sbc	r27, r1
    1026:	8e 21       	and	r24, r14
    1028:	9f 21       	and	r25, r15
    102a:	a0 23       	and	r26, r16
    102c:	b1 23       	and	r27, r17
    102e:	00 97       	sbiw	r24, 0x00	; 0
    1030:	a1 05       	cpc	r26, r1
    1032:	b1 05       	cpc	r27, r1
    1034:	21 f0       	breq	.+8      	; 0x103e <__pack_f+0xbe>
    1036:	81 e0       	ldi	r24, 0x01	; 1
    1038:	90 e0       	ldi	r25, 0x00	; 0
    103a:	a0 e0       	ldi	r26, 0x00	; 0
    103c:	b0 e0       	ldi	r27, 0x00	; 0
    103e:	9a 01       	movw	r18, r20
    1040:	ab 01       	movw	r20, r22
    1042:	28 2b       	or	r18, r24
    1044:	39 2b       	or	r19, r25
    1046:	4a 2b       	or	r20, r26
    1048:	5b 2b       	or	r21, r27
    104a:	da 01       	movw	r26, r20
    104c:	c9 01       	movw	r24, r18
    104e:	8f 77       	andi	r24, 0x7F	; 127
    1050:	90 70       	andi	r25, 0x00	; 0
    1052:	a0 70       	andi	r26, 0x00	; 0
    1054:	b0 70       	andi	r27, 0x00	; 0
    1056:	80 34       	cpi	r24, 0x40	; 64
    1058:	91 05       	cpc	r25, r1
    105a:	a1 05       	cpc	r26, r1
    105c:	b1 05       	cpc	r27, r1
    105e:	39 f4       	brne	.+14     	; 0x106e <__pack_f+0xee>
    1060:	27 ff       	sbrs	r18, 7
    1062:	09 c0       	rjmp	.+18     	; 0x1076 <__pack_f+0xf6>
    1064:	20 5c       	subi	r18, 0xC0	; 192
    1066:	3f 4f       	sbci	r19, 0xFF	; 255
    1068:	4f 4f       	sbci	r20, 0xFF	; 255
    106a:	5f 4f       	sbci	r21, 0xFF	; 255
    106c:	04 c0       	rjmp	.+8      	; 0x1076 <__pack_f+0xf6>
    106e:	21 5c       	subi	r18, 0xC1	; 193
    1070:	3f 4f       	sbci	r19, 0xFF	; 255
    1072:	4f 4f       	sbci	r20, 0xFF	; 255
    1074:	5f 4f       	sbci	r21, 0xFF	; 255
    1076:	e0 e0       	ldi	r30, 0x00	; 0
    1078:	f0 e0       	ldi	r31, 0x00	; 0
    107a:	20 30       	cpi	r18, 0x00	; 0
    107c:	a0 e0       	ldi	r26, 0x00	; 0
    107e:	3a 07       	cpc	r19, r26
    1080:	a0 e0       	ldi	r26, 0x00	; 0
    1082:	4a 07       	cpc	r20, r26
    1084:	a0 e4       	ldi	r26, 0x40	; 64
    1086:	5a 07       	cpc	r21, r26
    1088:	10 f0       	brcs	.+4      	; 0x108e <__pack_f+0x10e>
    108a:	e1 e0       	ldi	r30, 0x01	; 1
    108c:	f0 e0       	ldi	r31, 0x00	; 0
    108e:	79 01       	movw	r14, r18
    1090:	8a 01       	movw	r16, r20
    1092:	27 c0       	rjmp	.+78     	; 0x10e2 <__pack_f+0x162>
    1094:	60 38       	cpi	r22, 0x80	; 128
    1096:	71 05       	cpc	r23, r1
    1098:	64 f5       	brge	.+88     	; 0x10f2 <__pack_f+0x172>
    109a:	fb 01       	movw	r30, r22
    109c:	e1 58       	subi	r30, 0x81	; 129
    109e:	ff 4f       	sbci	r31, 0xFF	; 255
    10a0:	d8 01       	movw	r26, r16
    10a2:	c7 01       	movw	r24, r14
    10a4:	8f 77       	andi	r24, 0x7F	; 127
    10a6:	90 70       	andi	r25, 0x00	; 0
    10a8:	a0 70       	andi	r26, 0x00	; 0
    10aa:	b0 70       	andi	r27, 0x00	; 0
    10ac:	80 34       	cpi	r24, 0x40	; 64
    10ae:	91 05       	cpc	r25, r1
    10b0:	a1 05       	cpc	r26, r1
    10b2:	b1 05       	cpc	r27, r1
    10b4:	39 f4       	brne	.+14     	; 0x10c4 <__pack_f+0x144>
    10b6:	e7 fe       	sbrs	r14, 7
    10b8:	0d c0       	rjmp	.+26     	; 0x10d4 <__pack_f+0x154>
    10ba:	80 e4       	ldi	r24, 0x40	; 64
    10bc:	90 e0       	ldi	r25, 0x00	; 0
    10be:	a0 e0       	ldi	r26, 0x00	; 0
    10c0:	b0 e0       	ldi	r27, 0x00	; 0
    10c2:	04 c0       	rjmp	.+8      	; 0x10cc <__pack_f+0x14c>
    10c4:	8f e3       	ldi	r24, 0x3F	; 63
    10c6:	90 e0       	ldi	r25, 0x00	; 0
    10c8:	a0 e0       	ldi	r26, 0x00	; 0
    10ca:	b0 e0       	ldi	r27, 0x00	; 0
    10cc:	e8 0e       	add	r14, r24
    10ce:	f9 1e       	adc	r15, r25
    10d0:	0a 1f       	adc	r16, r26
    10d2:	1b 1f       	adc	r17, r27
    10d4:	17 ff       	sbrs	r17, 7
    10d6:	05 c0       	rjmp	.+10     	; 0x10e2 <__pack_f+0x162>
    10d8:	16 95       	lsr	r17
    10da:	07 95       	ror	r16
    10dc:	f7 94       	ror	r15
    10de:	e7 94       	ror	r14
    10e0:	31 96       	adiw	r30, 0x01	; 1
    10e2:	87 e0       	ldi	r24, 0x07	; 7
    10e4:	16 95       	lsr	r17
    10e6:	07 95       	ror	r16
    10e8:	f7 94       	ror	r15
    10ea:	e7 94       	ror	r14
    10ec:	8a 95       	dec	r24
    10ee:	d1 f7       	brne	.-12     	; 0x10e4 <__pack_f+0x164>
    10f0:	05 c0       	rjmp	.+10     	; 0x10fc <__pack_f+0x17c>
    10f2:	ee 24       	eor	r14, r14
    10f4:	ff 24       	eor	r15, r15
    10f6:	87 01       	movw	r16, r14
    10f8:	ef ef       	ldi	r30, 0xFF	; 255
    10fa:	f0 e0       	ldi	r31, 0x00	; 0
    10fc:	6e 2f       	mov	r22, r30
    10fe:	67 95       	ror	r22
    1100:	66 27       	eor	r22, r22
    1102:	67 95       	ror	r22
    1104:	90 2f       	mov	r25, r16
    1106:	9f 77       	andi	r25, 0x7F	; 127
    1108:	d7 94       	ror	r13
    110a:	dd 24       	eor	r13, r13
    110c:	d7 94       	ror	r13
    110e:	8e 2f       	mov	r24, r30
    1110:	86 95       	lsr	r24
    1112:	49 2f       	mov	r20, r25
    1114:	46 2b       	or	r20, r22
    1116:	58 2f       	mov	r21, r24
    1118:	5d 29       	or	r21, r13
    111a:	b7 01       	movw	r22, r14
    111c:	ca 01       	movw	r24, r20
    111e:	1f 91       	pop	r17
    1120:	0f 91       	pop	r16
    1122:	ff 90       	pop	r15
    1124:	ef 90       	pop	r14
    1126:	df 90       	pop	r13
    1128:	08 95       	ret

0000112a <__unpack_f>:
    112a:	fc 01       	movw	r30, r24
    112c:	db 01       	movw	r26, r22
    112e:	40 81       	ld	r20, Z
    1130:	51 81       	ldd	r21, Z+1	; 0x01
    1132:	22 81       	ldd	r18, Z+2	; 0x02
    1134:	62 2f       	mov	r22, r18
    1136:	6f 77       	andi	r22, 0x7F	; 127
    1138:	70 e0       	ldi	r23, 0x00	; 0
    113a:	22 1f       	adc	r18, r18
    113c:	22 27       	eor	r18, r18
    113e:	22 1f       	adc	r18, r18
    1140:	93 81       	ldd	r25, Z+3	; 0x03
    1142:	89 2f       	mov	r24, r25
    1144:	88 0f       	add	r24, r24
    1146:	82 2b       	or	r24, r18
    1148:	28 2f       	mov	r18, r24
    114a:	30 e0       	ldi	r19, 0x00	; 0
    114c:	99 1f       	adc	r25, r25
    114e:	99 27       	eor	r25, r25
    1150:	99 1f       	adc	r25, r25
    1152:	11 96       	adiw	r26, 0x01	; 1
    1154:	9c 93       	st	X, r25
    1156:	11 97       	sbiw	r26, 0x01	; 1
    1158:	21 15       	cp	r18, r1
    115a:	31 05       	cpc	r19, r1
    115c:	a9 f5       	brne	.+106    	; 0x11c8 <__unpack_f+0x9e>
    115e:	41 15       	cp	r20, r1
    1160:	51 05       	cpc	r21, r1
    1162:	61 05       	cpc	r22, r1
    1164:	71 05       	cpc	r23, r1
    1166:	11 f4       	brne	.+4      	; 0x116c <__unpack_f+0x42>
    1168:	82 e0       	ldi	r24, 0x02	; 2
    116a:	37 c0       	rjmp	.+110    	; 0x11da <__unpack_f+0xb0>
    116c:	82 e8       	ldi	r24, 0x82	; 130
    116e:	9f ef       	ldi	r25, 0xFF	; 255
    1170:	13 96       	adiw	r26, 0x03	; 3
    1172:	9c 93       	st	X, r25
    1174:	8e 93       	st	-X, r24
    1176:	12 97       	sbiw	r26, 0x02	; 2
    1178:	9a 01       	movw	r18, r20
    117a:	ab 01       	movw	r20, r22
    117c:	67 e0       	ldi	r22, 0x07	; 7
    117e:	22 0f       	add	r18, r18
    1180:	33 1f       	adc	r19, r19
    1182:	44 1f       	adc	r20, r20
    1184:	55 1f       	adc	r21, r21
    1186:	6a 95       	dec	r22
    1188:	d1 f7       	brne	.-12     	; 0x117e <__unpack_f+0x54>
    118a:	83 e0       	ldi	r24, 0x03	; 3
    118c:	8c 93       	st	X, r24
    118e:	0d c0       	rjmp	.+26     	; 0x11aa <__unpack_f+0x80>
    1190:	22 0f       	add	r18, r18
    1192:	33 1f       	adc	r19, r19
    1194:	44 1f       	adc	r20, r20
    1196:	55 1f       	adc	r21, r21
    1198:	12 96       	adiw	r26, 0x02	; 2
    119a:	8d 91       	ld	r24, X+
    119c:	9c 91       	ld	r25, X
    119e:	13 97       	sbiw	r26, 0x03	; 3
    11a0:	01 97       	sbiw	r24, 0x01	; 1
    11a2:	13 96       	adiw	r26, 0x03	; 3
    11a4:	9c 93       	st	X, r25
    11a6:	8e 93       	st	-X, r24
    11a8:	12 97       	sbiw	r26, 0x02	; 2
    11aa:	20 30       	cpi	r18, 0x00	; 0
    11ac:	80 e0       	ldi	r24, 0x00	; 0
    11ae:	38 07       	cpc	r19, r24
    11b0:	80 e0       	ldi	r24, 0x00	; 0
    11b2:	48 07       	cpc	r20, r24
    11b4:	80 e4       	ldi	r24, 0x40	; 64
    11b6:	58 07       	cpc	r21, r24
    11b8:	58 f3       	brcs	.-42     	; 0x1190 <__unpack_f+0x66>
    11ba:	14 96       	adiw	r26, 0x04	; 4
    11bc:	2d 93       	st	X+, r18
    11be:	3d 93       	st	X+, r19
    11c0:	4d 93       	st	X+, r20
    11c2:	5c 93       	st	X, r21
    11c4:	17 97       	sbiw	r26, 0x07	; 7
    11c6:	08 95       	ret
    11c8:	2f 3f       	cpi	r18, 0xFF	; 255
    11ca:	31 05       	cpc	r19, r1
    11cc:	79 f4       	brne	.+30     	; 0x11ec <__unpack_f+0xc2>
    11ce:	41 15       	cp	r20, r1
    11d0:	51 05       	cpc	r21, r1
    11d2:	61 05       	cpc	r22, r1
    11d4:	71 05       	cpc	r23, r1
    11d6:	19 f4       	brne	.+6      	; 0x11de <__unpack_f+0xb4>
    11d8:	84 e0       	ldi	r24, 0x04	; 4
    11da:	8c 93       	st	X, r24
    11dc:	08 95       	ret
    11de:	64 ff       	sbrs	r22, 4
    11e0:	03 c0       	rjmp	.+6      	; 0x11e8 <__unpack_f+0xbe>
    11e2:	81 e0       	ldi	r24, 0x01	; 1
    11e4:	8c 93       	st	X, r24
    11e6:	12 c0       	rjmp	.+36     	; 0x120c <__unpack_f+0xe2>
    11e8:	1c 92       	st	X, r1
    11ea:	10 c0       	rjmp	.+32     	; 0x120c <__unpack_f+0xe2>
    11ec:	2f 57       	subi	r18, 0x7F	; 127
    11ee:	30 40       	sbci	r19, 0x00	; 0
    11f0:	13 96       	adiw	r26, 0x03	; 3
    11f2:	3c 93       	st	X, r19
    11f4:	2e 93       	st	-X, r18
    11f6:	12 97       	sbiw	r26, 0x02	; 2
    11f8:	83 e0       	ldi	r24, 0x03	; 3
    11fa:	8c 93       	st	X, r24
    11fc:	87 e0       	ldi	r24, 0x07	; 7
    11fe:	44 0f       	add	r20, r20
    1200:	55 1f       	adc	r21, r21
    1202:	66 1f       	adc	r22, r22
    1204:	77 1f       	adc	r23, r23
    1206:	8a 95       	dec	r24
    1208:	d1 f7       	brne	.-12     	; 0x11fe <__unpack_f+0xd4>
    120a:	70 64       	ori	r23, 0x40	; 64
    120c:	14 96       	adiw	r26, 0x04	; 4
    120e:	4d 93       	st	X+, r20
    1210:	5d 93       	st	X+, r21
    1212:	6d 93       	st	X+, r22
    1214:	7c 93       	st	X, r23
    1216:	17 97       	sbiw	r26, 0x07	; 7
    1218:	08 95       	ret

0000121a <__fpcmp_parts_f>:
    121a:	1f 93       	push	r17
    121c:	dc 01       	movw	r26, r24
    121e:	fb 01       	movw	r30, r22
    1220:	9c 91       	ld	r25, X
    1222:	92 30       	cpi	r25, 0x02	; 2
    1224:	08 f4       	brcc	.+2      	; 0x1228 <__fpcmp_parts_f+0xe>
    1226:	47 c0       	rjmp	.+142    	; 0x12b6 <__fpcmp_parts_f+0x9c>
    1228:	80 81       	ld	r24, Z
    122a:	82 30       	cpi	r24, 0x02	; 2
    122c:	08 f4       	brcc	.+2      	; 0x1230 <__fpcmp_parts_f+0x16>
    122e:	43 c0       	rjmp	.+134    	; 0x12b6 <__fpcmp_parts_f+0x9c>
    1230:	94 30       	cpi	r25, 0x04	; 4
    1232:	51 f4       	brne	.+20     	; 0x1248 <__fpcmp_parts_f+0x2e>
    1234:	11 96       	adiw	r26, 0x01	; 1
    1236:	1c 91       	ld	r17, X
    1238:	84 30       	cpi	r24, 0x04	; 4
    123a:	99 f5       	brne	.+102    	; 0x12a2 <__fpcmp_parts_f+0x88>
    123c:	81 81       	ldd	r24, Z+1	; 0x01
    123e:	68 2f       	mov	r22, r24
    1240:	70 e0       	ldi	r23, 0x00	; 0
    1242:	61 1b       	sub	r22, r17
    1244:	71 09       	sbc	r23, r1
    1246:	3f c0       	rjmp	.+126    	; 0x12c6 <__fpcmp_parts_f+0xac>
    1248:	84 30       	cpi	r24, 0x04	; 4
    124a:	21 f0       	breq	.+8      	; 0x1254 <__fpcmp_parts_f+0x3a>
    124c:	92 30       	cpi	r25, 0x02	; 2
    124e:	31 f4       	brne	.+12     	; 0x125c <__fpcmp_parts_f+0x42>
    1250:	82 30       	cpi	r24, 0x02	; 2
    1252:	b9 f1       	breq	.+110    	; 0x12c2 <__fpcmp_parts_f+0xa8>
    1254:	81 81       	ldd	r24, Z+1	; 0x01
    1256:	88 23       	and	r24, r24
    1258:	89 f1       	breq	.+98     	; 0x12bc <__fpcmp_parts_f+0xa2>
    125a:	2d c0       	rjmp	.+90     	; 0x12b6 <__fpcmp_parts_f+0x9c>
    125c:	11 96       	adiw	r26, 0x01	; 1
    125e:	1c 91       	ld	r17, X
    1260:	11 97       	sbiw	r26, 0x01	; 1
    1262:	82 30       	cpi	r24, 0x02	; 2
    1264:	f1 f0       	breq	.+60     	; 0x12a2 <__fpcmp_parts_f+0x88>
    1266:	81 81       	ldd	r24, Z+1	; 0x01
    1268:	18 17       	cp	r17, r24
    126a:	d9 f4       	brne	.+54     	; 0x12a2 <__fpcmp_parts_f+0x88>
    126c:	12 96       	adiw	r26, 0x02	; 2
    126e:	2d 91       	ld	r18, X+
    1270:	3c 91       	ld	r19, X
    1272:	13 97       	sbiw	r26, 0x03	; 3
    1274:	82 81       	ldd	r24, Z+2	; 0x02
    1276:	93 81       	ldd	r25, Z+3	; 0x03
    1278:	82 17       	cp	r24, r18
    127a:	93 07       	cpc	r25, r19
    127c:	94 f0       	brlt	.+36     	; 0x12a2 <__fpcmp_parts_f+0x88>
    127e:	28 17       	cp	r18, r24
    1280:	39 07       	cpc	r19, r25
    1282:	bc f0       	brlt	.+46     	; 0x12b2 <__fpcmp_parts_f+0x98>
    1284:	14 96       	adiw	r26, 0x04	; 4
    1286:	8d 91       	ld	r24, X+
    1288:	9d 91       	ld	r25, X+
    128a:	0d 90       	ld	r0, X+
    128c:	bc 91       	ld	r27, X
    128e:	a0 2d       	mov	r26, r0
    1290:	24 81       	ldd	r18, Z+4	; 0x04
    1292:	35 81       	ldd	r19, Z+5	; 0x05
    1294:	46 81       	ldd	r20, Z+6	; 0x06
    1296:	57 81       	ldd	r21, Z+7	; 0x07
    1298:	28 17       	cp	r18, r24
    129a:	39 07       	cpc	r19, r25
    129c:	4a 07       	cpc	r20, r26
    129e:	5b 07       	cpc	r21, r27
    12a0:	18 f4       	brcc	.+6      	; 0x12a8 <__fpcmp_parts_f+0x8e>
    12a2:	11 23       	and	r17, r17
    12a4:	41 f0       	breq	.+16     	; 0x12b6 <__fpcmp_parts_f+0x9c>
    12a6:	0a c0       	rjmp	.+20     	; 0x12bc <__fpcmp_parts_f+0xa2>
    12a8:	82 17       	cp	r24, r18
    12aa:	93 07       	cpc	r25, r19
    12ac:	a4 07       	cpc	r26, r20
    12ae:	b5 07       	cpc	r27, r21
    12b0:	40 f4       	brcc	.+16     	; 0x12c2 <__fpcmp_parts_f+0xa8>
    12b2:	11 23       	and	r17, r17
    12b4:	19 f0       	breq	.+6      	; 0x12bc <__fpcmp_parts_f+0xa2>
    12b6:	61 e0       	ldi	r22, 0x01	; 1
    12b8:	70 e0       	ldi	r23, 0x00	; 0
    12ba:	05 c0       	rjmp	.+10     	; 0x12c6 <__fpcmp_parts_f+0xac>
    12bc:	6f ef       	ldi	r22, 0xFF	; 255
    12be:	7f ef       	ldi	r23, 0xFF	; 255
    12c0:	02 c0       	rjmp	.+4      	; 0x12c6 <__fpcmp_parts_f+0xac>
    12c2:	60 e0       	ldi	r22, 0x00	; 0
    12c4:	70 e0       	ldi	r23, 0x00	; 0
    12c6:	cb 01       	movw	r24, r22
    12c8:	1f 91       	pop	r17
    12ca:	08 95       	ret

000012cc <__prologue_saves__>:
    12cc:	2f 92       	push	r2
    12ce:	3f 92       	push	r3
    12d0:	4f 92       	push	r4
    12d2:	5f 92       	push	r5
    12d4:	6f 92       	push	r6
    12d6:	7f 92       	push	r7
    12d8:	8f 92       	push	r8
    12da:	9f 92       	push	r9
    12dc:	af 92       	push	r10
    12de:	bf 92       	push	r11
    12e0:	cf 92       	push	r12
    12e2:	df 92       	push	r13
    12e4:	ef 92       	push	r14
    12e6:	ff 92       	push	r15
    12e8:	0f 93       	push	r16
    12ea:	1f 93       	push	r17
    12ec:	cf 93       	push	r28
    12ee:	df 93       	push	r29
    12f0:	cd b7       	in	r28, 0x3d	; 61
    12f2:	de b7       	in	r29, 0x3e	; 62
    12f4:	ca 1b       	sub	r28, r26
    12f6:	db 0b       	sbc	r29, r27
    12f8:	0f b6       	in	r0, 0x3f	; 63
    12fa:	f8 94       	cli
    12fc:	de bf       	out	0x3e, r29	; 62
    12fe:	0f be       	out	0x3f, r0	; 63
    1300:	cd bf       	out	0x3d, r28	; 61
    1302:	09 94       	ijmp

00001304 <__epilogue_restores__>:
    1304:	2a 88       	ldd	r2, Y+18	; 0x12
    1306:	39 88       	ldd	r3, Y+17	; 0x11
    1308:	48 88       	ldd	r4, Y+16	; 0x10
    130a:	5f 84       	ldd	r5, Y+15	; 0x0f
    130c:	6e 84       	ldd	r6, Y+14	; 0x0e
    130e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1310:	8c 84       	ldd	r8, Y+12	; 0x0c
    1312:	9b 84       	ldd	r9, Y+11	; 0x0b
    1314:	aa 84       	ldd	r10, Y+10	; 0x0a
    1316:	b9 84       	ldd	r11, Y+9	; 0x09
    1318:	c8 84       	ldd	r12, Y+8	; 0x08
    131a:	df 80       	ldd	r13, Y+7	; 0x07
    131c:	ee 80       	ldd	r14, Y+6	; 0x06
    131e:	fd 80       	ldd	r15, Y+5	; 0x05
    1320:	0c 81       	ldd	r16, Y+4	; 0x04
    1322:	1b 81       	ldd	r17, Y+3	; 0x03
    1324:	aa 81       	ldd	r26, Y+2	; 0x02
    1326:	b9 81       	ldd	r27, Y+1	; 0x01
    1328:	ce 0f       	add	r28, r30
    132a:	d1 1d       	adc	r29, r1
    132c:	0f b6       	in	r0, 0x3f	; 63
    132e:	f8 94       	cli
    1330:	de bf       	out	0x3e, r29	; 62
    1332:	0f be       	out	0x3f, r0	; 63
    1334:	cd bf       	out	0x3d, r28	; 61
    1336:	ed 01       	movw	r28, r26
    1338:	08 95       	ret

0000133a <_exit>:
    133a:	f8 94       	cli

0000133c <__stop_program>:
    133c:	ff cf       	rjmp	.-2      	; 0x133c <__stop_program>
