
bin\Debug\projectAGV.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000108  00800100  00001554  00001608  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001554  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800208  00800208  00001710  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  00001710  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .debug_aranges 000001e0  00000000  00000000  00001713  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000002b4  00000000  00000000  000018f3  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002834  00000000  00000000  00001ba7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001570  00000000  00000000  000043db  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000016c5  00000000  00000000  0000594b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000250  00000000  00000000  00007010  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000042d  00000000  00000000  00007260  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009ce  00000000  00000000  0000768d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000805b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 8b 00 	jmp	0x116	; 0x116 <__vector_4>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
      74:	12 e0       	ldi	r17, 0x02	; 2
      76:	a8 e0       	ldi	r26, 0x08	; 8
      78:	b2 e0       	ldi	r27, 0x02	; 2
      7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
      7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
      7e:	ae 30       	cpi	r26, 0x0E	; 14
      80:	b1 07       	cpc	r27, r17
      82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>

00000084 <__do_copy_data>:
      84:	12 e0       	ldi	r17, 0x02	; 2
      86:	a0 e0       	ldi	r26, 0x00	; 0
      88:	b1 e0       	ldi	r27, 0x01	; 1
      8a:	e4 e5       	ldi	r30, 0x54	; 84
      8c:	f5 e1       	ldi	r31, 0x15	; 21
      8e:	02 c0       	rjmp	.+4      	; 0x94 <.do_copy_data_start>

00000090 <.do_copy_data_loop>:
      90:	05 90       	lpm	r0, Z+
      92:	0d 92       	st	X+, r0

00000094 <.do_copy_data_start>:
      94:	a8 30       	cpi	r26, 0x08	; 8
      96:	b1 07       	cpc	r27, r17
      98:	d9 f7       	brne	.-10     	; 0x90 <.do_copy_data_loop>
      9a:	0e 94 4f 01 	call	0x29e	; 0x29e <main>
      9e:	0c 94 a8 0a 	jmp	0x1550	; 0x1550 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <bocht>:
#define inpPinUno PC2
#define inpPinBocht PC3
#define inpPinBochtL PC4

void bocht(int dir)
{
      a6:	df 93       	push	r29
      a8:	cf 93       	push	r28
      aa:	00 d0       	rcall	.+0      	; 0xac <bocht+0x6>
      ac:	cd b7       	in	r28, 0x3d	; 61
      ae:	de b7       	in	r29, 0x3e	; 62
      b0:	9a 83       	std	Y+2, r25	; 0x02
      b2:	89 83       	std	Y+1, r24	; 0x01
    //1) 10cm naar voren rijden
    stepperGoto(97, voorruit, stepMode);
      b4:	81 e6       	ldi	r24, 0x61	; 97
      b6:	90 e0       	ldi	r25, 0x00	; 0
      b8:	60 e0       	ldi	r22, 0x00	; 0
      ba:	70 e0       	ldi	r23, 0x00	; 0
      bc:	40 e1       	ldi	r20, 0x10	; 16
      be:	50 e0       	ldi	r21, 0x00	; 0
      c0:	0e 94 ca 01 	call	0x394	; 0x394 <stepperGoto>
    //2) bocht maken naar directie bocht(+- 90 graden)
    singleStepperGoTo(236,voorruit,stepMode, dir);
      c4:	29 81       	ldd	r18, Y+1	; 0x01
      c6:	3a 81       	ldd	r19, Y+2	; 0x02
      c8:	8c ee       	ldi	r24, 0xEC	; 236
      ca:	90 e0       	ldi	r25, 0x00	; 0
      cc:	60 e0       	ldi	r22, 0x00	; 0
      ce:	70 e0       	ldi	r23, 0x00	; 0
      d0:	40 e1       	ldi	r20, 0x10	; 16
      d2:	50 e0       	ldi	r21, 0x00	; 0
      d4:	0e 94 67 02 	call	0x4ce	; 0x4ce <singleStepperGoTo>
    //3) afstand van middenstreep rijden
    stepperGoto(68, voorruit, stepMode);
      d8:	84 e4       	ldi	r24, 0x44	; 68
      da:	90 e0       	ldi	r25, 0x00	; 0
      dc:	60 e0       	ldi	r22, 0x00	; 0
      de:	70 e0       	ldi	r23, 0x00	; 0
      e0:	40 e1       	ldi	r20, 0x10	; 16
      e2:	50 e0       	ldi	r21, 0x00	; 0
      e4:	0e 94 ca 01 	call	0x394	; 0x394 <stepperGoto>
    //4 bocht maken naar directie bocht(+- 90 graden)
    singleStepperGoTo(236,voorruit,stepMode, dir);
      e8:	29 81       	ldd	r18, Y+1	; 0x01
      ea:	3a 81       	ldd	r19, Y+2	; 0x02
      ec:	8c ee       	ldi	r24, 0xEC	; 236
      ee:	90 e0       	ldi	r25, 0x00	; 0
      f0:	60 e0       	ldi	r22, 0x00	; 0
      f2:	70 e0       	ldi	r23, 0x00	; 0
      f4:	40 e1       	ldi	r20, 0x10	; 16
      f6:	50 e0       	ldi	r21, 0x00	; 0
      f8:	0e 94 67 02 	call	0x4ce	; 0x4ce <singleStepperGoTo>
    //5) laatste 10cm naar voren voor beginpositie
    stepperGoto(97, voorruit, stepMode);
      fc:	81 e6       	ldi	r24, 0x61	; 97
      fe:	90 e0       	ldi	r25, 0x00	; 0
     100:	60 e0       	ldi	r22, 0x00	; 0
     102:	70 e0       	ldi	r23, 0x00	; 0
     104:	40 e1       	ldi	r20, 0x10	; 16
     106:	50 e0       	ldi	r21, 0x00	; 0
     108:	0e 94 ca 01 	call	0x394	; 0x394 <stepperGoto>
}
     10c:	0f 90       	pop	r0
     10e:	0f 90       	pop	r0
     110:	cf 91       	pop	r28
     112:	df 91       	pop	r29
     114:	08 95       	ret

00000116 <__vector_4>:

ISR(PCINT1_vect)
{
     116:	1f 92       	push	r1
     118:	0f 92       	push	r0
     11a:	0f b6       	in	r0, 0x3f	; 63
     11c:	0f 92       	push	r0
     11e:	11 24       	eor	r1, r1
     120:	2f 93       	push	r18
     122:	3f 93       	push	r19
     124:	4f 93       	push	r20
     126:	5f 93       	push	r21
     128:	6f 93       	push	r22
     12a:	7f 93       	push	r23
     12c:	8f 93       	push	r24
     12e:	9f 93       	push	r25
     130:	af 93       	push	r26
     132:	bf 93       	push	r27
     134:	ef 93       	push	r30
     136:	ff 93       	push	r31
     138:	df 93       	push	r29
     13a:	cf 93       	push	r28
     13c:	cd b7       	in	r28, 0x3d	; 61
     13e:	de b7       	in	r29, 0x3e	; 62
     140:	2e 97       	sbiw	r28, 0x0e	; 14
     142:	de bf       	out	0x3e, r29	; 62
     144:	cd bf       	out	0x3d, r28	; 61
    if(bit_is_clear(PINC, inpPinUno))
     146:	e6 e2       	ldi	r30, 0x26	; 38
     148:	f0 e0       	ldi	r31, 0x00	; 0
     14a:	80 81       	ld	r24, Z
     14c:	88 2f       	mov	r24, r24
     14e:	90 e0       	ldi	r25, 0x00	; 0
     150:	84 70       	andi	r24, 0x04	; 4
     152:	90 70       	andi	r25, 0x00	; 0
     154:	00 97       	sbiw	r24, 0x00	; 0
     156:	09 f0       	breq	.+2      	; 0x15a <__vector_4+0x44>
     158:	72 c0       	rjmp	.+228    	; 0x23e <__vector_4+0x128>
     15a:	80 e0       	ldi	r24, 0x00	; 0
     15c:	90 e0       	ldi	r25, 0x00	; 0
     15e:	aa ef       	ldi	r26, 0xFA	; 250
     160:	b3 e4       	ldi	r27, 0x43	; 67
     162:	8b 87       	std	Y+11, r24	; 0x0b
     164:	9c 87       	std	Y+12, r25	; 0x0c
     166:	ad 87       	std	Y+13, r26	; 0x0d
     168:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     16a:	6b 85       	ldd	r22, Y+11	; 0x0b
     16c:	7c 85       	ldd	r23, Y+12	; 0x0c
     16e:	8d 85       	ldd	r24, Y+13	; 0x0d
     170:	9e 85       	ldd	r25, Y+14	; 0x0e
     172:	20 e0       	ldi	r18, 0x00	; 0
     174:	30 e0       	ldi	r19, 0x00	; 0
     176:	4a e7       	ldi	r20, 0x7A	; 122
     178:	55 e4       	ldi	r21, 0x45	; 69
     17a:	0e 94 94 05 	call	0xb28	; 0xb28 <__mulsf3>
     17e:	dc 01       	movw	r26, r24
     180:	cb 01       	movw	r24, r22
     182:	8f 83       	std	Y+7, r24	; 0x07
     184:	98 87       	std	Y+8, r25	; 0x08
     186:	a9 87       	std	Y+9, r26	; 0x09
     188:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     18a:	6f 81       	ldd	r22, Y+7	; 0x07
     18c:	78 85       	ldd	r23, Y+8	; 0x08
     18e:	89 85       	ldd	r24, Y+9	; 0x09
     190:	9a 85       	ldd	r25, Y+10	; 0x0a
     192:	20 e0       	ldi	r18, 0x00	; 0
     194:	30 e0       	ldi	r19, 0x00	; 0
     196:	40 e8       	ldi	r20, 0x80	; 128
     198:	5f e3       	ldi	r21, 0x3F	; 63
     19a:	0e 94 9a 07 	call	0xf34	; 0xf34 <__ltsf2>
     19e:	88 23       	and	r24, r24
     1a0:	2c f4       	brge	.+10     	; 0x1ac <__vector_4+0x96>
		__ticks = 1;
     1a2:	81 e0       	ldi	r24, 0x01	; 1
     1a4:	90 e0       	ldi	r25, 0x00	; 0
     1a6:	9e 83       	std	Y+6, r25	; 0x06
     1a8:	8d 83       	std	Y+5, r24	; 0x05
     1aa:	3f c0       	rjmp	.+126    	; 0x22a <__vector_4+0x114>
	else if (__tmp > 65535)
     1ac:	6f 81       	ldd	r22, Y+7	; 0x07
     1ae:	78 85       	ldd	r23, Y+8	; 0x08
     1b0:	89 85       	ldd	r24, Y+9	; 0x09
     1b2:	9a 85       	ldd	r25, Y+10	; 0x0a
     1b4:	20 e0       	ldi	r18, 0x00	; 0
     1b6:	3f ef       	ldi	r19, 0xFF	; 255
     1b8:	4f e7       	ldi	r20, 0x7F	; 127
     1ba:	57 e4       	ldi	r21, 0x47	; 71
     1bc:	0e 94 3a 07 	call	0xe74	; 0xe74 <__gtsf2>
     1c0:	18 16       	cp	r1, r24
     1c2:	4c f5       	brge	.+82     	; 0x216 <__vector_4+0x100>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     1c4:	6b 85       	ldd	r22, Y+11	; 0x0b
     1c6:	7c 85       	ldd	r23, Y+12	; 0x0c
     1c8:	8d 85       	ldd	r24, Y+13	; 0x0d
     1ca:	9e 85       	ldd	r25, Y+14	; 0x0e
     1cc:	20 e0       	ldi	r18, 0x00	; 0
     1ce:	30 e0       	ldi	r19, 0x00	; 0
     1d0:	40 e2       	ldi	r20, 0x20	; 32
     1d2:	51 e4       	ldi	r21, 0x41	; 65
     1d4:	0e 94 94 05 	call	0xb28	; 0xb28 <__mulsf3>
     1d8:	dc 01       	movw	r26, r24
     1da:	cb 01       	movw	r24, r22
     1dc:	bc 01       	movw	r22, r24
     1de:	cd 01       	movw	r24, r26
     1e0:	0e 94 be 03 	call	0x77c	; 0x77c <__fixunssfsi>
     1e4:	dc 01       	movw	r26, r24
     1e6:	cb 01       	movw	r24, r22
     1e8:	9e 83       	std	Y+6, r25	; 0x06
     1ea:	8d 83       	std	Y+5, r24	; 0x05
     1ec:	0f c0       	rjmp	.+30     	; 0x20c <__vector_4+0xf6>
     1ee:	80 e9       	ldi	r24, 0x90	; 144
     1f0:	91 e0       	ldi	r25, 0x01	; 1
     1f2:	9c 83       	std	Y+4, r25	; 0x04
     1f4:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     1f6:	8b 81       	ldd	r24, Y+3	; 0x03
     1f8:	9c 81       	ldd	r25, Y+4	; 0x04
     1fa:	01 97       	sbiw	r24, 0x01	; 1
     1fc:	f1 f7       	brne	.-4      	; 0x1fa <__vector_4+0xe4>
     1fe:	9c 83       	std	Y+4, r25	; 0x04
     200:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     202:	8d 81       	ldd	r24, Y+5	; 0x05
     204:	9e 81       	ldd	r25, Y+6	; 0x06
     206:	01 97       	sbiw	r24, 0x01	; 1
     208:	9e 83       	std	Y+6, r25	; 0x06
     20a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     20c:	8d 81       	ldd	r24, Y+5	; 0x05
     20e:	9e 81       	ldd	r25, Y+6	; 0x06
     210:	00 97       	sbiw	r24, 0x00	; 0
     212:	69 f7       	brne	.-38     	; 0x1ee <__vector_4+0xd8>
     214:	14 c0       	rjmp	.+40     	; 0x23e <__vector_4+0x128>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     216:	6f 81       	ldd	r22, Y+7	; 0x07
     218:	78 85       	ldd	r23, Y+8	; 0x08
     21a:	89 85       	ldd	r24, Y+9	; 0x09
     21c:	9a 85       	ldd	r25, Y+10	; 0x0a
     21e:	0e 94 be 03 	call	0x77c	; 0x77c <__fixunssfsi>
     222:	dc 01       	movw	r26, r24
     224:	cb 01       	movw	r24, r22
     226:	9e 83       	std	Y+6, r25	; 0x06
     228:	8d 83       	std	Y+5, r24	; 0x05
     22a:	8d 81       	ldd	r24, Y+5	; 0x05
     22c:	9e 81       	ldd	r25, Y+6	; 0x06
     22e:	9a 83       	std	Y+2, r25	; 0x02
     230:	89 83       	std	Y+1, r24	; 0x01
     232:	89 81       	ldd	r24, Y+1	; 0x01
     234:	9a 81       	ldd	r25, Y+2	; 0x02
     236:	01 97       	sbiw	r24, 0x01	; 1
     238:	f1 f7       	brne	.-4      	; 0x236 <__vector_4+0x120>
     23a:	9a 83       	std	Y+2, r25	; 0x02
     23c:	89 83       	std	Y+1, r24	; 0x01
    {
        _delay_ms(500);
    }
    if(bit_is_clear(PINC, inpPinBocht))
     23e:	e6 e2       	ldi	r30, 0x26	; 38
     240:	f0 e0       	ldi	r31, 0x00	; 0
     242:	80 81       	ld	r24, Z
     244:	88 2f       	mov	r24, r24
     246:	90 e0       	ldi	r25, 0x00	; 0
     248:	88 70       	andi	r24, 0x08	; 8
     24a:	90 70       	andi	r25, 0x00	; 0
     24c:	00 97       	sbiw	r24, 0x00	; 0
     24e:	21 f4       	brne	.+8      	; 0x258 <__vector_4+0x142>
    {
        bocht(rechter);
     250:	80 e0       	ldi	r24, 0x00	; 0
     252:	90 e0       	ldi	r25, 0x00	; 0
     254:	0e 94 53 00 	call	0xa6	; 0xa6 <bocht>
    }
    if(bit_is_clear(PINC, inpPinBochtL))
     258:	e6 e2       	ldi	r30, 0x26	; 38
     25a:	f0 e0       	ldi	r31, 0x00	; 0
     25c:	80 81       	ld	r24, Z
     25e:	88 2f       	mov	r24, r24
     260:	90 e0       	ldi	r25, 0x00	; 0
     262:	80 71       	andi	r24, 0x10	; 16
     264:	90 70       	andi	r25, 0x00	; 0
     266:	00 97       	sbiw	r24, 0x00	; 0
     268:	21 f4       	brne	.+8      	; 0x272 <__vector_4+0x15c>
    {
        bocht(linker);
     26a:	81 e0       	ldi	r24, 0x01	; 1
     26c:	90 e0       	ldi	r25, 0x00	; 0
     26e:	0e 94 53 00 	call	0xa6	; 0xa6 <bocht>
    }
}
     272:	2e 96       	adiw	r28, 0x0e	; 14
     274:	de bf       	out	0x3e, r29	; 62
     276:	cd bf       	out	0x3d, r28	; 61
     278:	cf 91       	pop	r28
     27a:	df 91       	pop	r29
     27c:	ff 91       	pop	r31
     27e:	ef 91       	pop	r30
     280:	bf 91       	pop	r27
     282:	af 91       	pop	r26
     284:	9f 91       	pop	r25
     286:	8f 91       	pop	r24
     288:	7f 91       	pop	r23
     28a:	6f 91       	pop	r22
     28c:	5f 91       	pop	r21
     28e:	4f 91       	pop	r20
     290:	3f 91       	pop	r19
     292:	2f 91       	pop	r18
     294:	0f 90       	pop	r0
     296:	0f be       	out	0x3f, r0	; 63
     298:	0f 90       	pop	r0
     29a:	1f 90       	pop	r1
     29c:	18 95       	reti

0000029e <main>:

int main(void)
{
     29e:	df 93       	push	r29
     2a0:	cf 93       	push	r28
     2a2:	cd b7       	in	r28, 0x3d	; 61
     2a4:	de b7       	in	r29, 0x3e	; 62
    DDRC &= ~_BV(inpPinUno);
     2a6:	a7 e2       	ldi	r26, 0x27	; 39
     2a8:	b0 e0       	ldi	r27, 0x00	; 0
     2aa:	e7 e2       	ldi	r30, 0x27	; 39
     2ac:	f0 e0       	ldi	r31, 0x00	; 0
     2ae:	80 81       	ld	r24, Z
     2b0:	8b 7f       	andi	r24, 0xFB	; 251
     2b2:	8c 93       	st	X, r24
    DDRC &= ~_BV(inpPinBocht);
     2b4:	a7 e2       	ldi	r26, 0x27	; 39
     2b6:	b0 e0       	ldi	r27, 0x00	; 0
     2b8:	e7 e2       	ldi	r30, 0x27	; 39
     2ba:	f0 e0       	ldi	r31, 0x00	; 0
     2bc:	80 81       	ld	r24, Z
     2be:	87 7f       	andi	r24, 0xF7	; 247
     2c0:	8c 93       	st	X, r24
    DDRC &= ~_BV(inpPinBochtL);
     2c2:	a7 e2       	ldi	r26, 0x27	; 39
     2c4:	b0 e0       	ldi	r27, 0x00	; 0
     2c6:	e7 e2       	ldi	r30, 0x27	; 39
     2c8:	f0 e0       	ldi	r31, 0x00	; 0
     2ca:	80 81       	ld	r24, Z
     2cc:	8f 7e       	andi	r24, 0xEF	; 239
     2ce:	8c 93       	st	X, r24

    PORTC |= _BV(inpPinUno);
     2d0:	a8 e2       	ldi	r26, 0x28	; 40
     2d2:	b0 e0       	ldi	r27, 0x00	; 0
     2d4:	e8 e2       	ldi	r30, 0x28	; 40
     2d6:	f0 e0       	ldi	r31, 0x00	; 0
     2d8:	80 81       	ld	r24, Z
     2da:	84 60       	ori	r24, 0x04	; 4
     2dc:	8c 93       	st	X, r24
    PORTC |= _BV(inpPinBocht);
     2de:	a8 e2       	ldi	r26, 0x28	; 40
     2e0:	b0 e0       	ldi	r27, 0x00	; 0
     2e2:	e8 e2       	ldi	r30, 0x28	; 40
     2e4:	f0 e0       	ldi	r31, 0x00	; 0
     2e6:	80 81       	ld	r24, Z
     2e8:	88 60       	ori	r24, 0x08	; 8
     2ea:	8c 93       	st	X, r24
    PORTC |= _BV(inpPinBochtL);
     2ec:	a8 e2       	ldi	r26, 0x28	; 40
     2ee:	b0 e0       	ldi	r27, 0x00	; 0
     2f0:	e8 e2       	ldi	r30, 0x28	; 40
     2f2:	f0 e0       	ldi	r31, 0x00	; 0
     2f4:	80 81       	ld	r24, Z
     2f6:	80 61       	ori	r24, 0x10	; 16
     2f8:	8c 93       	st	X, r24

    initStepper();
     2fa:	0e 94 9f 01 	call	0x33e	; 0x33e <initStepper>
    stepperSetSpeed(1, stepMode);
     2fe:	60 e0       	ldi	r22, 0x00	; 0
     300:	70 e0       	ldi	r23, 0x00	; 0
     302:	80 e8       	ldi	r24, 0x80	; 128
     304:	9f e3       	ldi	r25, 0x3F	; 63
     306:	40 e1       	ldi	r20, 0x10	; 16
     308:	50 e0       	ldi	r21, 0x00	; 0
     30a:	0e 94 65 03 	call	0x6ca	; 0x6ca <stepperSetSpeed>

    PCICR |= (1 << PCIE1);
     30e:	a8 e6       	ldi	r26, 0x68	; 104
     310:	b0 e0       	ldi	r27, 0x00	; 0
     312:	e8 e6       	ldi	r30, 0x68	; 104
     314:	f0 e0       	ldi	r31, 0x00	; 0
     316:	80 81       	ld	r24, Z
     318:	82 60       	ori	r24, 0x02	; 2
     31a:	8c 93       	st	X, r24
    PCMSK1 |= ((1 << inpPinUno) | (1 << inpPinBochtL) | (1 << inpPinBocht));
     31c:	ac e6       	ldi	r26, 0x6C	; 108
     31e:	b0 e0       	ldi	r27, 0x00	; 0
     320:	ec e6       	ldi	r30, 0x6C	; 108
     322:	f0 e0       	ldi	r31, 0x00	; 0
     324:	80 81       	ld	r24, Z
     326:	8c 61       	ori	r24, 0x1C	; 28
     328:	8c 93       	st	X, r24
    sei();
     32a:	78 94       	sei

    while(1)
    {

            stepperGoto(20, voorruit, stepMode);
     32c:	84 e1       	ldi	r24, 0x14	; 20
     32e:	90 e0       	ldi	r25, 0x00	; 0
     330:	60 e0       	ldi	r22, 0x00	; 0
     332:	70 e0       	ldi	r23, 0x00	; 0
     334:	40 e1       	ldi	r20, 0x10	; 16
     336:	50 e0       	ldi	r21, 0x00	; 0
     338:	0e 94 ca 01 	call	0x394	; 0x394 <stepperGoto>
     33c:	f7 cf       	rjmp	.-18     	; 0x32c <main+0x8e>

0000033e <initStepper>:

float snelheid;
int posNu;

void initStepper(void)
{
     33e:	df 93       	push	r29
     340:	cf 93       	push	r28
     342:	cd b7       	in	r28, 0x3d	; 61
     344:	de b7       	in	r29, 0x3e	; 62
    stepperLoc |= _BV(stepperPin1);
     346:	aa e2       	ldi	r26, 0x2A	; 42
     348:	b0 e0       	ldi	r27, 0x00	; 0
     34a:	ea e2       	ldi	r30, 0x2A	; 42
     34c:	f0 e0       	ldi	r31, 0x00	; 0
     34e:	80 81       	ld	r24, Z
     350:	88 60       	ori	r24, 0x08	; 8
     352:	8c 93       	st	X, r24
    stepperLoc |= _BV(stepperDir1);
     354:	aa e2       	ldi	r26, 0x2A	; 42
     356:	b0 e0       	ldi	r27, 0x00	; 0
     358:	ea e2       	ldi	r30, 0x2A	; 42
     35a:	f0 e0       	ldi	r31, 0x00	; 0
     35c:	80 81       	ld	r24, Z
     35e:	84 60       	ori	r24, 0x04	; 4
     360:	8c 93       	st	X, r24
    stepperLoc2 |= _BV(stepperPin2);
     362:	a4 e2       	ldi	r26, 0x24	; 36
     364:	b0 e0       	ldi	r27, 0x00	; 0
     366:	e4 e2       	ldi	r30, 0x24	; 36
     368:	f0 e0       	ldi	r31, 0x00	; 0
     36a:	80 81       	ld	r24, Z
     36c:	81 60       	ori	r24, 0x01	; 1
     36e:	8c 93       	st	X, r24
    stepperLoc |= _BV(stepperDir2);
     370:	aa e2       	ldi	r26, 0x2A	; 42
     372:	b0 e0       	ldi	r27, 0x00	; 0
     374:	ea e2       	ldi	r30, 0x2A	; 42
     376:	f0 e0       	ldi	r31, 0x00	; 0
     378:	80 81       	ld	r24, Z
     37a:	80 68       	ori	r24, 0x80	; 128
     37c:	8c 93       	st	X, r24

    TCCR1A = 0;
     37e:	e0 e8       	ldi	r30, 0x80	; 128
     380:	f0 e0       	ldi	r31, 0x00	; 0
     382:	10 82       	st	Z, r1
    TCCR1B = (0 << CS12) | (0 << CS11) | (1 << CS10);
     384:	e1 e8       	ldi	r30, 0x81	; 129
     386:	f0 e0       	ldi	r31, 0x00	; 0
     388:	81 e0       	ldi	r24, 0x01	; 1
     38a:	80 83       	st	Z, r24

    sei();
     38c:	78 94       	sei

}
     38e:	cf 91       	pop	r28
     390:	df 91       	pop	r29
     392:	08 95       	ret

00000394 <stepperGoto>:

void stepperGoto(int steps, int dir, int mode) //aantal steps, directie, stepMode
{
     394:	0f 93       	push	r16
     396:	1f 93       	push	r17
     398:	df 93       	push	r29
     39a:	cf 93       	push	r28
     39c:	cd b7       	in	r28, 0x3d	; 61
     39e:	de b7       	in	r29, 0x3e	; 62
     3a0:	2c 97       	sbiw	r28, 0x0c	; 12
     3a2:	0f b6       	in	r0, 0x3f	; 63
     3a4:	f8 94       	cli
     3a6:	de bf       	out	0x3e, r29	; 62
     3a8:	0f be       	out	0x3f, r0	; 63
     3aa:	cd bf       	out	0x3d, r28	; 61
     3ac:	98 87       	std	Y+8, r25	; 0x08
     3ae:	8f 83       	std	Y+7, r24	; 0x07
     3b0:	7a 87       	std	Y+10, r23	; 0x0a
     3b2:	69 87       	std	Y+9, r22	; 0x09
     3b4:	5c 87       	std	Y+12, r21	; 0x0c
     3b6:	4b 87       	std	Y+11, r20	; 0x0b

    if(dir)
     3b8:	89 85       	ldd	r24, Y+9	; 0x09
     3ba:	9a 85       	ldd	r25, Y+10	; 0x0a
     3bc:	00 97       	sbiw	r24, 0x00	; 0
     3be:	79 f0       	breq	.+30     	; 0x3de <stepperGoto+0x4a>
    {
        stepperPort |= (1 << stepperDir1);
     3c0:	ab e2       	ldi	r26, 0x2B	; 43
     3c2:	b0 e0       	ldi	r27, 0x00	; 0
     3c4:	eb e2       	ldi	r30, 0x2B	; 43
     3c6:	f0 e0       	ldi	r31, 0x00	; 0
     3c8:	80 81       	ld	r24, Z
     3ca:	84 60       	ori	r24, 0x04	; 4
     3cc:	8c 93       	st	X, r24
        stepperPort &= ~(1 << stepperDir2);
     3ce:	ab e2       	ldi	r26, 0x2B	; 43
     3d0:	b0 e0       	ldi	r27, 0x00	; 0
     3d2:	eb e2       	ldi	r30, 0x2B	; 43
     3d4:	f0 e0       	ldi	r31, 0x00	; 0
     3d6:	80 81       	ld	r24, Z
     3d8:	8f 77       	andi	r24, 0x7F	; 127
     3da:	8c 93       	st	X, r24
     3dc:	0e c0       	rjmp	.+28     	; 0x3fa <stepperGoto+0x66>
    }
    else
    {
        stepperPort &= ~(1 << stepperDir1);
     3de:	ab e2       	ldi	r26, 0x2B	; 43
     3e0:	b0 e0       	ldi	r27, 0x00	; 0
     3e2:	eb e2       	ldi	r30, 0x2B	; 43
     3e4:	f0 e0       	ldi	r31, 0x00	; 0
     3e6:	80 81       	ld	r24, Z
     3e8:	8b 7f       	andi	r24, 0xFB	; 251
     3ea:	8c 93       	st	X, r24
        stepperPort |= (1 << stepperDir2);
     3ec:	ab e2       	ldi	r26, 0x2B	; 43
     3ee:	b0 e0       	ldi	r27, 0x00	; 0
     3f0:	eb e2       	ldi	r30, 0x2B	; 43
     3f2:	f0 e0       	ldi	r31, 0x00	; 0
     3f4:	80 81       	ld	r24, Z
     3f6:	80 68       	ori	r24, 0x80	; 128
     3f8:	8c 93       	st	X, r24
    }

    int stepsTogo = steps *2 *mode;
     3fa:	8f 81       	ldd	r24, Y+7	; 0x07
     3fc:	98 85       	ldd	r25, Y+8	; 0x08
     3fe:	9c 01       	movw	r18, r24
     400:	22 0f       	add	r18, r18
     402:	33 1f       	adc	r19, r19
     404:	8b 85       	ldd	r24, Y+11	; 0x0b
     406:	9c 85       	ldd	r25, Y+12	; 0x0c
     408:	ac 01       	movw	r20, r24
     40a:	24 9f       	mul	r18, r20
     40c:	c0 01       	movw	r24, r0
     40e:	25 9f       	mul	r18, r21
     410:	90 0d       	add	r25, r0
     412:	34 9f       	mul	r19, r20
     414:	90 0d       	add	r25, r0
     416:	11 24       	eor	r1, r1
     418:	9e 83       	std	Y+6, r25	; 0x06
     41a:	8d 83       	std	Y+5, r24	; 0x05
    int wachten;

    for(int i = 0; i < stepsTogo; i++)
     41c:	1a 82       	std	Y+2, r1	; 0x02
     41e:	19 82       	std	Y+1, r1	; 0x01
     420:	44 c0       	rjmp	.+136    	; 0x4aa <stepperGoto+0x116>
    {
        while(wachten != 1)
        {
           if(TIFR1 & (1 << OCF1A))
     422:	e6 e3       	ldi	r30, 0x36	; 54
     424:	f0 e0       	ldi	r31, 0x00	; 0
     426:	80 81       	ld	r24, Z
     428:	88 2f       	mov	r24, r24
     42a:	90 e0       	ldi	r25, 0x00	; 0
     42c:	82 70       	andi	r24, 0x02	; 2
     42e:	90 70       	andi	r25, 0x00	; 0
     430:	00 97       	sbiw	r24, 0x00	; 0
     432:	79 f1       	breq	.+94     	; 0x492 <stepperGoto+0xfe>
            {
                stepperPort ^= (1 << stepperPin1);
     434:	ab e2       	ldi	r26, 0x2B	; 43
     436:	b0 e0       	ldi	r27, 0x00	; 0
     438:	eb e2       	ldi	r30, 0x2B	; 43
     43a:	f0 e0       	ldi	r31, 0x00	; 0
     43c:	90 81       	ld	r25, Z
     43e:	88 e0       	ldi	r24, 0x08	; 8
     440:	89 27       	eor	r24, r25
     442:	8c 93       	st	X, r24
                stepperPort2 ^= (1 << stepperPin2);
     444:	a5 e2       	ldi	r26, 0x25	; 37
     446:	b0 e0       	ldi	r27, 0x00	; 0
     448:	e5 e2       	ldi	r30, 0x25	; 37
     44a:	f0 e0       	ldi	r31, 0x00	; 0
     44c:	90 81       	ld	r25, Z
     44e:	81 e0       	ldi	r24, 0x01	; 1
     450:	89 27       	eor	r24, r25
     452:	8c 93       	st	X, r24
                TCNT1 = 0;
     454:	e4 e8       	ldi	r30, 0x84	; 132
     456:	f0 e0       	ldi	r31, 0x00	; 0
     458:	11 82       	std	Z+1, r1	; 0x01
     45a:	10 82       	st	Z, r1
                OCR1A = snelheid;
     45c:	08 e8       	ldi	r16, 0x88	; 136
     45e:	10 e0       	ldi	r17, 0x00	; 0
     460:	80 91 08 02 	lds	r24, 0x0208
     464:	90 91 09 02 	lds	r25, 0x0209
     468:	a0 91 0a 02 	lds	r26, 0x020A
     46c:	b0 91 0b 02 	lds	r27, 0x020B
     470:	bc 01       	movw	r22, r24
     472:	cd 01       	movw	r24, r26
     474:	0e 94 be 03 	call	0x77c	; 0x77c <__fixunssfsi>
     478:	dc 01       	movw	r26, r24
     47a:	cb 01       	movw	r24, r22
     47c:	f8 01       	movw	r30, r16
     47e:	91 83       	std	Z+1, r25	; 0x01
     480:	80 83       	st	Z, r24
                wachten = 1;
     482:	81 e0       	ldi	r24, 0x01	; 1
     484:	90 e0       	ldi	r25, 0x00	; 0
     486:	9c 83       	std	Y+4, r25	; 0x04
     488:	8b 83       	std	Y+3, r24	; 0x03
                TIFR1 = (1 << OCF1A);
     48a:	e6 e3       	ldi	r30, 0x36	; 54
     48c:	f0 e0       	ldi	r31, 0x00	; 0
     48e:	82 e0       	ldi	r24, 0x02	; 2
     490:	80 83       	st	Z, r24
    int stepsTogo = steps *2 *mode;
    int wachten;

    for(int i = 0; i < stepsTogo; i++)
    {
        while(wachten != 1)
     492:	8b 81       	ldd	r24, Y+3	; 0x03
     494:	9c 81       	ldd	r25, Y+4	; 0x04
     496:	81 30       	cpi	r24, 0x01	; 1
     498:	91 05       	cpc	r25, r1
     49a:	19 f6       	brne	.-122    	; 0x422 <stepperGoto+0x8e>

            }


        }
        wachten = 0;
     49c:	1c 82       	std	Y+4, r1	; 0x04
     49e:	1b 82       	std	Y+3, r1	; 0x03
    }

    int stepsTogo = steps *2 *mode;
    int wachten;

    for(int i = 0; i < stepsTogo; i++)
     4a0:	89 81       	ldd	r24, Y+1	; 0x01
     4a2:	9a 81       	ldd	r25, Y+2	; 0x02
     4a4:	01 96       	adiw	r24, 0x01	; 1
     4a6:	9a 83       	std	Y+2, r25	; 0x02
     4a8:	89 83       	std	Y+1, r24	; 0x01
     4aa:	29 81       	ldd	r18, Y+1	; 0x01
     4ac:	3a 81       	ldd	r19, Y+2	; 0x02
     4ae:	8d 81       	ldd	r24, Y+5	; 0x05
     4b0:	9e 81       	ldd	r25, Y+6	; 0x06
     4b2:	28 17       	cp	r18, r24
     4b4:	39 07       	cpc	r19, r25
     4b6:	6c f3       	brlt	.-38     	; 0x492 <stepperGoto+0xfe>
        }
        wachten = 0;


    }
}
     4b8:	2c 96       	adiw	r28, 0x0c	; 12
     4ba:	0f b6       	in	r0, 0x3f	; 63
     4bc:	f8 94       	cli
     4be:	de bf       	out	0x3e, r29	; 62
     4c0:	0f be       	out	0x3f, r0	; 63
     4c2:	cd bf       	out	0x3d, r28	; 61
     4c4:	cf 91       	pop	r28
     4c6:	df 91       	pop	r29
     4c8:	1f 91       	pop	r17
     4ca:	0f 91       	pop	r16
     4cc:	08 95       	ret

000004ce <singleStepperGoTo>:

void singleStepperGoTo(int steps, int dir, int mode, int stepper)
{
     4ce:	0f 93       	push	r16
     4d0:	1f 93       	push	r17
     4d2:	df 93       	push	r29
     4d4:	cf 93       	push	r28
     4d6:	cd b7       	in	r28, 0x3d	; 61
     4d8:	de b7       	in	r29, 0x3e	; 62
     4da:	64 97       	sbiw	r28, 0x14	; 20
     4dc:	0f b6       	in	r0, 0x3f	; 63
     4de:	f8 94       	cli
     4e0:	de bf       	out	0x3e, r29	; 62
     4e2:	0f be       	out	0x3f, r0	; 63
     4e4:	cd bf       	out	0x3d, r28	; 61
     4e6:	9e 87       	std	Y+14, r25	; 0x0e
     4e8:	8d 87       	std	Y+13, r24	; 0x0d
     4ea:	78 8b       	std	Y+16, r23	; 0x10
     4ec:	6f 87       	std	Y+15, r22	; 0x0f
     4ee:	5a 8b       	std	Y+18, r21	; 0x12
     4f0:	49 8b       	std	Y+17, r20	; 0x11
     4f2:	3c 8b       	std	Y+20, r19	; 0x14
     4f4:	2b 8b       	std	Y+19, r18	; 0x13
    if(stepper = 1) //stepper 1 (links?)
     4f6:	81 e0       	ldi	r24, 0x01	; 1
     4f8:	90 e0       	ldi	r25, 0x00	; 0
     4fa:	9c 8b       	std	Y+20, r25	; 0x14
     4fc:	8b 8b       	std	Y+19, r24	; 0x13
    {
        if(dir)
     4fe:	8f 85       	ldd	r24, Y+15	; 0x0f
     500:	98 89       	ldd	r25, Y+16	; 0x10
     502:	00 97       	sbiw	r24, 0x00	; 0
     504:	41 f0       	breq	.+16     	; 0x516 <singleStepperGoTo+0x48>
        {
            stepperPort |= (1 << stepperDir1);
     506:	ab e2       	ldi	r26, 0x2B	; 43
     508:	b0 e0       	ldi	r27, 0x00	; 0
     50a:	eb e2       	ldi	r30, 0x2B	; 43
     50c:	f0 e0       	ldi	r31, 0x00	; 0
     50e:	80 81       	ld	r24, Z
     510:	84 60       	ori	r24, 0x04	; 4
     512:	8c 93       	st	X, r24
     514:	07 c0       	rjmp	.+14     	; 0x524 <singleStepperGoTo+0x56>
        }
        else
        {
            stepperPort &= ~(1 << stepperDir1);
     516:	ab e2       	ldi	r26, 0x2B	; 43
     518:	b0 e0       	ldi	r27, 0x00	; 0
     51a:	eb e2       	ldi	r30, 0x2B	; 43
     51c:	f0 e0       	ldi	r31, 0x00	; 0
     51e:	80 81       	ld	r24, Z
     520:	8b 7f       	andi	r24, 0xFB	; 251
     522:	8c 93       	st	X, r24
        }

        int stepsTogo = steps *2 *mode;
     524:	8d 85       	ldd	r24, Y+13	; 0x0d
     526:	9e 85       	ldd	r25, Y+14	; 0x0e
     528:	9c 01       	movw	r18, r24
     52a:	22 0f       	add	r18, r18
     52c:	33 1f       	adc	r19, r19
     52e:	89 89       	ldd	r24, Y+17	; 0x11
     530:	9a 89       	ldd	r25, Y+18	; 0x12
     532:	ac 01       	movw	r20, r24
     534:	24 9f       	mul	r18, r20
     536:	c0 01       	movw	r24, r0
     538:	25 9f       	mul	r18, r21
     53a:	90 0d       	add	r25, r0
     53c:	34 9f       	mul	r19, r20
     53e:	90 0d       	add	r25, r0
     540:	11 24       	eor	r1, r1
     542:	9c 87       	std	Y+12, r25	; 0x0c
     544:	8b 87       	std	Y+11, r24	; 0x0b
        int wachten;

        for(int i = 0; i < stepsTogo; i++)
     546:	18 86       	std	Y+8, r1	; 0x08
     548:	1f 82       	std	Y+7, r1	; 0x07
     54a:	3c c0       	rjmp	.+120    	; 0x5c4 <singleStepperGoTo+0xf6>
        {
            while(wachten != 1)
            {
                if(TIFR1 & (1 << OCF1A))
     54c:	e6 e3       	ldi	r30, 0x36	; 54
     54e:	f0 e0       	ldi	r31, 0x00	; 0
     550:	80 81       	ld	r24, Z
     552:	88 2f       	mov	r24, r24
     554:	90 e0       	ldi	r25, 0x00	; 0
     556:	82 70       	andi	r24, 0x02	; 2
     558:	90 70       	andi	r25, 0x00	; 0
     55a:	00 97       	sbiw	r24, 0x00	; 0
     55c:	39 f1       	breq	.+78     	; 0x5ac <singleStepperGoTo+0xde>
                {
                    stepperPort ^= (1 << stepperPin1);
     55e:	ab e2       	ldi	r26, 0x2B	; 43
     560:	b0 e0       	ldi	r27, 0x00	; 0
     562:	eb e2       	ldi	r30, 0x2B	; 43
     564:	f0 e0       	ldi	r31, 0x00	; 0
     566:	90 81       	ld	r25, Z
     568:	88 e0       	ldi	r24, 0x08	; 8
     56a:	89 27       	eor	r24, r25
     56c:	8c 93       	st	X, r24
                    TCNT1 = 0;
     56e:	e4 e8       	ldi	r30, 0x84	; 132
     570:	f0 e0       	ldi	r31, 0x00	; 0
     572:	11 82       	std	Z+1, r1	; 0x01
     574:	10 82       	st	Z, r1
                    OCR1A = snelheid;
     576:	08 e8       	ldi	r16, 0x88	; 136
     578:	10 e0       	ldi	r17, 0x00	; 0
     57a:	80 91 08 02 	lds	r24, 0x0208
     57e:	90 91 09 02 	lds	r25, 0x0209
     582:	a0 91 0a 02 	lds	r26, 0x020A
     586:	b0 91 0b 02 	lds	r27, 0x020B
     58a:	bc 01       	movw	r22, r24
     58c:	cd 01       	movw	r24, r26
     58e:	0e 94 be 03 	call	0x77c	; 0x77c <__fixunssfsi>
     592:	dc 01       	movw	r26, r24
     594:	cb 01       	movw	r24, r22
     596:	f8 01       	movw	r30, r16
     598:	91 83       	std	Z+1, r25	; 0x01
     59a:	80 83       	st	Z, r24
                    wachten = 1;
     59c:	81 e0       	ldi	r24, 0x01	; 1
     59e:	90 e0       	ldi	r25, 0x00	; 0
     5a0:	9a 87       	std	Y+10, r25	; 0x0a
     5a2:	89 87       	std	Y+9, r24	; 0x09
                    TIFR1 = (1 << OCF1A);
     5a4:	e6 e3       	ldi	r30, 0x36	; 54
     5a6:	f0 e0       	ldi	r31, 0x00	; 0
     5a8:	82 e0       	ldi	r24, 0x02	; 2
     5aa:	80 83       	st	Z, r24
        int stepsTogo = steps *2 *mode;
        int wachten;

        for(int i = 0; i < stepsTogo; i++)
        {
            while(wachten != 1)
     5ac:	89 85       	ldd	r24, Y+9	; 0x09
     5ae:	9a 85       	ldd	r25, Y+10	; 0x0a
     5b0:	81 30       	cpi	r24, 0x01	; 1
     5b2:	91 05       	cpc	r25, r1
     5b4:	59 f6       	brne	.-106    	; 0x54c <singleStepperGoTo+0x7e>

                }


            }
            wachten = 0;
     5b6:	1a 86       	std	Y+10, r1	; 0x0a
     5b8:	19 86       	std	Y+9, r1	; 0x09
        }

        int stepsTogo = steps *2 *mode;
        int wachten;

        for(int i = 0; i < stepsTogo; i++)
     5ba:	8f 81       	ldd	r24, Y+7	; 0x07
     5bc:	98 85       	ldd	r25, Y+8	; 0x08
     5be:	01 96       	adiw	r24, 0x01	; 1
     5c0:	98 87       	std	Y+8, r25	; 0x08
     5c2:	8f 83       	std	Y+7, r24	; 0x07
     5c4:	2f 81       	ldd	r18, Y+7	; 0x07
     5c6:	38 85       	ldd	r19, Y+8	; 0x08
     5c8:	8b 85       	ldd	r24, Y+11	; 0x0b
     5ca:	9c 85       	ldd	r25, Y+12	; 0x0c
     5cc:	28 17       	cp	r18, r24
     5ce:	39 07       	cpc	r19, r25
     5d0:	6c f3       	brlt	.-38     	; 0x5ac <singleStepperGoTo+0xde>


        }
    }

    if(stepper = 0) //stepper 2 (rechts?)
     5d2:	1c 8a       	std	Y+20, r1	; 0x14
     5d4:	1b 8a       	std	Y+19, r1	; 0x13
     5d6:	8b 89       	ldd	r24, Y+19	; 0x13
     5d8:	9c 89       	ldd	r25, Y+20	; 0x14
     5da:	00 97       	sbiw	r24, 0x00	; 0
     5dc:	09 f4       	brne	.+2      	; 0x5e0 <singleStepperGoTo+0x112>
     5de:	6a c0       	rjmp	.+212    	; 0x6b4 <singleStepperGoTo+0x1e6>
    {
        if(dir)
     5e0:	8f 85       	ldd	r24, Y+15	; 0x0f
     5e2:	98 89       	ldd	r25, Y+16	; 0x10
     5e4:	00 97       	sbiw	r24, 0x00	; 0
     5e6:	41 f0       	breq	.+16     	; 0x5f8 <singleStepperGoTo+0x12a>
        {
            stepperPort &= ~(1 << stepperDir2);
     5e8:	ab e2       	ldi	r26, 0x2B	; 43
     5ea:	b0 e0       	ldi	r27, 0x00	; 0
     5ec:	eb e2       	ldi	r30, 0x2B	; 43
     5ee:	f0 e0       	ldi	r31, 0x00	; 0
     5f0:	80 81       	ld	r24, Z
     5f2:	8f 77       	andi	r24, 0x7F	; 127
     5f4:	8c 93       	st	X, r24
     5f6:	07 c0       	rjmp	.+14     	; 0x606 <singleStepperGoTo+0x138>
        }
        else
        {
            stepperPort |= (1 << stepperDir2);
     5f8:	ab e2       	ldi	r26, 0x2B	; 43
     5fa:	b0 e0       	ldi	r27, 0x00	; 0
     5fc:	eb e2       	ldi	r30, 0x2B	; 43
     5fe:	f0 e0       	ldi	r31, 0x00	; 0
     600:	80 81       	ld	r24, Z
     602:	80 68       	ori	r24, 0x80	; 128
     604:	8c 93       	st	X, r24
        }

        int stepsTogo = steps *2 *mode;
     606:	8d 85       	ldd	r24, Y+13	; 0x0d
     608:	9e 85       	ldd	r25, Y+14	; 0x0e
     60a:	9c 01       	movw	r18, r24
     60c:	22 0f       	add	r18, r18
     60e:	33 1f       	adc	r19, r19
     610:	89 89       	ldd	r24, Y+17	; 0x11
     612:	9a 89       	ldd	r25, Y+18	; 0x12
     614:	ac 01       	movw	r20, r24
     616:	24 9f       	mul	r18, r20
     618:	c0 01       	movw	r24, r0
     61a:	25 9f       	mul	r18, r21
     61c:	90 0d       	add	r25, r0
     61e:	34 9f       	mul	r19, r20
     620:	90 0d       	add	r25, r0
     622:	11 24       	eor	r1, r1
     624:	9e 83       	std	Y+6, r25	; 0x06
     626:	8d 83       	std	Y+5, r24	; 0x05
        int wachten;

        for(int i = 0; i < stepsTogo; i++)
     628:	1a 82       	std	Y+2, r1	; 0x02
     62a:	19 82       	std	Y+1, r1	; 0x01
     62c:	3c c0       	rjmp	.+120    	; 0x6a6 <singleStepperGoTo+0x1d8>
        {
            while(wachten != 1)
            {
                if(TIFR1 & (1 << OCF1A))
     62e:	e6 e3       	ldi	r30, 0x36	; 54
     630:	f0 e0       	ldi	r31, 0x00	; 0
     632:	80 81       	ld	r24, Z
     634:	88 2f       	mov	r24, r24
     636:	90 e0       	ldi	r25, 0x00	; 0
     638:	82 70       	andi	r24, 0x02	; 2
     63a:	90 70       	andi	r25, 0x00	; 0
     63c:	00 97       	sbiw	r24, 0x00	; 0
     63e:	39 f1       	breq	.+78     	; 0x68e <singleStepperGoTo+0x1c0>
                {
                    stepperPort2 ^= (1 << stepperPin2);
     640:	a5 e2       	ldi	r26, 0x25	; 37
     642:	b0 e0       	ldi	r27, 0x00	; 0
     644:	e5 e2       	ldi	r30, 0x25	; 37
     646:	f0 e0       	ldi	r31, 0x00	; 0
     648:	90 81       	ld	r25, Z
     64a:	81 e0       	ldi	r24, 0x01	; 1
     64c:	89 27       	eor	r24, r25
     64e:	8c 93       	st	X, r24
                    TCNT1 = 0;
     650:	e4 e8       	ldi	r30, 0x84	; 132
     652:	f0 e0       	ldi	r31, 0x00	; 0
     654:	11 82       	std	Z+1, r1	; 0x01
     656:	10 82       	st	Z, r1
                    OCR1A = snelheid;
     658:	08 e8       	ldi	r16, 0x88	; 136
     65a:	10 e0       	ldi	r17, 0x00	; 0
     65c:	80 91 08 02 	lds	r24, 0x0208
     660:	90 91 09 02 	lds	r25, 0x0209
     664:	a0 91 0a 02 	lds	r26, 0x020A
     668:	b0 91 0b 02 	lds	r27, 0x020B
     66c:	bc 01       	movw	r22, r24
     66e:	cd 01       	movw	r24, r26
     670:	0e 94 be 03 	call	0x77c	; 0x77c <__fixunssfsi>
     674:	dc 01       	movw	r26, r24
     676:	cb 01       	movw	r24, r22
     678:	f8 01       	movw	r30, r16
     67a:	91 83       	std	Z+1, r25	; 0x01
     67c:	80 83       	st	Z, r24
                    wachten = 1;
     67e:	81 e0       	ldi	r24, 0x01	; 1
     680:	90 e0       	ldi	r25, 0x00	; 0
     682:	9c 83       	std	Y+4, r25	; 0x04
     684:	8b 83       	std	Y+3, r24	; 0x03
                    TIFR1 = (1 << OCF1A);
     686:	e6 e3       	ldi	r30, 0x36	; 54
     688:	f0 e0       	ldi	r31, 0x00	; 0
     68a:	82 e0       	ldi	r24, 0x02	; 2
     68c:	80 83       	st	Z, r24
        int stepsTogo = steps *2 *mode;
        int wachten;

        for(int i = 0; i < stepsTogo; i++)
        {
            while(wachten != 1)
     68e:	8b 81       	ldd	r24, Y+3	; 0x03
     690:	9c 81       	ldd	r25, Y+4	; 0x04
     692:	81 30       	cpi	r24, 0x01	; 1
     694:	91 05       	cpc	r25, r1
     696:	59 f6       	brne	.-106    	; 0x62e <singleStepperGoTo+0x160>

                }


            }
            wachten = 0;
     698:	1c 82       	std	Y+4, r1	; 0x04
     69a:	1b 82       	std	Y+3, r1	; 0x03
        }

        int stepsTogo = steps *2 *mode;
        int wachten;

        for(int i = 0; i < stepsTogo; i++)
     69c:	89 81       	ldd	r24, Y+1	; 0x01
     69e:	9a 81       	ldd	r25, Y+2	; 0x02
     6a0:	01 96       	adiw	r24, 0x01	; 1
     6a2:	9a 83       	std	Y+2, r25	; 0x02
     6a4:	89 83       	std	Y+1, r24	; 0x01
     6a6:	29 81       	ldd	r18, Y+1	; 0x01
     6a8:	3a 81       	ldd	r19, Y+2	; 0x02
     6aa:	8d 81       	ldd	r24, Y+5	; 0x05
     6ac:	9e 81       	ldd	r25, Y+6	; 0x06
     6ae:	28 17       	cp	r18, r24
     6b0:	39 07       	cpc	r19, r25
     6b2:	6c f3       	brlt	.-38     	; 0x68e <singleStepperGoTo+0x1c0>
            wachten = 0;


        }
    }
}
     6b4:	64 96       	adiw	r28, 0x14	; 20
     6b6:	0f b6       	in	r0, 0x3f	; 63
     6b8:	f8 94       	cli
     6ba:	de bf       	out	0x3e, r29	; 62
     6bc:	0f be       	out	0x3f, r0	; 63
     6be:	cd bf       	out	0x3d, r28	; 61
     6c0:	cf 91       	pop	r28
     6c2:	df 91       	pop	r29
     6c4:	1f 91       	pop	r17
     6c6:	0f 91       	pop	r16
     6c8:	08 95       	ret

000006ca <stepperSetSpeed>:

void stepperSetSpeed(float rps, int mode)
{
     6ca:	ef 92       	push	r14
     6cc:	ff 92       	push	r15
     6ce:	0f 93       	push	r16
     6d0:	1f 93       	push	r17
     6d2:	df 93       	push	r29
     6d4:	cf 93       	push	r28
     6d6:	cd b7       	in	r28, 0x3d	; 61
     6d8:	de b7       	in	r29, 0x3e	; 62
     6da:	2a 97       	sbiw	r28, 0x0a	; 10
     6dc:	0f b6       	in	r0, 0x3f	; 63
     6de:	f8 94       	cli
     6e0:	de bf       	out	0x3e, r29	; 62
     6e2:	0f be       	out	0x3f, r0	; 63
     6e4:	cd bf       	out	0x3d, r28	; 61
     6e6:	6d 83       	std	Y+5, r22	; 0x05
     6e8:	7e 83       	std	Y+6, r23	; 0x06
     6ea:	8f 83       	std	Y+7, r24	; 0x07
     6ec:	98 87       	std	Y+8, r25	; 0x08
     6ee:	5a 87       	std	Y+10, r21	; 0x0a
     6f0:	49 87       	std	Y+9, r20	; 0x09
    float rekenwaarde = rps * 400 * mode;
     6f2:	6d 81       	ldd	r22, Y+5	; 0x05
     6f4:	7e 81       	ldd	r23, Y+6	; 0x06
     6f6:	8f 81       	ldd	r24, Y+7	; 0x07
     6f8:	98 85       	ldd	r25, Y+8	; 0x08
     6fa:	20 e0       	ldi	r18, 0x00	; 0
     6fc:	30 e0       	ldi	r19, 0x00	; 0
     6fe:	48 ec       	ldi	r20, 0xC8	; 200
     700:	53 e4       	ldi	r21, 0x43	; 67
     702:	0e 94 94 05 	call	0xb28	; 0xb28 <__mulsf3>
     706:	dc 01       	movw	r26, r24
     708:	cb 01       	movw	r24, r22
     70a:	7c 01       	movw	r14, r24
     70c:	8d 01       	movw	r16, r26
     70e:	89 85       	ldd	r24, Y+9	; 0x09
     710:	9a 85       	ldd	r25, Y+10	; 0x0a
     712:	aa 27       	eor	r26, r26
     714:	97 fd       	sbrc	r25, 7
     716:	a0 95       	com	r26
     718:	ba 2f       	mov	r27, r26
     71a:	bc 01       	movw	r22, r24
     71c:	cd 01       	movw	r24, r26
     71e:	0e 94 ca 07 	call	0xf94	; 0xf94 <__floatsisf>
     722:	9b 01       	movw	r18, r22
     724:	ac 01       	movw	r20, r24
     726:	c8 01       	movw	r24, r16
     728:	b7 01       	movw	r22, r14
     72a:	0e 94 94 05 	call	0xb28	; 0xb28 <__mulsf3>
     72e:	dc 01       	movw	r26, r24
     730:	cb 01       	movw	r24, r22
     732:	89 83       	std	Y+1, r24	; 0x01
     734:	9a 83       	std	Y+2, r25	; 0x02
     736:	ab 83       	std	Y+3, r26	; 0x03
     738:	bc 83       	std	Y+4, r27	; 0x04
    snelheid = 16000000 / rekenwaarde;
     73a:	60 e0       	ldi	r22, 0x00	; 0
     73c:	74 e2       	ldi	r23, 0x24	; 36
     73e:	84 e7       	ldi	r24, 0x74	; 116
     740:	9b e4       	ldi	r25, 0x4B	; 75
     742:	29 81       	ldd	r18, Y+1	; 0x01
     744:	3a 81       	ldd	r19, Y+2	; 0x02
     746:	4b 81       	ldd	r20, Y+3	; 0x03
     748:	5c 81       	ldd	r21, Y+4	; 0x04
     74a:	0e 94 8e 06 	call	0xd1c	; 0xd1c <__divsf3>
     74e:	dc 01       	movw	r26, r24
     750:	cb 01       	movw	r24, r22
     752:	80 93 08 02 	sts	0x0208, r24
     756:	90 93 09 02 	sts	0x0209, r25
     75a:	a0 93 0a 02 	sts	0x020A, r26
     75e:	b0 93 0b 02 	sts	0x020B, r27
}
     762:	2a 96       	adiw	r28, 0x0a	; 10
     764:	0f b6       	in	r0, 0x3f	; 63
     766:	f8 94       	cli
     768:	de bf       	out	0x3e, r29	; 62
     76a:	0f be       	out	0x3f, r0	; 63
     76c:	cd bf       	out	0x3d, r28	; 61
     76e:	cf 91       	pop	r28
     770:	df 91       	pop	r29
     772:	1f 91       	pop	r17
     774:	0f 91       	pop	r16
     776:	ff 90       	pop	r15
     778:	ef 90       	pop	r14
     77a:	08 95       	ret

0000077c <__fixunssfsi>:
     77c:	ef 92       	push	r14
     77e:	ff 92       	push	r15
     780:	0f 93       	push	r16
     782:	1f 93       	push	r17
     784:	7b 01       	movw	r14, r22
     786:	8c 01       	movw	r16, r24
     788:	20 e0       	ldi	r18, 0x00	; 0
     78a:	30 e0       	ldi	r19, 0x00	; 0
     78c:	40 e0       	ldi	r20, 0x00	; 0
     78e:	5f e4       	ldi	r21, 0x4F	; 79
     790:	0e 94 6a 07 	call	0xed4	; 0xed4 <__gesf2>
     794:	88 23       	and	r24, r24
     796:	8c f0       	brlt	.+34     	; 0x7ba <__fixunssfsi+0x3e>
     798:	c8 01       	movw	r24, r16
     79a:	b7 01       	movw	r22, r14
     79c:	20 e0       	ldi	r18, 0x00	; 0
     79e:	30 e0       	ldi	r19, 0x00	; 0
     7a0:	40 e0       	ldi	r20, 0x00	; 0
     7a2:	5f e4       	ldi	r21, 0x4F	; 79
     7a4:	0e 94 36 05 	call	0xa6c	; 0xa6c <__subsf3>
     7a8:	0e 94 28 08 	call	0x1050	; 0x1050 <__fixsfsi>
     7ac:	9b 01       	movw	r18, r22
     7ae:	ac 01       	movw	r20, r24
     7b0:	20 50       	subi	r18, 0x00	; 0
     7b2:	30 40       	sbci	r19, 0x00	; 0
     7b4:	40 40       	sbci	r20, 0x00	; 0
     7b6:	50 48       	sbci	r21, 0x80	; 128
     7b8:	06 c0       	rjmp	.+12     	; 0x7c6 <__fixunssfsi+0x4a>
     7ba:	c8 01       	movw	r24, r16
     7bc:	b7 01       	movw	r22, r14
     7be:	0e 94 28 08 	call	0x1050	; 0x1050 <__fixsfsi>
     7c2:	9b 01       	movw	r18, r22
     7c4:	ac 01       	movw	r20, r24
     7c6:	b9 01       	movw	r22, r18
     7c8:	ca 01       	movw	r24, r20
     7ca:	1f 91       	pop	r17
     7cc:	0f 91       	pop	r16
     7ce:	ff 90       	pop	r15
     7d0:	ef 90       	pop	r14
     7d2:	08 95       	ret

000007d4 <_fpadd_parts>:
     7d4:	a0 e0       	ldi	r26, 0x00	; 0
     7d6:	b0 e0       	ldi	r27, 0x00	; 0
     7d8:	e0 ef       	ldi	r30, 0xF0	; 240
     7da:	f3 e0       	ldi	r31, 0x03	; 3
     7dc:	0c 94 71 0a 	jmp	0x14e2	; 0x14e2 <__prologue_saves__>
     7e0:	dc 01       	movw	r26, r24
     7e2:	2b 01       	movw	r4, r22
     7e4:	fa 01       	movw	r30, r20
     7e6:	9c 91       	ld	r25, X
     7e8:	92 30       	cpi	r25, 0x02	; 2
     7ea:	08 f4       	brcc	.+2      	; 0x7ee <_fpadd_parts+0x1a>
     7ec:	39 c1       	rjmp	.+626    	; 0xa60 <__stack+0x161>
     7ee:	eb 01       	movw	r28, r22
     7f0:	88 81       	ld	r24, Y
     7f2:	82 30       	cpi	r24, 0x02	; 2
     7f4:	08 f4       	brcc	.+2      	; 0x7f8 <_fpadd_parts+0x24>
     7f6:	33 c1       	rjmp	.+614    	; 0xa5e <__stack+0x15f>
     7f8:	94 30       	cpi	r25, 0x04	; 4
     7fa:	69 f4       	brne	.+26     	; 0x816 <_fpadd_parts+0x42>
     7fc:	84 30       	cpi	r24, 0x04	; 4
     7fe:	09 f0       	breq	.+2      	; 0x802 <_fpadd_parts+0x2e>
     800:	2f c1       	rjmp	.+606    	; 0xa60 <__stack+0x161>
     802:	11 96       	adiw	r26, 0x01	; 1
     804:	9c 91       	ld	r25, X
     806:	11 97       	sbiw	r26, 0x01	; 1
     808:	89 81       	ldd	r24, Y+1	; 0x01
     80a:	98 17       	cp	r25, r24
     80c:	09 f4       	brne	.+2      	; 0x810 <_fpadd_parts+0x3c>
     80e:	28 c1       	rjmp	.+592    	; 0xa60 <__stack+0x161>
     810:	a0 e0       	ldi	r26, 0x00	; 0
     812:	b1 e0       	ldi	r27, 0x01	; 1
     814:	25 c1       	rjmp	.+586    	; 0xa60 <__stack+0x161>
     816:	84 30       	cpi	r24, 0x04	; 4
     818:	09 f4       	brne	.+2      	; 0x81c <_fpadd_parts+0x48>
     81a:	21 c1       	rjmp	.+578    	; 0xa5e <__stack+0x15f>
     81c:	82 30       	cpi	r24, 0x02	; 2
     81e:	a9 f4       	brne	.+42     	; 0x84a <_fpadd_parts+0x76>
     820:	92 30       	cpi	r25, 0x02	; 2
     822:	09 f0       	breq	.+2      	; 0x826 <_fpadd_parts+0x52>
     824:	1d c1       	rjmp	.+570    	; 0xa60 <__stack+0x161>
     826:	9a 01       	movw	r18, r20
     828:	ad 01       	movw	r20, r26
     82a:	88 e0       	ldi	r24, 0x08	; 8
     82c:	ea 01       	movw	r28, r20
     82e:	09 90       	ld	r0, Y+
     830:	ae 01       	movw	r20, r28
     832:	e9 01       	movw	r28, r18
     834:	09 92       	st	Y+, r0
     836:	9e 01       	movw	r18, r28
     838:	81 50       	subi	r24, 0x01	; 1
     83a:	c1 f7       	brne	.-16     	; 0x82c <_fpadd_parts+0x58>
     83c:	e2 01       	movw	r28, r4
     83e:	89 81       	ldd	r24, Y+1	; 0x01
     840:	11 96       	adiw	r26, 0x01	; 1
     842:	9c 91       	ld	r25, X
     844:	89 23       	and	r24, r25
     846:	81 83       	std	Z+1, r24	; 0x01
     848:	08 c1       	rjmp	.+528    	; 0xa5a <__stack+0x15b>
     84a:	92 30       	cpi	r25, 0x02	; 2
     84c:	09 f4       	brne	.+2      	; 0x850 <_fpadd_parts+0x7c>
     84e:	07 c1       	rjmp	.+526    	; 0xa5e <__stack+0x15f>
     850:	12 96       	adiw	r26, 0x02	; 2
     852:	2d 90       	ld	r2, X+
     854:	3c 90       	ld	r3, X
     856:	13 97       	sbiw	r26, 0x03	; 3
     858:	eb 01       	movw	r28, r22
     85a:	8a 81       	ldd	r24, Y+2	; 0x02
     85c:	9b 81       	ldd	r25, Y+3	; 0x03
     85e:	14 96       	adiw	r26, 0x04	; 4
     860:	ad 90       	ld	r10, X+
     862:	bd 90       	ld	r11, X+
     864:	cd 90       	ld	r12, X+
     866:	dc 90       	ld	r13, X
     868:	17 97       	sbiw	r26, 0x07	; 7
     86a:	ec 80       	ldd	r14, Y+4	; 0x04
     86c:	fd 80       	ldd	r15, Y+5	; 0x05
     86e:	0e 81       	ldd	r16, Y+6	; 0x06
     870:	1f 81       	ldd	r17, Y+7	; 0x07
     872:	91 01       	movw	r18, r2
     874:	28 1b       	sub	r18, r24
     876:	39 0b       	sbc	r19, r25
     878:	b9 01       	movw	r22, r18
     87a:	37 ff       	sbrs	r19, 7
     87c:	04 c0       	rjmp	.+8      	; 0x886 <_fpadd_parts+0xb2>
     87e:	66 27       	eor	r22, r22
     880:	77 27       	eor	r23, r23
     882:	62 1b       	sub	r22, r18
     884:	73 0b       	sbc	r23, r19
     886:	60 32       	cpi	r22, 0x20	; 32
     888:	71 05       	cpc	r23, r1
     88a:	0c f0       	brlt	.+2      	; 0x88e <_fpadd_parts+0xba>
     88c:	61 c0       	rjmp	.+194    	; 0x950 <__stack+0x51>
     88e:	12 16       	cp	r1, r18
     890:	13 06       	cpc	r1, r19
     892:	6c f5       	brge	.+90     	; 0x8ee <_fpadd_parts+0x11a>
     894:	37 01       	movw	r6, r14
     896:	48 01       	movw	r8, r16
     898:	06 2e       	mov	r0, r22
     89a:	04 c0       	rjmp	.+8      	; 0x8a4 <_fpadd_parts+0xd0>
     89c:	96 94       	lsr	r9
     89e:	87 94       	ror	r8
     8a0:	77 94       	ror	r7
     8a2:	67 94       	ror	r6
     8a4:	0a 94       	dec	r0
     8a6:	d2 f7       	brpl	.-12     	; 0x89c <_fpadd_parts+0xc8>
     8a8:	21 e0       	ldi	r18, 0x01	; 1
     8aa:	30 e0       	ldi	r19, 0x00	; 0
     8ac:	40 e0       	ldi	r20, 0x00	; 0
     8ae:	50 e0       	ldi	r21, 0x00	; 0
     8b0:	04 c0       	rjmp	.+8      	; 0x8ba <_fpadd_parts+0xe6>
     8b2:	22 0f       	add	r18, r18
     8b4:	33 1f       	adc	r19, r19
     8b6:	44 1f       	adc	r20, r20
     8b8:	55 1f       	adc	r21, r21
     8ba:	6a 95       	dec	r22
     8bc:	d2 f7       	brpl	.-12     	; 0x8b2 <_fpadd_parts+0xde>
     8be:	21 50       	subi	r18, 0x01	; 1
     8c0:	30 40       	sbci	r19, 0x00	; 0
     8c2:	40 40       	sbci	r20, 0x00	; 0
     8c4:	50 40       	sbci	r21, 0x00	; 0
     8c6:	2e 21       	and	r18, r14
     8c8:	3f 21       	and	r19, r15
     8ca:	40 23       	and	r20, r16
     8cc:	51 23       	and	r21, r17
     8ce:	21 15       	cp	r18, r1
     8d0:	31 05       	cpc	r19, r1
     8d2:	41 05       	cpc	r20, r1
     8d4:	51 05       	cpc	r21, r1
     8d6:	21 f0       	breq	.+8      	; 0x8e0 <_fpadd_parts+0x10c>
     8d8:	21 e0       	ldi	r18, 0x01	; 1
     8da:	30 e0       	ldi	r19, 0x00	; 0
     8dc:	40 e0       	ldi	r20, 0x00	; 0
     8de:	50 e0       	ldi	r21, 0x00	; 0
     8e0:	79 01       	movw	r14, r18
     8e2:	8a 01       	movw	r16, r20
     8e4:	e6 28       	or	r14, r6
     8e6:	f7 28       	or	r15, r7
     8e8:	08 29       	or	r16, r8
     8ea:	19 29       	or	r17, r9
     8ec:	3c c0       	rjmp	.+120    	; 0x966 <__stack+0x67>
     8ee:	23 2b       	or	r18, r19
     8f0:	d1 f1       	breq	.+116    	; 0x966 <__stack+0x67>
     8f2:	26 0e       	add	r2, r22
     8f4:	37 1e       	adc	r3, r23
     8f6:	35 01       	movw	r6, r10
     8f8:	46 01       	movw	r8, r12
     8fa:	06 2e       	mov	r0, r22
     8fc:	04 c0       	rjmp	.+8      	; 0x906 <__stack+0x7>
     8fe:	96 94       	lsr	r9
     900:	87 94       	ror	r8
     902:	77 94       	ror	r7
     904:	67 94       	ror	r6
     906:	0a 94       	dec	r0
     908:	d2 f7       	brpl	.-12     	; 0x8fe <_fpadd_parts+0x12a>
     90a:	21 e0       	ldi	r18, 0x01	; 1
     90c:	30 e0       	ldi	r19, 0x00	; 0
     90e:	40 e0       	ldi	r20, 0x00	; 0
     910:	50 e0       	ldi	r21, 0x00	; 0
     912:	04 c0       	rjmp	.+8      	; 0x91c <__stack+0x1d>
     914:	22 0f       	add	r18, r18
     916:	33 1f       	adc	r19, r19
     918:	44 1f       	adc	r20, r20
     91a:	55 1f       	adc	r21, r21
     91c:	6a 95       	dec	r22
     91e:	d2 f7       	brpl	.-12     	; 0x914 <__stack+0x15>
     920:	21 50       	subi	r18, 0x01	; 1
     922:	30 40       	sbci	r19, 0x00	; 0
     924:	40 40       	sbci	r20, 0x00	; 0
     926:	50 40       	sbci	r21, 0x00	; 0
     928:	2a 21       	and	r18, r10
     92a:	3b 21       	and	r19, r11
     92c:	4c 21       	and	r20, r12
     92e:	5d 21       	and	r21, r13
     930:	21 15       	cp	r18, r1
     932:	31 05       	cpc	r19, r1
     934:	41 05       	cpc	r20, r1
     936:	51 05       	cpc	r21, r1
     938:	21 f0       	breq	.+8      	; 0x942 <__stack+0x43>
     93a:	21 e0       	ldi	r18, 0x01	; 1
     93c:	30 e0       	ldi	r19, 0x00	; 0
     93e:	40 e0       	ldi	r20, 0x00	; 0
     940:	50 e0       	ldi	r21, 0x00	; 0
     942:	59 01       	movw	r10, r18
     944:	6a 01       	movw	r12, r20
     946:	a6 28       	or	r10, r6
     948:	b7 28       	or	r11, r7
     94a:	c8 28       	or	r12, r8
     94c:	d9 28       	or	r13, r9
     94e:	0b c0       	rjmp	.+22     	; 0x966 <__stack+0x67>
     950:	82 15       	cp	r24, r2
     952:	93 05       	cpc	r25, r3
     954:	2c f0       	brlt	.+10     	; 0x960 <__stack+0x61>
     956:	1c 01       	movw	r2, r24
     958:	aa 24       	eor	r10, r10
     95a:	bb 24       	eor	r11, r11
     95c:	65 01       	movw	r12, r10
     95e:	03 c0       	rjmp	.+6      	; 0x966 <__stack+0x67>
     960:	ee 24       	eor	r14, r14
     962:	ff 24       	eor	r15, r15
     964:	87 01       	movw	r16, r14
     966:	11 96       	adiw	r26, 0x01	; 1
     968:	9c 91       	ld	r25, X
     96a:	d2 01       	movw	r26, r4
     96c:	11 96       	adiw	r26, 0x01	; 1
     96e:	8c 91       	ld	r24, X
     970:	98 17       	cp	r25, r24
     972:	09 f4       	brne	.+2      	; 0x976 <__stack+0x77>
     974:	45 c0       	rjmp	.+138    	; 0xa00 <__stack+0x101>
     976:	99 23       	and	r25, r25
     978:	39 f0       	breq	.+14     	; 0x988 <__stack+0x89>
     97a:	a8 01       	movw	r20, r16
     97c:	97 01       	movw	r18, r14
     97e:	2a 19       	sub	r18, r10
     980:	3b 09       	sbc	r19, r11
     982:	4c 09       	sbc	r20, r12
     984:	5d 09       	sbc	r21, r13
     986:	06 c0       	rjmp	.+12     	; 0x994 <__stack+0x95>
     988:	a6 01       	movw	r20, r12
     98a:	95 01       	movw	r18, r10
     98c:	2e 19       	sub	r18, r14
     98e:	3f 09       	sbc	r19, r15
     990:	40 0b       	sbc	r20, r16
     992:	51 0b       	sbc	r21, r17
     994:	57 fd       	sbrc	r21, 7
     996:	08 c0       	rjmp	.+16     	; 0x9a8 <__stack+0xa9>
     998:	11 82       	std	Z+1, r1	; 0x01
     99a:	33 82       	std	Z+3, r3	; 0x03
     99c:	22 82       	std	Z+2, r2	; 0x02
     99e:	24 83       	std	Z+4, r18	; 0x04
     9a0:	35 83       	std	Z+5, r19	; 0x05
     9a2:	46 83       	std	Z+6, r20	; 0x06
     9a4:	57 83       	std	Z+7, r21	; 0x07
     9a6:	1d c0       	rjmp	.+58     	; 0x9e2 <__stack+0xe3>
     9a8:	81 e0       	ldi	r24, 0x01	; 1
     9aa:	81 83       	std	Z+1, r24	; 0x01
     9ac:	33 82       	std	Z+3, r3	; 0x03
     9ae:	22 82       	std	Z+2, r2	; 0x02
     9b0:	88 27       	eor	r24, r24
     9b2:	99 27       	eor	r25, r25
     9b4:	dc 01       	movw	r26, r24
     9b6:	82 1b       	sub	r24, r18
     9b8:	93 0b       	sbc	r25, r19
     9ba:	a4 0b       	sbc	r26, r20
     9bc:	b5 0b       	sbc	r27, r21
     9be:	84 83       	std	Z+4, r24	; 0x04
     9c0:	95 83       	std	Z+5, r25	; 0x05
     9c2:	a6 83       	std	Z+6, r26	; 0x06
     9c4:	b7 83       	std	Z+7, r27	; 0x07
     9c6:	0d c0       	rjmp	.+26     	; 0x9e2 <__stack+0xe3>
     9c8:	22 0f       	add	r18, r18
     9ca:	33 1f       	adc	r19, r19
     9cc:	44 1f       	adc	r20, r20
     9ce:	55 1f       	adc	r21, r21
     9d0:	24 83       	std	Z+4, r18	; 0x04
     9d2:	35 83       	std	Z+5, r19	; 0x05
     9d4:	46 83       	std	Z+6, r20	; 0x06
     9d6:	57 83       	std	Z+7, r21	; 0x07
     9d8:	82 81       	ldd	r24, Z+2	; 0x02
     9da:	93 81       	ldd	r25, Z+3	; 0x03
     9dc:	01 97       	sbiw	r24, 0x01	; 1
     9de:	93 83       	std	Z+3, r25	; 0x03
     9e0:	82 83       	std	Z+2, r24	; 0x02
     9e2:	24 81       	ldd	r18, Z+4	; 0x04
     9e4:	35 81       	ldd	r19, Z+5	; 0x05
     9e6:	46 81       	ldd	r20, Z+6	; 0x06
     9e8:	57 81       	ldd	r21, Z+7	; 0x07
     9ea:	da 01       	movw	r26, r20
     9ec:	c9 01       	movw	r24, r18
     9ee:	01 97       	sbiw	r24, 0x01	; 1
     9f0:	a1 09       	sbc	r26, r1
     9f2:	b1 09       	sbc	r27, r1
     9f4:	8f 5f       	subi	r24, 0xFF	; 255
     9f6:	9f 4f       	sbci	r25, 0xFF	; 255
     9f8:	af 4f       	sbci	r26, 0xFF	; 255
     9fa:	bf 43       	sbci	r27, 0x3F	; 63
     9fc:	28 f3       	brcs	.-54     	; 0x9c8 <__stack+0xc9>
     9fe:	0b c0       	rjmp	.+22     	; 0xa16 <__stack+0x117>
     a00:	91 83       	std	Z+1, r25	; 0x01
     a02:	33 82       	std	Z+3, r3	; 0x03
     a04:	22 82       	std	Z+2, r2	; 0x02
     a06:	ea 0c       	add	r14, r10
     a08:	fb 1c       	adc	r15, r11
     a0a:	0c 1d       	adc	r16, r12
     a0c:	1d 1d       	adc	r17, r13
     a0e:	e4 82       	std	Z+4, r14	; 0x04
     a10:	f5 82       	std	Z+5, r15	; 0x05
     a12:	06 83       	std	Z+6, r16	; 0x06
     a14:	17 83       	std	Z+7, r17	; 0x07
     a16:	83 e0       	ldi	r24, 0x03	; 3
     a18:	80 83       	st	Z, r24
     a1a:	24 81       	ldd	r18, Z+4	; 0x04
     a1c:	35 81       	ldd	r19, Z+5	; 0x05
     a1e:	46 81       	ldd	r20, Z+6	; 0x06
     a20:	57 81       	ldd	r21, Z+7	; 0x07
     a22:	57 ff       	sbrs	r21, 7
     a24:	1a c0       	rjmp	.+52     	; 0xa5a <__stack+0x15b>
     a26:	c9 01       	movw	r24, r18
     a28:	aa 27       	eor	r26, r26
     a2a:	97 fd       	sbrc	r25, 7
     a2c:	a0 95       	com	r26
     a2e:	ba 2f       	mov	r27, r26
     a30:	81 70       	andi	r24, 0x01	; 1
     a32:	90 70       	andi	r25, 0x00	; 0
     a34:	a0 70       	andi	r26, 0x00	; 0
     a36:	b0 70       	andi	r27, 0x00	; 0
     a38:	56 95       	lsr	r21
     a3a:	47 95       	ror	r20
     a3c:	37 95       	ror	r19
     a3e:	27 95       	ror	r18
     a40:	82 2b       	or	r24, r18
     a42:	93 2b       	or	r25, r19
     a44:	a4 2b       	or	r26, r20
     a46:	b5 2b       	or	r27, r21
     a48:	84 83       	std	Z+4, r24	; 0x04
     a4a:	95 83       	std	Z+5, r25	; 0x05
     a4c:	a6 83       	std	Z+6, r26	; 0x06
     a4e:	b7 83       	std	Z+7, r27	; 0x07
     a50:	82 81       	ldd	r24, Z+2	; 0x02
     a52:	93 81       	ldd	r25, Z+3	; 0x03
     a54:	01 96       	adiw	r24, 0x01	; 1
     a56:	93 83       	std	Z+3, r25	; 0x03
     a58:	82 83       	std	Z+2, r24	; 0x02
     a5a:	df 01       	movw	r26, r30
     a5c:	01 c0       	rjmp	.+2      	; 0xa60 <__stack+0x161>
     a5e:	d2 01       	movw	r26, r4
     a60:	cd 01       	movw	r24, r26
     a62:	cd b7       	in	r28, 0x3d	; 61
     a64:	de b7       	in	r29, 0x3e	; 62
     a66:	e2 e1       	ldi	r30, 0x12	; 18
     a68:	0c 94 8d 0a 	jmp	0x151a	; 0x151a <__epilogue_restores__>

00000a6c <__subsf3>:
     a6c:	a0 e2       	ldi	r26, 0x20	; 32
     a6e:	b0 e0       	ldi	r27, 0x00	; 0
     a70:	ec e3       	ldi	r30, 0x3C	; 60
     a72:	f5 e0       	ldi	r31, 0x05	; 5
     a74:	0c 94 7d 0a 	jmp	0x14fa	; 0x14fa <__prologue_saves__+0x18>
     a78:	69 83       	std	Y+1, r22	; 0x01
     a7a:	7a 83       	std	Y+2, r23	; 0x02
     a7c:	8b 83       	std	Y+3, r24	; 0x03
     a7e:	9c 83       	std	Y+4, r25	; 0x04
     a80:	2d 83       	std	Y+5, r18	; 0x05
     a82:	3e 83       	std	Y+6, r19	; 0x06
     a84:	4f 83       	std	Y+7, r20	; 0x07
     a86:	58 87       	std	Y+8, r21	; 0x08
     a88:	e9 e0       	ldi	r30, 0x09	; 9
     a8a:	ee 2e       	mov	r14, r30
     a8c:	f1 2c       	mov	r15, r1
     a8e:	ec 0e       	add	r14, r28
     a90:	fd 1e       	adc	r15, r29
     a92:	ce 01       	movw	r24, r28
     a94:	01 96       	adiw	r24, 0x01	; 1
     a96:	b7 01       	movw	r22, r14
     a98:	0e 94 a0 09 	call	0x1340	; 0x1340 <__unpack_f>
     a9c:	8e 01       	movw	r16, r28
     a9e:	0f 5e       	subi	r16, 0xEF	; 239
     aa0:	1f 4f       	sbci	r17, 0xFF	; 255
     aa2:	ce 01       	movw	r24, r28
     aa4:	05 96       	adiw	r24, 0x05	; 5
     aa6:	b8 01       	movw	r22, r16
     aa8:	0e 94 a0 09 	call	0x1340	; 0x1340 <__unpack_f>
     aac:	8a 89       	ldd	r24, Y+18	; 0x12
     aae:	91 e0       	ldi	r25, 0x01	; 1
     ab0:	89 27       	eor	r24, r25
     ab2:	8a 8b       	std	Y+18, r24	; 0x12
     ab4:	c7 01       	movw	r24, r14
     ab6:	b8 01       	movw	r22, r16
     ab8:	ae 01       	movw	r20, r28
     aba:	47 5e       	subi	r20, 0xE7	; 231
     abc:	5f 4f       	sbci	r21, 0xFF	; 255
     abe:	0e 94 ea 03 	call	0x7d4	; 0x7d4 <_fpadd_parts>
     ac2:	0e 94 cb 08 	call	0x1196	; 0x1196 <__pack_f>
     ac6:	a0 96       	adiw	r28, 0x20	; 32
     ac8:	e6 e0       	ldi	r30, 0x06	; 6
     aca:	0c 94 99 0a 	jmp	0x1532	; 0x1532 <__epilogue_restores__+0x18>

00000ace <__addsf3>:
     ace:	a0 e2       	ldi	r26, 0x20	; 32
     ad0:	b0 e0       	ldi	r27, 0x00	; 0
     ad2:	ed e6       	ldi	r30, 0x6D	; 109
     ad4:	f5 e0       	ldi	r31, 0x05	; 5
     ad6:	0c 94 7d 0a 	jmp	0x14fa	; 0x14fa <__prologue_saves__+0x18>
     ada:	69 83       	std	Y+1, r22	; 0x01
     adc:	7a 83       	std	Y+2, r23	; 0x02
     ade:	8b 83       	std	Y+3, r24	; 0x03
     ae0:	9c 83       	std	Y+4, r25	; 0x04
     ae2:	2d 83       	std	Y+5, r18	; 0x05
     ae4:	3e 83       	std	Y+6, r19	; 0x06
     ae6:	4f 83       	std	Y+7, r20	; 0x07
     ae8:	58 87       	std	Y+8, r21	; 0x08
     aea:	f9 e0       	ldi	r31, 0x09	; 9
     aec:	ef 2e       	mov	r14, r31
     aee:	f1 2c       	mov	r15, r1
     af0:	ec 0e       	add	r14, r28
     af2:	fd 1e       	adc	r15, r29
     af4:	ce 01       	movw	r24, r28
     af6:	01 96       	adiw	r24, 0x01	; 1
     af8:	b7 01       	movw	r22, r14
     afa:	0e 94 a0 09 	call	0x1340	; 0x1340 <__unpack_f>
     afe:	8e 01       	movw	r16, r28
     b00:	0f 5e       	subi	r16, 0xEF	; 239
     b02:	1f 4f       	sbci	r17, 0xFF	; 255
     b04:	ce 01       	movw	r24, r28
     b06:	05 96       	adiw	r24, 0x05	; 5
     b08:	b8 01       	movw	r22, r16
     b0a:	0e 94 a0 09 	call	0x1340	; 0x1340 <__unpack_f>
     b0e:	c7 01       	movw	r24, r14
     b10:	b8 01       	movw	r22, r16
     b12:	ae 01       	movw	r20, r28
     b14:	47 5e       	subi	r20, 0xE7	; 231
     b16:	5f 4f       	sbci	r21, 0xFF	; 255
     b18:	0e 94 ea 03 	call	0x7d4	; 0x7d4 <_fpadd_parts>
     b1c:	0e 94 cb 08 	call	0x1196	; 0x1196 <__pack_f>
     b20:	a0 96       	adiw	r28, 0x20	; 32
     b22:	e6 e0       	ldi	r30, 0x06	; 6
     b24:	0c 94 99 0a 	jmp	0x1532	; 0x1532 <__epilogue_restores__+0x18>

00000b28 <__mulsf3>:
     b28:	a0 e2       	ldi	r26, 0x20	; 32
     b2a:	b0 e0       	ldi	r27, 0x00	; 0
     b2c:	ea e9       	ldi	r30, 0x9A	; 154
     b2e:	f5 e0       	ldi	r31, 0x05	; 5
     b30:	0c 94 71 0a 	jmp	0x14e2	; 0x14e2 <__prologue_saves__>
     b34:	69 83       	std	Y+1, r22	; 0x01
     b36:	7a 83       	std	Y+2, r23	; 0x02
     b38:	8b 83       	std	Y+3, r24	; 0x03
     b3a:	9c 83       	std	Y+4, r25	; 0x04
     b3c:	2d 83       	std	Y+5, r18	; 0x05
     b3e:	3e 83       	std	Y+6, r19	; 0x06
     b40:	4f 83       	std	Y+7, r20	; 0x07
     b42:	58 87       	std	Y+8, r21	; 0x08
     b44:	ce 01       	movw	r24, r28
     b46:	01 96       	adiw	r24, 0x01	; 1
     b48:	be 01       	movw	r22, r28
     b4a:	67 5f       	subi	r22, 0xF7	; 247
     b4c:	7f 4f       	sbci	r23, 0xFF	; 255
     b4e:	0e 94 a0 09 	call	0x1340	; 0x1340 <__unpack_f>
     b52:	ce 01       	movw	r24, r28
     b54:	05 96       	adiw	r24, 0x05	; 5
     b56:	be 01       	movw	r22, r28
     b58:	6f 5e       	subi	r22, 0xEF	; 239
     b5a:	7f 4f       	sbci	r23, 0xFF	; 255
     b5c:	0e 94 a0 09 	call	0x1340	; 0x1340 <__unpack_f>
     b60:	99 85       	ldd	r25, Y+9	; 0x09
     b62:	92 30       	cpi	r25, 0x02	; 2
     b64:	88 f0       	brcs	.+34     	; 0xb88 <__mulsf3+0x60>
     b66:	89 89       	ldd	r24, Y+17	; 0x11
     b68:	82 30       	cpi	r24, 0x02	; 2
     b6a:	c8 f0       	brcs	.+50     	; 0xb9e <__mulsf3+0x76>
     b6c:	94 30       	cpi	r25, 0x04	; 4
     b6e:	19 f4       	brne	.+6      	; 0xb76 <__mulsf3+0x4e>
     b70:	82 30       	cpi	r24, 0x02	; 2
     b72:	51 f4       	brne	.+20     	; 0xb88 <__mulsf3+0x60>
     b74:	04 c0       	rjmp	.+8      	; 0xb7e <__mulsf3+0x56>
     b76:	84 30       	cpi	r24, 0x04	; 4
     b78:	29 f4       	brne	.+10     	; 0xb84 <__mulsf3+0x5c>
     b7a:	92 30       	cpi	r25, 0x02	; 2
     b7c:	81 f4       	brne	.+32     	; 0xb9e <__mulsf3+0x76>
     b7e:	80 e0       	ldi	r24, 0x00	; 0
     b80:	91 e0       	ldi	r25, 0x01	; 1
     b82:	c6 c0       	rjmp	.+396    	; 0xd10 <__mulsf3+0x1e8>
     b84:	92 30       	cpi	r25, 0x02	; 2
     b86:	49 f4       	brne	.+18     	; 0xb9a <__mulsf3+0x72>
     b88:	20 e0       	ldi	r18, 0x00	; 0
     b8a:	9a 85       	ldd	r25, Y+10	; 0x0a
     b8c:	8a 89       	ldd	r24, Y+18	; 0x12
     b8e:	98 13       	cpse	r25, r24
     b90:	21 e0       	ldi	r18, 0x01	; 1
     b92:	2a 87       	std	Y+10, r18	; 0x0a
     b94:	ce 01       	movw	r24, r28
     b96:	09 96       	adiw	r24, 0x09	; 9
     b98:	bb c0       	rjmp	.+374    	; 0xd10 <__mulsf3+0x1e8>
     b9a:	82 30       	cpi	r24, 0x02	; 2
     b9c:	49 f4       	brne	.+18     	; 0xbb0 <__mulsf3+0x88>
     b9e:	20 e0       	ldi	r18, 0x00	; 0
     ba0:	9a 85       	ldd	r25, Y+10	; 0x0a
     ba2:	8a 89       	ldd	r24, Y+18	; 0x12
     ba4:	98 13       	cpse	r25, r24
     ba6:	21 e0       	ldi	r18, 0x01	; 1
     ba8:	2a 8b       	std	Y+18, r18	; 0x12
     baa:	ce 01       	movw	r24, r28
     bac:	41 96       	adiw	r24, 0x11	; 17
     bae:	b0 c0       	rjmp	.+352    	; 0xd10 <__mulsf3+0x1e8>
     bb0:	2d 84       	ldd	r2, Y+13	; 0x0d
     bb2:	3e 84       	ldd	r3, Y+14	; 0x0e
     bb4:	4f 84       	ldd	r4, Y+15	; 0x0f
     bb6:	58 88       	ldd	r5, Y+16	; 0x10
     bb8:	6d 88       	ldd	r6, Y+21	; 0x15
     bba:	7e 88       	ldd	r7, Y+22	; 0x16
     bbc:	8f 88       	ldd	r8, Y+23	; 0x17
     bbe:	98 8c       	ldd	r9, Y+24	; 0x18
     bc0:	ee 24       	eor	r14, r14
     bc2:	ff 24       	eor	r15, r15
     bc4:	87 01       	movw	r16, r14
     bc6:	aa 24       	eor	r10, r10
     bc8:	bb 24       	eor	r11, r11
     bca:	65 01       	movw	r12, r10
     bcc:	40 e0       	ldi	r20, 0x00	; 0
     bce:	50 e0       	ldi	r21, 0x00	; 0
     bd0:	60 e0       	ldi	r22, 0x00	; 0
     bd2:	70 e0       	ldi	r23, 0x00	; 0
     bd4:	e0 e0       	ldi	r30, 0x00	; 0
     bd6:	f0 e0       	ldi	r31, 0x00	; 0
     bd8:	c1 01       	movw	r24, r2
     bda:	81 70       	andi	r24, 0x01	; 1
     bdc:	90 70       	andi	r25, 0x00	; 0
     bde:	89 2b       	or	r24, r25
     be0:	e9 f0       	breq	.+58     	; 0xc1c <__mulsf3+0xf4>
     be2:	e6 0c       	add	r14, r6
     be4:	f7 1c       	adc	r15, r7
     be6:	08 1d       	adc	r16, r8
     be8:	19 1d       	adc	r17, r9
     bea:	9a 01       	movw	r18, r20
     bec:	ab 01       	movw	r20, r22
     bee:	2a 0d       	add	r18, r10
     bf0:	3b 1d       	adc	r19, r11
     bf2:	4c 1d       	adc	r20, r12
     bf4:	5d 1d       	adc	r21, r13
     bf6:	80 e0       	ldi	r24, 0x00	; 0
     bf8:	90 e0       	ldi	r25, 0x00	; 0
     bfa:	a0 e0       	ldi	r26, 0x00	; 0
     bfc:	b0 e0       	ldi	r27, 0x00	; 0
     bfe:	e6 14       	cp	r14, r6
     c00:	f7 04       	cpc	r15, r7
     c02:	08 05       	cpc	r16, r8
     c04:	19 05       	cpc	r17, r9
     c06:	20 f4       	brcc	.+8      	; 0xc10 <__mulsf3+0xe8>
     c08:	81 e0       	ldi	r24, 0x01	; 1
     c0a:	90 e0       	ldi	r25, 0x00	; 0
     c0c:	a0 e0       	ldi	r26, 0x00	; 0
     c0e:	b0 e0       	ldi	r27, 0x00	; 0
     c10:	ba 01       	movw	r22, r20
     c12:	a9 01       	movw	r20, r18
     c14:	48 0f       	add	r20, r24
     c16:	59 1f       	adc	r21, r25
     c18:	6a 1f       	adc	r22, r26
     c1a:	7b 1f       	adc	r23, r27
     c1c:	aa 0c       	add	r10, r10
     c1e:	bb 1c       	adc	r11, r11
     c20:	cc 1c       	adc	r12, r12
     c22:	dd 1c       	adc	r13, r13
     c24:	97 fe       	sbrs	r9, 7
     c26:	08 c0       	rjmp	.+16     	; 0xc38 <__mulsf3+0x110>
     c28:	81 e0       	ldi	r24, 0x01	; 1
     c2a:	90 e0       	ldi	r25, 0x00	; 0
     c2c:	a0 e0       	ldi	r26, 0x00	; 0
     c2e:	b0 e0       	ldi	r27, 0x00	; 0
     c30:	a8 2a       	or	r10, r24
     c32:	b9 2a       	or	r11, r25
     c34:	ca 2a       	or	r12, r26
     c36:	db 2a       	or	r13, r27
     c38:	31 96       	adiw	r30, 0x01	; 1
     c3a:	e0 32       	cpi	r30, 0x20	; 32
     c3c:	f1 05       	cpc	r31, r1
     c3e:	49 f0       	breq	.+18     	; 0xc52 <__mulsf3+0x12a>
     c40:	66 0c       	add	r6, r6
     c42:	77 1c       	adc	r7, r7
     c44:	88 1c       	adc	r8, r8
     c46:	99 1c       	adc	r9, r9
     c48:	56 94       	lsr	r5
     c4a:	47 94       	ror	r4
     c4c:	37 94       	ror	r3
     c4e:	27 94       	ror	r2
     c50:	c3 cf       	rjmp	.-122    	; 0xbd8 <__mulsf3+0xb0>
     c52:	fa 85       	ldd	r31, Y+10	; 0x0a
     c54:	ea 89       	ldd	r30, Y+18	; 0x12
     c56:	2b 89       	ldd	r18, Y+19	; 0x13
     c58:	3c 89       	ldd	r19, Y+20	; 0x14
     c5a:	8b 85       	ldd	r24, Y+11	; 0x0b
     c5c:	9c 85       	ldd	r25, Y+12	; 0x0c
     c5e:	28 0f       	add	r18, r24
     c60:	39 1f       	adc	r19, r25
     c62:	2e 5f       	subi	r18, 0xFE	; 254
     c64:	3f 4f       	sbci	r19, 0xFF	; 255
     c66:	17 c0       	rjmp	.+46     	; 0xc96 <__mulsf3+0x16e>
     c68:	ca 01       	movw	r24, r20
     c6a:	81 70       	andi	r24, 0x01	; 1
     c6c:	90 70       	andi	r25, 0x00	; 0
     c6e:	89 2b       	or	r24, r25
     c70:	61 f0       	breq	.+24     	; 0xc8a <__mulsf3+0x162>
     c72:	16 95       	lsr	r17
     c74:	07 95       	ror	r16
     c76:	f7 94       	ror	r15
     c78:	e7 94       	ror	r14
     c7a:	80 e0       	ldi	r24, 0x00	; 0
     c7c:	90 e0       	ldi	r25, 0x00	; 0
     c7e:	a0 e0       	ldi	r26, 0x00	; 0
     c80:	b0 e8       	ldi	r27, 0x80	; 128
     c82:	e8 2a       	or	r14, r24
     c84:	f9 2a       	or	r15, r25
     c86:	0a 2b       	or	r16, r26
     c88:	1b 2b       	or	r17, r27
     c8a:	76 95       	lsr	r23
     c8c:	67 95       	ror	r22
     c8e:	57 95       	ror	r21
     c90:	47 95       	ror	r20
     c92:	2f 5f       	subi	r18, 0xFF	; 255
     c94:	3f 4f       	sbci	r19, 0xFF	; 255
     c96:	77 fd       	sbrc	r23, 7
     c98:	e7 cf       	rjmp	.-50     	; 0xc68 <__mulsf3+0x140>
     c9a:	0c c0       	rjmp	.+24     	; 0xcb4 <__mulsf3+0x18c>
     c9c:	44 0f       	add	r20, r20
     c9e:	55 1f       	adc	r21, r21
     ca0:	66 1f       	adc	r22, r22
     ca2:	77 1f       	adc	r23, r23
     ca4:	17 fd       	sbrc	r17, 7
     ca6:	41 60       	ori	r20, 0x01	; 1
     ca8:	ee 0c       	add	r14, r14
     caa:	ff 1c       	adc	r15, r15
     cac:	00 1f       	adc	r16, r16
     cae:	11 1f       	adc	r17, r17
     cb0:	21 50       	subi	r18, 0x01	; 1
     cb2:	30 40       	sbci	r19, 0x00	; 0
     cb4:	40 30       	cpi	r20, 0x00	; 0
     cb6:	90 e0       	ldi	r25, 0x00	; 0
     cb8:	59 07       	cpc	r21, r25
     cba:	90 e0       	ldi	r25, 0x00	; 0
     cbc:	69 07       	cpc	r22, r25
     cbe:	90 e4       	ldi	r25, 0x40	; 64
     cc0:	79 07       	cpc	r23, r25
     cc2:	60 f3       	brcs	.-40     	; 0xc9c <__mulsf3+0x174>
     cc4:	2b 8f       	std	Y+27, r18	; 0x1b
     cc6:	3c 8f       	std	Y+28, r19	; 0x1c
     cc8:	db 01       	movw	r26, r22
     cca:	ca 01       	movw	r24, r20
     ccc:	8f 77       	andi	r24, 0x7F	; 127
     cce:	90 70       	andi	r25, 0x00	; 0
     cd0:	a0 70       	andi	r26, 0x00	; 0
     cd2:	b0 70       	andi	r27, 0x00	; 0
     cd4:	80 34       	cpi	r24, 0x40	; 64
     cd6:	91 05       	cpc	r25, r1
     cd8:	a1 05       	cpc	r26, r1
     cda:	b1 05       	cpc	r27, r1
     cdc:	61 f4       	brne	.+24     	; 0xcf6 <__mulsf3+0x1ce>
     cde:	47 fd       	sbrc	r20, 7
     ce0:	0a c0       	rjmp	.+20     	; 0xcf6 <__mulsf3+0x1ce>
     ce2:	e1 14       	cp	r14, r1
     ce4:	f1 04       	cpc	r15, r1
     ce6:	01 05       	cpc	r16, r1
     ce8:	11 05       	cpc	r17, r1
     cea:	29 f0       	breq	.+10     	; 0xcf6 <__mulsf3+0x1ce>
     cec:	40 5c       	subi	r20, 0xC0	; 192
     cee:	5f 4f       	sbci	r21, 0xFF	; 255
     cf0:	6f 4f       	sbci	r22, 0xFF	; 255
     cf2:	7f 4f       	sbci	r23, 0xFF	; 255
     cf4:	40 78       	andi	r20, 0x80	; 128
     cf6:	1a 8e       	std	Y+26, r1	; 0x1a
     cf8:	fe 17       	cp	r31, r30
     cfa:	11 f0       	breq	.+4      	; 0xd00 <__mulsf3+0x1d8>
     cfc:	81 e0       	ldi	r24, 0x01	; 1
     cfe:	8a 8f       	std	Y+26, r24	; 0x1a
     d00:	4d 8f       	std	Y+29, r20	; 0x1d
     d02:	5e 8f       	std	Y+30, r21	; 0x1e
     d04:	6f 8f       	std	Y+31, r22	; 0x1f
     d06:	78 a3       	std	Y+32, r23	; 0x20
     d08:	83 e0       	ldi	r24, 0x03	; 3
     d0a:	89 8f       	std	Y+25, r24	; 0x19
     d0c:	ce 01       	movw	r24, r28
     d0e:	49 96       	adiw	r24, 0x19	; 25
     d10:	0e 94 cb 08 	call	0x1196	; 0x1196 <__pack_f>
     d14:	a0 96       	adiw	r28, 0x20	; 32
     d16:	e2 e1       	ldi	r30, 0x12	; 18
     d18:	0c 94 8d 0a 	jmp	0x151a	; 0x151a <__epilogue_restores__>

00000d1c <__divsf3>:
     d1c:	a8 e1       	ldi	r26, 0x18	; 24
     d1e:	b0 e0       	ldi	r27, 0x00	; 0
     d20:	e4 e9       	ldi	r30, 0x94	; 148
     d22:	f6 e0       	ldi	r31, 0x06	; 6
     d24:	0c 94 79 0a 	jmp	0x14f2	; 0x14f2 <__prologue_saves__+0x10>
     d28:	69 83       	std	Y+1, r22	; 0x01
     d2a:	7a 83       	std	Y+2, r23	; 0x02
     d2c:	8b 83       	std	Y+3, r24	; 0x03
     d2e:	9c 83       	std	Y+4, r25	; 0x04
     d30:	2d 83       	std	Y+5, r18	; 0x05
     d32:	3e 83       	std	Y+6, r19	; 0x06
     d34:	4f 83       	std	Y+7, r20	; 0x07
     d36:	58 87       	std	Y+8, r21	; 0x08
     d38:	b9 e0       	ldi	r27, 0x09	; 9
     d3a:	eb 2e       	mov	r14, r27
     d3c:	f1 2c       	mov	r15, r1
     d3e:	ec 0e       	add	r14, r28
     d40:	fd 1e       	adc	r15, r29
     d42:	ce 01       	movw	r24, r28
     d44:	01 96       	adiw	r24, 0x01	; 1
     d46:	b7 01       	movw	r22, r14
     d48:	0e 94 a0 09 	call	0x1340	; 0x1340 <__unpack_f>
     d4c:	8e 01       	movw	r16, r28
     d4e:	0f 5e       	subi	r16, 0xEF	; 239
     d50:	1f 4f       	sbci	r17, 0xFF	; 255
     d52:	ce 01       	movw	r24, r28
     d54:	05 96       	adiw	r24, 0x05	; 5
     d56:	b8 01       	movw	r22, r16
     d58:	0e 94 a0 09 	call	0x1340	; 0x1340 <__unpack_f>
     d5c:	29 85       	ldd	r18, Y+9	; 0x09
     d5e:	22 30       	cpi	r18, 0x02	; 2
     d60:	08 f4       	brcc	.+2      	; 0xd64 <__divsf3+0x48>
     d62:	7e c0       	rjmp	.+252    	; 0xe60 <__divsf3+0x144>
     d64:	39 89       	ldd	r19, Y+17	; 0x11
     d66:	32 30       	cpi	r19, 0x02	; 2
     d68:	10 f4       	brcc	.+4      	; 0xd6e <__divsf3+0x52>
     d6a:	b8 01       	movw	r22, r16
     d6c:	7c c0       	rjmp	.+248    	; 0xe66 <__divsf3+0x14a>
     d6e:	8a 85       	ldd	r24, Y+10	; 0x0a
     d70:	9a 89       	ldd	r25, Y+18	; 0x12
     d72:	89 27       	eor	r24, r25
     d74:	8a 87       	std	Y+10, r24	; 0x0a
     d76:	24 30       	cpi	r18, 0x04	; 4
     d78:	11 f0       	breq	.+4      	; 0xd7e <__divsf3+0x62>
     d7a:	22 30       	cpi	r18, 0x02	; 2
     d7c:	31 f4       	brne	.+12     	; 0xd8a <__divsf3+0x6e>
     d7e:	23 17       	cp	r18, r19
     d80:	09 f0       	breq	.+2      	; 0xd84 <__divsf3+0x68>
     d82:	6e c0       	rjmp	.+220    	; 0xe60 <__divsf3+0x144>
     d84:	60 e0       	ldi	r22, 0x00	; 0
     d86:	71 e0       	ldi	r23, 0x01	; 1
     d88:	6e c0       	rjmp	.+220    	; 0xe66 <__divsf3+0x14a>
     d8a:	34 30       	cpi	r19, 0x04	; 4
     d8c:	39 f4       	brne	.+14     	; 0xd9c <__divsf3+0x80>
     d8e:	1d 86       	std	Y+13, r1	; 0x0d
     d90:	1e 86       	std	Y+14, r1	; 0x0e
     d92:	1f 86       	std	Y+15, r1	; 0x0f
     d94:	18 8a       	std	Y+16, r1	; 0x10
     d96:	1c 86       	std	Y+12, r1	; 0x0c
     d98:	1b 86       	std	Y+11, r1	; 0x0b
     d9a:	04 c0       	rjmp	.+8      	; 0xda4 <__divsf3+0x88>
     d9c:	32 30       	cpi	r19, 0x02	; 2
     d9e:	21 f4       	brne	.+8      	; 0xda8 <__divsf3+0x8c>
     da0:	84 e0       	ldi	r24, 0x04	; 4
     da2:	89 87       	std	Y+9, r24	; 0x09
     da4:	b7 01       	movw	r22, r14
     da6:	5f c0       	rjmp	.+190    	; 0xe66 <__divsf3+0x14a>
     da8:	2b 85       	ldd	r18, Y+11	; 0x0b
     daa:	3c 85       	ldd	r19, Y+12	; 0x0c
     dac:	8b 89       	ldd	r24, Y+19	; 0x13
     dae:	9c 89       	ldd	r25, Y+20	; 0x14
     db0:	28 1b       	sub	r18, r24
     db2:	39 0b       	sbc	r19, r25
     db4:	3c 87       	std	Y+12, r19	; 0x0c
     db6:	2b 87       	std	Y+11, r18	; 0x0b
     db8:	ed 84       	ldd	r14, Y+13	; 0x0d
     dba:	fe 84       	ldd	r15, Y+14	; 0x0e
     dbc:	0f 85       	ldd	r16, Y+15	; 0x0f
     dbe:	18 89       	ldd	r17, Y+16	; 0x10
     dc0:	ad 88       	ldd	r10, Y+21	; 0x15
     dc2:	be 88       	ldd	r11, Y+22	; 0x16
     dc4:	cf 88       	ldd	r12, Y+23	; 0x17
     dc6:	d8 8c       	ldd	r13, Y+24	; 0x18
     dc8:	ea 14       	cp	r14, r10
     dca:	fb 04       	cpc	r15, r11
     dcc:	0c 05       	cpc	r16, r12
     dce:	1d 05       	cpc	r17, r13
     dd0:	40 f4       	brcc	.+16     	; 0xde2 <__divsf3+0xc6>
     dd2:	ee 0c       	add	r14, r14
     dd4:	ff 1c       	adc	r15, r15
     dd6:	00 1f       	adc	r16, r16
     dd8:	11 1f       	adc	r17, r17
     dda:	21 50       	subi	r18, 0x01	; 1
     ddc:	30 40       	sbci	r19, 0x00	; 0
     dde:	3c 87       	std	Y+12, r19	; 0x0c
     de0:	2b 87       	std	Y+11, r18	; 0x0b
     de2:	20 e0       	ldi	r18, 0x00	; 0
     de4:	30 e0       	ldi	r19, 0x00	; 0
     de6:	40 e0       	ldi	r20, 0x00	; 0
     de8:	50 e0       	ldi	r21, 0x00	; 0
     dea:	80 e0       	ldi	r24, 0x00	; 0
     dec:	90 e0       	ldi	r25, 0x00	; 0
     dee:	a0 e0       	ldi	r26, 0x00	; 0
     df0:	b0 e4       	ldi	r27, 0x40	; 64
     df2:	60 e0       	ldi	r22, 0x00	; 0
     df4:	70 e0       	ldi	r23, 0x00	; 0
     df6:	ea 14       	cp	r14, r10
     df8:	fb 04       	cpc	r15, r11
     dfa:	0c 05       	cpc	r16, r12
     dfc:	1d 05       	cpc	r17, r13
     dfe:	40 f0       	brcs	.+16     	; 0xe10 <__divsf3+0xf4>
     e00:	28 2b       	or	r18, r24
     e02:	39 2b       	or	r19, r25
     e04:	4a 2b       	or	r20, r26
     e06:	5b 2b       	or	r21, r27
     e08:	ea 18       	sub	r14, r10
     e0a:	fb 08       	sbc	r15, r11
     e0c:	0c 09       	sbc	r16, r12
     e0e:	1d 09       	sbc	r17, r13
     e10:	b6 95       	lsr	r27
     e12:	a7 95       	ror	r26
     e14:	97 95       	ror	r25
     e16:	87 95       	ror	r24
     e18:	ee 0c       	add	r14, r14
     e1a:	ff 1c       	adc	r15, r15
     e1c:	00 1f       	adc	r16, r16
     e1e:	11 1f       	adc	r17, r17
     e20:	6f 5f       	subi	r22, 0xFF	; 255
     e22:	7f 4f       	sbci	r23, 0xFF	; 255
     e24:	6f 31       	cpi	r22, 0x1F	; 31
     e26:	71 05       	cpc	r23, r1
     e28:	31 f7       	brne	.-52     	; 0xdf6 <__divsf3+0xda>
     e2a:	da 01       	movw	r26, r20
     e2c:	c9 01       	movw	r24, r18
     e2e:	8f 77       	andi	r24, 0x7F	; 127
     e30:	90 70       	andi	r25, 0x00	; 0
     e32:	a0 70       	andi	r26, 0x00	; 0
     e34:	b0 70       	andi	r27, 0x00	; 0
     e36:	80 34       	cpi	r24, 0x40	; 64
     e38:	91 05       	cpc	r25, r1
     e3a:	a1 05       	cpc	r26, r1
     e3c:	b1 05       	cpc	r27, r1
     e3e:	61 f4       	brne	.+24     	; 0xe58 <__divsf3+0x13c>
     e40:	27 fd       	sbrc	r18, 7
     e42:	0a c0       	rjmp	.+20     	; 0xe58 <__divsf3+0x13c>
     e44:	e1 14       	cp	r14, r1
     e46:	f1 04       	cpc	r15, r1
     e48:	01 05       	cpc	r16, r1
     e4a:	11 05       	cpc	r17, r1
     e4c:	29 f0       	breq	.+10     	; 0xe58 <__divsf3+0x13c>
     e4e:	20 5c       	subi	r18, 0xC0	; 192
     e50:	3f 4f       	sbci	r19, 0xFF	; 255
     e52:	4f 4f       	sbci	r20, 0xFF	; 255
     e54:	5f 4f       	sbci	r21, 0xFF	; 255
     e56:	20 78       	andi	r18, 0x80	; 128
     e58:	2d 87       	std	Y+13, r18	; 0x0d
     e5a:	3e 87       	std	Y+14, r19	; 0x0e
     e5c:	4f 87       	std	Y+15, r20	; 0x0f
     e5e:	58 8b       	std	Y+16, r21	; 0x10
     e60:	be 01       	movw	r22, r28
     e62:	67 5f       	subi	r22, 0xF7	; 247
     e64:	7f 4f       	sbci	r23, 0xFF	; 255
     e66:	cb 01       	movw	r24, r22
     e68:	0e 94 cb 08 	call	0x1196	; 0x1196 <__pack_f>
     e6c:	68 96       	adiw	r28, 0x18	; 24
     e6e:	ea e0       	ldi	r30, 0x0A	; 10
     e70:	0c 94 95 0a 	jmp	0x152a	; 0x152a <__epilogue_restores__+0x10>

00000e74 <__gtsf2>:
     e74:	a8 e1       	ldi	r26, 0x18	; 24
     e76:	b0 e0       	ldi	r27, 0x00	; 0
     e78:	e0 e4       	ldi	r30, 0x40	; 64
     e7a:	f7 e0       	ldi	r31, 0x07	; 7
     e7c:	0c 94 7d 0a 	jmp	0x14fa	; 0x14fa <__prologue_saves__+0x18>
     e80:	69 83       	std	Y+1, r22	; 0x01
     e82:	7a 83       	std	Y+2, r23	; 0x02
     e84:	8b 83       	std	Y+3, r24	; 0x03
     e86:	9c 83       	std	Y+4, r25	; 0x04
     e88:	2d 83       	std	Y+5, r18	; 0x05
     e8a:	3e 83       	std	Y+6, r19	; 0x06
     e8c:	4f 83       	std	Y+7, r20	; 0x07
     e8e:	58 87       	std	Y+8, r21	; 0x08
     e90:	89 e0       	ldi	r24, 0x09	; 9
     e92:	e8 2e       	mov	r14, r24
     e94:	f1 2c       	mov	r15, r1
     e96:	ec 0e       	add	r14, r28
     e98:	fd 1e       	adc	r15, r29
     e9a:	ce 01       	movw	r24, r28
     e9c:	01 96       	adiw	r24, 0x01	; 1
     e9e:	b7 01       	movw	r22, r14
     ea0:	0e 94 a0 09 	call	0x1340	; 0x1340 <__unpack_f>
     ea4:	8e 01       	movw	r16, r28
     ea6:	0f 5e       	subi	r16, 0xEF	; 239
     ea8:	1f 4f       	sbci	r17, 0xFF	; 255
     eaa:	ce 01       	movw	r24, r28
     eac:	05 96       	adiw	r24, 0x05	; 5
     eae:	b8 01       	movw	r22, r16
     eb0:	0e 94 a0 09 	call	0x1340	; 0x1340 <__unpack_f>
     eb4:	89 85       	ldd	r24, Y+9	; 0x09
     eb6:	82 30       	cpi	r24, 0x02	; 2
     eb8:	40 f0       	brcs	.+16     	; 0xeca <__gtsf2+0x56>
     eba:	89 89       	ldd	r24, Y+17	; 0x11
     ebc:	82 30       	cpi	r24, 0x02	; 2
     ebe:	28 f0       	brcs	.+10     	; 0xeca <__gtsf2+0x56>
     ec0:	c7 01       	movw	r24, r14
     ec2:	b8 01       	movw	r22, r16
     ec4:	0e 94 18 0a 	call	0x1430	; 0x1430 <__fpcmp_parts_f>
     ec8:	01 c0       	rjmp	.+2      	; 0xecc <__gtsf2+0x58>
     eca:	8f ef       	ldi	r24, 0xFF	; 255
     ecc:	68 96       	adiw	r28, 0x18	; 24
     ece:	e6 e0       	ldi	r30, 0x06	; 6
     ed0:	0c 94 99 0a 	jmp	0x1532	; 0x1532 <__epilogue_restores__+0x18>

00000ed4 <__gesf2>:
     ed4:	a8 e1       	ldi	r26, 0x18	; 24
     ed6:	b0 e0       	ldi	r27, 0x00	; 0
     ed8:	e0 e7       	ldi	r30, 0x70	; 112
     eda:	f7 e0       	ldi	r31, 0x07	; 7
     edc:	0c 94 7d 0a 	jmp	0x14fa	; 0x14fa <__prologue_saves__+0x18>
     ee0:	69 83       	std	Y+1, r22	; 0x01
     ee2:	7a 83       	std	Y+2, r23	; 0x02
     ee4:	8b 83       	std	Y+3, r24	; 0x03
     ee6:	9c 83       	std	Y+4, r25	; 0x04
     ee8:	2d 83       	std	Y+5, r18	; 0x05
     eea:	3e 83       	std	Y+6, r19	; 0x06
     eec:	4f 83       	std	Y+7, r20	; 0x07
     eee:	58 87       	std	Y+8, r21	; 0x08
     ef0:	89 e0       	ldi	r24, 0x09	; 9
     ef2:	e8 2e       	mov	r14, r24
     ef4:	f1 2c       	mov	r15, r1
     ef6:	ec 0e       	add	r14, r28
     ef8:	fd 1e       	adc	r15, r29
     efa:	ce 01       	movw	r24, r28
     efc:	01 96       	adiw	r24, 0x01	; 1
     efe:	b7 01       	movw	r22, r14
     f00:	0e 94 a0 09 	call	0x1340	; 0x1340 <__unpack_f>
     f04:	8e 01       	movw	r16, r28
     f06:	0f 5e       	subi	r16, 0xEF	; 239
     f08:	1f 4f       	sbci	r17, 0xFF	; 255
     f0a:	ce 01       	movw	r24, r28
     f0c:	05 96       	adiw	r24, 0x05	; 5
     f0e:	b8 01       	movw	r22, r16
     f10:	0e 94 a0 09 	call	0x1340	; 0x1340 <__unpack_f>
     f14:	89 85       	ldd	r24, Y+9	; 0x09
     f16:	82 30       	cpi	r24, 0x02	; 2
     f18:	40 f0       	brcs	.+16     	; 0xf2a <__gesf2+0x56>
     f1a:	89 89       	ldd	r24, Y+17	; 0x11
     f1c:	82 30       	cpi	r24, 0x02	; 2
     f1e:	28 f0       	brcs	.+10     	; 0xf2a <__gesf2+0x56>
     f20:	c7 01       	movw	r24, r14
     f22:	b8 01       	movw	r22, r16
     f24:	0e 94 18 0a 	call	0x1430	; 0x1430 <__fpcmp_parts_f>
     f28:	01 c0       	rjmp	.+2      	; 0xf2c <__gesf2+0x58>
     f2a:	8f ef       	ldi	r24, 0xFF	; 255
     f2c:	68 96       	adiw	r28, 0x18	; 24
     f2e:	e6 e0       	ldi	r30, 0x06	; 6
     f30:	0c 94 99 0a 	jmp	0x1532	; 0x1532 <__epilogue_restores__+0x18>

00000f34 <__ltsf2>:
     f34:	a8 e1       	ldi	r26, 0x18	; 24
     f36:	b0 e0       	ldi	r27, 0x00	; 0
     f38:	e0 ea       	ldi	r30, 0xA0	; 160
     f3a:	f7 e0       	ldi	r31, 0x07	; 7
     f3c:	0c 94 7d 0a 	jmp	0x14fa	; 0x14fa <__prologue_saves__+0x18>
     f40:	69 83       	std	Y+1, r22	; 0x01
     f42:	7a 83       	std	Y+2, r23	; 0x02
     f44:	8b 83       	std	Y+3, r24	; 0x03
     f46:	9c 83       	std	Y+4, r25	; 0x04
     f48:	2d 83       	std	Y+5, r18	; 0x05
     f4a:	3e 83       	std	Y+6, r19	; 0x06
     f4c:	4f 83       	std	Y+7, r20	; 0x07
     f4e:	58 87       	std	Y+8, r21	; 0x08
     f50:	89 e0       	ldi	r24, 0x09	; 9
     f52:	e8 2e       	mov	r14, r24
     f54:	f1 2c       	mov	r15, r1
     f56:	ec 0e       	add	r14, r28
     f58:	fd 1e       	adc	r15, r29
     f5a:	ce 01       	movw	r24, r28
     f5c:	01 96       	adiw	r24, 0x01	; 1
     f5e:	b7 01       	movw	r22, r14
     f60:	0e 94 a0 09 	call	0x1340	; 0x1340 <__unpack_f>
     f64:	8e 01       	movw	r16, r28
     f66:	0f 5e       	subi	r16, 0xEF	; 239
     f68:	1f 4f       	sbci	r17, 0xFF	; 255
     f6a:	ce 01       	movw	r24, r28
     f6c:	05 96       	adiw	r24, 0x05	; 5
     f6e:	b8 01       	movw	r22, r16
     f70:	0e 94 a0 09 	call	0x1340	; 0x1340 <__unpack_f>
     f74:	89 85       	ldd	r24, Y+9	; 0x09
     f76:	82 30       	cpi	r24, 0x02	; 2
     f78:	40 f0       	brcs	.+16     	; 0xf8a <__ltsf2+0x56>
     f7a:	89 89       	ldd	r24, Y+17	; 0x11
     f7c:	82 30       	cpi	r24, 0x02	; 2
     f7e:	28 f0       	brcs	.+10     	; 0xf8a <__ltsf2+0x56>
     f80:	c7 01       	movw	r24, r14
     f82:	b8 01       	movw	r22, r16
     f84:	0e 94 18 0a 	call	0x1430	; 0x1430 <__fpcmp_parts_f>
     f88:	01 c0       	rjmp	.+2      	; 0xf8c <__ltsf2+0x58>
     f8a:	81 e0       	ldi	r24, 0x01	; 1
     f8c:	68 96       	adiw	r28, 0x18	; 24
     f8e:	e6 e0       	ldi	r30, 0x06	; 6
     f90:	0c 94 99 0a 	jmp	0x1532	; 0x1532 <__epilogue_restores__+0x18>

00000f94 <__floatsisf>:
     f94:	a8 e0       	ldi	r26, 0x08	; 8
     f96:	b0 e0       	ldi	r27, 0x00	; 0
     f98:	e0 ed       	ldi	r30, 0xD0	; 208
     f9a:	f7 e0       	ldi	r31, 0x07	; 7
     f9c:	0c 94 7a 0a 	jmp	0x14f4	; 0x14f4 <__prologue_saves__+0x12>
     fa0:	9b 01       	movw	r18, r22
     fa2:	ac 01       	movw	r20, r24
     fa4:	83 e0       	ldi	r24, 0x03	; 3
     fa6:	89 83       	std	Y+1, r24	; 0x01
     fa8:	da 01       	movw	r26, r20
     faa:	c9 01       	movw	r24, r18
     fac:	88 27       	eor	r24, r24
     fae:	b7 fd       	sbrc	r27, 7
     fb0:	83 95       	inc	r24
     fb2:	99 27       	eor	r25, r25
     fb4:	aa 27       	eor	r26, r26
     fb6:	bb 27       	eor	r27, r27
     fb8:	b8 2e       	mov	r11, r24
     fba:	21 15       	cp	r18, r1
     fbc:	31 05       	cpc	r19, r1
     fbe:	41 05       	cpc	r20, r1
     fc0:	51 05       	cpc	r21, r1
     fc2:	19 f4       	brne	.+6      	; 0xfca <__floatsisf+0x36>
     fc4:	82 e0       	ldi	r24, 0x02	; 2
     fc6:	89 83       	std	Y+1, r24	; 0x01
     fc8:	3a c0       	rjmp	.+116    	; 0x103e <__floatsisf+0xaa>
     fca:	88 23       	and	r24, r24
     fcc:	a9 f0       	breq	.+42     	; 0xff8 <__floatsisf+0x64>
     fce:	20 30       	cpi	r18, 0x00	; 0
     fd0:	80 e0       	ldi	r24, 0x00	; 0
     fd2:	38 07       	cpc	r19, r24
     fd4:	80 e0       	ldi	r24, 0x00	; 0
     fd6:	48 07       	cpc	r20, r24
     fd8:	80 e8       	ldi	r24, 0x80	; 128
     fda:	58 07       	cpc	r21, r24
     fdc:	29 f4       	brne	.+10     	; 0xfe8 <__floatsisf+0x54>
     fde:	60 e0       	ldi	r22, 0x00	; 0
     fe0:	70 e0       	ldi	r23, 0x00	; 0
     fe2:	80 e0       	ldi	r24, 0x00	; 0
     fe4:	9f ec       	ldi	r25, 0xCF	; 207
     fe6:	30 c0       	rjmp	.+96     	; 0x1048 <__floatsisf+0xb4>
     fe8:	ee 24       	eor	r14, r14
     fea:	ff 24       	eor	r15, r15
     fec:	87 01       	movw	r16, r14
     fee:	e2 1a       	sub	r14, r18
     ff0:	f3 0a       	sbc	r15, r19
     ff2:	04 0b       	sbc	r16, r20
     ff4:	15 0b       	sbc	r17, r21
     ff6:	02 c0       	rjmp	.+4      	; 0xffc <__floatsisf+0x68>
     ff8:	79 01       	movw	r14, r18
     ffa:	8a 01       	movw	r16, r20
     ffc:	8e e1       	ldi	r24, 0x1E	; 30
     ffe:	c8 2e       	mov	r12, r24
    1000:	d1 2c       	mov	r13, r1
    1002:	dc 82       	std	Y+4, r13	; 0x04
    1004:	cb 82       	std	Y+3, r12	; 0x03
    1006:	ed 82       	std	Y+5, r14	; 0x05
    1008:	fe 82       	std	Y+6, r15	; 0x06
    100a:	0f 83       	std	Y+7, r16	; 0x07
    100c:	18 87       	std	Y+8, r17	; 0x08
    100e:	c8 01       	movw	r24, r16
    1010:	b7 01       	movw	r22, r14
    1012:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <__clzsi2>
    1016:	01 97       	sbiw	r24, 0x01	; 1
    1018:	18 16       	cp	r1, r24
    101a:	19 06       	cpc	r1, r25
    101c:	84 f4       	brge	.+32     	; 0x103e <__floatsisf+0xaa>
    101e:	08 2e       	mov	r0, r24
    1020:	04 c0       	rjmp	.+8      	; 0x102a <__floatsisf+0x96>
    1022:	ee 0c       	add	r14, r14
    1024:	ff 1c       	adc	r15, r15
    1026:	00 1f       	adc	r16, r16
    1028:	11 1f       	adc	r17, r17
    102a:	0a 94       	dec	r0
    102c:	d2 f7       	brpl	.-12     	; 0x1022 <__floatsisf+0x8e>
    102e:	ed 82       	std	Y+5, r14	; 0x05
    1030:	fe 82       	std	Y+6, r15	; 0x06
    1032:	0f 83       	std	Y+7, r16	; 0x07
    1034:	18 87       	std	Y+8, r17	; 0x08
    1036:	c8 1a       	sub	r12, r24
    1038:	d9 0a       	sbc	r13, r25
    103a:	dc 82       	std	Y+4, r13	; 0x04
    103c:	cb 82       	std	Y+3, r12	; 0x03
    103e:	ba 82       	std	Y+2, r11	; 0x02
    1040:	ce 01       	movw	r24, r28
    1042:	01 96       	adiw	r24, 0x01	; 1
    1044:	0e 94 cb 08 	call	0x1196	; 0x1196 <__pack_f>
    1048:	28 96       	adiw	r28, 0x08	; 8
    104a:	e9 e0       	ldi	r30, 0x09	; 9
    104c:	0c 94 96 0a 	jmp	0x152c	; 0x152c <__epilogue_restores__+0x12>

00001050 <__fixsfsi>:
    1050:	ac e0       	ldi	r26, 0x0C	; 12
    1052:	b0 e0       	ldi	r27, 0x00	; 0
    1054:	ee e2       	ldi	r30, 0x2E	; 46
    1056:	f8 e0       	ldi	r31, 0x08	; 8
    1058:	0c 94 81 0a 	jmp	0x1502	; 0x1502 <__prologue_saves__+0x20>
    105c:	69 83       	std	Y+1, r22	; 0x01
    105e:	7a 83       	std	Y+2, r23	; 0x02
    1060:	8b 83       	std	Y+3, r24	; 0x03
    1062:	9c 83       	std	Y+4, r25	; 0x04
    1064:	ce 01       	movw	r24, r28
    1066:	01 96       	adiw	r24, 0x01	; 1
    1068:	be 01       	movw	r22, r28
    106a:	6b 5f       	subi	r22, 0xFB	; 251
    106c:	7f 4f       	sbci	r23, 0xFF	; 255
    106e:	0e 94 a0 09 	call	0x1340	; 0x1340 <__unpack_f>
    1072:	8d 81       	ldd	r24, Y+5	; 0x05
    1074:	82 30       	cpi	r24, 0x02	; 2
    1076:	61 f1       	breq	.+88     	; 0x10d0 <__fixsfsi+0x80>
    1078:	82 30       	cpi	r24, 0x02	; 2
    107a:	50 f1       	brcs	.+84     	; 0x10d0 <__fixsfsi+0x80>
    107c:	84 30       	cpi	r24, 0x04	; 4
    107e:	21 f4       	brne	.+8      	; 0x1088 <__fixsfsi+0x38>
    1080:	8e 81       	ldd	r24, Y+6	; 0x06
    1082:	88 23       	and	r24, r24
    1084:	51 f1       	breq	.+84     	; 0x10da <__fixsfsi+0x8a>
    1086:	2e c0       	rjmp	.+92     	; 0x10e4 <__fixsfsi+0x94>
    1088:	2f 81       	ldd	r18, Y+7	; 0x07
    108a:	38 85       	ldd	r19, Y+8	; 0x08
    108c:	37 fd       	sbrc	r19, 7
    108e:	20 c0       	rjmp	.+64     	; 0x10d0 <__fixsfsi+0x80>
    1090:	6e 81       	ldd	r22, Y+6	; 0x06
    1092:	2f 31       	cpi	r18, 0x1F	; 31
    1094:	31 05       	cpc	r19, r1
    1096:	1c f0       	brlt	.+6      	; 0x109e <__fixsfsi+0x4e>
    1098:	66 23       	and	r22, r22
    109a:	f9 f0       	breq	.+62     	; 0x10da <__fixsfsi+0x8a>
    109c:	23 c0       	rjmp	.+70     	; 0x10e4 <__fixsfsi+0x94>
    109e:	8e e1       	ldi	r24, 0x1E	; 30
    10a0:	90 e0       	ldi	r25, 0x00	; 0
    10a2:	82 1b       	sub	r24, r18
    10a4:	93 0b       	sbc	r25, r19
    10a6:	29 85       	ldd	r18, Y+9	; 0x09
    10a8:	3a 85       	ldd	r19, Y+10	; 0x0a
    10aa:	4b 85       	ldd	r20, Y+11	; 0x0b
    10ac:	5c 85       	ldd	r21, Y+12	; 0x0c
    10ae:	04 c0       	rjmp	.+8      	; 0x10b8 <__fixsfsi+0x68>
    10b0:	56 95       	lsr	r21
    10b2:	47 95       	ror	r20
    10b4:	37 95       	ror	r19
    10b6:	27 95       	ror	r18
    10b8:	8a 95       	dec	r24
    10ba:	d2 f7       	brpl	.-12     	; 0x10b0 <__fixsfsi+0x60>
    10bc:	66 23       	and	r22, r22
    10be:	b1 f0       	breq	.+44     	; 0x10ec <__fixsfsi+0x9c>
    10c0:	50 95       	com	r21
    10c2:	40 95       	com	r20
    10c4:	30 95       	com	r19
    10c6:	21 95       	neg	r18
    10c8:	3f 4f       	sbci	r19, 0xFF	; 255
    10ca:	4f 4f       	sbci	r20, 0xFF	; 255
    10cc:	5f 4f       	sbci	r21, 0xFF	; 255
    10ce:	0e c0       	rjmp	.+28     	; 0x10ec <__fixsfsi+0x9c>
    10d0:	20 e0       	ldi	r18, 0x00	; 0
    10d2:	30 e0       	ldi	r19, 0x00	; 0
    10d4:	40 e0       	ldi	r20, 0x00	; 0
    10d6:	50 e0       	ldi	r21, 0x00	; 0
    10d8:	09 c0       	rjmp	.+18     	; 0x10ec <__fixsfsi+0x9c>
    10da:	2f ef       	ldi	r18, 0xFF	; 255
    10dc:	3f ef       	ldi	r19, 0xFF	; 255
    10de:	4f ef       	ldi	r20, 0xFF	; 255
    10e0:	5f e7       	ldi	r21, 0x7F	; 127
    10e2:	04 c0       	rjmp	.+8      	; 0x10ec <__fixsfsi+0x9c>
    10e4:	20 e0       	ldi	r18, 0x00	; 0
    10e6:	30 e0       	ldi	r19, 0x00	; 0
    10e8:	40 e0       	ldi	r20, 0x00	; 0
    10ea:	50 e8       	ldi	r21, 0x80	; 128
    10ec:	b9 01       	movw	r22, r18
    10ee:	ca 01       	movw	r24, r20
    10f0:	2c 96       	adiw	r28, 0x0c	; 12
    10f2:	e2 e0       	ldi	r30, 0x02	; 2
    10f4:	0c 94 9d 0a 	jmp	0x153a	; 0x153a <__epilogue_restores__+0x20>

000010f8 <__clzsi2>:
    10f8:	ef 92       	push	r14
    10fa:	ff 92       	push	r15
    10fc:	0f 93       	push	r16
    10fe:	1f 93       	push	r17
    1100:	7b 01       	movw	r14, r22
    1102:	8c 01       	movw	r16, r24
    1104:	80 e0       	ldi	r24, 0x00	; 0
    1106:	e8 16       	cp	r14, r24
    1108:	80 e0       	ldi	r24, 0x00	; 0
    110a:	f8 06       	cpc	r15, r24
    110c:	81 e0       	ldi	r24, 0x01	; 1
    110e:	08 07       	cpc	r16, r24
    1110:	80 e0       	ldi	r24, 0x00	; 0
    1112:	18 07       	cpc	r17, r24
    1114:	88 f4       	brcc	.+34     	; 0x1138 <__clzsi2+0x40>
    1116:	8f ef       	ldi	r24, 0xFF	; 255
    1118:	e8 16       	cp	r14, r24
    111a:	f1 04       	cpc	r15, r1
    111c:	01 05       	cpc	r16, r1
    111e:	11 05       	cpc	r17, r1
    1120:	31 f0       	breq	.+12     	; 0x112e <__clzsi2+0x36>
    1122:	28 f0       	brcs	.+10     	; 0x112e <__clzsi2+0x36>
    1124:	88 e0       	ldi	r24, 0x08	; 8
    1126:	90 e0       	ldi	r25, 0x00	; 0
    1128:	a0 e0       	ldi	r26, 0x00	; 0
    112a:	b0 e0       	ldi	r27, 0x00	; 0
    112c:	17 c0       	rjmp	.+46     	; 0x115c <__clzsi2+0x64>
    112e:	80 e0       	ldi	r24, 0x00	; 0
    1130:	90 e0       	ldi	r25, 0x00	; 0
    1132:	a0 e0       	ldi	r26, 0x00	; 0
    1134:	b0 e0       	ldi	r27, 0x00	; 0
    1136:	12 c0       	rjmp	.+36     	; 0x115c <__clzsi2+0x64>
    1138:	80 e0       	ldi	r24, 0x00	; 0
    113a:	e8 16       	cp	r14, r24
    113c:	80 e0       	ldi	r24, 0x00	; 0
    113e:	f8 06       	cpc	r15, r24
    1140:	80 e0       	ldi	r24, 0x00	; 0
    1142:	08 07       	cpc	r16, r24
    1144:	81 e0       	ldi	r24, 0x01	; 1
    1146:	18 07       	cpc	r17, r24
    1148:	28 f0       	brcs	.+10     	; 0x1154 <__clzsi2+0x5c>
    114a:	88 e1       	ldi	r24, 0x18	; 24
    114c:	90 e0       	ldi	r25, 0x00	; 0
    114e:	a0 e0       	ldi	r26, 0x00	; 0
    1150:	b0 e0       	ldi	r27, 0x00	; 0
    1152:	04 c0       	rjmp	.+8      	; 0x115c <__clzsi2+0x64>
    1154:	80 e1       	ldi	r24, 0x10	; 16
    1156:	90 e0       	ldi	r25, 0x00	; 0
    1158:	a0 e0       	ldi	r26, 0x00	; 0
    115a:	b0 e0       	ldi	r27, 0x00	; 0
    115c:	20 e2       	ldi	r18, 0x20	; 32
    115e:	30 e0       	ldi	r19, 0x00	; 0
    1160:	40 e0       	ldi	r20, 0x00	; 0
    1162:	50 e0       	ldi	r21, 0x00	; 0
    1164:	28 1b       	sub	r18, r24
    1166:	39 0b       	sbc	r19, r25
    1168:	4a 0b       	sbc	r20, r26
    116a:	5b 0b       	sbc	r21, r27
    116c:	04 c0       	rjmp	.+8      	; 0x1176 <__clzsi2+0x7e>
    116e:	16 95       	lsr	r17
    1170:	07 95       	ror	r16
    1172:	f7 94       	ror	r15
    1174:	e7 94       	ror	r14
    1176:	8a 95       	dec	r24
    1178:	d2 f7       	brpl	.-12     	; 0x116e <__clzsi2+0x76>
    117a:	f7 01       	movw	r30, r14
    117c:	e8 5f       	subi	r30, 0xF8	; 248
    117e:	fe 4f       	sbci	r31, 0xFE	; 254
    1180:	80 81       	ld	r24, Z
    1182:	28 1b       	sub	r18, r24
    1184:	31 09       	sbc	r19, r1
    1186:	41 09       	sbc	r20, r1
    1188:	51 09       	sbc	r21, r1
    118a:	c9 01       	movw	r24, r18
    118c:	1f 91       	pop	r17
    118e:	0f 91       	pop	r16
    1190:	ff 90       	pop	r15
    1192:	ef 90       	pop	r14
    1194:	08 95       	ret

00001196 <__pack_f>:
    1196:	df 92       	push	r13
    1198:	ef 92       	push	r14
    119a:	ff 92       	push	r15
    119c:	0f 93       	push	r16
    119e:	1f 93       	push	r17
    11a0:	fc 01       	movw	r30, r24
    11a2:	e4 80       	ldd	r14, Z+4	; 0x04
    11a4:	f5 80       	ldd	r15, Z+5	; 0x05
    11a6:	06 81       	ldd	r16, Z+6	; 0x06
    11a8:	17 81       	ldd	r17, Z+7	; 0x07
    11aa:	d1 80       	ldd	r13, Z+1	; 0x01
    11ac:	80 81       	ld	r24, Z
    11ae:	82 30       	cpi	r24, 0x02	; 2
    11b0:	48 f4       	brcc	.+18     	; 0x11c4 <__pack_f+0x2e>
    11b2:	80 e0       	ldi	r24, 0x00	; 0
    11b4:	90 e0       	ldi	r25, 0x00	; 0
    11b6:	a0 e1       	ldi	r26, 0x10	; 16
    11b8:	b0 e0       	ldi	r27, 0x00	; 0
    11ba:	e8 2a       	or	r14, r24
    11bc:	f9 2a       	or	r15, r25
    11be:	0a 2b       	or	r16, r26
    11c0:	1b 2b       	or	r17, r27
    11c2:	a5 c0       	rjmp	.+330    	; 0x130e <__pack_f+0x178>
    11c4:	84 30       	cpi	r24, 0x04	; 4
    11c6:	09 f4       	brne	.+2      	; 0x11ca <__pack_f+0x34>
    11c8:	9f c0       	rjmp	.+318    	; 0x1308 <__pack_f+0x172>
    11ca:	82 30       	cpi	r24, 0x02	; 2
    11cc:	21 f4       	brne	.+8      	; 0x11d6 <__pack_f+0x40>
    11ce:	ee 24       	eor	r14, r14
    11d0:	ff 24       	eor	r15, r15
    11d2:	87 01       	movw	r16, r14
    11d4:	05 c0       	rjmp	.+10     	; 0x11e0 <__pack_f+0x4a>
    11d6:	e1 14       	cp	r14, r1
    11d8:	f1 04       	cpc	r15, r1
    11da:	01 05       	cpc	r16, r1
    11dc:	11 05       	cpc	r17, r1
    11de:	19 f4       	brne	.+6      	; 0x11e6 <__pack_f+0x50>
    11e0:	e0 e0       	ldi	r30, 0x00	; 0
    11e2:	f0 e0       	ldi	r31, 0x00	; 0
    11e4:	96 c0       	rjmp	.+300    	; 0x1312 <__pack_f+0x17c>
    11e6:	62 81       	ldd	r22, Z+2	; 0x02
    11e8:	73 81       	ldd	r23, Z+3	; 0x03
    11ea:	9f ef       	ldi	r25, 0xFF	; 255
    11ec:	62 38       	cpi	r22, 0x82	; 130
    11ee:	79 07       	cpc	r23, r25
    11f0:	0c f0       	brlt	.+2      	; 0x11f4 <__pack_f+0x5e>
    11f2:	5b c0       	rjmp	.+182    	; 0x12aa <__pack_f+0x114>
    11f4:	22 e8       	ldi	r18, 0x82	; 130
    11f6:	3f ef       	ldi	r19, 0xFF	; 255
    11f8:	26 1b       	sub	r18, r22
    11fa:	37 0b       	sbc	r19, r23
    11fc:	2a 31       	cpi	r18, 0x1A	; 26
    11fe:	31 05       	cpc	r19, r1
    1200:	2c f0       	brlt	.+10     	; 0x120c <__pack_f+0x76>
    1202:	20 e0       	ldi	r18, 0x00	; 0
    1204:	30 e0       	ldi	r19, 0x00	; 0
    1206:	40 e0       	ldi	r20, 0x00	; 0
    1208:	50 e0       	ldi	r21, 0x00	; 0
    120a:	2a c0       	rjmp	.+84     	; 0x1260 <__pack_f+0xca>
    120c:	b8 01       	movw	r22, r16
    120e:	a7 01       	movw	r20, r14
    1210:	02 2e       	mov	r0, r18
    1212:	04 c0       	rjmp	.+8      	; 0x121c <__pack_f+0x86>
    1214:	76 95       	lsr	r23
    1216:	67 95       	ror	r22
    1218:	57 95       	ror	r21
    121a:	47 95       	ror	r20
    121c:	0a 94       	dec	r0
    121e:	d2 f7       	brpl	.-12     	; 0x1214 <__pack_f+0x7e>
    1220:	81 e0       	ldi	r24, 0x01	; 1
    1222:	90 e0       	ldi	r25, 0x00	; 0
    1224:	a0 e0       	ldi	r26, 0x00	; 0
    1226:	b0 e0       	ldi	r27, 0x00	; 0
    1228:	04 c0       	rjmp	.+8      	; 0x1232 <__pack_f+0x9c>
    122a:	88 0f       	add	r24, r24
    122c:	99 1f       	adc	r25, r25
    122e:	aa 1f       	adc	r26, r26
    1230:	bb 1f       	adc	r27, r27
    1232:	2a 95       	dec	r18
    1234:	d2 f7       	brpl	.-12     	; 0x122a <__pack_f+0x94>
    1236:	01 97       	sbiw	r24, 0x01	; 1
    1238:	a1 09       	sbc	r26, r1
    123a:	b1 09       	sbc	r27, r1
    123c:	8e 21       	and	r24, r14
    123e:	9f 21       	and	r25, r15
    1240:	a0 23       	and	r26, r16
    1242:	b1 23       	and	r27, r17
    1244:	00 97       	sbiw	r24, 0x00	; 0
    1246:	a1 05       	cpc	r26, r1
    1248:	b1 05       	cpc	r27, r1
    124a:	21 f0       	breq	.+8      	; 0x1254 <__pack_f+0xbe>
    124c:	81 e0       	ldi	r24, 0x01	; 1
    124e:	90 e0       	ldi	r25, 0x00	; 0
    1250:	a0 e0       	ldi	r26, 0x00	; 0
    1252:	b0 e0       	ldi	r27, 0x00	; 0
    1254:	9a 01       	movw	r18, r20
    1256:	ab 01       	movw	r20, r22
    1258:	28 2b       	or	r18, r24
    125a:	39 2b       	or	r19, r25
    125c:	4a 2b       	or	r20, r26
    125e:	5b 2b       	or	r21, r27
    1260:	da 01       	movw	r26, r20
    1262:	c9 01       	movw	r24, r18
    1264:	8f 77       	andi	r24, 0x7F	; 127
    1266:	90 70       	andi	r25, 0x00	; 0
    1268:	a0 70       	andi	r26, 0x00	; 0
    126a:	b0 70       	andi	r27, 0x00	; 0
    126c:	80 34       	cpi	r24, 0x40	; 64
    126e:	91 05       	cpc	r25, r1
    1270:	a1 05       	cpc	r26, r1
    1272:	b1 05       	cpc	r27, r1
    1274:	39 f4       	brne	.+14     	; 0x1284 <__pack_f+0xee>
    1276:	27 ff       	sbrs	r18, 7
    1278:	09 c0       	rjmp	.+18     	; 0x128c <__pack_f+0xf6>
    127a:	20 5c       	subi	r18, 0xC0	; 192
    127c:	3f 4f       	sbci	r19, 0xFF	; 255
    127e:	4f 4f       	sbci	r20, 0xFF	; 255
    1280:	5f 4f       	sbci	r21, 0xFF	; 255
    1282:	04 c0       	rjmp	.+8      	; 0x128c <__pack_f+0xf6>
    1284:	21 5c       	subi	r18, 0xC1	; 193
    1286:	3f 4f       	sbci	r19, 0xFF	; 255
    1288:	4f 4f       	sbci	r20, 0xFF	; 255
    128a:	5f 4f       	sbci	r21, 0xFF	; 255
    128c:	e0 e0       	ldi	r30, 0x00	; 0
    128e:	f0 e0       	ldi	r31, 0x00	; 0
    1290:	20 30       	cpi	r18, 0x00	; 0
    1292:	a0 e0       	ldi	r26, 0x00	; 0
    1294:	3a 07       	cpc	r19, r26
    1296:	a0 e0       	ldi	r26, 0x00	; 0
    1298:	4a 07       	cpc	r20, r26
    129a:	a0 e4       	ldi	r26, 0x40	; 64
    129c:	5a 07       	cpc	r21, r26
    129e:	10 f0       	brcs	.+4      	; 0x12a4 <__pack_f+0x10e>
    12a0:	e1 e0       	ldi	r30, 0x01	; 1
    12a2:	f0 e0       	ldi	r31, 0x00	; 0
    12a4:	79 01       	movw	r14, r18
    12a6:	8a 01       	movw	r16, r20
    12a8:	27 c0       	rjmp	.+78     	; 0x12f8 <__pack_f+0x162>
    12aa:	60 38       	cpi	r22, 0x80	; 128
    12ac:	71 05       	cpc	r23, r1
    12ae:	64 f5       	brge	.+88     	; 0x1308 <__pack_f+0x172>
    12b0:	fb 01       	movw	r30, r22
    12b2:	e1 58       	subi	r30, 0x81	; 129
    12b4:	ff 4f       	sbci	r31, 0xFF	; 255
    12b6:	d8 01       	movw	r26, r16
    12b8:	c7 01       	movw	r24, r14
    12ba:	8f 77       	andi	r24, 0x7F	; 127
    12bc:	90 70       	andi	r25, 0x00	; 0
    12be:	a0 70       	andi	r26, 0x00	; 0
    12c0:	b0 70       	andi	r27, 0x00	; 0
    12c2:	80 34       	cpi	r24, 0x40	; 64
    12c4:	91 05       	cpc	r25, r1
    12c6:	a1 05       	cpc	r26, r1
    12c8:	b1 05       	cpc	r27, r1
    12ca:	39 f4       	brne	.+14     	; 0x12da <__pack_f+0x144>
    12cc:	e7 fe       	sbrs	r14, 7
    12ce:	0d c0       	rjmp	.+26     	; 0x12ea <__pack_f+0x154>
    12d0:	80 e4       	ldi	r24, 0x40	; 64
    12d2:	90 e0       	ldi	r25, 0x00	; 0
    12d4:	a0 e0       	ldi	r26, 0x00	; 0
    12d6:	b0 e0       	ldi	r27, 0x00	; 0
    12d8:	04 c0       	rjmp	.+8      	; 0x12e2 <__pack_f+0x14c>
    12da:	8f e3       	ldi	r24, 0x3F	; 63
    12dc:	90 e0       	ldi	r25, 0x00	; 0
    12de:	a0 e0       	ldi	r26, 0x00	; 0
    12e0:	b0 e0       	ldi	r27, 0x00	; 0
    12e2:	e8 0e       	add	r14, r24
    12e4:	f9 1e       	adc	r15, r25
    12e6:	0a 1f       	adc	r16, r26
    12e8:	1b 1f       	adc	r17, r27
    12ea:	17 ff       	sbrs	r17, 7
    12ec:	05 c0       	rjmp	.+10     	; 0x12f8 <__pack_f+0x162>
    12ee:	16 95       	lsr	r17
    12f0:	07 95       	ror	r16
    12f2:	f7 94       	ror	r15
    12f4:	e7 94       	ror	r14
    12f6:	31 96       	adiw	r30, 0x01	; 1
    12f8:	87 e0       	ldi	r24, 0x07	; 7
    12fa:	16 95       	lsr	r17
    12fc:	07 95       	ror	r16
    12fe:	f7 94       	ror	r15
    1300:	e7 94       	ror	r14
    1302:	8a 95       	dec	r24
    1304:	d1 f7       	brne	.-12     	; 0x12fa <__pack_f+0x164>
    1306:	05 c0       	rjmp	.+10     	; 0x1312 <__pack_f+0x17c>
    1308:	ee 24       	eor	r14, r14
    130a:	ff 24       	eor	r15, r15
    130c:	87 01       	movw	r16, r14
    130e:	ef ef       	ldi	r30, 0xFF	; 255
    1310:	f0 e0       	ldi	r31, 0x00	; 0
    1312:	6e 2f       	mov	r22, r30
    1314:	67 95       	ror	r22
    1316:	66 27       	eor	r22, r22
    1318:	67 95       	ror	r22
    131a:	90 2f       	mov	r25, r16
    131c:	9f 77       	andi	r25, 0x7F	; 127
    131e:	d7 94       	ror	r13
    1320:	dd 24       	eor	r13, r13
    1322:	d7 94       	ror	r13
    1324:	8e 2f       	mov	r24, r30
    1326:	86 95       	lsr	r24
    1328:	49 2f       	mov	r20, r25
    132a:	46 2b       	or	r20, r22
    132c:	58 2f       	mov	r21, r24
    132e:	5d 29       	or	r21, r13
    1330:	b7 01       	movw	r22, r14
    1332:	ca 01       	movw	r24, r20
    1334:	1f 91       	pop	r17
    1336:	0f 91       	pop	r16
    1338:	ff 90       	pop	r15
    133a:	ef 90       	pop	r14
    133c:	df 90       	pop	r13
    133e:	08 95       	ret

00001340 <__unpack_f>:
    1340:	fc 01       	movw	r30, r24
    1342:	db 01       	movw	r26, r22
    1344:	40 81       	ld	r20, Z
    1346:	51 81       	ldd	r21, Z+1	; 0x01
    1348:	22 81       	ldd	r18, Z+2	; 0x02
    134a:	62 2f       	mov	r22, r18
    134c:	6f 77       	andi	r22, 0x7F	; 127
    134e:	70 e0       	ldi	r23, 0x00	; 0
    1350:	22 1f       	adc	r18, r18
    1352:	22 27       	eor	r18, r18
    1354:	22 1f       	adc	r18, r18
    1356:	93 81       	ldd	r25, Z+3	; 0x03
    1358:	89 2f       	mov	r24, r25
    135a:	88 0f       	add	r24, r24
    135c:	82 2b       	or	r24, r18
    135e:	28 2f       	mov	r18, r24
    1360:	30 e0       	ldi	r19, 0x00	; 0
    1362:	99 1f       	adc	r25, r25
    1364:	99 27       	eor	r25, r25
    1366:	99 1f       	adc	r25, r25
    1368:	11 96       	adiw	r26, 0x01	; 1
    136a:	9c 93       	st	X, r25
    136c:	11 97       	sbiw	r26, 0x01	; 1
    136e:	21 15       	cp	r18, r1
    1370:	31 05       	cpc	r19, r1
    1372:	a9 f5       	brne	.+106    	; 0x13de <__unpack_f+0x9e>
    1374:	41 15       	cp	r20, r1
    1376:	51 05       	cpc	r21, r1
    1378:	61 05       	cpc	r22, r1
    137a:	71 05       	cpc	r23, r1
    137c:	11 f4       	brne	.+4      	; 0x1382 <__unpack_f+0x42>
    137e:	82 e0       	ldi	r24, 0x02	; 2
    1380:	37 c0       	rjmp	.+110    	; 0x13f0 <__unpack_f+0xb0>
    1382:	82 e8       	ldi	r24, 0x82	; 130
    1384:	9f ef       	ldi	r25, 0xFF	; 255
    1386:	13 96       	adiw	r26, 0x03	; 3
    1388:	9c 93       	st	X, r25
    138a:	8e 93       	st	-X, r24
    138c:	12 97       	sbiw	r26, 0x02	; 2
    138e:	9a 01       	movw	r18, r20
    1390:	ab 01       	movw	r20, r22
    1392:	67 e0       	ldi	r22, 0x07	; 7
    1394:	22 0f       	add	r18, r18
    1396:	33 1f       	adc	r19, r19
    1398:	44 1f       	adc	r20, r20
    139a:	55 1f       	adc	r21, r21
    139c:	6a 95       	dec	r22
    139e:	d1 f7       	brne	.-12     	; 0x1394 <__unpack_f+0x54>
    13a0:	83 e0       	ldi	r24, 0x03	; 3
    13a2:	8c 93       	st	X, r24
    13a4:	0d c0       	rjmp	.+26     	; 0x13c0 <__unpack_f+0x80>
    13a6:	22 0f       	add	r18, r18
    13a8:	33 1f       	adc	r19, r19
    13aa:	44 1f       	adc	r20, r20
    13ac:	55 1f       	adc	r21, r21
    13ae:	12 96       	adiw	r26, 0x02	; 2
    13b0:	8d 91       	ld	r24, X+
    13b2:	9c 91       	ld	r25, X
    13b4:	13 97       	sbiw	r26, 0x03	; 3
    13b6:	01 97       	sbiw	r24, 0x01	; 1
    13b8:	13 96       	adiw	r26, 0x03	; 3
    13ba:	9c 93       	st	X, r25
    13bc:	8e 93       	st	-X, r24
    13be:	12 97       	sbiw	r26, 0x02	; 2
    13c0:	20 30       	cpi	r18, 0x00	; 0
    13c2:	80 e0       	ldi	r24, 0x00	; 0
    13c4:	38 07       	cpc	r19, r24
    13c6:	80 e0       	ldi	r24, 0x00	; 0
    13c8:	48 07       	cpc	r20, r24
    13ca:	80 e4       	ldi	r24, 0x40	; 64
    13cc:	58 07       	cpc	r21, r24
    13ce:	58 f3       	brcs	.-42     	; 0x13a6 <__unpack_f+0x66>
    13d0:	14 96       	adiw	r26, 0x04	; 4
    13d2:	2d 93       	st	X+, r18
    13d4:	3d 93       	st	X+, r19
    13d6:	4d 93       	st	X+, r20
    13d8:	5c 93       	st	X, r21
    13da:	17 97       	sbiw	r26, 0x07	; 7
    13dc:	08 95       	ret
    13de:	2f 3f       	cpi	r18, 0xFF	; 255
    13e0:	31 05       	cpc	r19, r1
    13e2:	79 f4       	brne	.+30     	; 0x1402 <__unpack_f+0xc2>
    13e4:	41 15       	cp	r20, r1
    13e6:	51 05       	cpc	r21, r1
    13e8:	61 05       	cpc	r22, r1
    13ea:	71 05       	cpc	r23, r1
    13ec:	19 f4       	brne	.+6      	; 0x13f4 <__unpack_f+0xb4>
    13ee:	84 e0       	ldi	r24, 0x04	; 4
    13f0:	8c 93       	st	X, r24
    13f2:	08 95       	ret
    13f4:	64 ff       	sbrs	r22, 4
    13f6:	03 c0       	rjmp	.+6      	; 0x13fe <__unpack_f+0xbe>
    13f8:	81 e0       	ldi	r24, 0x01	; 1
    13fa:	8c 93       	st	X, r24
    13fc:	12 c0       	rjmp	.+36     	; 0x1422 <__unpack_f+0xe2>
    13fe:	1c 92       	st	X, r1
    1400:	10 c0       	rjmp	.+32     	; 0x1422 <__unpack_f+0xe2>
    1402:	2f 57       	subi	r18, 0x7F	; 127
    1404:	30 40       	sbci	r19, 0x00	; 0
    1406:	13 96       	adiw	r26, 0x03	; 3
    1408:	3c 93       	st	X, r19
    140a:	2e 93       	st	-X, r18
    140c:	12 97       	sbiw	r26, 0x02	; 2
    140e:	83 e0       	ldi	r24, 0x03	; 3
    1410:	8c 93       	st	X, r24
    1412:	87 e0       	ldi	r24, 0x07	; 7
    1414:	44 0f       	add	r20, r20
    1416:	55 1f       	adc	r21, r21
    1418:	66 1f       	adc	r22, r22
    141a:	77 1f       	adc	r23, r23
    141c:	8a 95       	dec	r24
    141e:	d1 f7       	brne	.-12     	; 0x1414 <__unpack_f+0xd4>
    1420:	70 64       	ori	r23, 0x40	; 64
    1422:	14 96       	adiw	r26, 0x04	; 4
    1424:	4d 93       	st	X+, r20
    1426:	5d 93       	st	X+, r21
    1428:	6d 93       	st	X+, r22
    142a:	7c 93       	st	X, r23
    142c:	17 97       	sbiw	r26, 0x07	; 7
    142e:	08 95       	ret

00001430 <__fpcmp_parts_f>:
    1430:	1f 93       	push	r17
    1432:	dc 01       	movw	r26, r24
    1434:	fb 01       	movw	r30, r22
    1436:	9c 91       	ld	r25, X
    1438:	92 30       	cpi	r25, 0x02	; 2
    143a:	08 f4       	brcc	.+2      	; 0x143e <__fpcmp_parts_f+0xe>
    143c:	47 c0       	rjmp	.+142    	; 0x14cc <__fpcmp_parts_f+0x9c>
    143e:	80 81       	ld	r24, Z
    1440:	82 30       	cpi	r24, 0x02	; 2
    1442:	08 f4       	brcc	.+2      	; 0x1446 <__fpcmp_parts_f+0x16>
    1444:	43 c0       	rjmp	.+134    	; 0x14cc <__fpcmp_parts_f+0x9c>
    1446:	94 30       	cpi	r25, 0x04	; 4
    1448:	51 f4       	brne	.+20     	; 0x145e <__fpcmp_parts_f+0x2e>
    144a:	11 96       	adiw	r26, 0x01	; 1
    144c:	1c 91       	ld	r17, X
    144e:	84 30       	cpi	r24, 0x04	; 4
    1450:	99 f5       	brne	.+102    	; 0x14b8 <__fpcmp_parts_f+0x88>
    1452:	81 81       	ldd	r24, Z+1	; 0x01
    1454:	68 2f       	mov	r22, r24
    1456:	70 e0       	ldi	r23, 0x00	; 0
    1458:	61 1b       	sub	r22, r17
    145a:	71 09       	sbc	r23, r1
    145c:	3f c0       	rjmp	.+126    	; 0x14dc <__fpcmp_parts_f+0xac>
    145e:	84 30       	cpi	r24, 0x04	; 4
    1460:	21 f0       	breq	.+8      	; 0x146a <__fpcmp_parts_f+0x3a>
    1462:	92 30       	cpi	r25, 0x02	; 2
    1464:	31 f4       	brne	.+12     	; 0x1472 <__fpcmp_parts_f+0x42>
    1466:	82 30       	cpi	r24, 0x02	; 2
    1468:	b9 f1       	breq	.+110    	; 0x14d8 <__fpcmp_parts_f+0xa8>
    146a:	81 81       	ldd	r24, Z+1	; 0x01
    146c:	88 23       	and	r24, r24
    146e:	89 f1       	breq	.+98     	; 0x14d2 <__fpcmp_parts_f+0xa2>
    1470:	2d c0       	rjmp	.+90     	; 0x14cc <__fpcmp_parts_f+0x9c>
    1472:	11 96       	adiw	r26, 0x01	; 1
    1474:	1c 91       	ld	r17, X
    1476:	11 97       	sbiw	r26, 0x01	; 1
    1478:	82 30       	cpi	r24, 0x02	; 2
    147a:	f1 f0       	breq	.+60     	; 0x14b8 <__fpcmp_parts_f+0x88>
    147c:	81 81       	ldd	r24, Z+1	; 0x01
    147e:	18 17       	cp	r17, r24
    1480:	d9 f4       	brne	.+54     	; 0x14b8 <__fpcmp_parts_f+0x88>
    1482:	12 96       	adiw	r26, 0x02	; 2
    1484:	2d 91       	ld	r18, X+
    1486:	3c 91       	ld	r19, X
    1488:	13 97       	sbiw	r26, 0x03	; 3
    148a:	82 81       	ldd	r24, Z+2	; 0x02
    148c:	93 81       	ldd	r25, Z+3	; 0x03
    148e:	82 17       	cp	r24, r18
    1490:	93 07       	cpc	r25, r19
    1492:	94 f0       	brlt	.+36     	; 0x14b8 <__fpcmp_parts_f+0x88>
    1494:	28 17       	cp	r18, r24
    1496:	39 07       	cpc	r19, r25
    1498:	bc f0       	brlt	.+46     	; 0x14c8 <__fpcmp_parts_f+0x98>
    149a:	14 96       	adiw	r26, 0x04	; 4
    149c:	8d 91       	ld	r24, X+
    149e:	9d 91       	ld	r25, X+
    14a0:	0d 90       	ld	r0, X+
    14a2:	bc 91       	ld	r27, X
    14a4:	a0 2d       	mov	r26, r0
    14a6:	24 81       	ldd	r18, Z+4	; 0x04
    14a8:	35 81       	ldd	r19, Z+5	; 0x05
    14aa:	46 81       	ldd	r20, Z+6	; 0x06
    14ac:	57 81       	ldd	r21, Z+7	; 0x07
    14ae:	28 17       	cp	r18, r24
    14b0:	39 07       	cpc	r19, r25
    14b2:	4a 07       	cpc	r20, r26
    14b4:	5b 07       	cpc	r21, r27
    14b6:	18 f4       	brcc	.+6      	; 0x14be <__fpcmp_parts_f+0x8e>
    14b8:	11 23       	and	r17, r17
    14ba:	41 f0       	breq	.+16     	; 0x14cc <__fpcmp_parts_f+0x9c>
    14bc:	0a c0       	rjmp	.+20     	; 0x14d2 <__fpcmp_parts_f+0xa2>
    14be:	82 17       	cp	r24, r18
    14c0:	93 07       	cpc	r25, r19
    14c2:	a4 07       	cpc	r26, r20
    14c4:	b5 07       	cpc	r27, r21
    14c6:	40 f4       	brcc	.+16     	; 0x14d8 <__fpcmp_parts_f+0xa8>
    14c8:	11 23       	and	r17, r17
    14ca:	19 f0       	breq	.+6      	; 0x14d2 <__fpcmp_parts_f+0xa2>
    14cc:	61 e0       	ldi	r22, 0x01	; 1
    14ce:	70 e0       	ldi	r23, 0x00	; 0
    14d0:	05 c0       	rjmp	.+10     	; 0x14dc <__fpcmp_parts_f+0xac>
    14d2:	6f ef       	ldi	r22, 0xFF	; 255
    14d4:	7f ef       	ldi	r23, 0xFF	; 255
    14d6:	02 c0       	rjmp	.+4      	; 0x14dc <__fpcmp_parts_f+0xac>
    14d8:	60 e0       	ldi	r22, 0x00	; 0
    14da:	70 e0       	ldi	r23, 0x00	; 0
    14dc:	cb 01       	movw	r24, r22
    14de:	1f 91       	pop	r17
    14e0:	08 95       	ret

000014e2 <__prologue_saves__>:
    14e2:	2f 92       	push	r2
    14e4:	3f 92       	push	r3
    14e6:	4f 92       	push	r4
    14e8:	5f 92       	push	r5
    14ea:	6f 92       	push	r6
    14ec:	7f 92       	push	r7
    14ee:	8f 92       	push	r8
    14f0:	9f 92       	push	r9
    14f2:	af 92       	push	r10
    14f4:	bf 92       	push	r11
    14f6:	cf 92       	push	r12
    14f8:	df 92       	push	r13
    14fa:	ef 92       	push	r14
    14fc:	ff 92       	push	r15
    14fe:	0f 93       	push	r16
    1500:	1f 93       	push	r17
    1502:	cf 93       	push	r28
    1504:	df 93       	push	r29
    1506:	cd b7       	in	r28, 0x3d	; 61
    1508:	de b7       	in	r29, 0x3e	; 62
    150a:	ca 1b       	sub	r28, r26
    150c:	db 0b       	sbc	r29, r27
    150e:	0f b6       	in	r0, 0x3f	; 63
    1510:	f8 94       	cli
    1512:	de bf       	out	0x3e, r29	; 62
    1514:	0f be       	out	0x3f, r0	; 63
    1516:	cd bf       	out	0x3d, r28	; 61
    1518:	09 94       	ijmp

0000151a <__epilogue_restores__>:
    151a:	2a 88       	ldd	r2, Y+18	; 0x12
    151c:	39 88       	ldd	r3, Y+17	; 0x11
    151e:	48 88       	ldd	r4, Y+16	; 0x10
    1520:	5f 84       	ldd	r5, Y+15	; 0x0f
    1522:	6e 84       	ldd	r6, Y+14	; 0x0e
    1524:	7d 84       	ldd	r7, Y+13	; 0x0d
    1526:	8c 84       	ldd	r8, Y+12	; 0x0c
    1528:	9b 84       	ldd	r9, Y+11	; 0x0b
    152a:	aa 84       	ldd	r10, Y+10	; 0x0a
    152c:	b9 84       	ldd	r11, Y+9	; 0x09
    152e:	c8 84       	ldd	r12, Y+8	; 0x08
    1530:	df 80       	ldd	r13, Y+7	; 0x07
    1532:	ee 80       	ldd	r14, Y+6	; 0x06
    1534:	fd 80       	ldd	r15, Y+5	; 0x05
    1536:	0c 81       	ldd	r16, Y+4	; 0x04
    1538:	1b 81       	ldd	r17, Y+3	; 0x03
    153a:	aa 81       	ldd	r26, Y+2	; 0x02
    153c:	b9 81       	ldd	r27, Y+1	; 0x01
    153e:	ce 0f       	add	r28, r30
    1540:	d1 1d       	adc	r29, r1
    1542:	0f b6       	in	r0, 0x3f	; 63
    1544:	f8 94       	cli
    1546:	de bf       	out	0x3e, r29	; 62
    1548:	0f be       	out	0x3f, r0	; 63
    154a:	cd bf       	out	0x3d, r28	; 61
    154c:	ed 01       	movw	r28, r26
    154e:	08 95       	ret

00001550 <_exit>:
    1550:	f8 94       	cli

00001552 <__stop_program>:
    1552:	ff cf       	rjmp	.-2      	; 0x1552 <__stop_program>
