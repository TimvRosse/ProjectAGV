
bin\Debug\projectAGV.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000108  00800100  000015dc  00001690  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000015dc  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  00800208  00800208  00001798  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  00001798  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .debug_aranges 000001e0  00000000  00000000  0000179b  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000002ca  00000000  00000000  0000197b  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000028ac  00000000  00000000  00001c45  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000159f  00000000  00000000  000044f1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000016f2  00000000  00000000  00005a90  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000260  00000000  00000000  00007184  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000043b  00000000  00000000  000073e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009ce  00000000  00000000  0000781f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  000081ed  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 a0 00 	jmp	0x140	; 0x140 <__vector_1>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
      74:	12 e0       	ldi	r17, 0x02	; 2
      76:	a8 e0       	ldi	r26, 0x08	; 8
      78:	b2 e0       	ldi	r27, 0x02	; 2
      7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
      7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
      7e:	a0 31       	cpi	r26, 0x10	; 16
      80:	b1 07       	cpc	r27, r17
      82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>

00000084 <__do_copy_data>:
      84:	12 e0       	ldi	r17, 0x02	; 2
      86:	a0 e0       	ldi	r26, 0x00	; 0
      88:	b1 e0       	ldi	r27, 0x01	; 1
      8a:	ec ed       	ldi	r30, 0xDC	; 220
      8c:	f5 e1       	ldi	r31, 0x15	; 21
      8e:	02 c0       	rjmp	.+4      	; 0x94 <.do_copy_data_start>

00000090 <.do_copy_data_loop>:
      90:	05 90       	lpm	r0, Z+
      92:	0d 92       	st	X+, r0

00000094 <.do_copy_data_start>:
      94:	a8 30       	cpi	r26, 0x08	; 8
      96:	b1 07       	cpc	r27, r17
      98:	d9 f7       	brne	.-10     	; 0x90 <.do_copy_data_loop>
      9a:	0e 94 4a 01 	call	0x294	; 0x294 <main>
      9e:	0c 94 ec 0a 	jmp	0x15d8	; 0x15d8 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <bocht>:
#define FALSE 0

volatile int irstatus;

void bocht(int dir)
{
      a6:	df 93       	push	r29
      a8:	cf 93       	push	r28
      aa:	00 d0       	rcall	.+0      	; 0xac <bocht+0x6>
      ac:	cd b7       	in	r28, 0x3d	; 61
      ae:	de b7       	in	r29, 0x3e	; 62
      b0:	9a 83       	std	Y+2, r25	; 0x02
      b2:	89 83       	std	Y+1, r24	; 0x01
    //1) 10cm naar voren rijden
    stepperGoto(97, voorruit, stepMode);
      b4:	81 e6       	ldi	r24, 0x61	; 97
      b6:	90 e0       	ldi	r25, 0x00	; 0
      b8:	60 e0       	ldi	r22, 0x00	; 0
      ba:	70 e0       	ldi	r23, 0x00	; 0
      bc:	48 e0       	ldi	r20, 0x08	; 8
      be:	50 e0       	ldi	r21, 0x00	; 0
      c0:	0e 94 0e 02 	call	0x41c	; 0x41c <stepperGoto>
    //2) bocht maken naar directie bocht(+- 90 graden)
    singleStepperGoTo(236,voorruit,stepMode, dir);
      c4:	29 81       	ldd	r18, Y+1	; 0x01
      c6:	3a 81       	ldd	r19, Y+2	; 0x02
      c8:	8c ee       	ldi	r24, 0xEC	; 236
      ca:	90 e0       	ldi	r25, 0x00	; 0
      cc:	60 e0       	ldi	r22, 0x00	; 0
      ce:	70 e0       	ldi	r23, 0x00	; 0
      d0:	48 e0       	ldi	r20, 0x08	; 8
      d2:	50 e0       	ldi	r21, 0x00	; 0
      d4:	0e 94 ab 02 	call	0x556	; 0x556 <singleStepperGoTo>
    //3) afstand van middenstreep rijden
    stepperGoto(68, voorruit, stepMode);
      d8:	84 e4       	ldi	r24, 0x44	; 68
      da:	90 e0       	ldi	r25, 0x00	; 0
      dc:	60 e0       	ldi	r22, 0x00	; 0
      de:	70 e0       	ldi	r23, 0x00	; 0
      e0:	48 e0       	ldi	r20, 0x08	; 8
      e2:	50 e0       	ldi	r21, 0x00	; 0
      e4:	0e 94 0e 02 	call	0x41c	; 0x41c <stepperGoto>
    //4 bocht maken naar directie bocht(+- 90 graden)
    singleStepperGoTo(236,voorruit,stepMode, dir);
      e8:	29 81       	ldd	r18, Y+1	; 0x01
      ea:	3a 81       	ldd	r19, Y+2	; 0x02
      ec:	8c ee       	ldi	r24, 0xEC	; 236
      ee:	90 e0       	ldi	r25, 0x00	; 0
      f0:	60 e0       	ldi	r22, 0x00	; 0
      f2:	70 e0       	ldi	r23, 0x00	; 0
      f4:	48 e0       	ldi	r20, 0x08	; 8
      f6:	50 e0       	ldi	r21, 0x00	; 0
      f8:	0e 94 ab 02 	call	0x556	; 0x556 <singleStepperGoTo>
    //5) laatste 10cm naar voren voor beginpositie
    stepperGoto(97, voorruit, stepMode);
      fc:	81 e6       	ldi	r24, 0x61	; 97
      fe:	90 e0       	ldi	r25, 0x00	; 0
     100:	60 e0       	ldi	r22, 0x00	; 0
     102:	70 e0       	ldi	r23, 0x00	; 0
     104:	48 e0       	ldi	r20, 0x08	; 8
     106:	50 e0       	ldi	r21, 0x00	; 0
     108:	0e 94 0e 02 	call	0x41c	; 0x41c <stepperGoto>
}
     10c:	0f 90       	pop	r0
     10e:	0f 90       	pop	r0
     110:	cf 91       	pop	r28
     112:	df 91       	pop	r29
     114:	08 95       	ret

00000116 <init>:

void init(void)
{
     116:	df 93       	push	r29
     118:	cf 93       	push	r28
     11a:	cd b7       	in	r28, 0x3d	; 61
     11c:	de b7       	in	r29, 0x3e	; 62
    //TCCR0A = 1;
    //TCCR0B = (1<<CS00)|(0<<CS01)|(1<<CS02); //~61Hz , 16000000 / 256 / 1024

    //TIMSK0 = (1<<TOIE0);

    EIMSK |= _BV(INT0);
     11e:	ad e3       	ldi	r26, 0x3D	; 61
     120:	b0 e0       	ldi	r27, 0x00	; 0
     122:	ed e3       	ldi	r30, 0x3D	; 61
     124:	f0 e0       	ldi	r31, 0x00	; 0
     126:	80 81       	ld	r24, Z
     128:	81 60       	ori	r24, 0x01	; 1
     12a:	8c 93       	st	X, r24
    EICRA |= (0 << ISC00)|(0 << ISC01);
     12c:	a9 e6       	ldi	r26, 0x69	; 105
     12e:	b0 e0       	ldi	r27, 0x00	; 0
     130:	e9 e6       	ldi	r30, 0x69	; 105
     132:	f0 e0       	ldi	r31, 0x00	; 0
     134:	80 81       	ld	r24, Z
     136:	8c 93       	st	X, r24

    sei();
     138:	78 94       	sei
}
     13a:	cf 91       	pop	r28
     13c:	df 91       	pop	r29
     13e:	08 95       	ret

00000140 <__vector_1>:

ISR(INT0_vect)
{
     140:	1f 92       	push	r1
     142:	0f 92       	push	r0
     144:	0f b6       	in	r0, 0x3f	; 63
     146:	0f 92       	push	r0
     148:	11 24       	eor	r1, r1
     14a:	2f 93       	push	r18
     14c:	3f 93       	push	r19
     14e:	4f 93       	push	r20
     150:	5f 93       	push	r21
     152:	6f 93       	push	r22
     154:	7f 93       	push	r23
     156:	8f 93       	push	r24
     158:	9f 93       	push	r25
     15a:	af 93       	push	r26
     15c:	bf 93       	push	r27
     15e:	ef 93       	push	r30
     160:	ff 93       	push	r31
     162:	df 93       	push	r29
     164:	cf 93       	push	r28
     166:	cd b7       	in	r28, 0x3d	; 61
     168:	de b7       	in	r29, 0x3e	; 62
     16a:	2e 97       	sbiw	r28, 0x0e	; 14
     16c:	de bf       	out	0x3e, r29	; 62
     16e:	cd bf       	out	0x3d, r28	; 61
  if(bit_is_clear(PIND, irPort))
     170:	e9 e2       	ldi	r30, 0x29	; 41
     172:	f0 e0       	ldi	r31, 0x00	; 0
     174:	80 81       	ld	r24, Z
     176:	88 2f       	mov	r24, r24
     178:	90 e0       	ldi	r25, 0x00	; 0
     17a:	84 70       	andi	r24, 0x04	; 4
     17c:	90 70       	andi	r25, 0x00	; 0
     17e:	00 97       	sbiw	r24, 0x00	; 0
     180:	09 f0       	breq	.+2      	; 0x184 <__vector_1+0x44>
     182:	72 c0       	rjmp	.+228    	; 0x268 <__vector_1+0x128>
     184:	80 e0       	ldi	r24, 0x00	; 0
     186:	90 e0       	ldi	r25, 0x00	; 0
     188:	a8 ec       	ldi	r26, 0xC8	; 200
     18a:	b2 e4       	ldi	r27, 0x42	; 66
     18c:	8b 87       	std	Y+11, r24	; 0x0b
     18e:	9c 87       	std	Y+12, r25	; 0x0c
     190:	ad 87       	std	Y+13, r26	; 0x0d
     192:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     194:	6b 85       	ldd	r22, Y+11	; 0x0b
     196:	7c 85       	ldd	r23, Y+12	; 0x0c
     198:	8d 85       	ldd	r24, Y+13	; 0x0d
     19a:	9e 85       	ldd	r25, Y+14	; 0x0e
     19c:	20 e0       	ldi	r18, 0x00	; 0
     19e:	30 e0       	ldi	r19, 0x00	; 0
     1a0:	4a e7       	ldi	r20, 0x7A	; 122
     1a2:	55 e4       	ldi	r21, 0x45	; 69
     1a4:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <__mulsf3>
     1a8:	dc 01       	movw	r26, r24
     1aa:	cb 01       	movw	r24, r22
     1ac:	8f 83       	std	Y+7, r24	; 0x07
     1ae:	98 87       	std	Y+8, r25	; 0x08
     1b0:	a9 87       	std	Y+9, r26	; 0x09
     1b2:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     1b4:	6f 81       	ldd	r22, Y+7	; 0x07
     1b6:	78 85       	ldd	r23, Y+8	; 0x08
     1b8:	89 85       	ldd	r24, Y+9	; 0x09
     1ba:	9a 85       	ldd	r25, Y+10	; 0x0a
     1bc:	20 e0       	ldi	r18, 0x00	; 0
     1be:	30 e0       	ldi	r19, 0x00	; 0
     1c0:	40 e8       	ldi	r20, 0x80	; 128
     1c2:	5f e3       	ldi	r21, 0x3F	; 63
     1c4:	0e 94 de 07 	call	0xfbc	; 0xfbc <__ltsf2>
     1c8:	88 23       	and	r24, r24
     1ca:	2c f4       	brge	.+10     	; 0x1d6 <__vector_1+0x96>
		__ticks = 1;
     1cc:	81 e0       	ldi	r24, 0x01	; 1
     1ce:	90 e0       	ldi	r25, 0x00	; 0
     1d0:	9e 83       	std	Y+6, r25	; 0x06
     1d2:	8d 83       	std	Y+5, r24	; 0x05
     1d4:	3f c0       	rjmp	.+126    	; 0x254 <__vector_1+0x114>
	else if (__tmp > 65535)
     1d6:	6f 81       	ldd	r22, Y+7	; 0x07
     1d8:	78 85       	ldd	r23, Y+8	; 0x08
     1da:	89 85       	ldd	r24, Y+9	; 0x09
     1dc:	9a 85       	ldd	r25, Y+10	; 0x0a
     1de:	20 e0       	ldi	r18, 0x00	; 0
     1e0:	3f ef       	ldi	r19, 0xFF	; 255
     1e2:	4f e7       	ldi	r20, 0x7F	; 127
     1e4:	57 e4       	ldi	r21, 0x47	; 71
     1e6:	0e 94 7e 07 	call	0xefc	; 0xefc <__gtsf2>
     1ea:	18 16       	cp	r1, r24
     1ec:	4c f5       	brge	.+82     	; 0x240 <__vector_1+0x100>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     1ee:	6b 85       	ldd	r22, Y+11	; 0x0b
     1f0:	7c 85       	ldd	r23, Y+12	; 0x0c
     1f2:	8d 85       	ldd	r24, Y+13	; 0x0d
     1f4:	9e 85       	ldd	r25, Y+14	; 0x0e
     1f6:	20 e0       	ldi	r18, 0x00	; 0
     1f8:	30 e0       	ldi	r19, 0x00	; 0
     1fa:	40 e2       	ldi	r20, 0x20	; 32
     1fc:	51 e4       	ldi	r21, 0x41	; 65
     1fe:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <__mulsf3>
     202:	dc 01       	movw	r26, r24
     204:	cb 01       	movw	r24, r22
     206:	bc 01       	movw	r22, r24
     208:	cd 01       	movw	r24, r26
     20a:	0e 94 02 04 	call	0x804	; 0x804 <__fixunssfsi>
     20e:	dc 01       	movw	r26, r24
     210:	cb 01       	movw	r24, r22
     212:	9e 83       	std	Y+6, r25	; 0x06
     214:	8d 83       	std	Y+5, r24	; 0x05
     216:	0f c0       	rjmp	.+30     	; 0x236 <__vector_1+0xf6>
     218:	80 e9       	ldi	r24, 0x90	; 144
     21a:	91 e0       	ldi	r25, 0x01	; 1
     21c:	9c 83       	std	Y+4, r25	; 0x04
     21e:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     220:	8b 81       	ldd	r24, Y+3	; 0x03
     222:	9c 81       	ldd	r25, Y+4	; 0x04
     224:	01 97       	sbiw	r24, 0x01	; 1
     226:	f1 f7       	brne	.-4      	; 0x224 <__vector_1+0xe4>
     228:	9c 83       	std	Y+4, r25	; 0x04
     22a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     22c:	8d 81       	ldd	r24, Y+5	; 0x05
     22e:	9e 81       	ldd	r25, Y+6	; 0x06
     230:	01 97       	sbiw	r24, 0x01	; 1
     232:	9e 83       	std	Y+6, r25	; 0x06
     234:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     236:	8d 81       	ldd	r24, Y+5	; 0x05
     238:	9e 81       	ldd	r25, Y+6	; 0x06
     23a:	00 97       	sbiw	r24, 0x00	; 0
     23c:	69 f7       	brne	.-38     	; 0x218 <__vector_1+0xd8>
     23e:	14 c0       	rjmp	.+40     	; 0x268 <__vector_1+0x128>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     240:	6f 81       	ldd	r22, Y+7	; 0x07
     242:	78 85       	ldd	r23, Y+8	; 0x08
     244:	89 85       	ldd	r24, Y+9	; 0x09
     246:	9a 85       	ldd	r25, Y+10	; 0x0a
     248:	0e 94 02 04 	call	0x804	; 0x804 <__fixunssfsi>
     24c:	dc 01       	movw	r26, r24
     24e:	cb 01       	movw	r24, r22
     250:	9e 83       	std	Y+6, r25	; 0x06
     252:	8d 83       	std	Y+5, r24	; 0x05
     254:	8d 81       	ldd	r24, Y+5	; 0x05
     256:	9e 81       	ldd	r25, Y+6	; 0x06
     258:	9a 83       	std	Y+2, r25	; 0x02
     25a:	89 83       	std	Y+1, r24	; 0x01
     25c:	89 81       	ldd	r24, Y+1	; 0x01
     25e:	9a 81       	ldd	r25, Y+2	; 0x02
     260:	01 97       	sbiw	r24, 0x01	; 1
     262:	f1 f7       	brne	.-4      	; 0x260 <__vector_1+0x120>
     264:	9a 83       	std	Y+2, r25	; 0x02
     266:	89 83       	std	Y+1, r24	; 0x01
  {
      _delay_ms(100);
  }
}
     268:	2e 96       	adiw	r28, 0x0e	; 14
     26a:	de bf       	out	0x3e, r29	; 62
     26c:	cd bf       	out	0x3d, r28	; 61
     26e:	cf 91       	pop	r28
     270:	df 91       	pop	r29
     272:	ff 91       	pop	r31
     274:	ef 91       	pop	r30
     276:	bf 91       	pop	r27
     278:	af 91       	pop	r26
     27a:	9f 91       	pop	r25
     27c:	8f 91       	pop	r24
     27e:	7f 91       	pop	r23
     280:	6f 91       	pop	r22
     282:	5f 91       	pop	r21
     284:	4f 91       	pop	r20
     286:	3f 91       	pop	r19
     288:	2f 91       	pop	r18
     28a:	0f 90       	pop	r0
     28c:	0f be       	out	0x3f, r0	; 63
     28e:	0f 90       	pop	r0
     290:	1f 90       	pop	r1
     292:	18 95       	reti

00000294 <main>:


int main(void)
{
     294:	df 93       	push	r29
     296:	cf 93       	push	r28
     298:	cd b7       	in	r28, 0x3d	; 61
     29a:	de b7       	in	r29, 0x3e	; 62
     29c:	2e 97       	sbiw	r28, 0x0e	; 14
     29e:	0f b6       	in	r0, 0x3f	; 63
     2a0:	f8 94       	cli
     2a2:	de bf       	out	0x3e, r29	; 62
     2a4:	0f be       	out	0x3f, r0	; 63
     2a6:	cd bf       	out	0x3d, r28	; 61

    init();
     2a8:	0e 94 8b 00 	call	0x116	; 0x116 <init>
    //init sensor library's

    initStepper();
     2ac:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <initStepper>
    stepperSetSpeed(0.7, stepMode);
     2b0:	63 e3       	ldi	r22, 0x33	; 51
     2b2:	73 e3       	ldi	r23, 0x33	; 51
     2b4:	83 e3       	ldi	r24, 0x33	; 51
     2b6:	9f e3       	ldi	r25, 0x3F	; 63
     2b8:	48 e0       	ldi	r20, 0x08	; 8
     2ba:	50 e0       	ldi	r21, 0x00	; 0
     2bc:	0e 94 a9 03 	call	0x752	; 0x752 <stepperSetSpeed>
        //if() // waarde is groter dan verwacht waardoor hij bocht gaat maken
        {
            //bochtmaak functie
        }

        if(irstatus == TRUE) //als er een signaal is dat er een potje staat
     2c0:	80 91 08 02 	lds	r24, 0x0208
     2c4:	90 91 09 02 	lds	r25, 0x0209
     2c8:	81 30       	cpi	r24, 0x01	; 1
     2ca:	91 05       	cpc	r25, r1
     2cc:	09 f0       	breq	.+2      	; 0x2d0 <main+0x3c>
     2ce:	72 c0       	rjmp	.+228    	; 0x3b4 <main+0x120>
     2d0:	80 e0       	ldi	r24, 0x00	; 0
     2d2:	90 e0       	ldi	r25, 0x00	; 0
     2d4:	aa ef       	ldi	r26, 0xFA	; 250
     2d6:	b3 e4       	ldi	r27, 0x43	; 67
     2d8:	8b 87       	std	Y+11, r24	; 0x0b
     2da:	9c 87       	std	Y+12, r25	; 0x0c
     2dc:	ad 87       	std	Y+13, r26	; 0x0d
     2de:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     2e0:	6b 85       	ldd	r22, Y+11	; 0x0b
     2e2:	7c 85       	ldd	r23, Y+12	; 0x0c
     2e4:	8d 85       	ldd	r24, Y+13	; 0x0d
     2e6:	9e 85       	ldd	r25, Y+14	; 0x0e
     2e8:	20 e0       	ldi	r18, 0x00	; 0
     2ea:	30 e0       	ldi	r19, 0x00	; 0
     2ec:	4a e7       	ldi	r20, 0x7A	; 122
     2ee:	55 e4       	ldi	r21, 0x45	; 69
     2f0:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <__mulsf3>
     2f4:	dc 01       	movw	r26, r24
     2f6:	cb 01       	movw	r24, r22
     2f8:	8f 83       	std	Y+7, r24	; 0x07
     2fa:	98 87       	std	Y+8, r25	; 0x08
     2fc:	a9 87       	std	Y+9, r26	; 0x09
     2fe:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     300:	6f 81       	ldd	r22, Y+7	; 0x07
     302:	78 85       	ldd	r23, Y+8	; 0x08
     304:	89 85       	ldd	r24, Y+9	; 0x09
     306:	9a 85       	ldd	r25, Y+10	; 0x0a
     308:	20 e0       	ldi	r18, 0x00	; 0
     30a:	30 e0       	ldi	r19, 0x00	; 0
     30c:	40 e8       	ldi	r20, 0x80	; 128
     30e:	5f e3       	ldi	r21, 0x3F	; 63
     310:	0e 94 de 07 	call	0xfbc	; 0xfbc <__ltsf2>
     314:	88 23       	and	r24, r24
     316:	2c f4       	brge	.+10     	; 0x322 <main+0x8e>
		__ticks = 1;
     318:	81 e0       	ldi	r24, 0x01	; 1
     31a:	90 e0       	ldi	r25, 0x00	; 0
     31c:	9e 83       	std	Y+6, r25	; 0x06
     31e:	8d 83       	std	Y+5, r24	; 0x05
     320:	3f c0       	rjmp	.+126    	; 0x3a0 <main+0x10c>
	else if (__tmp > 65535)
     322:	6f 81       	ldd	r22, Y+7	; 0x07
     324:	78 85       	ldd	r23, Y+8	; 0x08
     326:	89 85       	ldd	r24, Y+9	; 0x09
     328:	9a 85       	ldd	r25, Y+10	; 0x0a
     32a:	20 e0       	ldi	r18, 0x00	; 0
     32c:	3f ef       	ldi	r19, 0xFF	; 255
     32e:	4f e7       	ldi	r20, 0x7F	; 127
     330:	57 e4       	ldi	r21, 0x47	; 71
     332:	0e 94 7e 07 	call	0xefc	; 0xefc <__gtsf2>
     336:	18 16       	cp	r1, r24
     338:	4c f5       	brge	.+82     	; 0x38c <main+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     33a:	6b 85       	ldd	r22, Y+11	; 0x0b
     33c:	7c 85       	ldd	r23, Y+12	; 0x0c
     33e:	8d 85       	ldd	r24, Y+13	; 0x0d
     340:	9e 85       	ldd	r25, Y+14	; 0x0e
     342:	20 e0       	ldi	r18, 0x00	; 0
     344:	30 e0       	ldi	r19, 0x00	; 0
     346:	40 e2       	ldi	r20, 0x20	; 32
     348:	51 e4       	ldi	r21, 0x41	; 65
     34a:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <__mulsf3>
     34e:	dc 01       	movw	r26, r24
     350:	cb 01       	movw	r24, r22
     352:	bc 01       	movw	r22, r24
     354:	cd 01       	movw	r24, r26
     356:	0e 94 02 04 	call	0x804	; 0x804 <__fixunssfsi>
     35a:	dc 01       	movw	r26, r24
     35c:	cb 01       	movw	r24, r22
     35e:	9e 83       	std	Y+6, r25	; 0x06
     360:	8d 83       	std	Y+5, r24	; 0x05
     362:	0f c0       	rjmp	.+30     	; 0x382 <main+0xee>
     364:	80 e9       	ldi	r24, 0x90	; 144
     366:	91 e0       	ldi	r25, 0x01	; 1
     368:	9c 83       	std	Y+4, r25	; 0x04
     36a:	8b 83       	std	Y+3, r24	; 0x03
     36c:	8b 81       	ldd	r24, Y+3	; 0x03
     36e:	9c 81       	ldd	r25, Y+4	; 0x04
     370:	01 97       	sbiw	r24, 0x01	; 1
     372:	f1 f7       	brne	.-4      	; 0x370 <main+0xdc>
     374:	9c 83       	std	Y+4, r25	; 0x04
     376:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     378:	8d 81       	ldd	r24, Y+5	; 0x05
     37a:	9e 81       	ldd	r25, Y+6	; 0x06
     37c:	01 97       	sbiw	r24, 0x01	; 1
     37e:	9e 83       	std	Y+6, r25	; 0x06
     380:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     382:	8d 81       	ldd	r24, Y+5	; 0x05
     384:	9e 81       	ldd	r25, Y+6	; 0x06
     386:	00 97       	sbiw	r24, 0x00	; 0
     388:	69 f7       	brne	.-38     	; 0x364 <main+0xd0>
     38a:	14 c0       	rjmp	.+40     	; 0x3b4 <main+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     38c:	6f 81       	ldd	r22, Y+7	; 0x07
     38e:	78 85       	ldd	r23, Y+8	; 0x08
     390:	89 85       	ldd	r24, Y+9	; 0x09
     392:	9a 85       	ldd	r25, Y+10	; 0x0a
     394:	0e 94 02 04 	call	0x804	; 0x804 <__fixunssfsi>
     398:	dc 01       	movw	r26, r24
     39a:	cb 01       	movw	r24, r22
     39c:	9e 83       	std	Y+6, r25	; 0x06
     39e:	8d 83       	std	Y+5, r24	; 0x05
     3a0:	8d 81       	ldd	r24, Y+5	; 0x05
     3a2:	9e 81       	ldd	r25, Y+6	; 0x06
     3a4:	9a 83       	std	Y+2, r25	; 0x02
     3a6:	89 83       	std	Y+1, r24	; 0x01
     3a8:	89 81       	ldd	r24, Y+1	; 0x01
     3aa:	9a 81       	ldd	r25, Y+2	; 0x02
     3ac:	01 97       	sbiw	r24, 0x01	; 1
     3ae:	f1 f7       	brne	.-4      	; 0x3ac <main+0x118>
     3b0:	9a 83       	std	Y+2, r25	; 0x02
     3b2:	89 83       	std	Y+1, r24	; 0x01
        {
            _delay_ms(500);
        }

        stepperGoto(500, voorruit, stepMode);
     3b4:	84 ef       	ldi	r24, 0xF4	; 244
     3b6:	91 e0       	ldi	r25, 0x01	; 1
     3b8:	60 e0       	ldi	r22, 0x00	; 0
     3ba:	70 e0       	ldi	r23, 0x00	; 0
     3bc:	48 e0       	ldi	r20, 0x08	; 8
     3be:	50 e0       	ldi	r21, 0x00	; 0
     3c0:	0e 94 0e 02 	call	0x41c	; 0x41c <stepperGoto>
     3c4:	7d cf       	rjmp	.-262    	; 0x2c0 <main+0x2c>

000003c6 <initStepper>:

float snelheid;
int posNu;

void initStepper(void)
{
     3c6:	df 93       	push	r29
     3c8:	cf 93       	push	r28
     3ca:	cd b7       	in	r28, 0x3d	; 61
     3cc:	de b7       	in	r29, 0x3e	; 62
    stepperLoc |= _BV(stepperPin1);
     3ce:	a4 e2       	ldi	r26, 0x24	; 36
     3d0:	b0 e0       	ldi	r27, 0x00	; 0
     3d2:	e4 e2       	ldi	r30, 0x24	; 36
     3d4:	f0 e0       	ldi	r31, 0x00	; 0
     3d6:	80 81       	ld	r24, Z
     3d8:	82 60       	ori	r24, 0x02	; 2
     3da:	8c 93       	st	X, r24
    stepperLoc |= _BV(stepperDir1);
     3dc:	a4 e2       	ldi	r26, 0x24	; 36
     3de:	b0 e0       	ldi	r27, 0x00	; 0
     3e0:	e4 e2       	ldi	r30, 0x24	; 36
     3e2:	f0 e0       	ldi	r31, 0x00	; 0
     3e4:	80 81       	ld	r24, Z
     3e6:	84 60       	ori	r24, 0x04	; 4
     3e8:	8c 93       	st	X, r24
    stepperLoc |= _BV(stepperPin2);
     3ea:	a4 e2       	ldi	r26, 0x24	; 36
     3ec:	b0 e0       	ldi	r27, 0x00	; 0
     3ee:	e4 e2       	ldi	r30, 0x24	; 36
     3f0:	f0 e0       	ldi	r31, 0x00	; 0
     3f2:	80 81       	ld	r24, Z
     3f4:	88 60       	ori	r24, 0x08	; 8
     3f6:	8c 93       	st	X, r24
    stepperLoc |= _BV(stepperDir2);
     3f8:	a4 e2       	ldi	r26, 0x24	; 36
     3fa:	b0 e0       	ldi	r27, 0x00	; 0
     3fc:	e4 e2       	ldi	r30, 0x24	; 36
     3fe:	f0 e0       	ldi	r31, 0x00	; 0
     400:	80 81       	ld	r24, Z
     402:	80 61       	ori	r24, 0x10	; 16
     404:	8c 93       	st	X, r24

    TCCR1A = 0;
     406:	e0 e8       	ldi	r30, 0x80	; 128
     408:	f0 e0       	ldi	r31, 0x00	; 0
     40a:	10 82       	st	Z, r1
    TCCR1B = (0 << CS12) | (0 << CS11) | (1 << CS10);
     40c:	e1 e8       	ldi	r30, 0x81	; 129
     40e:	f0 e0       	ldi	r31, 0x00	; 0
     410:	81 e0       	ldi	r24, 0x01	; 1
     412:	80 83       	st	Z, r24

    sei();
     414:	78 94       	sei

}
     416:	cf 91       	pop	r28
     418:	df 91       	pop	r29
     41a:	08 95       	ret

0000041c <stepperGoto>:

void stepperGoto(int steps, int dir, int mode) //aantal steps, directie, stepMode
{
     41c:	0f 93       	push	r16
     41e:	1f 93       	push	r17
     420:	df 93       	push	r29
     422:	cf 93       	push	r28
     424:	cd b7       	in	r28, 0x3d	; 61
     426:	de b7       	in	r29, 0x3e	; 62
     428:	2c 97       	sbiw	r28, 0x0c	; 12
     42a:	0f b6       	in	r0, 0x3f	; 63
     42c:	f8 94       	cli
     42e:	de bf       	out	0x3e, r29	; 62
     430:	0f be       	out	0x3f, r0	; 63
     432:	cd bf       	out	0x3d, r28	; 61
     434:	98 87       	std	Y+8, r25	; 0x08
     436:	8f 83       	std	Y+7, r24	; 0x07
     438:	7a 87       	std	Y+10, r23	; 0x0a
     43a:	69 87       	std	Y+9, r22	; 0x09
     43c:	5c 87       	std	Y+12, r21	; 0x0c
     43e:	4b 87       	std	Y+11, r20	; 0x0b

    if(dir)
     440:	89 85       	ldd	r24, Y+9	; 0x09
     442:	9a 85       	ldd	r25, Y+10	; 0x0a
     444:	00 97       	sbiw	r24, 0x00	; 0
     446:	79 f0       	breq	.+30     	; 0x466 <stepperGoto+0x4a>
    {
        stepperPort |= (1 << stepperDir1);
     448:	a5 e2       	ldi	r26, 0x25	; 37
     44a:	b0 e0       	ldi	r27, 0x00	; 0
     44c:	e5 e2       	ldi	r30, 0x25	; 37
     44e:	f0 e0       	ldi	r31, 0x00	; 0
     450:	80 81       	ld	r24, Z
     452:	84 60       	ori	r24, 0x04	; 4
     454:	8c 93       	st	X, r24
        stepperPort &= ~(1 << stepperDir2);
     456:	a5 e2       	ldi	r26, 0x25	; 37
     458:	b0 e0       	ldi	r27, 0x00	; 0
     45a:	e5 e2       	ldi	r30, 0x25	; 37
     45c:	f0 e0       	ldi	r31, 0x00	; 0
     45e:	80 81       	ld	r24, Z
     460:	8f 7e       	andi	r24, 0xEF	; 239
     462:	8c 93       	st	X, r24
     464:	0e c0       	rjmp	.+28     	; 0x482 <stepperGoto+0x66>
    }
    else
    {
        stepperPort &= ~(1 << stepperDir1);
     466:	a5 e2       	ldi	r26, 0x25	; 37
     468:	b0 e0       	ldi	r27, 0x00	; 0
     46a:	e5 e2       	ldi	r30, 0x25	; 37
     46c:	f0 e0       	ldi	r31, 0x00	; 0
     46e:	80 81       	ld	r24, Z
     470:	8b 7f       	andi	r24, 0xFB	; 251
     472:	8c 93       	st	X, r24
        stepperPort |= (1 << stepperDir2);
     474:	a5 e2       	ldi	r26, 0x25	; 37
     476:	b0 e0       	ldi	r27, 0x00	; 0
     478:	e5 e2       	ldi	r30, 0x25	; 37
     47a:	f0 e0       	ldi	r31, 0x00	; 0
     47c:	80 81       	ld	r24, Z
     47e:	80 61       	ori	r24, 0x10	; 16
     480:	8c 93       	st	X, r24
    }

    int stepsTogo = steps *2 *mode;
     482:	8f 81       	ldd	r24, Y+7	; 0x07
     484:	98 85       	ldd	r25, Y+8	; 0x08
     486:	9c 01       	movw	r18, r24
     488:	22 0f       	add	r18, r18
     48a:	33 1f       	adc	r19, r19
     48c:	8b 85       	ldd	r24, Y+11	; 0x0b
     48e:	9c 85       	ldd	r25, Y+12	; 0x0c
     490:	ac 01       	movw	r20, r24
     492:	24 9f       	mul	r18, r20
     494:	c0 01       	movw	r24, r0
     496:	25 9f       	mul	r18, r21
     498:	90 0d       	add	r25, r0
     49a:	34 9f       	mul	r19, r20
     49c:	90 0d       	add	r25, r0
     49e:	11 24       	eor	r1, r1
     4a0:	9e 83       	std	Y+6, r25	; 0x06
     4a2:	8d 83       	std	Y+5, r24	; 0x05
    int wachten;

    for(int i = 0; i < stepsTogo; i++)
     4a4:	1a 82       	std	Y+2, r1	; 0x02
     4a6:	19 82       	std	Y+1, r1	; 0x01
     4a8:	44 c0       	rjmp	.+136    	; 0x532 <stepperGoto+0x116>
    {
        while(wachten != 1)
        {
           if(TIFR1 & (1 << OCF1A))
     4aa:	e6 e3       	ldi	r30, 0x36	; 54
     4ac:	f0 e0       	ldi	r31, 0x00	; 0
     4ae:	80 81       	ld	r24, Z
     4b0:	88 2f       	mov	r24, r24
     4b2:	90 e0       	ldi	r25, 0x00	; 0
     4b4:	82 70       	andi	r24, 0x02	; 2
     4b6:	90 70       	andi	r25, 0x00	; 0
     4b8:	00 97       	sbiw	r24, 0x00	; 0
     4ba:	79 f1       	breq	.+94     	; 0x51a <stepperGoto+0xfe>
            {
                stepperPort ^= (1 << stepperPin1);
     4bc:	a5 e2       	ldi	r26, 0x25	; 37
     4be:	b0 e0       	ldi	r27, 0x00	; 0
     4c0:	e5 e2       	ldi	r30, 0x25	; 37
     4c2:	f0 e0       	ldi	r31, 0x00	; 0
     4c4:	90 81       	ld	r25, Z
     4c6:	82 e0       	ldi	r24, 0x02	; 2
     4c8:	89 27       	eor	r24, r25
     4ca:	8c 93       	st	X, r24
                stepperPort ^= (1 << stepperPin2);
     4cc:	a5 e2       	ldi	r26, 0x25	; 37
     4ce:	b0 e0       	ldi	r27, 0x00	; 0
     4d0:	e5 e2       	ldi	r30, 0x25	; 37
     4d2:	f0 e0       	ldi	r31, 0x00	; 0
     4d4:	90 81       	ld	r25, Z
     4d6:	88 e0       	ldi	r24, 0x08	; 8
     4d8:	89 27       	eor	r24, r25
     4da:	8c 93       	st	X, r24
                TCNT1 = 0;
     4dc:	e4 e8       	ldi	r30, 0x84	; 132
     4de:	f0 e0       	ldi	r31, 0x00	; 0
     4e0:	11 82       	std	Z+1, r1	; 0x01
     4e2:	10 82       	st	Z, r1
                OCR1A = snelheid;
     4e4:	08 e8       	ldi	r16, 0x88	; 136
     4e6:	10 e0       	ldi	r17, 0x00	; 0
     4e8:	80 91 0a 02 	lds	r24, 0x020A
     4ec:	90 91 0b 02 	lds	r25, 0x020B
     4f0:	a0 91 0c 02 	lds	r26, 0x020C
     4f4:	b0 91 0d 02 	lds	r27, 0x020D
     4f8:	bc 01       	movw	r22, r24
     4fa:	cd 01       	movw	r24, r26
     4fc:	0e 94 02 04 	call	0x804	; 0x804 <__fixunssfsi>
     500:	dc 01       	movw	r26, r24
     502:	cb 01       	movw	r24, r22
     504:	f8 01       	movw	r30, r16
     506:	91 83       	std	Z+1, r25	; 0x01
     508:	80 83       	st	Z, r24
                wachten = 1;
     50a:	81 e0       	ldi	r24, 0x01	; 1
     50c:	90 e0       	ldi	r25, 0x00	; 0
     50e:	9c 83       	std	Y+4, r25	; 0x04
     510:	8b 83       	std	Y+3, r24	; 0x03
                TIFR1 = (1 << OCF1A);
     512:	e6 e3       	ldi	r30, 0x36	; 54
     514:	f0 e0       	ldi	r31, 0x00	; 0
     516:	82 e0       	ldi	r24, 0x02	; 2
     518:	80 83       	st	Z, r24
    int stepsTogo = steps *2 *mode;
    int wachten;

    for(int i = 0; i < stepsTogo; i++)
    {
        while(wachten != 1)
     51a:	8b 81       	ldd	r24, Y+3	; 0x03
     51c:	9c 81       	ldd	r25, Y+4	; 0x04
     51e:	81 30       	cpi	r24, 0x01	; 1
     520:	91 05       	cpc	r25, r1
     522:	19 f6       	brne	.-122    	; 0x4aa <stepperGoto+0x8e>

            }


        }
        wachten = 0;
     524:	1c 82       	std	Y+4, r1	; 0x04
     526:	1b 82       	std	Y+3, r1	; 0x03
    }

    int stepsTogo = steps *2 *mode;
    int wachten;

    for(int i = 0; i < stepsTogo; i++)
     528:	89 81       	ldd	r24, Y+1	; 0x01
     52a:	9a 81       	ldd	r25, Y+2	; 0x02
     52c:	01 96       	adiw	r24, 0x01	; 1
     52e:	9a 83       	std	Y+2, r25	; 0x02
     530:	89 83       	std	Y+1, r24	; 0x01
     532:	29 81       	ldd	r18, Y+1	; 0x01
     534:	3a 81       	ldd	r19, Y+2	; 0x02
     536:	8d 81       	ldd	r24, Y+5	; 0x05
     538:	9e 81       	ldd	r25, Y+6	; 0x06
     53a:	28 17       	cp	r18, r24
     53c:	39 07       	cpc	r19, r25
     53e:	6c f3       	brlt	.-38     	; 0x51a <stepperGoto+0xfe>
        }
        wachten = 0;


    }
}
     540:	2c 96       	adiw	r28, 0x0c	; 12
     542:	0f b6       	in	r0, 0x3f	; 63
     544:	f8 94       	cli
     546:	de bf       	out	0x3e, r29	; 62
     548:	0f be       	out	0x3f, r0	; 63
     54a:	cd bf       	out	0x3d, r28	; 61
     54c:	cf 91       	pop	r28
     54e:	df 91       	pop	r29
     550:	1f 91       	pop	r17
     552:	0f 91       	pop	r16
     554:	08 95       	ret

00000556 <singleStepperGoTo>:

void singleStepperGoTo(int steps, int dir, int mode, int stepper)
{
     556:	0f 93       	push	r16
     558:	1f 93       	push	r17
     55a:	df 93       	push	r29
     55c:	cf 93       	push	r28
     55e:	cd b7       	in	r28, 0x3d	; 61
     560:	de b7       	in	r29, 0x3e	; 62
     562:	64 97       	sbiw	r28, 0x14	; 20
     564:	0f b6       	in	r0, 0x3f	; 63
     566:	f8 94       	cli
     568:	de bf       	out	0x3e, r29	; 62
     56a:	0f be       	out	0x3f, r0	; 63
     56c:	cd bf       	out	0x3d, r28	; 61
     56e:	9e 87       	std	Y+14, r25	; 0x0e
     570:	8d 87       	std	Y+13, r24	; 0x0d
     572:	78 8b       	std	Y+16, r23	; 0x10
     574:	6f 87       	std	Y+15, r22	; 0x0f
     576:	5a 8b       	std	Y+18, r21	; 0x12
     578:	49 8b       	std	Y+17, r20	; 0x11
     57a:	3c 8b       	std	Y+20, r19	; 0x14
     57c:	2b 8b       	std	Y+19, r18	; 0x13
    if(stepper = 1) //stepper 1 (links?)
     57e:	81 e0       	ldi	r24, 0x01	; 1
     580:	90 e0       	ldi	r25, 0x00	; 0
     582:	9c 8b       	std	Y+20, r25	; 0x14
     584:	8b 8b       	std	Y+19, r24	; 0x13
    {
        if(dir)
     586:	8f 85       	ldd	r24, Y+15	; 0x0f
     588:	98 89       	ldd	r25, Y+16	; 0x10
     58a:	00 97       	sbiw	r24, 0x00	; 0
     58c:	41 f0       	breq	.+16     	; 0x59e <singleStepperGoTo+0x48>
        {
            stepperPort |= (1 << stepperDir1);
     58e:	a5 e2       	ldi	r26, 0x25	; 37
     590:	b0 e0       	ldi	r27, 0x00	; 0
     592:	e5 e2       	ldi	r30, 0x25	; 37
     594:	f0 e0       	ldi	r31, 0x00	; 0
     596:	80 81       	ld	r24, Z
     598:	84 60       	ori	r24, 0x04	; 4
     59a:	8c 93       	st	X, r24
     59c:	07 c0       	rjmp	.+14     	; 0x5ac <singleStepperGoTo+0x56>
        }
        else
        {
            stepperPort &= ~(1 << stepperDir1);
     59e:	a5 e2       	ldi	r26, 0x25	; 37
     5a0:	b0 e0       	ldi	r27, 0x00	; 0
     5a2:	e5 e2       	ldi	r30, 0x25	; 37
     5a4:	f0 e0       	ldi	r31, 0x00	; 0
     5a6:	80 81       	ld	r24, Z
     5a8:	8b 7f       	andi	r24, 0xFB	; 251
     5aa:	8c 93       	st	X, r24
        }

        int stepsTogo = steps *2 *mode;
     5ac:	8d 85       	ldd	r24, Y+13	; 0x0d
     5ae:	9e 85       	ldd	r25, Y+14	; 0x0e
     5b0:	9c 01       	movw	r18, r24
     5b2:	22 0f       	add	r18, r18
     5b4:	33 1f       	adc	r19, r19
     5b6:	89 89       	ldd	r24, Y+17	; 0x11
     5b8:	9a 89       	ldd	r25, Y+18	; 0x12
     5ba:	ac 01       	movw	r20, r24
     5bc:	24 9f       	mul	r18, r20
     5be:	c0 01       	movw	r24, r0
     5c0:	25 9f       	mul	r18, r21
     5c2:	90 0d       	add	r25, r0
     5c4:	34 9f       	mul	r19, r20
     5c6:	90 0d       	add	r25, r0
     5c8:	11 24       	eor	r1, r1
     5ca:	9c 87       	std	Y+12, r25	; 0x0c
     5cc:	8b 87       	std	Y+11, r24	; 0x0b
        int wachten;

        for(int i = 0; i < stepsTogo; i++)
     5ce:	18 86       	std	Y+8, r1	; 0x08
     5d0:	1f 82       	std	Y+7, r1	; 0x07
     5d2:	3c c0       	rjmp	.+120    	; 0x64c <singleStepperGoTo+0xf6>
        {
            while(wachten != 1)
            {
                if(TIFR1 & (1 << OCF1A))
     5d4:	e6 e3       	ldi	r30, 0x36	; 54
     5d6:	f0 e0       	ldi	r31, 0x00	; 0
     5d8:	80 81       	ld	r24, Z
     5da:	88 2f       	mov	r24, r24
     5dc:	90 e0       	ldi	r25, 0x00	; 0
     5de:	82 70       	andi	r24, 0x02	; 2
     5e0:	90 70       	andi	r25, 0x00	; 0
     5e2:	00 97       	sbiw	r24, 0x00	; 0
     5e4:	39 f1       	breq	.+78     	; 0x634 <singleStepperGoTo+0xde>
                {
                    stepperPort ^= (1 << stepperPin1);
     5e6:	a5 e2       	ldi	r26, 0x25	; 37
     5e8:	b0 e0       	ldi	r27, 0x00	; 0
     5ea:	e5 e2       	ldi	r30, 0x25	; 37
     5ec:	f0 e0       	ldi	r31, 0x00	; 0
     5ee:	90 81       	ld	r25, Z
     5f0:	82 e0       	ldi	r24, 0x02	; 2
     5f2:	89 27       	eor	r24, r25
     5f4:	8c 93       	st	X, r24
                    TCNT1 = 0;
     5f6:	e4 e8       	ldi	r30, 0x84	; 132
     5f8:	f0 e0       	ldi	r31, 0x00	; 0
     5fa:	11 82       	std	Z+1, r1	; 0x01
     5fc:	10 82       	st	Z, r1
                    OCR1A = snelheid;
     5fe:	08 e8       	ldi	r16, 0x88	; 136
     600:	10 e0       	ldi	r17, 0x00	; 0
     602:	80 91 0a 02 	lds	r24, 0x020A
     606:	90 91 0b 02 	lds	r25, 0x020B
     60a:	a0 91 0c 02 	lds	r26, 0x020C
     60e:	b0 91 0d 02 	lds	r27, 0x020D
     612:	bc 01       	movw	r22, r24
     614:	cd 01       	movw	r24, r26
     616:	0e 94 02 04 	call	0x804	; 0x804 <__fixunssfsi>
     61a:	dc 01       	movw	r26, r24
     61c:	cb 01       	movw	r24, r22
     61e:	f8 01       	movw	r30, r16
     620:	91 83       	std	Z+1, r25	; 0x01
     622:	80 83       	st	Z, r24
                    wachten = 1;
     624:	81 e0       	ldi	r24, 0x01	; 1
     626:	90 e0       	ldi	r25, 0x00	; 0
     628:	9a 87       	std	Y+10, r25	; 0x0a
     62a:	89 87       	std	Y+9, r24	; 0x09
                    TIFR1 = (1 << OCF1A);
     62c:	e6 e3       	ldi	r30, 0x36	; 54
     62e:	f0 e0       	ldi	r31, 0x00	; 0
     630:	82 e0       	ldi	r24, 0x02	; 2
     632:	80 83       	st	Z, r24
        int stepsTogo = steps *2 *mode;
        int wachten;

        for(int i = 0; i < stepsTogo; i++)
        {
            while(wachten != 1)
     634:	89 85       	ldd	r24, Y+9	; 0x09
     636:	9a 85       	ldd	r25, Y+10	; 0x0a
     638:	81 30       	cpi	r24, 0x01	; 1
     63a:	91 05       	cpc	r25, r1
     63c:	59 f6       	brne	.-106    	; 0x5d4 <singleStepperGoTo+0x7e>

                }


            }
            wachten = 0;
     63e:	1a 86       	std	Y+10, r1	; 0x0a
     640:	19 86       	std	Y+9, r1	; 0x09
        }

        int stepsTogo = steps *2 *mode;
        int wachten;

        for(int i = 0; i < stepsTogo; i++)
     642:	8f 81       	ldd	r24, Y+7	; 0x07
     644:	98 85       	ldd	r25, Y+8	; 0x08
     646:	01 96       	adiw	r24, 0x01	; 1
     648:	98 87       	std	Y+8, r25	; 0x08
     64a:	8f 83       	std	Y+7, r24	; 0x07
     64c:	2f 81       	ldd	r18, Y+7	; 0x07
     64e:	38 85       	ldd	r19, Y+8	; 0x08
     650:	8b 85       	ldd	r24, Y+11	; 0x0b
     652:	9c 85       	ldd	r25, Y+12	; 0x0c
     654:	28 17       	cp	r18, r24
     656:	39 07       	cpc	r19, r25
     658:	6c f3       	brlt	.-38     	; 0x634 <singleStepperGoTo+0xde>


        }
    }

    if(stepper = 0) //stepper 2 (rechts?)
     65a:	1c 8a       	std	Y+20, r1	; 0x14
     65c:	1b 8a       	std	Y+19, r1	; 0x13
     65e:	8b 89       	ldd	r24, Y+19	; 0x13
     660:	9c 89       	ldd	r25, Y+20	; 0x14
     662:	00 97       	sbiw	r24, 0x00	; 0
     664:	09 f4       	brne	.+2      	; 0x668 <singleStepperGoTo+0x112>
     666:	6a c0       	rjmp	.+212    	; 0x73c <singleStepperGoTo+0x1e6>
    {
        if(dir)
     668:	8f 85       	ldd	r24, Y+15	; 0x0f
     66a:	98 89       	ldd	r25, Y+16	; 0x10
     66c:	00 97       	sbiw	r24, 0x00	; 0
     66e:	41 f0       	breq	.+16     	; 0x680 <singleStepperGoTo+0x12a>
        {
            stepperPort &= ~(1 << stepperDir2);
     670:	a5 e2       	ldi	r26, 0x25	; 37
     672:	b0 e0       	ldi	r27, 0x00	; 0
     674:	e5 e2       	ldi	r30, 0x25	; 37
     676:	f0 e0       	ldi	r31, 0x00	; 0
     678:	80 81       	ld	r24, Z
     67a:	8f 7e       	andi	r24, 0xEF	; 239
     67c:	8c 93       	st	X, r24
     67e:	07 c0       	rjmp	.+14     	; 0x68e <singleStepperGoTo+0x138>
        }
        else
        {
            stepperPort |= (1 << stepperDir2);
     680:	a5 e2       	ldi	r26, 0x25	; 37
     682:	b0 e0       	ldi	r27, 0x00	; 0
     684:	e5 e2       	ldi	r30, 0x25	; 37
     686:	f0 e0       	ldi	r31, 0x00	; 0
     688:	80 81       	ld	r24, Z
     68a:	80 61       	ori	r24, 0x10	; 16
     68c:	8c 93       	st	X, r24
        }

        int stepsTogo = steps *2 *mode;
     68e:	8d 85       	ldd	r24, Y+13	; 0x0d
     690:	9e 85       	ldd	r25, Y+14	; 0x0e
     692:	9c 01       	movw	r18, r24
     694:	22 0f       	add	r18, r18
     696:	33 1f       	adc	r19, r19
     698:	89 89       	ldd	r24, Y+17	; 0x11
     69a:	9a 89       	ldd	r25, Y+18	; 0x12
     69c:	ac 01       	movw	r20, r24
     69e:	24 9f       	mul	r18, r20
     6a0:	c0 01       	movw	r24, r0
     6a2:	25 9f       	mul	r18, r21
     6a4:	90 0d       	add	r25, r0
     6a6:	34 9f       	mul	r19, r20
     6a8:	90 0d       	add	r25, r0
     6aa:	11 24       	eor	r1, r1
     6ac:	9e 83       	std	Y+6, r25	; 0x06
     6ae:	8d 83       	std	Y+5, r24	; 0x05
        int wachten;

        for(int i = 0; i < stepsTogo; i++)
     6b0:	1a 82       	std	Y+2, r1	; 0x02
     6b2:	19 82       	std	Y+1, r1	; 0x01
     6b4:	3c c0       	rjmp	.+120    	; 0x72e <singleStepperGoTo+0x1d8>
        {
            while(wachten != 1)
            {
                if(TIFR1 & (1 << OCF1A))
     6b6:	e6 e3       	ldi	r30, 0x36	; 54
     6b8:	f0 e0       	ldi	r31, 0x00	; 0
     6ba:	80 81       	ld	r24, Z
     6bc:	88 2f       	mov	r24, r24
     6be:	90 e0       	ldi	r25, 0x00	; 0
     6c0:	82 70       	andi	r24, 0x02	; 2
     6c2:	90 70       	andi	r25, 0x00	; 0
     6c4:	00 97       	sbiw	r24, 0x00	; 0
     6c6:	39 f1       	breq	.+78     	; 0x716 <singleStepperGoTo+0x1c0>
                {
                    stepperPort ^= (1 << stepperPin2);
     6c8:	a5 e2       	ldi	r26, 0x25	; 37
     6ca:	b0 e0       	ldi	r27, 0x00	; 0
     6cc:	e5 e2       	ldi	r30, 0x25	; 37
     6ce:	f0 e0       	ldi	r31, 0x00	; 0
     6d0:	90 81       	ld	r25, Z
     6d2:	88 e0       	ldi	r24, 0x08	; 8
     6d4:	89 27       	eor	r24, r25
     6d6:	8c 93       	st	X, r24
                    TCNT1 = 0;
     6d8:	e4 e8       	ldi	r30, 0x84	; 132
     6da:	f0 e0       	ldi	r31, 0x00	; 0
     6dc:	11 82       	std	Z+1, r1	; 0x01
     6de:	10 82       	st	Z, r1
                    OCR1A = snelheid;
     6e0:	08 e8       	ldi	r16, 0x88	; 136
     6e2:	10 e0       	ldi	r17, 0x00	; 0
     6e4:	80 91 0a 02 	lds	r24, 0x020A
     6e8:	90 91 0b 02 	lds	r25, 0x020B
     6ec:	a0 91 0c 02 	lds	r26, 0x020C
     6f0:	b0 91 0d 02 	lds	r27, 0x020D
     6f4:	bc 01       	movw	r22, r24
     6f6:	cd 01       	movw	r24, r26
     6f8:	0e 94 02 04 	call	0x804	; 0x804 <__fixunssfsi>
     6fc:	dc 01       	movw	r26, r24
     6fe:	cb 01       	movw	r24, r22
     700:	f8 01       	movw	r30, r16
     702:	91 83       	std	Z+1, r25	; 0x01
     704:	80 83       	st	Z, r24
                    wachten = 1;
     706:	81 e0       	ldi	r24, 0x01	; 1
     708:	90 e0       	ldi	r25, 0x00	; 0
     70a:	9c 83       	std	Y+4, r25	; 0x04
     70c:	8b 83       	std	Y+3, r24	; 0x03
                    TIFR1 = (1 << OCF1A);
     70e:	e6 e3       	ldi	r30, 0x36	; 54
     710:	f0 e0       	ldi	r31, 0x00	; 0
     712:	82 e0       	ldi	r24, 0x02	; 2
     714:	80 83       	st	Z, r24
        int stepsTogo = steps *2 *mode;
        int wachten;

        for(int i = 0; i < stepsTogo; i++)
        {
            while(wachten != 1)
     716:	8b 81       	ldd	r24, Y+3	; 0x03
     718:	9c 81       	ldd	r25, Y+4	; 0x04
     71a:	81 30       	cpi	r24, 0x01	; 1
     71c:	91 05       	cpc	r25, r1
     71e:	59 f6       	brne	.-106    	; 0x6b6 <singleStepperGoTo+0x160>

                }


            }
            wachten = 0;
     720:	1c 82       	std	Y+4, r1	; 0x04
     722:	1b 82       	std	Y+3, r1	; 0x03
        }

        int stepsTogo = steps *2 *mode;
        int wachten;

        for(int i = 0; i < stepsTogo; i++)
     724:	89 81       	ldd	r24, Y+1	; 0x01
     726:	9a 81       	ldd	r25, Y+2	; 0x02
     728:	01 96       	adiw	r24, 0x01	; 1
     72a:	9a 83       	std	Y+2, r25	; 0x02
     72c:	89 83       	std	Y+1, r24	; 0x01
     72e:	29 81       	ldd	r18, Y+1	; 0x01
     730:	3a 81       	ldd	r19, Y+2	; 0x02
     732:	8d 81       	ldd	r24, Y+5	; 0x05
     734:	9e 81       	ldd	r25, Y+6	; 0x06
     736:	28 17       	cp	r18, r24
     738:	39 07       	cpc	r19, r25
     73a:	6c f3       	brlt	.-38     	; 0x716 <singleStepperGoTo+0x1c0>
            wachten = 0;


        }
    }
}
     73c:	64 96       	adiw	r28, 0x14	; 20
     73e:	0f b6       	in	r0, 0x3f	; 63
     740:	f8 94       	cli
     742:	de bf       	out	0x3e, r29	; 62
     744:	0f be       	out	0x3f, r0	; 63
     746:	cd bf       	out	0x3d, r28	; 61
     748:	cf 91       	pop	r28
     74a:	df 91       	pop	r29
     74c:	1f 91       	pop	r17
     74e:	0f 91       	pop	r16
     750:	08 95       	ret

00000752 <stepperSetSpeed>:

void stepperSetSpeed(float rps, int mode)
{
     752:	ef 92       	push	r14
     754:	ff 92       	push	r15
     756:	0f 93       	push	r16
     758:	1f 93       	push	r17
     75a:	df 93       	push	r29
     75c:	cf 93       	push	r28
     75e:	cd b7       	in	r28, 0x3d	; 61
     760:	de b7       	in	r29, 0x3e	; 62
     762:	2a 97       	sbiw	r28, 0x0a	; 10
     764:	0f b6       	in	r0, 0x3f	; 63
     766:	f8 94       	cli
     768:	de bf       	out	0x3e, r29	; 62
     76a:	0f be       	out	0x3f, r0	; 63
     76c:	cd bf       	out	0x3d, r28	; 61
     76e:	6d 83       	std	Y+5, r22	; 0x05
     770:	7e 83       	std	Y+6, r23	; 0x06
     772:	8f 83       	std	Y+7, r24	; 0x07
     774:	98 87       	std	Y+8, r25	; 0x08
     776:	5a 87       	std	Y+10, r21	; 0x0a
     778:	49 87       	std	Y+9, r20	; 0x09
    float rekenwaarde = rps * 400 * mode;
     77a:	6d 81       	ldd	r22, Y+5	; 0x05
     77c:	7e 81       	ldd	r23, Y+6	; 0x06
     77e:	8f 81       	ldd	r24, Y+7	; 0x07
     780:	98 85       	ldd	r25, Y+8	; 0x08
     782:	20 e0       	ldi	r18, 0x00	; 0
     784:	30 e0       	ldi	r19, 0x00	; 0
     786:	48 ec       	ldi	r20, 0xC8	; 200
     788:	53 e4       	ldi	r21, 0x43	; 67
     78a:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <__mulsf3>
     78e:	dc 01       	movw	r26, r24
     790:	cb 01       	movw	r24, r22
     792:	7c 01       	movw	r14, r24
     794:	8d 01       	movw	r16, r26
     796:	89 85       	ldd	r24, Y+9	; 0x09
     798:	9a 85       	ldd	r25, Y+10	; 0x0a
     79a:	aa 27       	eor	r26, r26
     79c:	97 fd       	sbrc	r25, 7
     79e:	a0 95       	com	r26
     7a0:	ba 2f       	mov	r27, r26
     7a2:	bc 01       	movw	r22, r24
     7a4:	cd 01       	movw	r24, r26
     7a6:	0e 94 0e 08 	call	0x101c	; 0x101c <__floatsisf>
     7aa:	9b 01       	movw	r18, r22
     7ac:	ac 01       	movw	r20, r24
     7ae:	c8 01       	movw	r24, r16
     7b0:	b7 01       	movw	r22, r14
     7b2:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <__mulsf3>
     7b6:	dc 01       	movw	r26, r24
     7b8:	cb 01       	movw	r24, r22
     7ba:	89 83       	std	Y+1, r24	; 0x01
     7bc:	9a 83       	std	Y+2, r25	; 0x02
     7be:	ab 83       	std	Y+3, r26	; 0x03
     7c0:	bc 83       	std	Y+4, r27	; 0x04
    snelheid = 16000000 / rekenwaarde;
     7c2:	60 e0       	ldi	r22, 0x00	; 0
     7c4:	74 e2       	ldi	r23, 0x24	; 36
     7c6:	84 e7       	ldi	r24, 0x74	; 116
     7c8:	9b e4       	ldi	r25, 0x4B	; 75
     7ca:	29 81       	ldd	r18, Y+1	; 0x01
     7cc:	3a 81       	ldd	r19, Y+2	; 0x02
     7ce:	4b 81       	ldd	r20, Y+3	; 0x03
     7d0:	5c 81       	ldd	r21, Y+4	; 0x04
     7d2:	0e 94 d2 06 	call	0xda4	; 0xda4 <__divsf3>
     7d6:	dc 01       	movw	r26, r24
     7d8:	cb 01       	movw	r24, r22
     7da:	80 93 0a 02 	sts	0x020A, r24
     7de:	90 93 0b 02 	sts	0x020B, r25
     7e2:	a0 93 0c 02 	sts	0x020C, r26
     7e6:	b0 93 0d 02 	sts	0x020D, r27
}
     7ea:	2a 96       	adiw	r28, 0x0a	; 10
     7ec:	0f b6       	in	r0, 0x3f	; 63
     7ee:	f8 94       	cli
     7f0:	de bf       	out	0x3e, r29	; 62
     7f2:	0f be       	out	0x3f, r0	; 63
     7f4:	cd bf       	out	0x3d, r28	; 61
     7f6:	cf 91       	pop	r28
     7f8:	df 91       	pop	r29
     7fa:	1f 91       	pop	r17
     7fc:	0f 91       	pop	r16
     7fe:	ff 90       	pop	r15
     800:	ef 90       	pop	r14
     802:	08 95       	ret

00000804 <__fixunssfsi>:
     804:	ef 92       	push	r14
     806:	ff 92       	push	r15
     808:	0f 93       	push	r16
     80a:	1f 93       	push	r17
     80c:	7b 01       	movw	r14, r22
     80e:	8c 01       	movw	r16, r24
     810:	20 e0       	ldi	r18, 0x00	; 0
     812:	30 e0       	ldi	r19, 0x00	; 0
     814:	40 e0       	ldi	r20, 0x00	; 0
     816:	5f e4       	ldi	r21, 0x4F	; 79
     818:	0e 94 ae 07 	call	0xf5c	; 0xf5c <__gesf2>
     81c:	88 23       	and	r24, r24
     81e:	8c f0       	brlt	.+34     	; 0x842 <__fixunssfsi+0x3e>
     820:	c8 01       	movw	r24, r16
     822:	b7 01       	movw	r22, r14
     824:	20 e0       	ldi	r18, 0x00	; 0
     826:	30 e0       	ldi	r19, 0x00	; 0
     828:	40 e0       	ldi	r20, 0x00	; 0
     82a:	5f e4       	ldi	r21, 0x4F	; 79
     82c:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <__subsf3>
     830:	0e 94 6c 08 	call	0x10d8	; 0x10d8 <__fixsfsi>
     834:	9b 01       	movw	r18, r22
     836:	ac 01       	movw	r20, r24
     838:	20 50       	subi	r18, 0x00	; 0
     83a:	30 40       	sbci	r19, 0x00	; 0
     83c:	40 40       	sbci	r20, 0x00	; 0
     83e:	50 48       	sbci	r21, 0x80	; 128
     840:	06 c0       	rjmp	.+12     	; 0x84e <__fixunssfsi+0x4a>
     842:	c8 01       	movw	r24, r16
     844:	b7 01       	movw	r22, r14
     846:	0e 94 6c 08 	call	0x10d8	; 0x10d8 <__fixsfsi>
     84a:	9b 01       	movw	r18, r22
     84c:	ac 01       	movw	r20, r24
     84e:	b9 01       	movw	r22, r18
     850:	ca 01       	movw	r24, r20
     852:	1f 91       	pop	r17
     854:	0f 91       	pop	r16
     856:	ff 90       	pop	r15
     858:	ef 90       	pop	r14
     85a:	08 95       	ret

0000085c <_fpadd_parts>:
     85c:	a0 e0       	ldi	r26, 0x00	; 0
     85e:	b0 e0       	ldi	r27, 0x00	; 0
     860:	e4 e3       	ldi	r30, 0x34	; 52
     862:	f4 e0       	ldi	r31, 0x04	; 4
     864:	0c 94 b5 0a 	jmp	0x156a	; 0x156a <__prologue_saves__>
     868:	dc 01       	movw	r26, r24
     86a:	2b 01       	movw	r4, r22
     86c:	fa 01       	movw	r30, r20
     86e:	9c 91       	ld	r25, X
     870:	92 30       	cpi	r25, 0x02	; 2
     872:	08 f4       	brcc	.+2      	; 0x876 <_fpadd_parts+0x1a>
     874:	39 c1       	rjmp	.+626    	; 0xae8 <__stack+0x1e9>
     876:	eb 01       	movw	r28, r22
     878:	88 81       	ld	r24, Y
     87a:	82 30       	cpi	r24, 0x02	; 2
     87c:	08 f4       	brcc	.+2      	; 0x880 <_fpadd_parts+0x24>
     87e:	33 c1       	rjmp	.+614    	; 0xae6 <__stack+0x1e7>
     880:	94 30       	cpi	r25, 0x04	; 4
     882:	69 f4       	brne	.+26     	; 0x89e <_fpadd_parts+0x42>
     884:	84 30       	cpi	r24, 0x04	; 4
     886:	09 f0       	breq	.+2      	; 0x88a <_fpadd_parts+0x2e>
     888:	2f c1       	rjmp	.+606    	; 0xae8 <__stack+0x1e9>
     88a:	11 96       	adiw	r26, 0x01	; 1
     88c:	9c 91       	ld	r25, X
     88e:	11 97       	sbiw	r26, 0x01	; 1
     890:	89 81       	ldd	r24, Y+1	; 0x01
     892:	98 17       	cp	r25, r24
     894:	09 f4       	brne	.+2      	; 0x898 <_fpadd_parts+0x3c>
     896:	28 c1       	rjmp	.+592    	; 0xae8 <__stack+0x1e9>
     898:	a0 e0       	ldi	r26, 0x00	; 0
     89a:	b1 e0       	ldi	r27, 0x01	; 1
     89c:	25 c1       	rjmp	.+586    	; 0xae8 <__stack+0x1e9>
     89e:	84 30       	cpi	r24, 0x04	; 4
     8a0:	09 f4       	brne	.+2      	; 0x8a4 <_fpadd_parts+0x48>
     8a2:	21 c1       	rjmp	.+578    	; 0xae6 <__stack+0x1e7>
     8a4:	82 30       	cpi	r24, 0x02	; 2
     8a6:	a9 f4       	brne	.+42     	; 0x8d2 <_fpadd_parts+0x76>
     8a8:	92 30       	cpi	r25, 0x02	; 2
     8aa:	09 f0       	breq	.+2      	; 0x8ae <_fpadd_parts+0x52>
     8ac:	1d c1       	rjmp	.+570    	; 0xae8 <__stack+0x1e9>
     8ae:	9a 01       	movw	r18, r20
     8b0:	ad 01       	movw	r20, r26
     8b2:	88 e0       	ldi	r24, 0x08	; 8
     8b4:	ea 01       	movw	r28, r20
     8b6:	09 90       	ld	r0, Y+
     8b8:	ae 01       	movw	r20, r28
     8ba:	e9 01       	movw	r28, r18
     8bc:	09 92       	st	Y+, r0
     8be:	9e 01       	movw	r18, r28
     8c0:	81 50       	subi	r24, 0x01	; 1
     8c2:	c1 f7       	brne	.-16     	; 0x8b4 <_fpadd_parts+0x58>
     8c4:	e2 01       	movw	r28, r4
     8c6:	89 81       	ldd	r24, Y+1	; 0x01
     8c8:	11 96       	adiw	r26, 0x01	; 1
     8ca:	9c 91       	ld	r25, X
     8cc:	89 23       	and	r24, r25
     8ce:	81 83       	std	Z+1, r24	; 0x01
     8d0:	08 c1       	rjmp	.+528    	; 0xae2 <__stack+0x1e3>
     8d2:	92 30       	cpi	r25, 0x02	; 2
     8d4:	09 f4       	brne	.+2      	; 0x8d8 <_fpadd_parts+0x7c>
     8d6:	07 c1       	rjmp	.+526    	; 0xae6 <__stack+0x1e7>
     8d8:	12 96       	adiw	r26, 0x02	; 2
     8da:	2d 90       	ld	r2, X+
     8dc:	3c 90       	ld	r3, X
     8de:	13 97       	sbiw	r26, 0x03	; 3
     8e0:	eb 01       	movw	r28, r22
     8e2:	8a 81       	ldd	r24, Y+2	; 0x02
     8e4:	9b 81       	ldd	r25, Y+3	; 0x03
     8e6:	14 96       	adiw	r26, 0x04	; 4
     8e8:	ad 90       	ld	r10, X+
     8ea:	bd 90       	ld	r11, X+
     8ec:	cd 90       	ld	r12, X+
     8ee:	dc 90       	ld	r13, X
     8f0:	17 97       	sbiw	r26, 0x07	; 7
     8f2:	ec 80       	ldd	r14, Y+4	; 0x04
     8f4:	fd 80       	ldd	r15, Y+5	; 0x05
     8f6:	0e 81       	ldd	r16, Y+6	; 0x06
     8f8:	1f 81       	ldd	r17, Y+7	; 0x07
     8fa:	91 01       	movw	r18, r2
     8fc:	28 1b       	sub	r18, r24
     8fe:	39 0b       	sbc	r19, r25
     900:	b9 01       	movw	r22, r18
     902:	37 ff       	sbrs	r19, 7
     904:	04 c0       	rjmp	.+8      	; 0x90e <__stack+0xf>
     906:	66 27       	eor	r22, r22
     908:	77 27       	eor	r23, r23
     90a:	62 1b       	sub	r22, r18
     90c:	73 0b       	sbc	r23, r19
     90e:	60 32       	cpi	r22, 0x20	; 32
     910:	71 05       	cpc	r23, r1
     912:	0c f0       	brlt	.+2      	; 0x916 <__stack+0x17>
     914:	61 c0       	rjmp	.+194    	; 0x9d8 <__stack+0xd9>
     916:	12 16       	cp	r1, r18
     918:	13 06       	cpc	r1, r19
     91a:	6c f5       	brge	.+90     	; 0x976 <__stack+0x77>
     91c:	37 01       	movw	r6, r14
     91e:	48 01       	movw	r8, r16
     920:	06 2e       	mov	r0, r22
     922:	04 c0       	rjmp	.+8      	; 0x92c <__stack+0x2d>
     924:	96 94       	lsr	r9
     926:	87 94       	ror	r8
     928:	77 94       	ror	r7
     92a:	67 94       	ror	r6
     92c:	0a 94       	dec	r0
     92e:	d2 f7       	brpl	.-12     	; 0x924 <__stack+0x25>
     930:	21 e0       	ldi	r18, 0x01	; 1
     932:	30 e0       	ldi	r19, 0x00	; 0
     934:	40 e0       	ldi	r20, 0x00	; 0
     936:	50 e0       	ldi	r21, 0x00	; 0
     938:	04 c0       	rjmp	.+8      	; 0x942 <__stack+0x43>
     93a:	22 0f       	add	r18, r18
     93c:	33 1f       	adc	r19, r19
     93e:	44 1f       	adc	r20, r20
     940:	55 1f       	adc	r21, r21
     942:	6a 95       	dec	r22
     944:	d2 f7       	brpl	.-12     	; 0x93a <__stack+0x3b>
     946:	21 50       	subi	r18, 0x01	; 1
     948:	30 40       	sbci	r19, 0x00	; 0
     94a:	40 40       	sbci	r20, 0x00	; 0
     94c:	50 40       	sbci	r21, 0x00	; 0
     94e:	2e 21       	and	r18, r14
     950:	3f 21       	and	r19, r15
     952:	40 23       	and	r20, r16
     954:	51 23       	and	r21, r17
     956:	21 15       	cp	r18, r1
     958:	31 05       	cpc	r19, r1
     95a:	41 05       	cpc	r20, r1
     95c:	51 05       	cpc	r21, r1
     95e:	21 f0       	breq	.+8      	; 0x968 <__stack+0x69>
     960:	21 e0       	ldi	r18, 0x01	; 1
     962:	30 e0       	ldi	r19, 0x00	; 0
     964:	40 e0       	ldi	r20, 0x00	; 0
     966:	50 e0       	ldi	r21, 0x00	; 0
     968:	79 01       	movw	r14, r18
     96a:	8a 01       	movw	r16, r20
     96c:	e6 28       	or	r14, r6
     96e:	f7 28       	or	r15, r7
     970:	08 29       	or	r16, r8
     972:	19 29       	or	r17, r9
     974:	3c c0       	rjmp	.+120    	; 0x9ee <__stack+0xef>
     976:	23 2b       	or	r18, r19
     978:	d1 f1       	breq	.+116    	; 0x9ee <__stack+0xef>
     97a:	26 0e       	add	r2, r22
     97c:	37 1e       	adc	r3, r23
     97e:	35 01       	movw	r6, r10
     980:	46 01       	movw	r8, r12
     982:	06 2e       	mov	r0, r22
     984:	04 c0       	rjmp	.+8      	; 0x98e <__stack+0x8f>
     986:	96 94       	lsr	r9
     988:	87 94       	ror	r8
     98a:	77 94       	ror	r7
     98c:	67 94       	ror	r6
     98e:	0a 94       	dec	r0
     990:	d2 f7       	brpl	.-12     	; 0x986 <__stack+0x87>
     992:	21 e0       	ldi	r18, 0x01	; 1
     994:	30 e0       	ldi	r19, 0x00	; 0
     996:	40 e0       	ldi	r20, 0x00	; 0
     998:	50 e0       	ldi	r21, 0x00	; 0
     99a:	04 c0       	rjmp	.+8      	; 0x9a4 <__stack+0xa5>
     99c:	22 0f       	add	r18, r18
     99e:	33 1f       	adc	r19, r19
     9a0:	44 1f       	adc	r20, r20
     9a2:	55 1f       	adc	r21, r21
     9a4:	6a 95       	dec	r22
     9a6:	d2 f7       	brpl	.-12     	; 0x99c <__stack+0x9d>
     9a8:	21 50       	subi	r18, 0x01	; 1
     9aa:	30 40       	sbci	r19, 0x00	; 0
     9ac:	40 40       	sbci	r20, 0x00	; 0
     9ae:	50 40       	sbci	r21, 0x00	; 0
     9b0:	2a 21       	and	r18, r10
     9b2:	3b 21       	and	r19, r11
     9b4:	4c 21       	and	r20, r12
     9b6:	5d 21       	and	r21, r13
     9b8:	21 15       	cp	r18, r1
     9ba:	31 05       	cpc	r19, r1
     9bc:	41 05       	cpc	r20, r1
     9be:	51 05       	cpc	r21, r1
     9c0:	21 f0       	breq	.+8      	; 0x9ca <__stack+0xcb>
     9c2:	21 e0       	ldi	r18, 0x01	; 1
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	40 e0       	ldi	r20, 0x00	; 0
     9c8:	50 e0       	ldi	r21, 0x00	; 0
     9ca:	59 01       	movw	r10, r18
     9cc:	6a 01       	movw	r12, r20
     9ce:	a6 28       	or	r10, r6
     9d0:	b7 28       	or	r11, r7
     9d2:	c8 28       	or	r12, r8
     9d4:	d9 28       	or	r13, r9
     9d6:	0b c0       	rjmp	.+22     	; 0x9ee <__stack+0xef>
     9d8:	82 15       	cp	r24, r2
     9da:	93 05       	cpc	r25, r3
     9dc:	2c f0       	brlt	.+10     	; 0x9e8 <__stack+0xe9>
     9de:	1c 01       	movw	r2, r24
     9e0:	aa 24       	eor	r10, r10
     9e2:	bb 24       	eor	r11, r11
     9e4:	65 01       	movw	r12, r10
     9e6:	03 c0       	rjmp	.+6      	; 0x9ee <__stack+0xef>
     9e8:	ee 24       	eor	r14, r14
     9ea:	ff 24       	eor	r15, r15
     9ec:	87 01       	movw	r16, r14
     9ee:	11 96       	adiw	r26, 0x01	; 1
     9f0:	9c 91       	ld	r25, X
     9f2:	d2 01       	movw	r26, r4
     9f4:	11 96       	adiw	r26, 0x01	; 1
     9f6:	8c 91       	ld	r24, X
     9f8:	98 17       	cp	r25, r24
     9fa:	09 f4       	brne	.+2      	; 0x9fe <__stack+0xff>
     9fc:	45 c0       	rjmp	.+138    	; 0xa88 <__stack+0x189>
     9fe:	99 23       	and	r25, r25
     a00:	39 f0       	breq	.+14     	; 0xa10 <__stack+0x111>
     a02:	a8 01       	movw	r20, r16
     a04:	97 01       	movw	r18, r14
     a06:	2a 19       	sub	r18, r10
     a08:	3b 09       	sbc	r19, r11
     a0a:	4c 09       	sbc	r20, r12
     a0c:	5d 09       	sbc	r21, r13
     a0e:	06 c0       	rjmp	.+12     	; 0xa1c <__stack+0x11d>
     a10:	a6 01       	movw	r20, r12
     a12:	95 01       	movw	r18, r10
     a14:	2e 19       	sub	r18, r14
     a16:	3f 09       	sbc	r19, r15
     a18:	40 0b       	sbc	r20, r16
     a1a:	51 0b       	sbc	r21, r17
     a1c:	57 fd       	sbrc	r21, 7
     a1e:	08 c0       	rjmp	.+16     	; 0xa30 <__stack+0x131>
     a20:	11 82       	std	Z+1, r1	; 0x01
     a22:	33 82       	std	Z+3, r3	; 0x03
     a24:	22 82       	std	Z+2, r2	; 0x02
     a26:	24 83       	std	Z+4, r18	; 0x04
     a28:	35 83       	std	Z+5, r19	; 0x05
     a2a:	46 83       	std	Z+6, r20	; 0x06
     a2c:	57 83       	std	Z+7, r21	; 0x07
     a2e:	1d c0       	rjmp	.+58     	; 0xa6a <__stack+0x16b>
     a30:	81 e0       	ldi	r24, 0x01	; 1
     a32:	81 83       	std	Z+1, r24	; 0x01
     a34:	33 82       	std	Z+3, r3	; 0x03
     a36:	22 82       	std	Z+2, r2	; 0x02
     a38:	88 27       	eor	r24, r24
     a3a:	99 27       	eor	r25, r25
     a3c:	dc 01       	movw	r26, r24
     a3e:	82 1b       	sub	r24, r18
     a40:	93 0b       	sbc	r25, r19
     a42:	a4 0b       	sbc	r26, r20
     a44:	b5 0b       	sbc	r27, r21
     a46:	84 83       	std	Z+4, r24	; 0x04
     a48:	95 83       	std	Z+5, r25	; 0x05
     a4a:	a6 83       	std	Z+6, r26	; 0x06
     a4c:	b7 83       	std	Z+7, r27	; 0x07
     a4e:	0d c0       	rjmp	.+26     	; 0xa6a <__stack+0x16b>
     a50:	22 0f       	add	r18, r18
     a52:	33 1f       	adc	r19, r19
     a54:	44 1f       	adc	r20, r20
     a56:	55 1f       	adc	r21, r21
     a58:	24 83       	std	Z+4, r18	; 0x04
     a5a:	35 83       	std	Z+5, r19	; 0x05
     a5c:	46 83       	std	Z+6, r20	; 0x06
     a5e:	57 83       	std	Z+7, r21	; 0x07
     a60:	82 81       	ldd	r24, Z+2	; 0x02
     a62:	93 81       	ldd	r25, Z+3	; 0x03
     a64:	01 97       	sbiw	r24, 0x01	; 1
     a66:	93 83       	std	Z+3, r25	; 0x03
     a68:	82 83       	std	Z+2, r24	; 0x02
     a6a:	24 81       	ldd	r18, Z+4	; 0x04
     a6c:	35 81       	ldd	r19, Z+5	; 0x05
     a6e:	46 81       	ldd	r20, Z+6	; 0x06
     a70:	57 81       	ldd	r21, Z+7	; 0x07
     a72:	da 01       	movw	r26, r20
     a74:	c9 01       	movw	r24, r18
     a76:	01 97       	sbiw	r24, 0x01	; 1
     a78:	a1 09       	sbc	r26, r1
     a7a:	b1 09       	sbc	r27, r1
     a7c:	8f 5f       	subi	r24, 0xFF	; 255
     a7e:	9f 4f       	sbci	r25, 0xFF	; 255
     a80:	af 4f       	sbci	r26, 0xFF	; 255
     a82:	bf 43       	sbci	r27, 0x3F	; 63
     a84:	28 f3       	brcs	.-54     	; 0xa50 <__stack+0x151>
     a86:	0b c0       	rjmp	.+22     	; 0xa9e <__stack+0x19f>
     a88:	91 83       	std	Z+1, r25	; 0x01
     a8a:	33 82       	std	Z+3, r3	; 0x03
     a8c:	22 82       	std	Z+2, r2	; 0x02
     a8e:	ea 0c       	add	r14, r10
     a90:	fb 1c       	adc	r15, r11
     a92:	0c 1d       	adc	r16, r12
     a94:	1d 1d       	adc	r17, r13
     a96:	e4 82       	std	Z+4, r14	; 0x04
     a98:	f5 82       	std	Z+5, r15	; 0x05
     a9a:	06 83       	std	Z+6, r16	; 0x06
     a9c:	17 83       	std	Z+7, r17	; 0x07
     a9e:	83 e0       	ldi	r24, 0x03	; 3
     aa0:	80 83       	st	Z, r24
     aa2:	24 81       	ldd	r18, Z+4	; 0x04
     aa4:	35 81       	ldd	r19, Z+5	; 0x05
     aa6:	46 81       	ldd	r20, Z+6	; 0x06
     aa8:	57 81       	ldd	r21, Z+7	; 0x07
     aaa:	57 ff       	sbrs	r21, 7
     aac:	1a c0       	rjmp	.+52     	; 0xae2 <__stack+0x1e3>
     aae:	c9 01       	movw	r24, r18
     ab0:	aa 27       	eor	r26, r26
     ab2:	97 fd       	sbrc	r25, 7
     ab4:	a0 95       	com	r26
     ab6:	ba 2f       	mov	r27, r26
     ab8:	81 70       	andi	r24, 0x01	; 1
     aba:	90 70       	andi	r25, 0x00	; 0
     abc:	a0 70       	andi	r26, 0x00	; 0
     abe:	b0 70       	andi	r27, 0x00	; 0
     ac0:	56 95       	lsr	r21
     ac2:	47 95       	ror	r20
     ac4:	37 95       	ror	r19
     ac6:	27 95       	ror	r18
     ac8:	82 2b       	or	r24, r18
     aca:	93 2b       	or	r25, r19
     acc:	a4 2b       	or	r26, r20
     ace:	b5 2b       	or	r27, r21
     ad0:	84 83       	std	Z+4, r24	; 0x04
     ad2:	95 83       	std	Z+5, r25	; 0x05
     ad4:	a6 83       	std	Z+6, r26	; 0x06
     ad6:	b7 83       	std	Z+7, r27	; 0x07
     ad8:	82 81       	ldd	r24, Z+2	; 0x02
     ada:	93 81       	ldd	r25, Z+3	; 0x03
     adc:	01 96       	adiw	r24, 0x01	; 1
     ade:	93 83       	std	Z+3, r25	; 0x03
     ae0:	82 83       	std	Z+2, r24	; 0x02
     ae2:	df 01       	movw	r26, r30
     ae4:	01 c0       	rjmp	.+2      	; 0xae8 <__stack+0x1e9>
     ae6:	d2 01       	movw	r26, r4
     ae8:	cd 01       	movw	r24, r26
     aea:	cd b7       	in	r28, 0x3d	; 61
     aec:	de b7       	in	r29, 0x3e	; 62
     aee:	e2 e1       	ldi	r30, 0x12	; 18
     af0:	0c 94 d1 0a 	jmp	0x15a2	; 0x15a2 <__epilogue_restores__>

00000af4 <__subsf3>:
     af4:	a0 e2       	ldi	r26, 0x20	; 32
     af6:	b0 e0       	ldi	r27, 0x00	; 0
     af8:	e0 e8       	ldi	r30, 0x80	; 128
     afa:	f5 e0       	ldi	r31, 0x05	; 5
     afc:	0c 94 c1 0a 	jmp	0x1582	; 0x1582 <__prologue_saves__+0x18>
     b00:	69 83       	std	Y+1, r22	; 0x01
     b02:	7a 83       	std	Y+2, r23	; 0x02
     b04:	8b 83       	std	Y+3, r24	; 0x03
     b06:	9c 83       	std	Y+4, r25	; 0x04
     b08:	2d 83       	std	Y+5, r18	; 0x05
     b0a:	3e 83       	std	Y+6, r19	; 0x06
     b0c:	4f 83       	std	Y+7, r20	; 0x07
     b0e:	58 87       	std	Y+8, r21	; 0x08
     b10:	e9 e0       	ldi	r30, 0x09	; 9
     b12:	ee 2e       	mov	r14, r30
     b14:	f1 2c       	mov	r15, r1
     b16:	ec 0e       	add	r14, r28
     b18:	fd 1e       	adc	r15, r29
     b1a:	ce 01       	movw	r24, r28
     b1c:	01 96       	adiw	r24, 0x01	; 1
     b1e:	b7 01       	movw	r22, r14
     b20:	0e 94 e4 09 	call	0x13c8	; 0x13c8 <__unpack_f>
     b24:	8e 01       	movw	r16, r28
     b26:	0f 5e       	subi	r16, 0xEF	; 239
     b28:	1f 4f       	sbci	r17, 0xFF	; 255
     b2a:	ce 01       	movw	r24, r28
     b2c:	05 96       	adiw	r24, 0x05	; 5
     b2e:	b8 01       	movw	r22, r16
     b30:	0e 94 e4 09 	call	0x13c8	; 0x13c8 <__unpack_f>
     b34:	8a 89       	ldd	r24, Y+18	; 0x12
     b36:	91 e0       	ldi	r25, 0x01	; 1
     b38:	89 27       	eor	r24, r25
     b3a:	8a 8b       	std	Y+18, r24	; 0x12
     b3c:	c7 01       	movw	r24, r14
     b3e:	b8 01       	movw	r22, r16
     b40:	ae 01       	movw	r20, r28
     b42:	47 5e       	subi	r20, 0xE7	; 231
     b44:	5f 4f       	sbci	r21, 0xFF	; 255
     b46:	0e 94 2e 04 	call	0x85c	; 0x85c <_fpadd_parts>
     b4a:	0e 94 0f 09 	call	0x121e	; 0x121e <__pack_f>
     b4e:	a0 96       	adiw	r28, 0x20	; 32
     b50:	e6 e0       	ldi	r30, 0x06	; 6
     b52:	0c 94 dd 0a 	jmp	0x15ba	; 0x15ba <__epilogue_restores__+0x18>

00000b56 <__addsf3>:
     b56:	a0 e2       	ldi	r26, 0x20	; 32
     b58:	b0 e0       	ldi	r27, 0x00	; 0
     b5a:	e1 eb       	ldi	r30, 0xB1	; 177
     b5c:	f5 e0       	ldi	r31, 0x05	; 5
     b5e:	0c 94 c1 0a 	jmp	0x1582	; 0x1582 <__prologue_saves__+0x18>
     b62:	69 83       	std	Y+1, r22	; 0x01
     b64:	7a 83       	std	Y+2, r23	; 0x02
     b66:	8b 83       	std	Y+3, r24	; 0x03
     b68:	9c 83       	std	Y+4, r25	; 0x04
     b6a:	2d 83       	std	Y+5, r18	; 0x05
     b6c:	3e 83       	std	Y+6, r19	; 0x06
     b6e:	4f 83       	std	Y+7, r20	; 0x07
     b70:	58 87       	std	Y+8, r21	; 0x08
     b72:	f9 e0       	ldi	r31, 0x09	; 9
     b74:	ef 2e       	mov	r14, r31
     b76:	f1 2c       	mov	r15, r1
     b78:	ec 0e       	add	r14, r28
     b7a:	fd 1e       	adc	r15, r29
     b7c:	ce 01       	movw	r24, r28
     b7e:	01 96       	adiw	r24, 0x01	; 1
     b80:	b7 01       	movw	r22, r14
     b82:	0e 94 e4 09 	call	0x13c8	; 0x13c8 <__unpack_f>
     b86:	8e 01       	movw	r16, r28
     b88:	0f 5e       	subi	r16, 0xEF	; 239
     b8a:	1f 4f       	sbci	r17, 0xFF	; 255
     b8c:	ce 01       	movw	r24, r28
     b8e:	05 96       	adiw	r24, 0x05	; 5
     b90:	b8 01       	movw	r22, r16
     b92:	0e 94 e4 09 	call	0x13c8	; 0x13c8 <__unpack_f>
     b96:	c7 01       	movw	r24, r14
     b98:	b8 01       	movw	r22, r16
     b9a:	ae 01       	movw	r20, r28
     b9c:	47 5e       	subi	r20, 0xE7	; 231
     b9e:	5f 4f       	sbci	r21, 0xFF	; 255
     ba0:	0e 94 2e 04 	call	0x85c	; 0x85c <_fpadd_parts>
     ba4:	0e 94 0f 09 	call	0x121e	; 0x121e <__pack_f>
     ba8:	a0 96       	adiw	r28, 0x20	; 32
     baa:	e6 e0       	ldi	r30, 0x06	; 6
     bac:	0c 94 dd 0a 	jmp	0x15ba	; 0x15ba <__epilogue_restores__+0x18>

00000bb0 <__mulsf3>:
     bb0:	a0 e2       	ldi	r26, 0x20	; 32
     bb2:	b0 e0       	ldi	r27, 0x00	; 0
     bb4:	ee ed       	ldi	r30, 0xDE	; 222
     bb6:	f5 e0       	ldi	r31, 0x05	; 5
     bb8:	0c 94 b5 0a 	jmp	0x156a	; 0x156a <__prologue_saves__>
     bbc:	69 83       	std	Y+1, r22	; 0x01
     bbe:	7a 83       	std	Y+2, r23	; 0x02
     bc0:	8b 83       	std	Y+3, r24	; 0x03
     bc2:	9c 83       	std	Y+4, r25	; 0x04
     bc4:	2d 83       	std	Y+5, r18	; 0x05
     bc6:	3e 83       	std	Y+6, r19	; 0x06
     bc8:	4f 83       	std	Y+7, r20	; 0x07
     bca:	58 87       	std	Y+8, r21	; 0x08
     bcc:	ce 01       	movw	r24, r28
     bce:	01 96       	adiw	r24, 0x01	; 1
     bd0:	be 01       	movw	r22, r28
     bd2:	67 5f       	subi	r22, 0xF7	; 247
     bd4:	7f 4f       	sbci	r23, 0xFF	; 255
     bd6:	0e 94 e4 09 	call	0x13c8	; 0x13c8 <__unpack_f>
     bda:	ce 01       	movw	r24, r28
     bdc:	05 96       	adiw	r24, 0x05	; 5
     bde:	be 01       	movw	r22, r28
     be0:	6f 5e       	subi	r22, 0xEF	; 239
     be2:	7f 4f       	sbci	r23, 0xFF	; 255
     be4:	0e 94 e4 09 	call	0x13c8	; 0x13c8 <__unpack_f>
     be8:	99 85       	ldd	r25, Y+9	; 0x09
     bea:	92 30       	cpi	r25, 0x02	; 2
     bec:	88 f0       	brcs	.+34     	; 0xc10 <__mulsf3+0x60>
     bee:	89 89       	ldd	r24, Y+17	; 0x11
     bf0:	82 30       	cpi	r24, 0x02	; 2
     bf2:	c8 f0       	brcs	.+50     	; 0xc26 <__mulsf3+0x76>
     bf4:	94 30       	cpi	r25, 0x04	; 4
     bf6:	19 f4       	brne	.+6      	; 0xbfe <__mulsf3+0x4e>
     bf8:	82 30       	cpi	r24, 0x02	; 2
     bfa:	51 f4       	brne	.+20     	; 0xc10 <__mulsf3+0x60>
     bfc:	04 c0       	rjmp	.+8      	; 0xc06 <__mulsf3+0x56>
     bfe:	84 30       	cpi	r24, 0x04	; 4
     c00:	29 f4       	brne	.+10     	; 0xc0c <__mulsf3+0x5c>
     c02:	92 30       	cpi	r25, 0x02	; 2
     c04:	81 f4       	brne	.+32     	; 0xc26 <__mulsf3+0x76>
     c06:	80 e0       	ldi	r24, 0x00	; 0
     c08:	91 e0       	ldi	r25, 0x01	; 1
     c0a:	c6 c0       	rjmp	.+396    	; 0xd98 <__mulsf3+0x1e8>
     c0c:	92 30       	cpi	r25, 0x02	; 2
     c0e:	49 f4       	brne	.+18     	; 0xc22 <__mulsf3+0x72>
     c10:	20 e0       	ldi	r18, 0x00	; 0
     c12:	9a 85       	ldd	r25, Y+10	; 0x0a
     c14:	8a 89       	ldd	r24, Y+18	; 0x12
     c16:	98 13       	cpse	r25, r24
     c18:	21 e0       	ldi	r18, 0x01	; 1
     c1a:	2a 87       	std	Y+10, r18	; 0x0a
     c1c:	ce 01       	movw	r24, r28
     c1e:	09 96       	adiw	r24, 0x09	; 9
     c20:	bb c0       	rjmp	.+374    	; 0xd98 <__mulsf3+0x1e8>
     c22:	82 30       	cpi	r24, 0x02	; 2
     c24:	49 f4       	brne	.+18     	; 0xc38 <__mulsf3+0x88>
     c26:	20 e0       	ldi	r18, 0x00	; 0
     c28:	9a 85       	ldd	r25, Y+10	; 0x0a
     c2a:	8a 89       	ldd	r24, Y+18	; 0x12
     c2c:	98 13       	cpse	r25, r24
     c2e:	21 e0       	ldi	r18, 0x01	; 1
     c30:	2a 8b       	std	Y+18, r18	; 0x12
     c32:	ce 01       	movw	r24, r28
     c34:	41 96       	adiw	r24, 0x11	; 17
     c36:	b0 c0       	rjmp	.+352    	; 0xd98 <__mulsf3+0x1e8>
     c38:	2d 84       	ldd	r2, Y+13	; 0x0d
     c3a:	3e 84       	ldd	r3, Y+14	; 0x0e
     c3c:	4f 84       	ldd	r4, Y+15	; 0x0f
     c3e:	58 88       	ldd	r5, Y+16	; 0x10
     c40:	6d 88       	ldd	r6, Y+21	; 0x15
     c42:	7e 88       	ldd	r7, Y+22	; 0x16
     c44:	8f 88       	ldd	r8, Y+23	; 0x17
     c46:	98 8c       	ldd	r9, Y+24	; 0x18
     c48:	ee 24       	eor	r14, r14
     c4a:	ff 24       	eor	r15, r15
     c4c:	87 01       	movw	r16, r14
     c4e:	aa 24       	eor	r10, r10
     c50:	bb 24       	eor	r11, r11
     c52:	65 01       	movw	r12, r10
     c54:	40 e0       	ldi	r20, 0x00	; 0
     c56:	50 e0       	ldi	r21, 0x00	; 0
     c58:	60 e0       	ldi	r22, 0x00	; 0
     c5a:	70 e0       	ldi	r23, 0x00	; 0
     c5c:	e0 e0       	ldi	r30, 0x00	; 0
     c5e:	f0 e0       	ldi	r31, 0x00	; 0
     c60:	c1 01       	movw	r24, r2
     c62:	81 70       	andi	r24, 0x01	; 1
     c64:	90 70       	andi	r25, 0x00	; 0
     c66:	89 2b       	or	r24, r25
     c68:	e9 f0       	breq	.+58     	; 0xca4 <__mulsf3+0xf4>
     c6a:	e6 0c       	add	r14, r6
     c6c:	f7 1c       	adc	r15, r7
     c6e:	08 1d       	adc	r16, r8
     c70:	19 1d       	adc	r17, r9
     c72:	9a 01       	movw	r18, r20
     c74:	ab 01       	movw	r20, r22
     c76:	2a 0d       	add	r18, r10
     c78:	3b 1d       	adc	r19, r11
     c7a:	4c 1d       	adc	r20, r12
     c7c:	5d 1d       	adc	r21, r13
     c7e:	80 e0       	ldi	r24, 0x00	; 0
     c80:	90 e0       	ldi	r25, 0x00	; 0
     c82:	a0 e0       	ldi	r26, 0x00	; 0
     c84:	b0 e0       	ldi	r27, 0x00	; 0
     c86:	e6 14       	cp	r14, r6
     c88:	f7 04       	cpc	r15, r7
     c8a:	08 05       	cpc	r16, r8
     c8c:	19 05       	cpc	r17, r9
     c8e:	20 f4       	brcc	.+8      	; 0xc98 <__mulsf3+0xe8>
     c90:	81 e0       	ldi	r24, 0x01	; 1
     c92:	90 e0       	ldi	r25, 0x00	; 0
     c94:	a0 e0       	ldi	r26, 0x00	; 0
     c96:	b0 e0       	ldi	r27, 0x00	; 0
     c98:	ba 01       	movw	r22, r20
     c9a:	a9 01       	movw	r20, r18
     c9c:	48 0f       	add	r20, r24
     c9e:	59 1f       	adc	r21, r25
     ca0:	6a 1f       	adc	r22, r26
     ca2:	7b 1f       	adc	r23, r27
     ca4:	aa 0c       	add	r10, r10
     ca6:	bb 1c       	adc	r11, r11
     ca8:	cc 1c       	adc	r12, r12
     caa:	dd 1c       	adc	r13, r13
     cac:	97 fe       	sbrs	r9, 7
     cae:	08 c0       	rjmp	.+16     	; 0xcc0 <__mulsf3+0x110>
     cb0:	81 e0       	ldi	r24, 0x01	; 1
     cb2:	90 e0       	ldi	r25, 0x00	; 0
     cb4:	a0 e0       	ldi	r26, 0x00	; 0
     cb6:	b0 e0       	ldi	r27, 0x00	; 0
     cb8:	a8 2a       	or	r10, r24
     cba:	b9 2a       	or	r11, r25
     cbc:	ca 2a       	or	r12, r26
     cbe:	db 2a       	or	r13, r27
     cc0:	31 96       	adiw	r30, 0x01	; 1
     cc2:	e0 32       	cpi	r30, 0x20	; 32
     cc4:	f1 05       	cpc	r31, r1
     cc6:	49 f0       	breq	.+18     	; 0xcda <__mulsf3+0x12a>
     cc8:	66 0c       	add	r6, r6
     cca:	77 1c       	adc	r7, r7
     ccc:	88 1c       	adc	r8, r8
     cce:	99 1c       	adc	r9, r9
     cd0:	56 94       	lsr	r5
     cd2:	47 94       	ror	r4
     cd4:	37 94       	ror	r3
     cd6:	27 94       	ror	r2
     cd8:	c3 cf       	rjmp	.-122    	; 0xc60 <__mulsf3+0xb0>
     cda:	fa 85       	ldd	r31, Y+10	; 0x0a
     cdc:	ea 89       	ldd	r30, Y+18	; 0x12
     cde:	2b 89       	ldd	r18, Y+19	; 0x13
     ce0:	3c 89       	ldd	r19, Y+20	; 0x14
     ce2:	8b 85       	ldd	r24, Y+11	; 0x0b
     ce4:	9c 85       	ldd	r25, Y+12	; 0x0c
     ce6:	28 0f       	add	r18, r24
     ce8:	39 1f       	adc	r19, r25
     cea:	2e 5f       	subi	r18, 0xFE	; 254
     cec:	3f 4f       	sbci	r19, 0xFF	; 255
     cee:	17 c0       	rjmp	.+46     	; 0xd1e <__mulsf3+0x16e>
     cf0:	ca 01       	movw	r24, r20
     cf2:	81 70       	andi	r24, 0x01	; 1
     cf4:	90 70       	andi	r25, 0x00	; 0
     cf6:	89 2b       	or	r24, r25
     cf8:	61 f0       	breq	.+24     	; 0xd12 <__mulsf3+0x162>
     cfa:	16 95       	lsr	r17
     cfc:	07 95       	ror	r16
     cfe:	f7 94       	ror	r15
     d00:	e7 94       	ror	r14
     d02:	80 e0       	ldi	r24, 0x00	; 0
     d04:	90 e0       	ldi	r25, 0x00	; 0
     d06:	a0 e0       	ldi	r26, 0x00	; 0
     d08:	b0 e8       	ldi	r27, 0x80	; 128
     d0a:	e8 2a       	or	r14, r24
     d0c:	f9 2a       	or	r15, r25
     d0e:	0a 2b       	or	r16, r26
     d10:	1b 2b       	or	r17, r27
     d12:	76 95       	lsr	r23
     d14:	67 95       	ror	r22
     d16:	57 95       	ror	r21
     d18:	47 95       	ror	r20
     d1a:	2f 5f       	subi	r18, 0xFF	; 255
     d1c:	3f 4f       	sbci	r19, 0xFF	; 255
     d1e:	77 fd       	sbrc	r23, 7
     d20:	e7 cf       	rjmp	.-50     	; 0xcf0 <__mulsf3+0x140>
     d22:	0c c0       	rjmp	.+24     	; 0xd3c <__mulsf3+0x18c>
     d24:	44 0f       	add	r20, r20
     d26:	55 1f       	adc	r21, r21
     d28:	66 1f       	adc	r22, r22
     d2a:	77 1f       	adc	r23, r23
     d2c:	17 fd       	sbrc	r17, 7
     d2e:	41 60       	ori	r20, 0x01	; 1
     d30:	ee 0c       	add	r14, r14
     d32:	ff 1c       	adc	r15, r15
     d34:	00 1f       	adc	r16, r16
     d36:	11 1f       	adc	r17, r17
     d38:	21 50       	subi	r18, 0x01	; 1
     d3a:	30 40       	sbci	r19, 0x00	; 0
     d3c:	40 30       	cpi	r20, 0x00	; 0
     d3e:	90 e0       	ldi	r25, 0x00	; 0
     d40:	59 07       	cpc	r21, r25
     d42:	90 e0       	ldi	r25, 0x00	; 0
     d44:	69 07       	cpc	r22, r25
     d46:	90 e4       	ldi	r25, 0x40	; 64
     d48:	79 07       	cpc	r23, r25
     d4a:	60 f3       	brcs	.-40     	; 0xd24 <__mulsf3+0x174>
     d4c:	2b 8f       	std	Y+27, r18	; 0x1b
     d4e:	3c 8f       	std	Y+28, r19	; 0x1c
     d50:	db 01       	movw	r26, r22
     d52:	ca 01       	movw	r24, r20
     d54:	8f 77       	andi	r24, 0x7F	; 127
     d56:	90 70       	andi	r25, 0x00	; 0
     d58:	a0 70       	andi	r26, 0x00	; 0
     d5a:	b0 70       	andi	r27, 0x00	; 0
     d5c:	80 34       	cpi	r24, 0x40	; 64
     d5e:	91 05       	cpc	r25, r1
     d60:	a1 05       	cpc	r26, r1
     d62:	b1 05       	cpc	r27, r1
     d64:	61 f4       	brne	.+24     	; 0xd7e <__mulsf3+0x1ce>
     d66:	47 fd       	sbrc	r20, 7
     d68:	0a c0       	rjmp	.+20     	; 0xd7e <__mulsf3+0x1ce>
     d6a:	e1 14       	cp	r14, r1
     d6c:	f1 04       	cpc	r15, r1
     d6e:	01 05       	cpc	r16, r1
     d70:	11 05       	cpc	r17, r1
     d72:	29 f0       	breq	.+10     	; 0xd7e <__mulsf3+0x1ce>
     d74:	40 5c       	subi	r20, 0xC0	; 192
     d76:	5f 4f       	sbci	r21, 0xFF	; 255
     d78:	6f 4f       	sbci	r22, 0xFF	; 255
     d7a:	7f 4f       	sbci	r23, 0xFF	; 255
     d7c:	40 78       	andi	r20, 0x80	; 128
     d7e:	1a 8e       	std	Y+26, r1	; 0x1a
     d80:	fe 17       	cp	r31, r30
     d82:	11 f0       	breq	.+4      	; 0xd88 <__mulsf3+0x1d8>
     d84:	81 e0       	ldi	r24, 0x01	; 1
     d86:	8a 8f       	std	Y+26, r24	; 0x1a
     d88:	4d 8f       	std	Y+29, r20	; 0x1d
     d8a:	5e 8f       	std	Y+30, r21	; 0x1e
     d8c:	6f 8f       	std	Y+31, r22	; 0x1f
     d8e:	78 a3       	std	Y+32, r23	; 0x20
     d90:	83 e0       	ldi	r24, 0x03	; 3
     d92:	89 8f       	std	Y+25, r24	; 0x19
     d94:	ce 01       	movw	r24, r28
     d96:	49 96       	adiw	r24, 0x19	; 25
     d98:	0e 94 0f 09 	call	0x121e	; 0x121e <__pack_f>
     d9c:	a0 96       	adiw	r28, 0x20	; 32
     d9e:	e2 e1       	ldi	r30, 0x12	; 18
     da0:	0c 94 d1 0a 	jmp	0x15a2	; 0x15a2 <__epilogue_restores__>

00000da4 <__divsf3>:
     da4:	a8 e1       	ldi	r26, 0x18	; 24
     da6:	b0 e0       	ldi	r27, 0x00	; 0
     da8:	e8 ed       	ldi	r30, 0xD8	; 216
     daa:	f6 e0       	ldi	r31, 0x06	; 6
     dac:	0c 94 bd 0a 	jmp	0x157a	; 0x157a <__prologue_saves__+0x10>
     db0:	69 83       	std	Y+1, r22	; 0x01
     db2:	7a 83       	std	Y+2, r23	; 0x02
     db4:	8b 83       	std	Y+3, r24	; 0x03
     db6:	9c 83       	std	Y+4, r25	; 0x04
     db8:	2d 83       	std	Y+5, r18	; 0x05
     dba:	3e 83       	std	Y+6, r19	; 0x06
     dbc:	4f 83       	std	Y+7, r20	; 0x07
     dbe:	58 87       	std	Y+8, r21	; 0x08
     dc0:	b9 e0       	ldi	r27, 0x09	; 9
     dc2:	eb 2e       	mov	r14, r27
     dc4:	f1 2c       	mov	r15, r1
     dc6:	ec 0e       	add	r14, r28
     dc8:	fd 1e       	adc	r15, r29
     dca:	ce 01       	movw	r24, r28
     dcc:	01 96       	adiw	r24, 0x01	; 1
     dce:	b7 01       	movw	r22, r14
     dd0:	0e 94 e4 09 	call	0x13c8	; 0x13c8 <__unpack_f>
     dd4:	8e 01       	movw	r16, r28
     dd6:	0f 5e       	subi	r16, 0xEF	; 239
     dd8:	1f 4f       	sbci	r17, 0xFF	; 255
     dda:	ce 01       	movw	r24, r28
     ddc:	05 96       	adiw	r24, 0x05	; 5
     dde:	b8 01       	movw	r22, r16
     de0:	0e 94 e4 09 	call	0x13c8	; 0x13c8 <__unpack_f>
     de4:	29 85       	ldd	r18, Y+9	; 0x09
     de6:	22 30       	cpi	r18, 0x02	; 2
     de8:	08 f4       	brcc	.+2      	; 0xdec <__divsf3+0x48>
     dea:	7e c0       	rjmp	.+252    	; 0xee8 <__divsf3+0x144>
     dec:	39 89       	ldd	r19, Y+17	; 0x11
     dee:	32 30       	cpi	r19, 0x02	; 2
     df0:	10 f4       	brcc	.+4      	; 0xdf6 <__divsf3+0x52>
     df2:	b8 01       	movw	r22, r16
     df4:	7c c0       	rjmp	.+248    	; 0xeee <__divsf3+0x14a>
     df6:	8a 85       	ldd	r24, Y+10	; 0x0a
     df8:	9a 89       	ldd	r25, Y+18	; 0x12
     dfa:	89 27       	eor	r24, r25
     dfc:	8a 87       	std	Y+10, r24	; 0x0a
     dfe:	24 30       	cpi	r18, 0x04	; 4
     e00:	11 f0       	breq	.+4      	; 0xe06 <__divsf3+0x62>
     e02:	22 30       	cpi	r18, 0x02	; 2
     e04:	31 f4       	brne	.+12     	; 0xe12 <__divsf3+0x6e>
     e06:	23 17       	cp	r18, r19
     e08:	09 f0       	breq	.+2      	; 0xe0c <__divsf3+0x68>
     e0a:	6e c0       	rjmp	.+220    	; 0xee8 <__divsf3+0x144>
     e0c:	60 e0       	ldi	r22, 0x00	; 0
     e0e:	71 e0       	ldi	r23, 0x01	; 1
     e10:	6e c0       	rjmp	.+220    	; 0xeee <__divsf3+0x14a>
     e12:	34 30       	cpi	r19, 0x04	; 4
     e14:	39 f4       	brne	.+14     	; 0xe24 <__divsf3+0x80>
     e16:	1d 86       	std	Y+13, r1	; 0x0d
     e18:	1e 86       	std	Y+14, r1	; 0x0e
     e1a:	1f 86       	std	Y+15, r1	; 0x0f
     e1c:	18 8a       	std	Y+16, r1	; 0x10
     e1e:	1c 86       	std	Y+12, r1	; 0x0c
     e20:	1b 86       	std	Y+11, r1	; 0x0b
     e22:	04 c0       	rjmp	.+8      	; 0xe2c <__divsf3+0x88>
     e24:	32 30       	cpi	r19, 0x02	; 2
     e26:	21 f4       	brne	.+8      	; 0xe30 <__divsf3+0x8c>
     e28:	84 e0       	ldi	r24, 0x04	; 4
     e2a:	89 87       	std	Y+9, r24	; 0x09
     e2c:	b7 01       	movw	r22, r14
     e2e:	5f c0       	rjmp	.+190    	; 0xeee <__divsf3+0x14a>
     e30:	2b 85       	ldd	r18, Y+11	; 0x0b
     e32:	3c 85       	ldd	r19, Y+12	; 0x0c
     e34:	8b 89       	ldd	r24, Y+19	; 0x13
     e36:	9c 89       	ldd	r25, Y+20	; 0x14
     e38:	28 1b       	sub	r18, r24
     e3a:	39 0b       	sbc	r19, r25
     e3c:	3c 87       	std	Y+12, r19	; 0x0c
     e3e:	2b 87       	std	Y+11, r18	; 0x0b
     e40:	ed 84       	ldd	r14, Y+13	; 0x0d
     e42:	fe 84       	ldd	r15, Y+14	; 0x0e
     e44:	0f 85       	ldd	r16, Y+15	; 0x0f
     e46:	18 89       	ldd	r17, Y+16	; 0x10
     e48:	ad 88       	ldd	r10, Y+21	; 0x15
     e4a:	be 88       	ldd	r11, Y+22	; 0x16
     e4c:	cf 88       	ldd	r12, Y+23	; 0x17
     e4e:	d8 8c       	ldd	r13, Y+24	; 0x18
     e50:	ea 14       	cp	r14, r10
     e52:	fb 04       	cpc	r15, r11
     e54:	0c 05       	cpc	r16, r12
     e56:	1d 05       	cpc	r17, r13
     e58:	40 f4       	brcc	.+16     	; 0xe6a <__divsf3+0xc6>
     e5a:	ee 0c       	add	r14, r14
     e5c:	ff 1c       	adc	r15, r15
     e5e:	00 1f       	adc	r16, r16
     e60:	11 1f       	adc	r17, r17
     e62:	21 50       	subi	r18, 0x01	; 1
     e64:	30 40       	sbci	r19, 0x00	; 0
     e66:	3c 87       	std	Y+12, r19	; 0x0c
     e68:	2b 87       	std	Y+11, r18	; 0x0b
     e6a:	20 e0       	ldi	r18, 0x00	; 0
     e6c:	30 e0       	ldi	r19, 0x00	; 0
     e6e:	40 e0       	ldi	r20, 0x00	; 0
     e70:	50 e0       	ldi	r21, 0x00	; 0
     e72:	80 e0       	ldi	r24, 0x00	; 0
     e74:	90 e0       	ldi	r25, 0x00	; 0
     e76:	a0 e0       	ldi	r26, 0x00	; 0
     e78:	b0 e4       	ldi	r27, 0x40	; 64
     e7a:	60 e0       	ldi	r22, 0x00	; 0
     e7c:	70 e0       	ldi	r23, 0x00	; 0
     e7e:	ea 14       	cp	r14, r10
     e80:	fb 04       	cpc	r15, r11
     e82:	0c 05       	cpc	r16, r12
     e84:	1d 05       	cpc	r17, r13
     e86:	40 f0       	brcs	.+16     	; 0xe98 <__divsf3+0xf4>
     e88:	28 2b       	or	r18, r24
     e8a:	39 2b       	or	r19, r25
     e8c:	4a 2b       	or	r20, r26
     e8e:	5b 2b       	or	r21, r27
     e90:	ea 18       	sub	r14, r10
     e92:	fb 08       	sbc	r15, r11
     e94:	0c 09       	sbc	r16, r12
     e96:	1d 09       	sbc	r17, r13
     e98:	b6 95       	lsr	r27
     e9a:	a7 95       	ror	r26
     e9c:	97 95       	ror	r25
     e9e:	87 95       	ror	r24
     ea0:	ee 0c       	add	r14, r14
     ea2:	ff 1c       	adc	r15, r15
     ea4:	00 1f       	adc	r16, r16
     ea6:	11 1f       	adc	r17, r17
     ea8:	6f 5f       	subi	r22, 0xFF	; 255
     eaa:	7f 4f       	sbci	r23, 0xFF	; 255
     eac:	6f 31       	cpi	r22, 0x1F	; 31
     eae:	71 05       	cpc	r23, r1
     eb0:	31 f7       	brne	.-52     	; 0xe7e <__divsf3+0xda>
     eb2:	da 01       	movw	r26, r20
     eb4:	c9 01       	movw	r24, r18
     eb6:	8f 77       	andi	r24, 0x7F	; 127
     eb8:	90 70       	andi	r25, 0x00	; 0
     eba:	a0 70       	andi	r26, 0x00	; 0
     ebc:	b0 70       	andi	r27, 0x00	; 0
     ebe:	80 34       	cpi	r24, 0x40	; 64
     ec0:	91 05       	cpc	r25, r1
     ec2:	a1 05       	cpc	r26, r1
     ec4:	b1 05       	cpc	r27, r1
     ec6:	61 f4       	brne	.+24     	; 0xee0 <__divsf3+0x13c>
     ec8:	27 fd       	sbrc	r18, 7
     eca:	0a c0       	rjmp	.+20     	; 0xee0 <__divsf3+0x13c>
     ecc:	e1 14       	cp	r14, r1
     ece:	f1 04       	cpc	r15, r1
     ed0:	01 05       	cpc	r16, r1
     ed2:	11 05       	cpc	r17, r1
     ed4:	29 f0       	breq	.+10     	; 0xee0 <__divsf3+0x13c>
     ed6:	20 5c       	subi	r18, 0xC0	; 192
     ed8:	3f 4f       	sbci	r19, 0xFF	; 255
     eda:	4f 4f       	sbci	r20, 0xFF	; 255
     edc:	5f 4f       	sbci	r21, 0xFF	; 255
     ede:	20 78       	andi	r18, 0x80	; 128
     ee0:	2d 87       	std	Y+13, r18	; 0x0d
     ee2:	3e 87       	std	Y+14, r19	; 0x0e
     ee4:	4f 87       	std	Y+15, r20	; 0x0f
     ee6:	58 8b       	std	Y+16, r21	; 0x10
     ee8:	be 01       	movw	r22, r28
     eea:	67 5f       	subi	r22, 0xF7	; 247
     eec:	7f 4f       	sbci	r23, 0xFF	; 255
     eee:	cb 01       	movw	r24, r22
     ef0:	0e 94 0f 09 	call	0x121e	; 0x121e <__pack_f>
     ef4:	68 96       	adiw	r28, 0x18	; 24
     ef6:	ea e0       	ldi	r30, 0x0A	; 10
     ef8:	0c 94 d9 0a 	jmp	0x15b2	; 0x15b2 <__epilogue_restores__+0x10>

00000efc <__gtsf2>:
     efc:	a8 e1       	ldi	r26, 0x18	; 24
     efe:	b0 e0       	ldi	r27, 0x00	; 0
     f00:	e4 e8       	ldi	r30, 0x84	; 132
     f02:	f7 e0       	ldi	r31, 0x07	; 7
     f04:	0c 94 c1 0a 	jmp	0x1582	; 0x1582 <__prologue_saves__+0x18>
     f08:	69 83       	std	Y+1, r22	; 0x01
     f0a:	7a 83       	std	Y+2, r23	; 0x02
     f0c:	8b 83       	std	Y+3, r24	; 0x03
     f0e:	9c 83       	std	Y+4, r25	; 0x04
     f10:	2d 83       	std	Y+5, r18	; 0x05
     f12:	3e 83       	std	Y+6, r19	; 0x06
     f14:	4f 83       	std	Y+7, r20	; 0x07
     f16:	58 87       	std	Y+8, r21	; 0x08
     f18:	89 e0       	ldi	r24, 0x09	; 9
     f1a:	e8 2e       	mov	r14, r24
     f1c:	f1 2c       	mov	r15, r1
     f1e:	ec 0e       	add	r14, r28
     f20:	fd 1e       	adc	r15, r29
     f22:	ce 01       	movw	r24, r28
     f24:	01 96       	adiw	r24, 0x01	; 1
     f26:	b7 01       	movw	r22, r14
     f28:	0e 94 e4 09 	call	0x13c8	; 0x13c8 <__unpack_f>
     f2c:	8e 01       	movw	r16, r28
     f2e:	0f 5e       	subi	r16, 0xEF	; 239
     f30:	1f 4f       	sbci	r17, 0xFF	; 255
     f32:	ce 01       	movw	r24, r28
     f34:	05 96       	adiw	r24, 0x05	; 5
     f36:	b8 01       	movw	r22, r16
     f38:	0e 94 e4 09 	call	0x13c8	; 0x13c8 <__unpack_f>
     f3c:	89 85       	ldd	r24, Y+9	; 0x09
     f3e:	82 30       	cpi	r24, 0x02	; 2
     f40:	40 f0       	brcs	.+16     	; 0xf52 <__gtsf2+0x56>
     f42:	89 89       	ldd	r24, Y+17	; 0x11
     f44:	82 30       	cpi	r24, 0x02	; 2
     f46:	28 f0       	brcs	.+10     	; 0xf52 <__gtsf2+0x56>
     f48:	c7 01       	movw	r24, r14
     f4a:	b8 01       	movw	r22, r16
     f4c:	0e 94 5c 0a 	call	0x14b8	; 0x14b8 <__fpcmp_parts_f>
     f50:	01 c0       	rjmp	.+2      	; 0xf54 <__gtsf2+0x58>
     f52:	8f ef       	ldi	r24, 0xFF	; 255
     f54:	68 96       	adiw	r28, 0x18	; 24
     f56:	e6 e0       	ldi	r30, 0x06	; 6
     f58:	0c 94 dd 0a 	jmp	0x15ba	; 0x15ba <__epilogue_restores__+0x18>

00000f5c <__gesf2>:
     f5c:	a8 e1       	ldi	r26, 0x18	; 24
     f5e:	b0 e0       	ldi	r27, 0x00	; 0
     f60:	e4 eb       	ldi	r30, 0xB4	; 180
     f62:	f7 e0       	ldi	r31, 0x07	; 7
     f64:	0c 94 c1 0a 	jmp	0x1582	; 0x1582 <__prologue_saves__+0x18>
     f68:	69 83       	std	Y+1, r22	; 0x01
     f6a:	7a 83       	std	Y+2, r23	; 0x02
     f6c:	8b 83       	std	Y+3, r24	; 0x03
     f6e:	9c 83       	std	Y+4, r25	; 0x04
     f70:	2d 83       	std	Y+5, r18	; 0x05
     f72:	3e 83       	std	Y+6, r19	; 0x06
     f74:	4f 83       	std	Y+7, r20	; 0x07
     f76:	58 87       	std	Y+8, r21	; 0x08
     f78:	89 e0       	ldi	r24, 0x09	; 9
     f7a:	e8 2e       	mov	r14, r24
     f7c:	f1 2c       	mov	r15, r1
     f7e:	ec 0e       	add	r14, r28
     f80:	fd 1e       	adc	r15, r29
     f82:	ce 01       	movw	r24, r28
     f84:	01 96       	adiw	r24, 0x01	; 1
     f86:	b7 01       	movw	r22, r14
     f88:	0e 94 e4 09 	call	0x13c8	; 0x13c8 <__unpack_f>
     f8c:	8e 01       	movw	r16, r28
     f8e:	0f 5e       	subi	r16, 0xEF	; 239
     f90:	1f 4f       	sbci	r17, 0xFF	; 255
     f92:	ce 01       	movw	r24, r28
     f94:	05 96       	adiw	r24, 0x05	; 5
     f96:	b8 01       	movw	r22, r16
     f98:	0e 94 e4 09 	call	0x13c8	; 0x13c8 <__unpack_f>
     f9c:	89 85       	ldd	r24, Y+9	; 0x09
     f9e:	82 30       	cpi	r24, 0x02	; 2
     fa0:	40 f0       	brcs	.+16     	; 0xfb2 <__gesf2+0x56>
     fa2:	89 89       	ldd	r24, Y+17	; 0x11
     fa4:	82 30       	cpi	r24, 0x02	; 2
     fa6:	28 f0       	brcs	.+10     	; 0xfb2 <__gesf2+0x56>
     fa8:	c7 01       	movw	r24, r14
     faa:	b8 01       	movw	r22, r16
     fac:	0e 94 5c 0a 	call	0x14b8	; 0x14b8 <__fpcmp_parts_f>
     fb0:	01 c0       	rjmp	.+2      	; 0xfb4 <__gesf2+0x58>
     fb2:	8f ef       	ldi	r24, 0xFF	; 255
     fb4:	68 96       	adiw	r28, 0x18	; 24
     fb6:	e6 e0       	ldi	r30, 0x06	; 6
     fb8:	0c 94 dd 0a 	jmp	0x15ba	; 0x15ba <__epilogue_restores__+0x18>

00000fbc <__ltsf2>:
     fbc:	a8 e1       	ldi	r26, 0x18	; 24
     fbe:	b0 e0       	ldi	r27, 0x00	; 0
     fc0:	e4 ee       	ldi	r30, 0xE4	; 228
     fc2:	f7 e0       	ldi	r31, 0x07	; 7
     fc4:	0c 94 c1 0a 	jmp	0x1582	; 0x1582 <__prologue_saves__+0x18>
     fc8:	69 83       	std	Y+1, r22	; 0x01
     fca:	7a 83       	std	Y+2, r23	; 0x02
     fcc:	8b 83       	std	Y+3, r24	; 0x03
     fce:	9c 83       	std	Y+4, r25	; 0x04
     fd0:	2d 83       	std	Y+5, r18	; 0x05
     fd2:	3e 83       	std	Y+6, r19	; 0x06
     fd4:	4f 83       	std	Y+7, r20	; 0x07
     fd6:	58 87       	std	Y+8, r21	; 0x08
     fd8:	89 e0       	ldi	r24, 0x09	; 9
     fda:	e8 2e       	mov	r14, r24
     fdc:	f1 2c       	mov	r15, r1
     fde:	ec 0e       	add	r14, r28
     fe0:	fd 1e       	adc	r15, r29
     fe2:	ce 01       	movw	r24, r28
     fe4:	01 96       	adiw	r24, 0x01	; 1
     fe6:	b7 01       	movw	r22, r14
     fe8:	0e 94 e4 09 	call	0x13c8	; 0x13c8 <__unpack_f>
     fec:	8e 01       	movw	r16, r28
     fee:	0f 5e       	subi	r16, 0xEF	; 239
     ff0:	1f 4f       	sbci	r17, 0xFF	; 255
     ff2:	ce 01       	movw	r24, r28
     ff4:	05 96       	adiw	r24, 0x05	; 5
     ff6:	b8 01       	movw	r22, r16
     ff8:	0e 94 e4 09 	call	0x13c8	; 0x13c8 <__unpack_f>
     ffc:	89 85       	ldd	r24, Y+9	; 0x09
     ffe:	82 30       	cpi	r24, 0x02	; 2
    1000:	40 f0       	brcs	.+16     	; 0x1012 <__ltsf2+0x56>
    1002:	89 89       	ldd	r24, Y+17	; 0x11
    1004:	82 30       	cpi	r24, 0x02	; 2
    1006:	28 f0       	brcs	.+10     	; 0x1012 <__ltsf2+0x56>
    1008:	c7 01       	movw	r24, r14
    100a:	b8 01       	movw	r22, r16
    100c:	0e 94 5c 0a 	call	0x14b8	; 0x14b8 <__fpcmp_parts_f>
    1010:	01 c0       	rjmp	.+2      	; 0x1014 <__ltsf2+0x58>
    1012:	81 e0       	ldi	r24, 0x01	; 1
    1014:	68 96       	adiw	r28, 0x18	; 24
    1016:	e6 e0       	ldi	r30, 0x06	; 6
    1018:	0c 94 dd 0a 	jmp	0x15ba	; 0x15ba <__epilogue_restores__+0x18>

0000101c <__floatsisf>:
    101c:	a8 e0       	ldi	r26, 0x08	; 8
    101e:	b0 e0       	ldi	r27, 0x00	; 0
    1020:	e4 e1       	ldi	r30, 0x14	; 20
    1022:	f8 e0       	ldi	r31, 0x08	; 8
    1024:	0c 94 be 0a 	jmp	0x157c	; 0x157c <__prologue_saves__+0x12>
    1028:	9b 01       	movw	r18, r22
    102a:	ac 01       	movw	r20, r24
    102c:	83 e0       	ldi	r24, 0x03	; 3
    102e:	89 83       	std	Y+1, r24	; 0x01
    1030:	da 01       	movw	r26, r20
    1032:	c9 01       	movw	r24, r18
    1034:	88 27       	eor	r24, r24
    1036:	b7 fd       	sbrc	r27, 7
    1038:	83 95       	inc	r24
    103a:	99 27       	eor	r25, r25
    103c:	aa 27       	eor	r26, r26
    103e:	bb 27       	eor	r27, r27
    1040:	b8 2e       	mov	r11, r24
    1042:	21 15       	cp	r18, r1
    1044:	31 05       	cpc	r19, r1
    1046:	41 05       	cpc	r20, r1
    1048:	51 05       	cpc	r21, r1
    104a:	19 f4       	brne	.+6      	; 0x1052 <__floatsisf+0x36>
    104c:	82 e0       	ldi	r24, 0x02	; 2
    104e:	89 83       	std	Y+1, r24	; 0x01
    1050:	3a c0       	rjmp	.+116    	; 0x10c6 <__floatsisf+0xaa>
    1052:	88 23       	and	r24, r24
    1054:	a9 f0       	breq	.+42     	; 0x1080 <__floatsisf+0x64>
    1056:	20 30       	cpi	r18, 0x00	; 0
    1058:	80 e0       	ldi	r24, 0x00	; 0
    105a:	38 07       	cpc	r19, r24
    105c:	80 e0       	ldi	r24, 0x00	; 0
    105e:	48 07       	cpc	r20, r24
    1060:	80 e8       	ldi	r24, 0x80	; 128
    1062:	58 07       	cpc	r21, r24
    1064:	29 f4       	brne	.+10     	; 0x1070 <__floatsisf+0x54>
    1066:	60 e0       	ldi	r22, 0x00	; 0
    1068:	70 e0       	ldi	r23, 0x00	; 0
    106a:	80 e0       	ldi	r24, 0x00	; 0
    106c:	9f ec       	ldi	r25, 0xCF	; 207
    106e:	30 c0       	rjmp	.+96     	; 0x10d0 <__floatsisf+0xb4>
    1070:	ee 24       	eor	r14, r14
    1072:	ff 24       	eor	r15, r15
    1074:	87 01       	movw	r16, r14
    1076:	e2 1a       	sub	r14, r18
    1078:	f3 0a       	sbc	r15, r19
    107a:	04 0b       	sbc	r16, r20
    107c:	15 0b       	sbc	r17, r21
    107e:	02 c0       	rjmp	.+4      	; 0x1084 <__floatsisf+0x68>
    1080:	79 01       	movw	r14, r18
    1082:	8a 01       	movw	r16, r20
    1084:	8e e1       	ldi	r24, 0x1E	; 30
    1086:	c8 2e       	mov	r12, r24
    1088:	d1 2c       	mov	r13, r1
    108a:	dc 82       	std	Y+4, r13	; 0x04
    108c:	cb 82       	std	Y+3, r12	; 0x03
    108e:	ed 82       	std	Y+5, r14	; 0x05
    1090:	fe 82       	std	Y+6, r15	; 0x06
    1092:	0f 83       	std	Y+7, r16	; 0x07
    1094:	18 87       	std	Y+8, r17	; 0x08
    1096:	c8 01       	movw	r24, r16
    1098:	b7 01       	movw	r22, r14
    109a:	0e 94 c0 08 	call	0x1180	; 0x1180 <__clzsi2>
    109e:	01 97       	sbiw	r24, 0x01	; 1
    10a0:	18 16       	cp	r1, r24
    10a2:	19 06       	cpc	r1, r25
    10a4:	84 f4       	brge	.+32     	; 0x10c6 <__floatsisf+0xaa>
    10a6:	08 2e       	mov	r0, r24
    10a8:	04 c0       	rjmp	.+8      	; 0x10b2 <__floatsisf+0x96>
    10aa:	ee 0c       	add	r14, r14
    10ac:	ff 1c       	adc	r15, r15
    10ae:	00 1f       	adc	r16, r16
    10b0:	11 1f       	adc	r17, r17
    10b2:	0a 94       	dec	r0
    10b4:	d2 f7       	brpl	.-12     	; 0x10aa <__floatsisf+0x8e>
    10b6:	ed 82       	std	Y+5, r14	; 0x05
    10b8:	fe 82       	std	Y+6, r15	; 0x06
    10ba:	0f 83       	std	Y+7, r16	; 0x07
    10bc:	18 87       	std	Y+8, r17	; 0x08
    10be:	c8 1a       	sub	r12, r24
    10c0:	d9 0a       	sbc	r13, r25
    10c2:	dc 82       	std	Y+4, r13	; 0x04
    10c4:	cb 82       	std	Y+3, r12	; 0x03
    10c6:	ba 82       	std	Y+2, r11	; 0x02
    10c8:	ce 01       	movw	r24, r28
    10ca:	01 96       	adiw	r24, 0x01	; 1
    10cc:	0e 94 0f 09 	call	0x121e	; 0x121e <__pack_f>
    10d0:	28 96       	adiw	r28, 0x08	; 8
    10d2:	e9 e0       	ldi	r30, 0x09	; 9
    10d4:	0c 94 da 0a 	jmp	0x15b4	; 0x15b4 <__epilogue_restores__+0x12>

000010d8 <__fixsfsi>:
    10d8:	ac e0       	ldi	r26, 0x0C	; 12
    10da:	b0 e0       	ldi	r27, 0x00	; 0
    10dc:	e2 e7       	ldi	r30, 0x72	; 114
    10de:	f8 e0       	ldi	r31, 0x08	; 8
    10e0:	0c 94 c5 0a 	jmp	0x158a	; 0x158a <__prologue_saves__+0x20>
    10e4:	69 83       	std	Y+1, r22	; 0x01
    10e6:	7a 83       	std	Y+2, r23	; 0x02
    10e8:	8b 83       	std	Y+3, r24	; 0x03
    10ea:	9c 83       	std	Y+4, r25	; 0x04
    10ec:	ce 01       	movw	r24, r28
    10ee:	01 96       	adiw	r24, 0x01	; 1
    10f0:	be 01       	movw	r22, r28
    10f2:	6b 5f       	subi	r22, 0xFB	; 251
    10f4:	7f 4f       	sbci	r23, 0xFF	; 255
    10f6:	0e 94 e4 09 	call	0x13c8	; 0x13c8 <__unpack_f>
    10fa:	8d 81       	ldd	r24, Y+5	; 0x05
    10fc:	82 30       	cpi	r24, 0x02	; 2
    10fe:	61 f1       	breq	.+88     	; 0x1158 <__fixsfsi+0x80>
    1100:	82 30       	cpi	r24, 0x02	; 2
    1102:	50 f1       	brcs	.+84     	; 0x1158 <__fixsfsi+0x80>
    1104:	84 30       	cpi	r24, 0x04	; 4
    1106:	21 f4       	brne	.+8      	; 0x1110 <__fixsfsi+0x38>
    1108:	8e 81       	ldd	r24, Y+6	; 0x06
    110a:	88 23       	and	r24, r24
    110c:	51 f1       	breq	.+84     	; 0x1162 <__fixsfsi+0x8a>
    110e:	2e c0       	rjmp	.+92     	; 0x116c <__fixsfsi+0x94>
    1110:	2f 81       	ldd	r18, Y+7	; 0x07
    1112:	38 85       	ldd	r19, Y+8	; 0x08
    1114:	37 fd       	sbrc	r19, 7
    1116:	20 c0       	rjmp	.+64     	; 0x1158 <__fixsfsi+0x80>
    1118:	6e 81       	ldd	r22, Y+6	; 0x06
    111a:	2f 31       	cpi	r18, 0x1F	; 31
    111c:	31 05       	cpc	r19, r1
    111e:	1c f0       	brlt	.+6      	; 0x1126 <__fixsfsi+0x4e>
    1120:	66 23       	and	r22, r22
    1122:	f9 f0       	breq	.+62     	; 0x1162 <__fixsfsi+0x8a>
    1124:	23 c0       	rjmp	.+70     	; 0x116c <__fixsfsi+0x94>
    1126:	8e e1       	ldi	r24, 0x1E	; 30
    1128:	90 e0       	ldi	r25, 0x00	; 0
    112a:	82 1b       	sub	r24, r18
    112c:	93 0b       	sbc	r25, r19
    112e:	29 85       	ldd	r18, Y+9	; 0x09
    1130:	3a 85       	ldd	r19, Y+10	; 0x0a
    1132:	4b 85       	ldd	r20, Y+11	; 0x0b
    1134:	5c 85       	ldd	r21, Y+12	; 0x0c
    1136:	04 c0       	rjmp	.+8      	; 0x1140 <__fixsfsi+0x68>
    1138:	56 95       	lsr	r21
    113a:	47 95       	ror	r20
    113c:	37 95       	ror	r19
    113e:	27 95       	ror	r18
    1140:	8a 95       	dec	r24
    1142:	d2 f7       	brpl	.-12     	; 0x1138 <__fixsfsi+0x60>
    1144:	66 23       	and	r22, r22
    1146:	b1 f0       	breq	.+44     	; 0x1174 <__fixsfsi+0x9c>
    1148:	50 95       	com	r21
    114a:	40 95       	com	r20
    114c:	30 95       	com	r19
    114e:	21 95       	neg	r18
    1150:	3f 4f       	sbci	r19, 0xFF	; 255
    1152:	4f 4f       	sbci	r20, 0xFF	; 255
    1154:	5f 4f       	sbci	r21, 0xFF	; 255
    1156:	0e c0       	rjmp	.+28     	; 0x1174 <__fixsfsi+0x9c>
    1158:	20 e0       	ldi	r18, 0x00	; 0
    115a:	30 e0       	ldi	r19, 0x00	; 0
    115c:	40 e0       	ldi	r20, 0x00	; 0
    115e:	50 e0       	ldi	r21, 0x00	; 0
    1160:	09 c0       	rjmp	.+18     	; 0x1174 <__fixsfsi+0x9c>
    1162:	2f ef       	ldi	r18, 0xFF	; 255
    1164:	3f ef       	ldi	r19, 0xFF	; 255
    1166:	4f ef       	ldi	r20, 0xFF	; 255
    1168:	5f e7       	ldi	r21, 0x7F	; 127
    116a:	04 c0       	rjmp	.+8      	; 0x1174 <__fixsfsi+0x9c>
    116c:	20 e0       	ldi	r18, 0x00	; 0
    116e:	30 e0       	ldi	r19, 0x00	; 0
    1170:	40 e0       	ldi	r20, 0x00	; 0
    1172:	50 e8       	ldi	r21, 0x80	; 128
    1174:	b9 01       	movw	r22, r18
    1176:	ca 01       	movw	r24, r20
    1178:	2c 96       	adiw	r28, 0x0c	; 12
    117a:	e2 e0       	ldi	r30, 0x02	; 2
    117c:	0c 94 e1 0a 	jmp	0x15c2	; 0x15c2 <__epilogue_restores__+0x20>

00001180 <__clzsi2>:
    1180:	ef 92       	push	r14
    1182:	ff 92       	push	r15
    1184:	0f 93       	push	r16
    1186:	1f 93       	push	r17
    1188:	7b 01       	movw	r14, r22
    118a:	8c 01       	movw	r16, r24
    118c:	80 e0       	ldi	r24, 0x00	; 0
    118e:	e8 16       	cp	r14, r24
    1190:	80 e0       	ldi	r24, 0x00	; 0
    1192:	f8 06       	cpc	r15, r24
    1194:	81 e0       	ldi	r24, 0x01	; 1
    1196:	08 07       	cpc	r16, r24
    1198:	80 e0       	ldi	r24, 0x00	; 0
    119a:	18 07       	cpc	r17, r24
    119c:	88 f4       	brcc	.+34     	; 0x11c0 <__clzsi2+0x40>
    119e:	8f ef       	ldi	r24, 0xFF	; 255
    11a0:	e8 16       	cp	r14, r24
    11a2:	f1 04       	cpc	r15, r1
    11a4:	01 05       	cpc	r16, r1
    11a6:	11 05       	cpc	r17, r1
    11a8:	31 f0       	breq	.+12     	; 0x11b6 <__clzsi2+0x36>
    11aa:	28 f0       	brcs	.+10     	; 0x11b6 <__clzsi2+0x36>
    11ac:	88 e0       	ldi	r24, 0x08	; 8
    11ae:	90 e0       	ldi	r25, 0x00	; 0
    11b0:	a0 e0       	ldi	r26, 0x00	; 0
    11b2:	b0 e0       	ldi	r27, 0x00	; 0
    11b4:	17 c0       	rjmp	.+46     	; 0x11e4 <__clzsi2+0x64>
    11b6:	80 e0       	ldi	r24, 0x00	; 0
    11b8:	90 e0       	ldi	r25, 0x00	; 0
    11ba:	a0 e0       	ldi	r26, 0x00	; 0
    11bc:	b0 e0       	ldi	r27, 0x00	; 0
    11be:	12 c0       	rjmp	.+36     	; 0x11e4 <__clzsi2+0x64>
    11c0:	80 e0       	ldi	r24, 0x00	; 0
    11c2:	e8 16       	cp	r14, r24
    11c4:	80 e0       	ldi	r24, 0x00	; 0
    11c6:	f8 06       	cpc	r15, r24
    11c8:	80 e0       	ldi	r24, 0x00	; 0
    11ca:	08 07       	cpc	r16, r24
    11cc:	81 e0       	ldi	r24, 0x01	; 1
    11ce:	18 07       	cpc	r17, r24
    11d0:	28 f0       	brcs	.+10     	; 0x11dc <__clzsi2+0x5c>
    11d2:	88 e1       	ldi	r24, 0x18	; 24
    11d4:	90 e0       	ldi	r25, 0x00	; 0
    11d6:	a0 e0       	ldi	r26, 0x00	; 0
    11d8:	b0 e0       	ldi	r27, 0x00	; 0
    11da:	04 c0       	rjmp	.+8      	; 0x11e4 <__clzsi2+0x64>
    11dc:	80 e1       	ldi	r24, 0x10	; 16
    11de:	90 e0       	ldi	r25, 0x00	; 0
    11e0:	a0 e0       	ldi	r26, 0x00	; 0
    11e2:	b0 e0       	ldi	r27, 0x00	; 0
    11e4:	20 e2       	ldi	r18, 0x20	; 32
    11e6:	30 e0       	ldi	r19, 0x00	; 0
    11e8:	40 e0       	ldi	r20, 0x00	; 0
    11ea:	50 e0       	ldi	r21, 0x00	; 0
    11ec:	28 1b       	sub	r18, r24
    11ee:	39 0b       	sbc	r19, r25
    11f0:	4a 0b       	sbc	r20, r26
    11f2:	5b 0b       	sbc	r21, r27
    11f4:	04 c0       	rjmp	.+8      	; 0x11fe <__clzsi2+0x7e>
    11f6:	16 95       	lsr	r17
    11f8:	07 95       	ror	r16
    11fa:	f7 94       	ror	r15
    11fc:	e7 94       	ror	r14
    11fe:	8a 95       	dec	r24
    1200:	d2 f7       	brpl	.-12     	; 0x11f6 <__clzsi2+0x76>
    1202:	f7 01       	movw	r30, r14
    1204:	e8 5f       	subi	r30, 0xF8	; 248
    1206:	fe 4f       	sbci	r31, 0xFE	; 254
    1208:	80 81       	ld	r24, Z
    120a:	28 1b       	sub	r18, r24
    120c:	31 09       	sbc	r19, r1
    120e:	41 09       	sbc	r20, r1
    1210:	51 09       	sbc	r21, r1
    1212:	c9 01       	movw	r24, r18
    1214:	1f 91       	pop	r17
    1216:	0f 91       	pop	r16
    1218:	ff 90       	pop	r15
    121a:	ef 90       	pop	r14
    121c:	08 95       	ret

0000121e <__pack_f>:
    121e:	df 92       	push	r13
    1220:	ef 92       	push	r14
    1222:	ff 92       	push	r15
    1224:	0f 93       	push	r16
    1226:	1f 93       	push	r17
    1228:	fc 01       	movw	r30, r24
    122a:	e4 80       	ldd	r14, Z+4	; 0x04
    122c:	f5 80       	ldd	r15, Z+5	; 0x05
    122e:	06 81       	ldd	r16, Z+6	; 0x06
    1230:	17 81       	ldd	r17, Z+7	; 0x07
    1232:	d1 80       	ldd	r13, Z+1	; 0x01
    1234:	80 81       	ld	r24, Z
    1236:	82 30       	cpi	r24, 0x02	; 2
    1238:	48 f4       	brcc	.+18     	; 0x124c <__pack_f+0x2e>
    123a:	80 e0       	ldi	r24, 0x00	; 0
    123c:	90 e0       	ldi	r25, 0x00	; 0
    123e:	a0 e1       	ldi	r26, 0x10	; 16
    1240:	b0 e0       	ldi	r27, 0x00	; 0
    1242:	e8 2a       	or	r14, r24
    1244:	f9 2a       	or	r15, r25
    1246:	0a 2b       	or	r16, r26
    1248:	1b 2b       	or	r17, r27
    124a:	a5 c0       	rjmp	.+330    	; 0x1396 <__pack_f+0x178>
    124c:	84 30       	cpi	r24, 0x04	; 4
    124e:	09 f4       	brne	.+2      	; 0x1252 <__pack_f+0x34>
    1250:	9f c0       	rjmp	.+318    	; 0x1390 <__pack_f+0x172>
    1252:	82 30       	cpi	r24, 0x02	; 2
    1254:	21 f4       	brne	.+8      	; 0x125e <__pack_f+0x40>
    1256:	ee 24       	eor	r14, r14
    1258:	ff 24       	eor	r15, r15
    125a:	87 01       	movw	r16, r14
    125c:	05 c0       	rjmp	.+10     	; 0x1268 <__pack_f+0x4a>
    125e:	e1 14       	cp	r14, r1
    1260:	f1 04       	cpc	r15, r1
    1262:	01 05       	cpc	r16, r1
    1264:	11 05       	cpc	r17, r1
    1266:	19 f4       	brne	.+6      	; 0x126e <__pack_f+0x50>
    1268:	e0 e0       	ldi	r30, 0x00	; 0
    126a:	f0 e0       	ldi	r31, 0x00	; 0
    126c:	96 c0       	rjmp	.+300    	; 0x139a <__pack_f+0x17c>
    126e:	62 81       	ldd	r22, Z+2	; 0x02
    1270:	73 81       	ldd	r23, Z+3	; 0x03
    1272:	9f ef       	ldi	r25, 0xFF	; 255
    1274:	62 38       	cpi	r22, 0x82	; 130
    1276:	79 07       	cpc	r23, r25
    1278:	0c f0       	brlt	.+2      	; 0x127c <__pack_f+0x5e>
    127a:	5b c0       	rjmp	.+182    	; 0x1332 <__pack_f+0x114>
    127c:	22 e8       	ldi	r18, 0x82	; 130
    127e:	3f ef       	ldi	r19, 0xFF	; 255
    1280:	26 1b       	sub	r18, r22
    1282:	37 0b       	sbc	r19, r23
    1284:	2a 31       	cpi	r18, 0x1A	; 26
    1286:	31 05       	cpc	r19, r1
    1288:	2c f0       	brlt	.+10     	; 0x1294 <__pack_f+0x76>
    128a:	20 e0       	ldi	r18, 0x00	; 0
    128c:	30 e0       	ldi	r19, 0x00	; 0
    128e:	40 e0       	ldi	r20, 0x00	; 0
    1290:	50 e0       	ldi	r21, 0x00	; 0
    1292:	2a c0       	rjmp	.+84     	; 0x12e8 <__pack_f+0xca>
    1294:	b8 01       	movw	r22, r16
    1296:	a7 01       	movw	r20, r14
    1298:	02 2e       	mov	r0, r18
    129a:	04 c0       	rjmp	.+8      	; 0x12a4 <__pack_f+0x86>
    129c:	76 95       	lsr	r23
    129e:	67 95       	ror	r22
    12a0:	57 95       	ror	r21
    12a2:	47 95       	ror	r20
    12a4:	0a 94       	dec	r0
    12a6:	d2 f7       	brpl	.-12     	; 0x129c <__pack_f+0x7e>
    12a8:	81 e0       	ldi	r24, 0x01	; 1
    12aa:	90 e0       	ldi	r25, 0x00	; 0
    12ac:	a0 e0       	ldi	r26, 0x00	; 0
    12ae:	b0 e0       	ldi	r27, 0x00	; 0
    12b0:	04 c0       	rjmp	.+8      	; 0x12ba <__pack_f+0x9c>
    12b2:	88 0f       	add	r24, r24
    12b4:	99 1f       	adc	r25, r25
    12b6:	aa 1f       	adc	r26, r26
    12b8:	bb 1f       	adc	r27, r27
    12ba:	2a 95       	dec	r18
    12bc:	d2 f7       	brpl	.-12     	; 0x12b2 <__pack_f+0x94>
    12be:	01 97       	sbiw	r24, 0x01	; 1
    12c0:	a1 09       	sbc	r26, r1
    12c2:	b1 09       	sbc	r27, r1
    12c4:	8e 21       	and	r24, r14
    12c6:	9f 21       	and	r25, r15
    12c8:	a0 23       	and	r26, r16
    12ca:	b1 23       	and	r27, r17
    12cc:	00 97       	sbiw	r24, 0x00	; 0
    12ce:	a1 05       	cpc	r26, r1
    12d0:	b1 05       	cpc	r27, r1
    12d2:	21 f0       	breq	.+8      	; 0x12dc <__pack_f+0xbe>
    12d4:	81 e0       	ldi	r24, 0x01	; 1
    12d6:	90 e0       	ldi	r25, 0x00	; 0
    12d8:	a0 e0       	ldi	r26, 0x00	; 0
    12da:	b0 e0       	ldi	r27, 0x00	; 0
    12dc:	9a 01       	movw	r18, r20
    12de:	ab 01       	movw	r20, r22
    12e0:	28 2b       	or	r18, r24
    12e2:	39 2b       	or	r19, r25
    12e4:	4a 2b       	or	r20, r26
    12e6:	5b 2b       	or	r21, r27
    12e8:	da 01       	movw	r26, r20
    12ea:	c9 01       	movw	r24, r18
    12ec:	8f 77       	andi	r24, 0x7F	; 127
    12ee:	90 70       	andi	r25, 0x00	; 0
    12f0:	a0 70       	andi	r26, 0x00	; 0
    12f2:	b0 70       	andi	r27, 0x00	; 0
    12f4:	80 34       	cpi	r24, 0x40	; 64
    12f6:	91 05       	cpc	r25, r1
    12f8:	a1 05       	cpc	r26, r1
    12fa:	b1 05       	cpc	r27, r1
    12fc:	39 f4       	brne	.+14     	; 0x130c <__pack_f+0xee>
    12fe:	27 ff       	sbrs	r18, 7
    1300:	09 c0       	rjmp	.+18     	; 0x1314 <__pack_f+0xf6>
    1302:	20 5c       	subi	r18, 0xC0	; 192
    1304:	3f 4f       	sbci	r19, 0xFF	; 255
    1306:	4f 4f       	sbci	r20, 0xFF	; 255
    1308:	5f 4f       	sbci	r21, 0xFF	; 255
    130a:	04 c0       	rjmp	.+8      	; 0x1314 <__pack_f+0xf6>
    130c:	21 5c       	subi	r18, 0xC1	; 193
    130e:	3f 4f       	sbci	r19, 0xFF	; 255
    1310:	4f 4f       	sbci	r20, 0xFF	; 255
    1312:	5f 4f       	sbci	r21, 0xFF	; 255
    1314:	e0 e0       	ldi	r30, 0x00	; 0
    1316:	f0 e0       	ldi	r31, 0x00	; 0
    1318:	20 30       	cpi	r18, 0x00	; 0
    131a:	a0 e0       	ldi	r26, 0x00	; 0
    131c:	3a 07       	cpc	r19, r26
    131e:	a0 e0       	ldi	r26, 0x00	; 0
    1320:	4a 07       	cpc	r20, r26
    1322:	a0 e4       	ldi	r26, 0x40	; 64
    1324:	5a 07       	cpc	r21, r26
    1326:	10 f0       	brcs	.+4      	; 0x132c <__pack_f+0x10e>
    1328:	e1 e0       	ldi	r30, 0x01	; 1
    132a:	f0 e0       	ldi	r31, 0x00	; 0
    132c:	79 01       	movw	r14, r18
    132e:	8a 01       	movw	r16, r20
    1330:	27 c0       	rjmp	.+78     	; 0x1380 <__pack_f+0x162>
    1332:	60 38       	cpi	r22, 0x80	; 128
    1334:	71 05       	cpc	r23, r1
    1336:	64 f5       	brge	.+88     	; 0x1390 <__pack_f+0x172>
    1338:	fb 01       	movw	r30, r22
    133a:	e1 58       	subi	r30, 0x81	; 129
    133c:	ff 4f       	sbci	r31, 0xFF	; 255
    133e:	d8 01       	movw	r26, r16
    1340:	c7 01       	movw	r24, r14
    1342:	8f 77       	andi	r24, 0x7F	; 127
    1344:	90 70       	andi	r25, 0x00	; 0
    1346:	a0 70       	andi	r26, 0x00	; 0
    1348:	b0 70       	andi	r27, 0x00	; 0
    134a:	80 34       	cpi	r24, 0x40	; 64
    134c:	91 05       	cpc	r25, r1
    134e:	a1 05       	cpc	r26, r1
    1350:	b1 05       	cpc	r27, r1
    1352:	39 f4       	brne	.+14     	; 0x1362 <__pack_f+0x144>
    1354:	e7 fe       	sbrs	r14, 7
    1356:	0d c0       	rjmp	.+26     	; 0x1372 <__pack_f+0x154>
    1358:	80 e4       	ldi	r24, 0x40	; 64
    135a:	90 e0       	ldi	r25, 0x00	; 0
    135c:	a0 e0       	ldi	r26, 0x00	; 0
    135e:	b0 e0       	ldi	r27, 0x00	; 0
    1360:	04 c0       	rjmp	.+8      	; 0x136a <__pack_f+0x14c>
    1362:	8f e3       	ldi	r24, 0x3F	; 63
    1364:	90 e0       	ldi	r25, 0x00	; 0
    1366:	a0 e0       	ldi	r26, 0x00	; 0
    1368:	b0 e0       	ldi	r27, 0x00	; 0
    136a:	e8 0e       	add	r14, r24
    136c:	f9 1e       	adc	r15, r25
    136e:	0a 1f       	adc	r16, r26
    1370:	1b 1f       	adc	r17, r27
    1372:	17 ff       	sbrs	r17, 7
    1374:	05 c0       	rjmp	.+10     	; 0x1380 <__pack_f+0x162>
    1376:	16 95       	lsr	r17
    1378:	07 95       	ror	r16
    137a:	f7 94       	ror	r15
    137c:	e7 94       	ror	r14
    137e:	31 96       	adiw	r30, 0x01	; 1
    1380:	87 e0       	ldi	r24, 0x07	; 7
    1382:	16 95       	lsr	r17
    1384:	07 95       	ror	r16
    1386:	f7 94       	ror	r15
    1388:	e7 94       	ror	r14
    138a:	8a 95       	dec	r24
    138c:	d1 f7       	brne	.-12     	; 0x1382 <__pack_f+0x164>
    138e:	05 c0       	rjmp	.+10     	; 0x139a <__pack_f+0x17c>
    1390:	ee 24       	eor	r14, r14
    1392:	ff 24       	eor	r15, r15
    1394:	87 01       	movw	r16, r14
    1396:	ef ef       	ldi	r30, 0xFF	; 255
    1398:	f0 e0       	ldi	r31, 0x00	; 0
    139a:	6e 2f       	mov	r22, r30
    139c:	67 95       	ror	r22
    139e:	66 27       	eor	r22, r22
    13a0:	67 95       	ror	r22
    13a2:	90 2f       	mov	r25, r16
    13a4:	9f 77       	andi	r25, 0x7F	; 127
    13a6:	d7 94       	ror	r13
    13a8:	dd 24       	eor	r13, r13
    13aa:	d7 94       	ror	r13
    13ac:	8e 2f       	mov	r24, r30
    13ae:	86 95       	lsr	r24
    13b0:	49 2f       	mov	r20, r25
    13b2:	46 2b       	or	r20, r22
    13b4:	58 2f       	mov	r21, r24
    13b6:	5d 29       	or	r21, r13
    13b8:	b7 01       	movw	r22, r14
    13ba:	ca 01       	movw	r24, r20
    13bc:	1f 91       	pop	r17
    13be:	0f 91       	pop	r16
    13c0:	ff 90       	pop	r15
    13c2:	ef 90       	pop	r14
    13c4:	df 90       	pop	r13
    13c6:	08 95       	ret

000013c8 <__unpack_f>:
    13c8:	fc 01       	movw	r30, r24
    13ca:	db 01       	movw	r26, r22
    13cc:	40 81       	ld	r20, Z
    13ce:	51 81       	ldd	r21, Z+1	; 0x01
    13d0:	22 81       	ldd	r18, Z+2	; 0x02
    13d2:	62 2f       	mov	r22, r18
    13d4:	6f 77       	andi	r22, 0x7F	; 127
    13d6:	70 e0       	ldi	r23, 0x00	; 0
    13d8:	22 1f       	adc	r18, r18
    13da:	22 27       	eor	r18, r18
    13dc:	22 1f       	adc	r18, r18
    13de:	93 81       	ldd	r25, Z+3	; 0x03
    13e0:	89 2f       	mov	r24, r25
    13e2:	88 0f       	add	r24, r24
    13e4:	82 2b       	or	r24, r18
    13e6:	28 2f       	mov	r18, r24
    13e8:	30 e0       	ldi	r19, 0x00	; 0
    13ea:	99 1f       	adc	r25, r25
    13ec:	99 27       	eor	r25, r25
    13ee:	99 1f       	adc	r25, r25
    13f0:	11 96       	adiw	r26, 0x01	; 1
    13f2:	9c 93       	st	X, r25
    13f4:	11 97       	sbiw	r26, 0x01	; 1
    13f6:	21 15       	cp	r18, r1
    13f8:	31 05       	cpc	r19, r1
    13fa:	a9 f5       	brne	.+106    	; 0x1466 <__unpack_f+0x9e>
    13fc:	41 15       	cp	r20, r1
    13fe:	51 05       	cpc	r21, r1
    1400:	61 05       	cpc	r22, r1
    1402:	71 05       	cpc	r23, r1
    1404:	11 f4       	brne	.+4      	; 0x140a <__unpack_f+0x42>
    1406:	82 e0       	ldi	r24, 0x02	; 2
    1408:	37 c0       	rjmp	.+110    	; 0x1478 <__unpack_f+0xb0>
    140a:	82 e8       	ldi	r24, 0x82	; 130
    140c:	9f ef       	ldi	r25, 0xFF	; 255
    140e:	13 96       	adiw	r26, 0x03	; 3
    1410:	9c 93       	st	X, r25
    1412:	8e 93       	st	-X, r24
    1414:	12 97       	sbiw	r26, 0x02	; 2
    1416:	9a 01       	movw	r18, r20
    1418:	ab 01       	movw	r20, r22
    141a:	67 e0       	ldi	r22, 0x07	; 7
    141c:	22 0f       	add	r18, r18
    141e:	33 1f       	adc	r19, r19
    1420:	44 1f       	adc	r20, r20
    1422:	55 1f       	adc	r21, r21
    1424:	6a 95       	dec	r22
    1426:	d1 f7       	brne	.-12     	; 0x141c <__unpack_f+0x54>
    1428:	83 e0       	ldi	r24, 0x03	; 3
    142a:	8c 93       	st	X, r24
    142c:	0d c0       	rjmp	.+26     	; 0x1448 <__unpack_f+0x80>
    142e:	22 0f       	add	r18, r18
    1430:	33 1f       	adc	r19, r19
    1432:	44 1f       	adc	r20, r20
    1434:	55 1f       	adc	r21, r21
    1436:	12 96       	adiw	r26, 0x02	; 2
    1438:	8d 91       	ld	r24, X+
    143a:	9c 91       	ld	r25, X
    143c:	13 97       	sbiw	r26, 0x03	; 3
    143e:	01 97       	sbiw	r24, 0x01	; 1
    1440:	13 96       	adiw	r26, 0x03	; 3
    1442:	9c 93       	st	X, r25
    1444:	8e 93       	st	-X, r24
    1446:	12 97       	sbiw	r26, 0x02	; 2
    1448:	20 30       	cpi	r18, 0x00	; 0
    144a:	80 e0       	ldi	r24, 0x00	; 0
    144c:	38 07       	cpc	r19, r24
    144e:	80 e0       	ldi	r24, 0x00	; 0
    1450:	48 07       	cpc	r20, r24
    1452:	80 e4       	ldi	r24, 0x40	; 64
    1454:	58 07       	cpc	r21, r24
    1456:	58 f3       	brcs	.-42     	; 0x142e <__unpack_f+0x66>
    1458:	14 96       	adiw	r26, 0x04	; 4
    145a:	2d 93       	st	X+, r18
    145c:	3d 93       	st	X+, r19
    145e:	4d 93       	st	X+, r20
    1460:	5c 93       	st	X, r21
    1462:	17 97       	sbiw	r26, 0x07	; 7
    1464:	08 95       	ret
    1466:	2f 3f       	cpi	r18, 0xFF	; 255
    1468:	31 05       	cpc	r19, r1
    146a:	79 f4       	brne	.+30     	; 0x148a <__unpack_f+0xc2>
    146c:	41 15       	cp	r20, r1
    146e:	51 05       	cpc	r21, r1
    1470:	61 05       	cpc	r22, r1
    1472:	71 05       	cpc	r23, r1
    1474:	19 f4       	brne	.+6      	; 0x147c <__unpack_f+0xb4>
    1476:	84 e0       	ldi	r24, 0x04	; 4
    1478:	8c 93       	st	X, r24
    147a:	08 95       	ret
    147c:	64 ff       	sbrs	r22, 4
    147e:	03 c0       	rjmp	.+6      	; 0x1486 <__unpack_f+0xbe>
    1480:	81 e0       	ldi	r24, 0x01	; 1
    1482:	8c 93       	st	X, r24
    1484:	12 c0       	rjmp	.+36     	; 0x14aa <__unpack_f+0xe2>
    1486:	1c 92       	st	X, r1
    1488:	10 c0       	rjmp	.+32     	; 0x14aa <__unpack_f+0xe2>
    148a:	2f 57       	subi	r18, 0x7F	; 127
    148c:	30 40       	sbci	r19, 0x00	; 0
    148e:	13 96       	adiw	r26, 0x03	; 3
    1490:	3c 93       	st	X, r19
    1492:	2e 93       	st	-X, r18
    1494:	12 97       	sbiw	r26, 0x02	; 2
    1496:	83 e0       	ldi	r24, 0x03	; 3
    1498:	8c 93       	st	X, r24
    149a:	87 e0       	ldi	r24, 0x07	; 7
    149c:	44 0f       	add	r20, r20
    149e:	55 1f       	adc	r21, r21
    14a0:	66 1f       	adc	r22, r22
    14a2:	77 1f       	adc	r23, r23
    14a4:	8a 95       	dec	r24
    14a6:	d1 f7       	brne	.-12     	; 0x149c <__unpack_f+0xd4>
    14a8:	70 64       	ori	r23, 0x40	; 64
    14aa:	14 96       	adiw	r26, 0x04	; 4
    14ac:	4d 93       	st	X+, r20
    14ae:	5d 93       	st	X+, r21
    14b0:	6d 93       	st	X+, r22
    14b2:	7c 93       	st	X, r23
    14b4:	17 97       	sbiw	r26, 0x07	; 7
    14b6:	08 95       	ret

000014b8 <__fpcmp_parts_f>:
    14b8:	1f 93       	push	r17
    14ba:	dc 01       	movw	r26, r24
    14bc:	fb 01       	movw	r30, r22
    14be:	9c 91       	ld	r25, X
    14c0:	92 30       	cpi	r25, 0x02	; 2
    14c2:	08 f4       	brcc	.+2      	; 0x14c6 <__fpcmp_parts_f+0xe>
    14c4:	47 c0       	rjmp	.+142    	; 0x1554 <__fpcmp_parts_f+0x9c>
    14c6:	80 81       	ld	r24, Z
    14c8:	82 30       	cpi	r24, 0x02	; 2
    14ca:	08 f4       	brcc	.+2      	; 0x14ce <__fpcmp_parts_f+0x16>
    14cc:	43 c0       	rjmp	.+134    	; 0x1554 <__fpcmp_parts_f+0x9c>
    14ce:	94 30       	cpi	r25, 0x04	; 4
    14d0:	51 f4       	brne	.+20     	; 0x14e6 <__fpcmp_parts_f+0x2e>
    14d2:	11 96       	adiw	r26, 0x01	; 1
    14d4:	1c 91       	ld	r17, X
    14d6:	84 30       	cpi	r24, 0x04	; 4
    14d8:	99 f5       	brne	.+102    	; 0x1540 <__fpcmp_parts_f+0x88>
    14da:	81 81       	ldd	r24, Z+1	; 0x01
    14dc:	68 2f       	mov	r22, r24
    14de:	70 e0       	ldi	r23, 0x00	; 0
    14e0:	61 1b       	sub	r22, r17
    14e2:	71 09       	sbc	r23, r1
    14e4:	3f c0       	rjmp	.+126    	; 0x1564 <__fpcmp_parts_f+0xac>
    14e6:	84 30       	cpi	r24, 0x04	; 4
    14e8:	21 f0       	breq	.+8      	; 0x14f2 <__fpcmp_parts_f+0x3a>
    14ea:	92 30       	cpi	r25, 0x02	; 2
    14ec:	31 f4       	brne	.+12     	; 0x14fa <__fpcmp_parts_f+0x42>
    14ee:	82 30       	cpi	r24, 0x02	; 2
    14f0:	b9 f1       	breq	.+110    	; 0x1560 <__fpcmp_parts_f+0xa8>
    14f2:	81 81       	ldd	r24, Z+1	; 0x01
    14f4:	88 23       	and	r24, r24
    14f6:	89 f1       	breq	.+98     	; 0x155a <__fpcmp_parts_f+0xa2>
    14f8:	2d c0       	rjmp	.+90     	; 0x1554 <__fpcmp_parts_f+0x9c>
    14fa:	11 96       	adiw	r26, 0x01	; 1
    14fc:	1c 91       	ld	r17, X
    14fe:	11 97       	sbiw	r26, 0x01	; 1
    1500:	82 30       	cpi	r24, 0x02	; 2
    1502:	f1 f0       	breq	.+60     	; 0x1540 <__fpcmp_parts_f+0x88>
    1504:	81 81       	ldd	r24, Z+1	; 0x01
    1506:	18 17       	cp	r17, r24
    1508:	d9 f4       	brne	.+54     	; 0x1540 <__fpcmp_parts_f+0x88>
    150a:	12 96       	adiw	r26, 0x02	; 2
    150c:	2d 91       	ld	r18, X+
    150e:	3c 91       	ld	r19, X
    1510:	13 97       	sbiw	r26, 0x03	; 3
    1512:	82 81       	ldd	r24, Z+2	; 0x02
    1514:	93 81       	ldd	r25, Z+3	; 0x03
    1516:	82 17       	cp	r24, r18
    1518:	93 07       	cpc	r25, r19
    151a:	94 f0       	brlt	.+36     	; 0x1540 <__fpcmp_parts_f+0x88>
    151c:	28 17       	cp	r18, r24
    151e:	39 07       	cpc	r19, r25
    1520:	bc f0       	brlt	.+46     	; 0x1550 <__fpcmp_parts_f+0x98>
    1522:	14 96       	adiw	r26, 0x04	; 4
    1524:	8d 91       	ld	r24, X+
    1526:	9d 91       	ld	r25, X+
    1528:	0d 90       	ld	r0, X+
    152a:	bc 91       	ld	r27, X
    152c:	a0 2d       	mov	r26, r0
    152e:	24 81       	ldd	r18, Z+4	; 0x04
    1530:	35 81       	ldd	r19, Z+5	; 0x05
    1532:	46 81       	ldd	r20, Z+6	; 0x06
    1534:	57 81       	ldd	r21, Z+7	; 0x07
    1536:	28 17       	cp	r18, r24
    1538:	39 07       	cpc	r19, r25
    153a:	4a 07       	cpc	r20, r26
    153c:	5b 07       	cpc	r21, r27
    153e:	18 f4       	brcc	.+6      	; 0x1546 <__fpcmp_parts_f+0x8e>
    1540:	11 23       	and	r17, r17
    1542:	41 f0       	breq	.+16     	; 0x1554 <__fpcmp_parts_f+0x9c>
    1544:	0a c0       	rjmp	.+20     	; 0x155a <__fpcmp_parts_f+0xa2>
    1546:	82 17       	cp	r24, r18
    1548:	93 07       	cpc	r25, r19
    154a:	a4 07       	cpc	r26, r20
    154c:	b5 07       	cpc	r27, r21
    154e:	40 f4       	brcc	.+16     	; 0x1560 <__fpcmp_parts_f+0xa8>
    1550:	11 23       	and	r17, r17
    1552:	19 f0       	breq	.+6      	; 0x155a <__fpcmp_parts_f+0xa2>
    1554:	61 e0       	ldi	r22, 0x01	; 1
    1556:	70 e0       	ldi	r23, 0x00	; 0
    1558:	05 c0       	rjmp	.+10     	; 0x1564 <__fpcmp_parts_f+0xac>
    155a:	6f ef       	ldi	r22, 0xFF	; 255
    155c:	7f ef       	ldi	r23, 0xFF	; 255
    155e:	02 c0       	rjmp	.+4      	; 0x1564 <__fpcmp_parts_f+0xac>
    1560:	60 e0       	ldi	r22, 0x00	; 0
    1562:	70 e0       	ldi	r23, 0x00	; 0
    1564:	cb 01       	movw	r24, r22
    1566:	1f 91       	pop	r17
    1568:	08 95       	ret

0000156a <__prologue_saves__>:
    156a:	2f 92       	push	r2
    156c:	3f 92       	push	r3
    156e:	4f 92       	push	r4
    1570:	5f 92       	push	r5
    1572:	6f 92       	push	r6
    1574:	7f 92       	push	r7
    1576:	8f 92       	push	r8
    1578:	9f 92       	push	r9
    157a:	af 92       	push	r10
    157c:	bf 92       	push	r11
    157e:	cf 92       	push	r12
    1580:	df 92       	push	r13
    1582:	ef 92       	push	r14
    1584:	ff 92       	push	r15
    1586:	0f 93       	push	r16
    1588:	1f 93       	push	r17
    158a:	cf 93       	push	r28
    158c:	df 93       	push	r29
    158e:	cd b7       	in	r28, 0x3d	; 61
    1590:	de b7       	in	r29, 0x3e	; 62
    1592:	ca 1b       	sub	r28, r26
    1594:	db 0b       	sbc	r29, r27
    1596:	0f b6       	in	r0, 0x3f	; 63
    1598:	f8 94       	cli
    159a:	de bf       	out	0x3e, r29	; 62
    159c:	0f be       	out	0x3f, r0	; 63
    159e:	cd bf       	out	0x3d, r28	; 61
    15a0:	09 94       	ijmp

000015a2 <__epilogue_restores__>:
    15a2:	2a 88       	ldd	r2, Y+18	; 0x12
    15a4:	39 88       	ldd	r3, Y+17	; 0x11
    15a6:	48 88       	ldd	r4, Y+16	; 0x10
    15a8:	5f 84       	ldd	r5, Y+15	; 0x0f
    15aa:	6e 84       	ldd	r6, Y+14	; 0x0e
    15ac:	7d 84       	ldd	r7, Y+13	; 0x0d
    15ae:	8c 84       	ldd	r8, Y+12	; 0x0c
    15b0:	9b 84       	ldd	r9, Y+11	; 0x0b
    15b2:	aa 84       	ldd	r10, Y+10	; 0x0a
    15b4:	b9 84       	ldd	r11, Y+9	; 0x09
    15b6:	c8 84       	ldd	r12, Y+8	; 0x08
    15b8:	df 80       	ldd	r13, Y+7	; 0x07
    15ba:	ee 80       	ldd	r14, Y+6	; 0x06
    15bc:	fd 80       	ldd	r15, Y+5	; 0x05
    15be:	0c 81       	ldd	r16, Y+4	; 0x04
    15c0:	1b 81       	ldd	r17, Y+3	; 0x03
    15c2:	aa 81       	ldd	r26, Y+2	; 0x02
    15c4:	b9 81       	ldd	r27, Y+1	; 0x01
    15c6:	ce 0f       	add	r28, r30
    15c8:	d1 1d       	adc	r29, r1
    15ca:	0f b6       	in	r0, 0x3f	; 63
    15cc:	f8 94       	cli
    15ce:	de bf       	out	0x3e, r29	; 62
    15d0:	0f be       	out	0x3f, r0	; 63
    15d2:	cd bf       	out	0x3d, r28	; 61
    15d4:	ed 01       	movw	r28, r26
    15d6:	08 95       	ret

000015d8 <_exit>:
    15d8:	f8 94       	cli

000015da <__stop_program>:
    15da:	ff cf       	rjmp	.-2      	; 0x15da <__stop_program>
